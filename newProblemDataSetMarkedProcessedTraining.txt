problem your team have put all let behind the code however there are still a lot of let response vmquestionresponse new review_questionnaire assignment 1 it is repetitive and unnecessary    
problem your home page is very clear as to  the application purpose unfortunately i am unable to sign up as a new user or login  with any of the pre configured user accounts included in the readme i can however attempt to sign up and or login but this information is never saved to the database for future access or the appropriate transitioning is not implemented i like that there are two options listed on the homepage to either sign up as a new user or to login in as a current user this is convenient for navigation consider spacing these links for easier identification i would also point out that the options in the drop down box included for selecting user type during sign up is a great idea the third option is a ambiguous as to its purpose what does it mean to sign up as a realtor who is also shopping for a house perhaps you can just limit the options to realtor or house hunter the functionality of searching homes should be included in the realtor services keep up the work once the database is successfully receiving user details and or the appropriate routes are assigned additional functionalities should be easy to implement
problem you should restrict the format of the website of company after add a company i can t edit and destroy my own company
problem you  haven t specified anything in  your readme file plus  you have given a link to heroku app but its not working please make sure its working i saw you guys had been committing code to your master branch have you guys pushed it to heroku that might be the reason it got broken  
problem you  haven t specified anything in  your readme file plus  you have given a link to heroku app but its not working please make sure its working i saw you guys had been committing code to your master branch have you guys pushed it to heroku that might be the reason it got broken  
problem you haven t implemented testing yet i didn t find anything in test files probably you ll do it in the next phase  
problem you haven t completed this task
problem you haven t completed this task
problem you guys started pretty late seeing from your commit history
problem you guys haven t implemented unit test for your project yet  
problem you guys haven t implemented unit test for your project yet  
problem you could have made the empty method end on one line i think _args could be named args
problem you can mention that what are you going to do inorder to acheive  your goal like it is mentioned that as a part of the third project we  ve already done with the implementation of offscreencanvas interface so how are you going to achieve the next implementation
problem you can explain more on what actually are you planning to change
problem you can explain more on what actually are you planning to change
problem you can add some more explaination of what exactly you ll do in issues like   issue 1072 issue related to instructor s assignment participation i felt information is missing here
problem you  are not  testing anywhere yet
problem you are following good ruby coding practices for some places where you are comparing for example in login_controller rb if params login email admin admin params login password admin you can use a constant file where you can write these admin admin com and use that constant its not a good practice to write it like this otherwise everything seems good
problem you are following good coding practice i have a suggestion that you can move realtors admin and house hunters as childs of user that is admin belongs to user realtor belongs to user etc currently you have all the information in user model
problem yes from the system and code these code changes seem ready to be deployed in production after heavy integration testing as issues seem to be working but github pull request shows more fixes to work upon
problem yes the ui is easy to use but the dashboard could be made better as every task is written on the same line
problem yes the ui is easy to use but the dashboard could be made better as every task is written on the same line
problem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2   though it seems like only 2 of the team members did the majority of work
problem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2   though it seems like only 2 of the team members did the majority of work
problem yes the team intends to use grade_controller to show github metric which would be a good place to implement this functionality the idea to involve instructors because of a 60 requests hour limit may complicate the project another idea would be to update metrics with a round robin scheduling of get requests  
problem yes the team intends to use grade_controller to show github metric which would be a good place to implement this functionality the idea to involve instructors because of a 60 requests hour limit may complicate the project another idea would be to update metrics with a round robin scheduling of get requests  
problem yes the team intends to use grade_controller to show github metric which would be a good place to implement this functionality the idea to involve instructors because of a 60 requests hour limit may complicate the project another idea would be to update metrics with a round robin scheduling of get requests  
problem yes the team intends to use grade_controller to show github metric which would be a good place to implement this functionality the idea to involve instructors because of a 60 requests hour limit may complicate the project another idea would be to update metrics with a round robin scheduling of get requests  
problem yes team is continuously pushing changed on the github but not distributed equally among team mates i could see 81 commits till now
problem yes team is continuously pushing changed on the github but not distributed equally among team mates i could see 81 commits till now
problem yes i am able to login into the system via the link provided
problem yes   i suggestion since they deployed the code and video it would have been good if they put a view of the ui usage similar to what they have put as screen shots in the code    
problem yes   i suggestion since they deployed the code and video it would have been good if they put a view of the ui usage similar to what they have put as screen shots in the code    
problem yes writeup explains the approach taken by team to solve the issue theoretically team could have explained the issues and resolution practically also no design pattern or principle were used
problem yes writeup explains the approach taken by team to solve the issue theoretically team could have explained the issues and resolution practically also no design pattern or principle were used
problem yes writeup explains the approach taken by team to solve the issue theoretically team could have explained the issues and resolution practically also no design pattern or principle were used
problem yes well designed document ui mock ups given it is structured  
problem yes they surely have done a good job in mentioning the errors in the wiki doc   they have vaguely described the handling of the same but doubts remain in the details or the changes in the code   which  means that a better job  and  a more technical description of how  it is happening should be given so as to grasp a  better understanding for the same    
problem yes they surely have done a good job in mentioning the errors in the 1st part and the second part but it is unclear why the 3rd fix is a problem or how they have combatted the 3rd fix in the first place it just seems so that a screen shot has been put into place and they displayed a no method error popup they have vaguely described the handling of the same but doubts remain in the details or the changes in the code in fact no code screenshots have been put up for this case  
problem yes they surely have done a good job in mentioning the errors in the 1st part and the second part but it is unclear why the 3rd fix is a problem or how they have combatted the 3rd fix in the first place it just seems so that a screen shot has been put into place and they displayed a no method error popup they have vaguely described the handling of the same but doubts remain in the details or the changes in the code in fact no code screenshots have been put up for this case  
problem yes they surely have done a good job in mentioning the errors in the 1st part and the second part but it is unclear why the 3rd fix is a problem or how they have combatted the 3rd fix in the first place it just seems so that a screen shot has been put into place and they displayed a no method error popup they have vaguely described the handling of the same but doubts remain in the details or the changes in the code in fact no code screenshots have been put up for this case  
problem yes they included some design principles which is good maybe the authors could add some design patterns into wiki
problem yes they included some design principles which is good maybe the authors could add some design patterns into wiki
problem yes they included some design principles which is good maybe the authors could add some design patterns into wiki
problem yes they include this part in the proposed solutions field it would be better if they use visualization to let the readers better understand the flow
problem yes they include project purpose project design it would be better if they include the testing plan
problem yes they include project purpose project design and testing plan it s a little short it s suggested that add more details  
problem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
problem yes they have tested a controller but not the model
problem yes they have tested a controller but not the model
problem yes they have tested a controller but not the model
problem yes they have explained why they did that way and it was clear they have compared and contrasted in each of their feature of current implementation and solution which is a better way of showing what they implemented one more suggestion would be it would have been good if they showed the difference in their code snippets too for the current implementation vs solution proposed
problem yes they have explained why they did that way and it was clear they have compared and contrasted in each of their feature of current implementation and solution which is a better way of showing what they implemented one more suggestion would be it would have been good if they showed the difference in their code snippets too for the current implementation vs solution proposed
problem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they are yet to implement the code and showcase in the uml diagram for review section      
problem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they are yet to implement the code and showcase in the uml diagram for review section      
problem yes they have added a few new test cases but all scenarios are not covered
problem yes they had test plan but only simple test plan they should add some more corner cases
problem yes they had test plan but only simple test plan they should add some more corner cases
problem yes they had test plan but only simple test plan they should add some more corner cases
problem yes they did include the test plan but it s not enough if just including files
problem yes they did include the test plan but it s not enough if just including files
problem yes they add test cases and the coverage is the same as the first round
problem yes there were some improvements that i noticed while testing the site features in the review duration which included modifications to view list of all houses created by company of which realtor is a part the program has scope for minimal improvements to make it function as needed
problem yes there is one commit during round 2 and it fixed trivial rubcop issues related to indentation   two suggestions of adding meaningful comments for tree_display function in tree_display jsx and second on having a single copy of rubricarray for two functions were not implemented
problem yes there is no mention of design pattern yet but overall design appear very clear to me
problem yes their code works pretty good but their coverage is a big problem
problem yes their code works pretty good but their coverage is a big problem
problem yes the writeup seemed to include everything that was required code was also attached along with the screenshots and steps
problem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality design principles are not used but overall quite nicely explained
problem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality design principles are not used but overall quite nicely explained
problem yes the wiki is clear and explains most aspects of the project but there could be a better explanation for the idl files that were added and the corresponding changes that were made because of adding these files
problem yes the wiki does explain the functionalities well could have been better to have more attributes in the subclasses in the diagram this could help the user know about the details of the strategy pattern used
problem yes the wiki does explain the functionalities well could have been better to have more attributes in the subclasses in the diagram this could help the user know about the details of the strategy pattern used
problem yes the tests are thorough needs some formatting in the code
problem yes the tests are thorough needs some formatting in the code
problem yes the test does covers 99 of the models variations the team could have enhanced tests with varied inputs such as for the handle method check even a more through test of the score method with different input data could have been done  
problem yes the test does covers 99 of the models variations the team could have enhanced tests with varied inputs such as for the handle method check even a more through test of the score method with different input data could have been done  
problem yes the team made commits regularly but some commits whose name suggest changes to the code not heroku deployment were done after the deadline of 10th oct if those changes were later reversed or not cannot be ensured from the reviewer s perspective i would suggest not to add any changes at all after the deadline as we shouldn t be bothered about looking at  what change is done in each commit stick to the work you had as it would be graded appropriately by the instructors
problem yes the team made commits regularly but some commits whose name suggest changes to the code not heroku deployment were done after the deadline of 10th oct if those changes were later reversed or not cannot be ensured from the reviewer s perspective i would suggest not to add any changes at all after the deadline as we shouldn t be bothered about looking at  what change is done in each commit stick to the work you had as it would be graded appropriately by the instructors
problem yes the team made commits  days ago but then it seems that they didn t follow up with the feedback they received on the pull request as their were 7 issues though of minor severity which required fixing and then there were no commits after that
problem yes the team made commits  days ago but then it seems that they didn t follow up with the feedback they received on the pull request as their were 7 issues though of minor severity which required fixing and then there were no commits after that
problem yes the team has used flowcharts and diagrams which clearly describe the changes to be made to the system
problem yes the team has taken care of it by specially making a section of what is the problem as the introductory section of the wiki doc so as to make us understand the goals of the project they have even attached code snaps of the relevant changes they have in mind whilst explaining the error although one questions the details in which they should have gone into explaining the errors and resolution more mentioning of details is required  
problem yes the team has taken care of it by specially making a section of what it does as the introductory section of the doc so as to make us understand the goals of the project they have even attached screenshots of the relevant changes they have in mind whilst explaining the error although one questions the details in which they should have gone into explaining the errors and resolution more mentioning of details is required  
problem yes the team has made few code climate fixes and also added tests for the utf encoding issue though no test is available for the sanitize fixes  
problem yes the team has made a very good testing plan consisting of functional testing which covers almost all of the use cases which have been added modified however the author could have added code snippets of the same instead of just discussing the proposed plan
problem yes the team has made a very good testing plan consisting of functional testing which covers almost all of the use cases which have been added modified however the author could have added code snippets of the same instead of just discussing the proposed plan
problem yes the team has made a very good testing plan consisting of functional testing which covers almost all of the use cases which have been added modified however the author could have added code snippets of the same instead of just discussing the proposed plan
problem yes the team has explained their code and the reason for the additions made however for the issue 926 some more information about the tablesorter and some additional comments would improve the writeup solutions to issue 718 and 971 are explained clearly and are easy to follow
problem yes the team has explained their code and the reason for the additions made however for the issue 926 some more information about the tablesorter and some additional comments would improve the writeup solutions to issue 718 and 971 are explained clearly and are easy to follow
problem yes the team has explained their code and the reason for the additions made however for the issue 926 some more information about the tablesorter and some additional comments would improve the writeup solutions to issue 718 and 971 are explained clearly and are easy to follow
problem yes the team has considered the two important and required test cases 1 to check whether assignments is not present in the instructor view and check the presence of open student view button in the flyout menu here the team has also checked the precondition whether the user is viewing the correct page tree_display list which is meant for the instructor   2 to check the presence of close student view button for the instructor to return back to the default view and have the assignment   tab for students   suggestion the team could add a line to check whether the system returns back to the instructor page after clicking the close student view button maybe include expect page to have_current_path tree_display list    
problem yes the team has committed changes in round 2 also overall it looks like the codes were pushed to master and one go regularly committing the files could have been better
problem yes the team has added test cases the code for a couple of test cases are in the wiki in a separate section again it would have been better to explain the test cases a little more may be using screenshots of successful test cases
problem yes the team has added test cases the code for a couple of test cases are in the wiki in a separate section again it would have been better to explain the test cases a little more may be using screenshots of successful test cases
problem yes the team did add test cases to test their changes but the overall test coverage has decreased 
problem yes the team did add test cases to test their changes and their overall test coverage has increased
problem yes the team did add test cases and the coverage increased too but the team didn t put any efforts after the initial review round since the failed tests are still failed and there are no new commits since 12 days
problem yes the team added visual aids like uml diagrams screen shots code snippets to clearly describe the changes to be made to the system well done
problem yes the system works fine and authors have fixed the problems found in the first round for an instance admin functionality and interest functionality were not present in round one but authors have implemented them now  
problem yes the system handles all the entity relationships well there is no mapping table as such but all relationships has been addressed in correct association degree in the application
problem yes the pull request did pass the travis ci it didn t has any conflicts with the base branch but it did have some unresolved issues which needed to be fixed namely cognitive complexity was 6 and condition size for two files were too high
problem yes the pull request did pass the travis ci it didn t has any conflicts with the base branch but it did have some unresolved issues which needed to be fixed namely cognitive complexity was 6 and condition size for two files were too high
problem yes the proposed solutions part clearly stated that they will go through each review to compare the new review score etc and then they will store the review url however the solution is not concrete enough and is a little bit hard to follow it should be great if there s more details in stating about how to loop through each reviews  
problem yes the proposed solutions part clearly stated that they will go through each review to compare the new review score etc and then they will store the review url however the solution is not concrete enough and is a little bit hard to follow it should be great if there s more details in stating about how to loop through each reviews  
problem yes the project is to do 2 things 1 stop teams from dropping assignments very late close to deadline 2 have different deadlines when assignments are done at different periods the wiki should be created on expertiza page and not on wikipedia site
problem yes the login signup module seems to be very well tested considering the fact that all the three types of users admins househunters and realtors are managed by using the same table but there s also a small functional bug even if i hadn t regisitered as a househunter or a realtor i am able to switch back and forth between the roles which is kind of counter intuitive in many ways
problem yes the github api integration looks good the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well usage of existing gems is good and eases lot of implementation pains  
problem yes the github api integration looks good the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well usage of existing gems is good and eases lot of implementation pains  
problem yes the github api integration looks good the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well usage of existing gems is good and eases lot of implementation pains  
problem yes the functionality required is stated but the idea about how to code for that functionality is yet to be thought of
problem yes the functionality required is stated but the idea about how to code for that functionality is yet to be thought of
problem yes the functionalities are present it would have been good if the issues were listed sequentially following its solutions
problem yes the functionalities are present it would have been good if the issues were listed sequentially following its solutions
problem yes the features which have been done till now work well
problem yes the explanations  provided for changes to be made are clearly mentioned the authors are very clear what and where to make changes   use of flowchart makes reviewer to understand their approach more quickly and easily suggestion no test plan is included in the project
problem yes the explanations  provided for changes to be made are clearly mentioned the authors are very clear what and where to make changes   use of flowchart makes reviewer to understand their approach more quickly and easily suggestion no test plan is included in the project
problem yes the doc contains test plan but they are not specific
problem yes the doc contains test plan but they are not specific
problem yes the doc contains test plan but they are not specific
problem yes the diagrams are clear to show how the system works but they are not so lucid so as to show in the diagram how they are going to implement the changes in the system    
problem yes the diagrams are clear to show how the system works but they are not so lucid so as to show in the diagram how they are going to implement the changes in the system    
problem yes the diagrams are clear to show how the system works but they are not so lucid so as to show in the diagram how they are going to implement the changes in the system    
problem yes the diagrams are clear to show how the system works but they are not so lucid so as to show in the diagram how they are going to implement the changes in the system  
problem yes the diagrams are clear to show how the system works but they are not so lucid so as to show in the diagram how they are going to implement the changes in the system  
problem yes the design proposed by the author seem sound enough however the author has only given a high level view of the proposed design the author should delve deeper into the concept more while describing the intended design
problem yes the design is the simplest i could think about but it doesn t include how to change the files   i think it can still be as simple and succinct if the modifications of files can be included on the other hand the expected result seems to be too long there s too many screenshots
problem yes the design is the simplest i could think about but it doesn t include how to change the files   i think it can still be as simple and succinct if the modifications of files can be included on the other hand the expected result seems to be too long there s too many screenshots
problem yes the design is the simplest i could think about but it doesn t include how to change the files   i think it can still be as simple and succinct if the modifications of files can be included on the other hand the expected result seems to be too long there s too many screenshots
problem yes the design is sound and clear majority of the work is done by the suggestion algorithm the team proposes to integrate this functionality into expertiza and also improve the response time this project does not need to incorporate any design pattern as only the view files are altered the project does not impact the degree to which it is object oriented
problem yes the design is simplified and also there is room for some thought that is explicitly stated such as not really following the dry principle and the team is willing to work towards it which is really good
problem yes the design is simple the design includes details in checking rounds when it s bigger than or equal to 2 add the checkbox and otherwise do nothing however i doubt if that s needed in design document since in the future if we need to do 3 round reviews this 2 feature can be misleading
problem yes the design is quite simple
problem yes the design is as simple as it can get understanding the principle is not hard but making it simple should also not make it costly good work to the team if the instructors were looking for something this simple
problem yes the design is as simple as it can be the current scenario is explained with adequate screenshots and the changes are explained  by stating the field to be used for sorting the table a mock up screen of the expected output would have made it even better to understand however reading the material is sufficient as well the changes are not complex as they interact with a single view at a time the tablesorter function is also called for each view e g view_submissions layout
problem yes the design is as simple as it can be the current scenario is explained with adequate screenshots and the changes are explained  by stating the field to be used for sorting the table a mock up screen of the expected output would have made it even better to understand however reading the material is sufficient as well the changes are not complex as they interact with a single view at a time the tablesorter function is also called for each view e g view_submissions layout
problem yes the design is appropriate it would be better if the authors list the patterns they are going to use
problem yes the design is appropriate it would be better if the authors list the patterns they are going to use
problem yes the design includes a very good test plan the tests are deep and detailed and completely test the functionalitys but i think it could be better following the dry principle if the tester don t need to log in as administrator2 every time
problem yes the design includes a very good test plan the tests are deep and detailed and completely test the functionalitys but i think it could be better following the dry principle if the tester don t need to log in as administrator2 every time
problem yes the design includes a very good test plan the tests are deep and detailed and completely test the functionalitys but i think it could be better following the dry principle if the tester don t need to log in as administrator2 every time
problem yes the design includes a test plan it  s adequate to test all functionality of the newly introduced controllers it doesn  t talk in detail about the ways the system is to be tested and what is the exact outcome to be verified
problem yes the design includes a test plan it  s adequate to test all functionality of the newly introduced controllers it doesn  t talk in detail about the ways the system is to be tested and what is the exact outcome to be verified
problem yes the design includes a test plan i think the tests can be more descriptive including what is being tested and in which scenario the test is being implemented
problem yes the design includes a test plan i think the tests can be more descriptive including what is being tested and in which scenario the test is being implemented
problem yes the design includes a test plan i think the tests can be more descriptive including what is being tested and in which scenario the test is being implemented
problem yes the design includes a test plan i think the tests can be more descriptive including what is being tested and in which scenario the test is being implemented
problem yes the design appears to be sound there could be some rearrangement in the mock up layout e g text box for email address and add button could have the same horizontal alignment for a better user interface
problem yes the database design and flowchart gives a clear picture what system will do after the required changes suggestion add before after changes screen mock ups to your document
problem yes the code was written well but a lot of functionalities  related  to the session was not added
problem yes the code seems good to deploy if we consider the manual testing and the video demonstration but since it didn t pass travis ci this claims seems a bit of a concern if we ignore the fact that lines of code was 500 and thats why travis ci failed but still there are a few lingering issues which the travis ci pointed which still hasn t been fixed it seems more of a patch which would require more patches to patch in the future
problem yes the code seems good to deploy if we consider the manual testing and the video demonstration but since it didn t pass travis ci this claims seems a bit of a concern if we ignore the fact that lines of code was 500 and thats why travis ci failed but still there are a few lingering issues which the travis ci pointed which still hasn t been fixed it seems more of a patch which would require more patches to patch in the future
problem yes the code seems good to deploy if we consider the manual testing and the video demonstration but since it didn t pass travis ci this claims seems a bit of a concern if we ignore the fact that lines of code was 500 and thats why travis ci failed but still there are a few lingering issues which the travis ci pointed which still hasn t been fixed it seems more of a patch which would require more patches to patch in the future
problem yes the code is written really well
problem yes the code has been refactored to cover all the intended scenarios and the tests have been very well documented along with testing the edge cases as said from their videos their  rspec however  doesn t seem to test many test cases but  that s expected i guess given their problem statement  
problem yes the code did pass travis ci successfully but as mentioned earlier the code did fail on 7 grounds of low severity this should have been fixed by the team as the issues were very small and required just minimal follow up
problem yes the code did pass travis ci successfully but as mentioned earlier the code did fail on 7 grounds of low severity this should have been fixed by the team as the issues were very small and required just minimal follow up
problem yes the code change along with the screenshots does explain the ordeal but the git screenshots and some more explanation would be well appreciated
problem yes the code already followed all the good conventions earlier except the lack of proper comments the code still lacks comments and the author hasn t made any changes since the last review but the overall code quality is upto the mark
problem yes the code already followed all the good conventions earlier except the lack of proper comments the code still lacks comments and the author hasn t made any changes since the last review but the overall code quality is upto the mark
problem yes the changes work as expected in the ui the test cases cover most of the scenarios would have been good if there was some scope for negative test cases that could be explained
problem yes the changes were committed throughout but the commit messages  could  be a bit more descriptive
problem yes the changes were committed throughout but the commit messages  could  be a bit more descriptive
problem yes the changes to be made are nicely explain the diagrams and screenshots are in place suggestion there was more scope to the test plans
problem yes the changes to be made are nicely explain the diagrams and screenshots are in place suggestion there was more scope to the test plans
problem yes the changes are well explained there are a lot of pictures snipped screen shots to help explain the changes to be made there s one issue that the screenshots are not very clear since it s big it would look better of the screenshots can be clearer
problem yes the changes are well explained there are a lot of pictures snipped screen shots to help explain the changes to be made there s one issue that the screenshots are not very clear since it s big it would look better of the screenshots can be clearer
problem yes the changes are well explained there are a lot of pictures snipped screen shots to help explain the changes to be made there s one issue that the screenshots are not very clear since it s big it would look better of the screenshots can be clearer
problem yes the build passes travis ci no it did not had any conflicts there was only one message which was a warning but apart from that it everything seemed perfect
problem yes the authors have specified the changes that have already been implemented as a part of the oss project and the proposed set of changes that are to be implemented as a part of the final project detailed information on the changes already made is available as a wiki link to the previous document this document clearly captures the implementation of the offscreencanvas webidl and rust files the design document attached in this round encompasses the proposed design of implementation of the offscreencanvasrenderingcontext2d and enabling of the blob api for testing the code the authors have also listed the files changed and to be changed making it easier for the reviewers to keep track of the code on github though the text is lucid lack of a visual tool like flow charts tables or uml diagrams to concisely illustrate the workflow might make it difficult for new readers to follow the functionalities proposed and the interlinking of various modules so one suggestion at this point is that the authors could have included a visual representation of the design apart from that the document is well made and credits to the team
problem yes the authors have nicely explained the changes to be made this includes the flow diagrams uml diagrams and many of the screenshots good work team suggestion could include screenshots if any of the test plans implemented
problem yes the authors have nicely explained the changes to be made this includes the flow diagrams uml diagrams and many of the screenshots good work team suggestion could include screenshots if any of the test plans implemented
problem yes the authors have improved the code the team has worked on the issue which i mentioned in the previous review the code doesn t seems to be confusing now but it still needs proper commenting to be done  
problem yes the authors are using already existing gems for the implementation i would have liked to see a section on caching if any   rest the solution proposed looks simple and straightforward and looks that it will easily integrate into the current system  
problem yes the authors are using already existing gems for the implementation i would have liked to see a section on caching if any   rest the solution proposed looks simple and straightforward and looks that it will easily integrate into the current system  
problem yes team kept on submitting their changes throughout the project only readme md file was updated in round 2
problem yes team kept on submitting their changes throughout the project only readme md file was updated in round 2
problem yes team kept on submitting their changes throughout the project and no commits are made in round 2
problem yes team has added the test case
problem yes since the issues are fixed as required i think that the project can be merged to the production server however there is some work on the conflicts upon resolution of which the fixes can be included to the code i don t think that there is a need to take another approach for solving the issues
problem yes seems to be so the case in effect the last commit being just 5 hrs ago but what changes against each file have been made is not clear hence its a bit unclear as to the extent and the number of changes made moreover the amount of subject matter and the number of sessions or models are far too less to be implementing any changes as such  
problem yes seems to be so the case in effect the last commit being just 5 hrs ago but what changes against each file have been made is not clear hence its a bit unclear as to the extent and the number of changes made moreover the amount of subject matter and the number of sessions or models are far too less to be implementing any changes as such  
problem yes passed travis ci only one code climate issue
problem yes passed travis ci only one code climate issue
problem yes on manual testing it leads to realization that the code has been suitably written as required by the functionalities and also the doc they have provided is the results that i get on following the procedure although i would suggest that they look more into the test case 3 because how to go about testing it hasn t been explained by them  
problem yes on manual testing it leads to realization that the code has been suitably written as required by the functionalities and also the doc they have provided is the results that i get on following the procedure although i would suggest that they look more into the test case 3 because how to go about testing it hasn t been explained by them  
problem yes no conflict that s not resolved
problem yes new code has been committed in the 2nd round the team has essentially implemented the offscreencanvas rs and offscreenrenderingcontext2d rs offscreencanvas rs is respondible for implementing the offscreencanvas webidl this interacts directly with javascript and when a new instance of offscreencanvas is created it calls the constructor with arguments height and width which in turn calls the new method defined in this file it also contains the reflector object that tells the javascript garbage collector to ignore the canvas object while clearing memory additionally it has the implementation of the getcontext method that returns a weak reference to offscreencanvasrenderingcontext2d which is responsible for doing background rendering task offscreenrenderingcontext2d rs has the implementation of offscreencanvasrenderingcontext2d it does not interact directly with javascript so it does not have the constructor or reflector the functionality to build an offscreencanvas object has been implemented in this file  
problem yes looks clean any design patterns used
problem yes it works as intended it would be better if you could add a video recording of the flow screenshots of the flow in the test plan  
problem yes it simple but some parts are not easy to understand
problem yes it simple but some parts are not easy to understand
problem yes it simple but some parts are not easy to understand
problem yes it seems very sound they list what they are going to do in 4 fields
problem yes it seems like sound however the authors could add some principles and patterns into it
problem yes it has the implementation plan of a checkbox which allows the instructor to decide about review times since that is the only thing to be implemented there s no more issues i think the diagram doesn t have very pretty look it should be better if the screenshot can be smaller so that the fonts in the diagrams can be seen more clearly
problem yes it does explain but could have added more details to make it clear  
problem yes it does explain but could have added more details to make it clear  
problem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
problem yes i was able to understand the issue as well as the solution overall but i couldn t understand why there is a need to append a team name to an assignment it was just mentioned that it is done in other part of the code as well mentioning that would have given me a better idea
problem yes i was able to understand the issue as well as the solution overall but i couldn t understand why there is a need to append a team name to an assignment it was just mentioned that it is done in other part of the code as well mentioning that would have given me a better idea
problem yes everything that the project required to do works there were a few things which caused issues in the pull request but none of it related to the functionality of the product to be tested but rather related to the code complexity even the video demonstration clearly shows the changes implemented
problem yes even constraints were defined well
problem yes design shows a good amount of work to be done team is not using any design pattern  
problem yes design seems fit more insight required on the algorithm itself and how it will be implemented
problem yes design seems fit more insight required on the algorithm itself and how it will be implemented
problem yes changes we committed in round 2 code commit could have better by committing  as soon  as possible committing few files and writing proper comments and description for the commit was missing as a reader i was not able to understand what a particular commit meant and what module was changed because there was no proper explanation  
problem yes changes we committed in round 2 code commit could have better by committing  as soon  as possible committing few files and writing proper comments and description for the commit was missing as a reader i was not able to understand what a particular commit meant and what module was changed because there was no proper explanation  
problem yes changes we committed in round 2 code commit could have better by committing  as soon  as possible committing few files and writing proper comments and description for the commit was missing as a reader i was not able to understand what a particular commit meant and what module was changed because there was no proper explanation  
problem yes changes to be made are explained clearly document is very clear includes necessary diagrams mock ups and everything possible to make anyone understand what the issues are and what team is planning to do to resolve them everything is included in a proper order like for each issue there is a separate flowchart and mock up no suggestions required
problem yes but they didnt show their principles and pattern very well
problem yes but they didnt show their principles and pattern very well
problem yes but they didnt show their principles and pattern very well
problem yes but they didnt show their principles and pattern very well
problem yes but i find a small bug the admin can edit his profile and select change his role to realtor although his role did not change there is no error report
problem yes both the the issues seem to be fixed from the screencast video it clearly explains the before and after scenarios and the system works as expected   the test plan is still missing for the fixed issues
problem yes as per the solution provided it does seem that the design incorporates the required functionality it considers sorting on all the specified fields suggestions since you have mentioned the use of jquery tablesorte you may also add explanation as to what is tablesorter and try explaining atleast for one field e g name as to how does it work to sort the entries    
problem yes as its sorting not much scope on design approach yet the team has documented well on their approach regarding multi level sortings that they are undertaking in few pages they have also considered cross browser compatibility of their jquery library which is a common design miss during client side changes
problem yes apart from the 7 issues of minor severity from codeclimate the code is perfectly well to integrate with the project no the project need not be planned and executed from scratch it is implemented well enough
problem yes and at times much more than necessary  
problem yes almost everything seems perfect only a little more explaination is required
problem yes almost everything seems perfect only a little more explaination is required
problem yes all the functionalities including viewing submission viewing scores viewing review report author feedback report teammate review report are all available i believe a more intuitive detailed explanation or description might be even more useful while describing the functionalities in the design here such design is still just simply stated as the project goal
problem yes all the functionalities including viewing submission viewing scores viewing review report author feedback report teammate review report are all available i believe a more intuitive detailed explanation or description might be even more useful while describing the functionalities in the design here such design is still just simply stated as the project goal
problem yes all the functionalities including viewing submission viewing scores viewing review report author feedback report teammate review report are all available i believe a more intuitive detailed explanation or description might be even more useful while describing the functionalities in the design here such design is still just simply stated as the project goal
problem yes a good test plan is also included
problem yes a fairly good job in that regard they have first explained their test plans then even provided links to their rspec tests which i checked then they have run and shown their screenshots of the rspec tests going through successfully even so their  coverage seems to be an  issue since it  hasn t been updates since the last submission that was 19 days ago as per their pull request which  even shows a  decrease in their coverage  
problem yes visual aid has been provided in the form of flow charts and screen shots uml could added
problem yes very well written i would have given full marks if you would have added code snippet and screenshot of the before and after feature visually it would have been great to understand the changes quickly
problem yes very well written i would have given full marks if you would have added code snippet and screenshot of the before and after feature visually it would have been great to understand the changes quickly
problem yes travis ci is passing code climate has few issues but they can be easily resolved
problem yes travis ci is passing code climate has few issues but they can be easily resolved
problem yes they have explained the way and why they did and in their writeup they does not mention any principles or patterns
problem yes they have explained the way and why they did and in their writeup they does not mention any principles or patterns
problem yes they have been committing a bit regularly although the commits contribution are not equally distributed among the team members
problem yes they do incoroporate  but very bad look and feel of the document and hard to understand
problem yes they do incoroporate  but very bad look and feel of the document and hard to understand
problem yes they did commit changes in round 2 but it seems only one person has contributed in a group of 3
problem yes they did commit changes in round 2 but it seems only one person has contributed in a group of 3
problem yes they committed a lot of code after first review which can be due to the fact it wasn t deployed by review 1 but overall the number of commits is higher than average i believe
problem yes they committed a lot of code after first review which can be due to the fact it wasn t deployed by review 1 but overall the number of commits is higher than average i believe
problem yes there were some commits fixing the travis and code climate issues
problem yes there is one conflict that must be resolved to go ahead reported by travis ci
problem yes there is one conflict that must be resolved to go ahead reported by travis ci
problem yes the writeup explains how and why the did the modifications it has comparisons between the previous and new versions and why they made they made the necessary modifications   there was no mention of using design principles or patterns
problem yes the writeup explains how and why the did the modifications it has comparisons between the previous and new versions and why they made they made the necessary modifications   there was no mention of using design principles or patterns
problem yes the ui is pretty smooth and a person can navigate freely however in some cases there is no back link in the web page so the user has to use browser navigation to go to the previous page
problem yes the ui is interactive and easy to use
problem yes the test plan is included but the test plan appears to be very shallow as it gives the which functionalities must be test but doesn t mentions it inform of test like what should be the actions taken when a certain condition arises it can be more clearly stated by mentioning the test cases in form of context and it statements
problem yes the test plan is included but the test plan appears to be very shallow as it gives the which functionalities must be test but doesn t mentions it inform of test like what should be the actions taken when a certain condition arises it can be more clearly stated by mentioning the test cases in form of context and it statements
problem yes the team seem to have a clear idea as to what must be done and how the result must look it would be helpful if the team gave some insights as to how the composite score formula was decided as this is the heart of the project
problem yes the team seem to have a clear idea as to what must be done and how the result must look it would be helpful if the team gave some insights as to how the composite score formula was decided as this is the heart of the project
problem yes the team has added tests i am not sure of the increase in coverage as it is not mentioned in the doc however the team has very well explained how the tests were done and what areas they have tested
problem yes the team has added test for the utf encoding acceptance the coverage is not 100 and not tested with varied inputs but i believe would suffice for sanity check although the description of test in rspec file is ambiguous not clearly mentioning what exactly the test is expected to do there is no test available for the issue 2 documented
problem yes the team did add test cases but i am surprised on why the coverage numbers have fallen so much this needs some investigation   i think good test cases were added as part of the work i would have though liked to see more ve test cases checking for the failure conditions 
problem yes the team did add test cases but i am surprised on why the coverage numbers have fallen so much this needs some investigation   i think good test cases were added as part of the work i would have though liked to see more ve test cases checking for the failure conditions 
problem yes the relationships are handled properly 1 company multiple realtors etc no mapping table as such the schema handles it
problem yes the project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application  
problem yes the project is a test project for menu rb the code coverage has increased to 100 though the code covers all lines i feel edge cases are not covered well  
problem yes the problem statement and design approach sections explain clearly what the usecase is and what the authors think will be a good design to implement the changes are clearly explained having some file names would be useful to review in detail
problem yes the presence of use case diagrams and flow charts explaining the work flow is good it would be nice if there were more uml diagrams such as sequence so show various class interactions   presence of mockup screens is good that helps in understanding what is being implemented it would have been good if the authors put in more details about the validations that that propose in the system 
problem yes the presence of use case diagrams and flow charts explaining the work flow is good it would be nice if there were more uml diagrams such as sequence so show various class interactions   presence of mockup screens is good that helps in understanding what is being implemented it would have been good if the authors put in more details about the validations that that propose in the system 
problem yes the flow diagram and graph plots help to understand the changes and its implications the diagrams clearly describe the change approach followed
problem yes the features work as described in the problem statement the team has done good job and has fixed all the below issues issue 971 change create topic ui into ajax issue 926 we need a way to sort topics by topic number in assignment edit page issue 718 we should allow instructors to give feedback when accepting or rejecting topic suggestions
problem yes the documentation looks complete  and states the project purpose and solution are stated the project design could be described in more detail
problem yes the document mainly talks about small changes at different places in the application that are being done i think more implementation details with ample justification are missing if the team is using certain apis why are they using should have been mentioned    
problem yes the design looks simple the use of mock up screens is good and greatly helps understand the flow that has been proposed good work how ever in one of the flow charts the check for is admin does not show label  y or n path
problem yes the design looks simple the use of mock up screens is good and greatly helps understand the flow that has been proposed good work how ever in one of the flow charts the check for is admin does not show label  y or n path
problem yes the design looks simple the use of mock up screens is good and greatly helps understand the flow that has been proposed good work how ever in one of the flow charts the check for is admin does not show label  y or n path
problem yes the design looks simple the use of mock up screens is good and greatly helps understand the flow that has been proposed good work how ever in one of the flow charts the check for is admin does not show label  y or n path
problem yes the design is sound and appeopriate however it may be better to implement more code level design
problem yes the design is pretty good the patterns followed avoids any duplication of code but i had made a suggestion in review one to take a look at project 1843 and it s code the problem statement is quite similar and the code could be reused i don t see any mention of it i hope you do take a look before starting to code as it will avoid any re work
problem yes the design is pretty good the patterns followed avoids any duplication of code but i had made a suggestion in review one to take a look at project 1843 and it s code the problem statement is quite similar and the code could be reused i don t see any mention of it i hope you do take a look before starting to code as it will avoid any re work
problem yes the design is pretty good the patterns followed avoids any duplication of code but i had made a suggestion in review one to take a look at project 1843 and it s code the problem statement is quite similar and the code could be reused i don t see any mention of it i hope you do take a look before starting to code as it will avoid any re work
problem yes the design is as simple as possible however they have only described the proposed design they could have provided simple mock ups or samples
problem yes the design incorporated all functionality required but more explanation is needed around which graph they intend to show
problem yes the design incorporated all functionality required but more explanation is needed around which graph they intend to show
problem yes the design incorporated all functionality required but more explanation is needed around which graph they intend to show
problem yes the design includes the test plan however the test plan could have been more low level instead of just writing it should statements
problem yes the design includes the test plan however the test plan could have been more low level instead of just writing it should statements
problem yes the design includes the test plan however the test plan could have been more low level instead of just writing it should statements
problem yes the design appears to be sound following the appropriate principles and patterns fell the team could have explained in more detail
problem yes the design appears to be sound following the appropriate principles and patterns fell the team could have explained in more detail
problem yes the design appears to be sound following the appropriate principles and patterns fell the team could have explained in more detail
problem yes the coverage is good but the test scenarios are fairly straightforward and no elegant stubs or mocks used the code isnt dry 
problem yes the authors have tried to explain what changes are required and what they plan to do however i feel that exact changes that they might be doing are missing they could have listed most files that will need modification and if necessary new files that will be changed
problem yes the authors have tried to explain what changes are required and what they plan to do however i feel that exact changes that they might be doing are missing they could have listed most files that will need modification and if necessary new files that will be changed
problem yes the authors have tried to explain what changes are required and what they plan to do however i feel that exact changes that they might be doing are missing they could have listed most files that will need modification and if necessary new files that will be changed
problem yes the authors have tried to explain what changes are required and what they plan to do however i feel that exact changes that they might be doing are missing they could have listed most files that will need modification and if necessary new files that will be changed
problem yes the author has explained the adequately the changes to be made to the system by giving a detailed flow diagram of the workflow of the the would be implementing the functionality of keeping a track of the review time of a student
problem yes the application flow diagram tells of how the functionality will be accessed both by user and student and the use case diagram explains the interaction of the instructor and the students for the particular functionalities 
problem yes team had been pushing changes on github continuously with neat commit messages in round 2 also   with 49 commits till now yes i can see last commit on 11 th oct 2018 but commits are not distributed equally
problem yes team had been pushing changes on github continuously with neat commit messages in round 2 also   with 49 commits till now yes i can see last commit on 11 th oct 2018 but commits are not distributed equally
problem yes team had been pushing changes on github continuously with neat commit messages in round 2 also   with 49 commits till now yes i can see last commit on 11 th oct 2018 but commits are not distributed equally
problem yes screen shots are helpful but the document missing flow control diagrams 
problem yes partially the code has the parameters not well defined for all only one  conceivable  user seemingly admin and that too is doubtful to have the correct mvc layout   for instance they seem to have created separate mvc architectures for admins companies and users only this goes to show that they are lacking in a layered approach on access and privileges   also the code is written in a reasonably clean and formatted style with the variable definitions to be self explanatory of the functionalities they perform in most cases for whichever few roles defined  
problem yes partially the code has the parameters not well defined for all only one  conceivable  user seemingly admin and that too is doubtful to have the correct mvc layout   for instance they seem to have created separate mvc architectures for admins companies and users only this goes to show that they are lacking in a layered approach on access and privileges   also the code is written in a reasonably clean and formatted style with the variable definitions to be self explanatory of the functionalities they perform in most cases for whichever few roles defined  
problem yes most of them but they have not added any automated integration tests unit testing has been done and is great to see such detailed tests
problem yes most of them but they have not added any automated integration tests unit testing has been done and is great to see such detailed tests
problem yes most of the required features are working fine some errors are there like admin is able to add interest to houses which is an unintended feature as admin should change role before doing that
problem yes most of the required features are working fine some errors are there like admin is able to add interest to houses which is an unintended feature as admin should change role before doing that
problem yes most of the required features are working fine some errors are there like admin is able to add interest to houses which is an unintended feature as admin should change role before doing that
problem yes most of the issues identified in the round 1 was fixed apart from below   1 admin login while creating account the ui says password as option but i am leave them blank 2 realtor view listing is not working as a result realtor is not able to see the inquireis 3 was able to delete the admin account
problem yes most of the issues identified in the round 1 was fixed apart from below   1 admin login while creating account the ui says password as option but i am leave them blank 2 realtor view listing is not working as a result realtor is not able to see the inquireis 3 was able to delete the admin account
problem yes most of the issues identified are fixed 1 admin not able to delete user accounts
problem yes it states the plan design well testing can be better represented in terms of whether its ui testing or automated tests etc
problem yes it explains with clarity the issue at hand utf 8 only support how that causes trouble also improper formatting of html tags
problem yes good write up but would have like to see details on model   in test plan lines like   two test cases for method are redundant can should remove them 
problem yes good number of tests added coverage increased a but but i would like to see more ve tests mostly ve test cases are covered in the tests    
problem yes good number of tests added coverage increased a but but i would like to see more ve tests mostly ve test cases are covered in the tests    
problem yes good number of tests added coverage increased a but but i would like to see more ve tests mostly ve test cases are covered in the tests    
problem yes features work as intended but i would like to see tests as well as testing case were job addition to queue fails i understand this would be edge case and not likely to happen but still needs to be handled other edge cases such as  participant_mails is nil have been taken care of  
problem yes design appears to be sound also the flow diagram helps us understand it better team did not use any design pattern  
problem yes commits are done to fix the code climate issues
problem yes authors have done well to explain the changes being done in the project i think i wish they would have added is the details of languages they are supporting     also they do mention that they will add extra column to languages table they could have pasted the new schema in the doc
problem yes authors have done well to explain the changes being done in the project i think i wish they would have added is the details of languages they are supporting     also they do mention that they will add extra column to languages table they could have pasted the new schema in the doc
problem yes authors have done well to explain the changes being done in the project i think i wish they would have added is the details of languages they are supporting     also they do mention that they will add extra column to languages table they could have pasted the new schema in the doc
problem yes authors have an details about code changes that they have done and why they have done i would have liked more emphasis on why  
problem yes all the test written passes they could have written a test to check if self handle is returned if no nil parameter is sent
problem yes all the test written passes they could have written a test to check if self handle is returned if no nil parameter is sent
problem yes all the requirements mentioned in the problem statement are considered also the corresponding solutions are explained a flow diagram or screenshots explaining the solution jsut like the problem statement is explained would have been helpful
problem yes all the requirements mentioned in the problem statement are considered also the corresponding solutions are explained a flow diagram or screenshots explaining the solution jsut like the problem statement is explained would have been helpful
problem yes all the features work as intended the participant that is created using the build method describes participant as an instance of the assignment participant class i observed the handle method has not been tested yet
problem yes all the features work as intended the participant that is created using the build method describes participant as an instance of the assignment participant class i observed the handle method has not been tested yet
problem yes about 75  commits were done
problem yes  i think with additional testing it can be deployed
problem yes
problem yes
problem yep the spec rb file works fine i think only handle method hasn t been tested this is why the coverage seems to be 94
problem yep the spec rb file works fine i think only handle method hasn t been tested this is why the coverage seems to be 94
problem yeah the build has passed the travis ci test and there were no conflicts found on the pull request
problem yeah i believe it is as simple as possible while choosing the best path for the expertiza project to grow but it still sounds like a very ambitious project for 1 group to complete
problem y all did the least possible work and put it on wikipedia instead of the expertiza wiki
problem y all did the least possible work and put it on wikipedia instead of the expertiza wiki
problem wrtie up clearly explains the project purpose what changes needs to be made however including a mock test plan would have been better
problem writeup needs to be improved video needs to have sound or make shorter videos build is failing code climate has 56 issues so no its not ready for deployment onto production the way they have implemented is fine but they need to work on the said issue to make it  production ready
problem writeup needs to be improved video needs to have sound or make shorter videos build is failing code climate has 56 issues so no its not ready for deployment onto production the way they have implemented is fine but they need to work on the said issue to make it  production ready
problem writeup is written well understandable and clean explanation team has explained the problem statement and issues well with good amount of pictures team can improve on formatting
problem writeup is written well no design principle or pattern involved but the approach taken is explained in detail step by step     team could add references and links  
problem writeup is written well and explained properly with good indentation content and screenshots team could have explained test plan in more brief so as to understand number of test scenarios covered  
problem writeup is written very neatly and in elaborated fashion with understandable images team could have added github expertiza link and pull request link at the bottom of the wiki page also  references and credits
problem writeup is very clearly explained writeup clearly explains how they are doing their work but why team is following approach is not explained  
problem writeup is too concise code were addded but the implementation was not explained in detail
problem writeup is still in the form of a word doc instead of a wiki test plan and tests are missing
problem writeup is still in the form of a word doc instead of a wiki test plan and tests are missing
problem writeup is still in the form of a word doc instead of a wiki test plan and tests are missing
problem writeup is readable and written properly team could have added code snippet and pictures of changed or improved functionality also team could work upon formatting and could also add links and references
problem writeup is readable and written properly team could have added code snippet and pictures of changed or improved functionality also team could work upon formatting and could also add links and references
problem writeup is descriptive but missing the following 1 screenshots of implementation 2 steps to replicate the problem  3 instructions not provided 4 too many sub topics for solution implemented
problem writeup is decent i felt that code should have been quoted rather than included pictures of as that would make it easier to modify the pngs weren t same size which appears to be negative that people  have commented on my work too
problem writeup is decent i felt that code should have been quoted rather than included pictures of as that would make it easier to modify the pngs weren t same size which appears to be negative that people  have commented on my work too
problem writeup explains what was to be done and how they did it but does not give rationale behind the way they coded and any alternative approaches
problem writeup explains what was to be done and how they did it but does not give rationale behind the way they coded and any alternative approaches
problem writeup doesn t has a test plan but in the video they have tested  a lot also please add audio as well in your video explaining what you are doing and why so that its easy for the user to understand otherwise watching 23 minutes silent videos is just to much
problem writeup doesn t conatin the test plan section
problem writeup does not mention anything about how the code works alternative strategies possible or strategies they used
problem writeup does not mention anything about how the code works alternative strategies possible or strategies they used
problem writeup does not mention anything about how the code works alternative strategies possible or strategies they used
problem writeup covers all the specifications and descriptions but is too lengthy
problem writeup covers all the specifications and descriptions but is too lengthy
problem writeup clearly explains what their use cases are and what solution they came up with there is a lack of background about it how to test it from ui test plan test cases dry principle etc their write up is not on wiki which makes it difficult to download the file every time and check it although it was pointed out during the first round the team didn t change it or they didn t update the wiki page which they created
problem writeup clearly explains what their use cases are and what solution they came up with there is a lack of background about it how to test it from ui test plan test cases dry principle etc their write up is not on wiki which makes it difficult to download the file every time and check it although it was pointed out during the first round the team didn t change it or they didn t update the wiki page which they created
problem writeup clearly explains what their use cases are and what solution they came up with there is a lack of background about it how to test it from ui test plan test cases dry principle etc their write up is not on wiki which makes it difficult to download the file every time and check it although it was pointed out during the first round the team didn t change it or they didn t update the wiki page which they created
problem writeup can be improved at the task section and more information could be added
problem writeup can be improved at the task section and more information could be added
problem write up provides all the necessary information needed to understand the project but a brief explanation about certain methods  would have been better  
problem write up needs serious attention of the team the approach followed is good but it still needs to be worked on the write up should include contents which makes it self explanatory
problem write up needs serious attention of the team the approach followed is good but it still needs to be worked on the write up should include contents which makes it self explanatory
problem write up needs serious attention of the team the approach followed is good but it still needs to be worked on the write up should include contents which makes it self explanatory
problem write up is little vague some are not explained properly
problem write up is little vague some are not explained properly
problem write up includes everything the team has implemented it clearly show the files which were involved to complete the project background of the project and evrything overall work done by the team is good but i feel that the test plan on the write up page should be edited the team should work on presenting their work to everyone in a good way
problem write up  clearly explains with screenshots what is done however does not say how the changes have been implemented
problem write up  clearly explains with screenshots what is done however does not say how the changes have been implemented
problem write up  clearly explains with screenshots what is done however does not say how the changes have been implemented
problem write up isn t provided i went through their git commit and the requirement for  issue 1201 there is a puts statement in the controller i feel that should be removed you guys might have added it for debugging purposes but it should be removed before committing also not sure how the changes made are applicable to the problem at hand which is to check if assignments have the same name if i m not wrong
problem write up isn t good they have just added there code in the write up without explaining anything plus no comments in code code snippets in writeup are going off the page
problem write up is written well and it is understandable images are not in proportion and not of same size and hence wiki page does not look steady team can work on image size and image description and manual test plan in more detail
problem write up is too brief no detail description of approach taken as well as no picture to relate to changes as suggested to add in last review  
problem write up is too brief no detail description of approach taken as well as no picture to relate to changes as suggested to add in last review  
problem write up is too brief no detail description of approach taken as well as no picture to relate to changes as suggested to add in last review  
problem write up is really good but little short could have been described with more details also it would have been better if they ha uploaded the screencast of the work they had done
problem write up is okay the test plan comes before solution approach section pls change the ordering there is no reference section  instead of putting screen shots of code it would be better if the authors had put code snippets  
problem write up is okay the test plan comes before solution approach section pls change the ordering there is no reference section  instead of putting screen shots of code it would be better if the authors had put code snippets  
problem write up is good great job however i could find few points that if rectified would make it even better   it would be good if the problem statement could list the issue hyperlinks that are being fixed that would make it easier to navigate instead of pasting screen shot for solution it would have been good if few words detailing approach would be put post that screen shot could be put  
problem write up is good great job however i could find few points that if rectified would make it even better   it would be good if the problem statement could list the issue hyperlinks that are being fixed that would make it easier to navigate instead of pasting screen shot for solution it would have been good if few words detailing approach would be put post that screen shot could be put  
problem write up is good great job however i could find few points that if rectified would make it even better   it would be good if the problem statement could list the issue hyperlinks that are being fixed that would make it easier to navigate instead of pasting screen shot for solution it would have been good if few words detailing approach would be put post that screen shot could be put  
problem write up is good but the explanation of plan of work could have included some points like the approach taken
problem write up is good but the explanation of plan of work could have included some points like the approach taken
problem write up is good and self explanatory test plan helped a lot in understanding how to test it as discussed in the earlier review images could have been resized for better visibility was little difficult when one had to scroll along the page to view the entire image
problem write up is good and self explanatory test plan helped a lot in understanding how to test it as discussed in the earlier review images could have been resized for better visibility was little difficult when one had to scroll along the page to view the entire image
problem write up is good and self explanatory test plan helped a lot in understanding how to test it as discussed in the earlier review images could have been resized for better visibility was little difficult when one had to scroll along the page to view the entire image
problem write up doesnt include test plan good thing would be include the testing steps they have performed few screenshots would be helpful as well
problem write up doesnt include test plan good thing would be include the testing steps they have performed few screenshots would be helpful as well
problem would be nice to see a sample test plan
problem would be good to include  high level overview of changes made in the files  
problem would be good to include  high level overview of changes made in the files  
problem works as intended could have elaborated a little more like a guidance in wiki   was able to test the features works fine
problem works as intended could have elaborated a little more like a guidance in wiki   was able to test the features works fine
problem without a video or instructions i cannot easily verify that the solution works since there was an error thrown when i tried to follow the recipe the error occurred while i was trying to request an account more detailed testing recipes would help getting the accounts and their email addresses set up in the deployment is the main difficulty
problem without a video or instructions i cannot easily verify that the solution works since there was an error thrown when i tried to follow the recipe the error occurred while i was trying to request an account more detailed testing recipes would help getting the accounts and their email addresses set up in the deployment is the main difficulty
problem within the travis builds the test folders of helpers models and features are passing the test folder for the controller seems to be failing for some reason
problem with a total of about 55 commits the team has made more or less periodic commits labels for the commits could be better so it becomes more readable
problem with a total of 77 commits the team has actively pushed changes to the project although not all commits are labeled very accurately it is still easy to comprehend the pushed changes
problem wireframes have been given stating what the end product will look like but i did not find any uml diagrams or tables   suggestion the team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality
problem wireframes have been given stating what the end product will look like but i did not find any uml diagrams or tables   suggestion the team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality
problem wireframes have been given stating what the end product will look like but i did not find any uml diagrams or tables   suggestion the team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality
problem wiki page does talk about test plan but it is explained in brief   but no details of test scenarios or testing technology to be used  
problem wiki page does talk about test plan but it is explained in brief   but no details of test scenarios or testing technology to be used  
problem wiki page does talk about test plan but it is explained in brief   but no details of test scenarios or testing technology to be used  
problem wiki or read me does not include instructor or student credential so couldn t check anything
problem wiki or read me does not include instructor or student credential so couldn t check anything
problem while trying to delete a real estate company with existing realtors the system is failing
problem while trying to delete a real estate company with existing realtors the system is failing
problem while there are test files i don t see any completed tests especially for models outside of what is provided by default in rails
problem while there are some tests for controllers they  were  only the auto created tests by  rails there were test  files for the models but not test cases present
problem while there are some tests for controllers they  were  only the auto created tests by  rails there were test  files for the models but not test cases present
problem while the typical rails files for testing were included i did not see a complete set of tests for model and controller
problem while the typical rails files for testing were included i did not see a complete set of tests for model and controller
problem while the typical rails files for testing were included i did not see a complete set of tests for model and controller
problem while the test plan for fixing team names have been shown i couldn t find the test plan for validating username
problem while the test plan for fixing team names have been shown i couldn t find the test plan for validating username
problem while the test coverage has increased to 100 the team has made some changes to schema rb file this might cause a problem on other dependent modules hence i feel it is risky to deploy it on production the project doesn t  need to be started from scratch by the next team  
problem while the team did push changes to the project there are 95 commits which are unnecessary instead of pushing every change to the final project the team could have combined a few of the changes and pushed them all at once to make for better record of the changes made
problem while the functionality is present there are several debug statements in the code that need to be removed and tests need to be added
problem while the functionality is present there are several debug statements in the code that need to be removed and tests need to be added
problem while the code is organized well and seems to follow the model view controller design pattern the project doesn t seem to make good use of the relational database there are multiple models controllers specifically the list of potential buyers that are not necessary at all because of the relational database
problem while the application has a similar  layout as a typical rails application i noticed there were no  migrations in the db also the readme was not formatted very well and didn t tell me much about how to install the project locally
problem while the application has a similar  layout as a typical rails application i noticed there were no  migrations in the db also the readme was not formatted very well and didn t tell me much about how to install the project locally
problem while some links were easy to find and navigate after editing houses and companies i could not return back to a good home screen i also was unable to log out  
problem while some links were easy to find and navigate after editing houses and companies i could not return back to a good home screen i also was unable to log out  
problem while some functionality works the replace existing team functionality did not work when i tried using the examples in your write up
problem while some functionality works the replace existing team functionality did not work when i tried using the examples in your write up
problem while signing up as realtor or househunter all fields are not present only username and password is being asked
problem while signing up as realtor or househunter all fields are not present only username and password is being asked
problem while links and navigation were generally easy to find several links rendered broken pages and several got stuck in a loop asking me to log in as an admin to edit a user when i was already  logged in  
problem while links and navigation were generally easy to find several links rendered broken pages and several got stuck in a loop asking me to log in as an admin to edit a user when i was already  logged in  
problem while i understand conceptually i don t believe they explained their changes in appropriate  detail simply describing additional columns and a flow chart misses the biggest part of these changes which is user experience how will windows  pop up what will the new data look like after a review is complete
problem while i understand conceptually i don t believe they explained their changes in appropriate  detail simply describing additional columns and a flow chart misses the biggest part of these changes which is user experience how will windows  pop up what will the new data look like after a review is complete
problem while i understand conceptually i don t believe they explained their changes in appropriate  detail simply describing additional columns and a flow chart misses the biggest part of these changes which is user experience how will windows  pop up what will the new data look like after a review is complete
problem while a thorough controller test exists there is no model test
problem whether the task is due is determined by a date str and it may be go wrong under different timezone
problem whether the task is due is determined by a date str and it may be go wrong under different timezone
problem whether the task is due is determined by a date str and it may be go wrong under different timezone
problem when user is deleted the inquiry remains
problem when user is deleted the inquiry remains
problem when try to delete a user with inquiry it return some error  
problem when the project was assigned the team didn t made much commits but after a week and a half they started committing on a regular basis the frequency of commits was then linear which is a good thing the project didn t seem to have been completed hurriedly or at the last moment
problem when sumbit an iquiry the page automatically redirect to the homepage and can not find the user page
problem when searching for house type some location hit filter then sort by year found a url like this https calm forest 11598 herokuapp com house_lists filter location rdu authenticity_token j0ttfx 2bi50fb9dl3jg2pdb2zm6a8bdroes 2f 2f4vuoj 2bztedqdysx6e 2fmmhxeo7ra63kmbdh8ri5jg44qon6pdfa 3d 3d commit filter id search form method get sort build_year_low utf8 e2 9c 93 passing sensitive info like authenticity token in url param is dangerous also is it required   when viewing interested users of a particular house what s the point of the url param user_id https calm forest 11598 herokuapp com interests house_list_id 1 user_id 14 https calm forest 11598 herokuapp com interests house_list_id 1 user_id 1000
problem when searching for house type some location hit filter then sort by year found a url like this https calm forest 11598 herokuapp com house_lists filter location rdu authenticity_token j0ttfx 2bi50fb9dl3jg2pdb2zm6a8bdroes 2f 2f4vuoj 2bztedqdysx6e 2fmmhxeo7ra63kmbdh8ri5jg44qon6pdfa 3d 3d commit filter id search form method get sort build_year_low utf8 e2 9c 93 passing sensitive info like authenticity token in url param is dangerous also is it required   when viewing interested users of a particular house what s the point of the url param user_id https calm forest 11598 herokuapp com interests house_list_id 1 user_id 14 https calm forest 11598 herokuapp com interests house_list_id 1 user_id 1000
problem when searching for house type some location hit filter then sort by year found a url like this https calm forest 11598 herokuapp com house_lists filter location rdu authenticity_token j0ttfx 2bi50fb9dl3jg2pdb2zm6a8bdroes 2f 2f4vuoj 2bztedqdysx6e 2fmmhxeo7ra63kmbdh8ri5jg44qon6pdfa 3d 3d commit filter id search form method get sort build_year_low utf8 e2 9c 93 passing sensitive info like authenticity token in url param is dangerous also is it required   when viewing interested users of a particular house what s the point of the url param user_id https calm forest 11598 herokuapp com interests house_list_id 1 user_id 14 https calm forest 11598 herokuapp com interests house_list_id 1 user_id 1000
problem when i try to run manually i still see the same errors   participant email sends an email to the participant        failure error assignment assignment find_by id self assignment_id participant score get participant score within a round        failure error scores questionnaire_symbol scores answer compute_scores scores questionnaire_symbol assessments questions questionnaire_symbol
problem when i try to run manually i still see the same errors   participant email sends an email to the participant        failure error assignment assignment find_by id self assignment_id participant score get participant score within a round        failure error scores questionnaire_symbol scores answer compute_scores scores questionnaire_symbol assessments questions questionnaire_symbol
problem when i try to run manually i still see the same errors   participant email sends an email to the participant        failure error assignment assignment find_by id self assignment_id participant score get participant score within a round        failure error scores questionnaire_symbol scores answer compute_scores scores questionnaire_symbol assessments questions questionnaire_symbol
problem when i delete a real estate company all the realtors in that company get deleted too realtors can still edit houses they made for one company after they switch companies
problem when i delete a real estate company all the realtors in that company get deleted too realtors can still edit houses they made for one company after they switch companies
problem when house is deleted the inquires and replies are deleted as well this has been handled error page occurs when i try to sign up for the same role with the same email error in deleting a user if the user has submitted an inquiry reply house hunter can add a house to interest list multiple times should not be allowed by maybe hiding the button if the house is already in the current user s interest list readme md does not cover how the system handles edge cases
problem when delete a user with inquiry data the system crush and return an error
problem when an admin deletes a real estate company which has realtors and houses the company gets is getting deleted along with the realtors which is not the expected functionality because realtors can exist even without being a part of a company the realtor should not get deleted from the database could not test whether the inquiries are deleted if the house hunter is deleted because the admin is unable to delete a house hunter from the users list
problem when admin try to delete a user the website return some error when the admin try  to delete a real estate company it just redirect to the edit route instead of delete the company 
problem when admin deletes a company associated with a realtor it gets reflected in the realtors profile his company name shows nothing and the houses listed were also deleted admin is not able to view house hunters profile error in deployment but can view the same using users section when a user is deleted by admin his inquiries are removed and he is no more a potential buyer too when realtor changes creates new company his previous company houses are deleted this is reflected in the admin table too realtor is not able to view houses listed by others   edge cases a company can be created without filling in the fields required yes an empty row is displayed to the hunter when a company is created without any detail but it displays the company number row number while seeing the houses so a house is shown for a company that doesnt exist in the view companies page session control when user signs out from a page and then goes back the profile page should not be shown as he is signed out this should be considered
problem when a real estate company is deleted the respective houses are deleted the realtors are not further even after deletion the company of those realtors remains the same they can even edit the deleted company from their profile and list a house on behalf of the deleted company when a realtor edits and updates his company after it is deleted it actually gets created again when a realtor changes his company he can view only the houses of his current company and is prohibited to delete houses of his previous company this works as expected when a house hunter is deleted s he gets removed from the potential buyers list but inquiries are only partially deleted as in the row is still there but only two columns show data      
problem when a company is deleted by the admin the realtor s profile belonging to that company crashes
problem what will happen if the admin tries to delete a real estate company which has some realtors and houses app crashes what will happen if admin tries to delete a house hunter who has submitted several inquiries app crashes
problem what is wrong with the current implementation is clearly not stated
problem what is wrong with the current implementation is clearly not stated
problem what and how explained well but they explain the why behind their actions a bit more
problem well we can say that they have indeed tested the models they have defined in their readme file on github the definitions of the functionalities in the db folders and the controllers folder makes it very easy to follow how they have structured the code also the way the houses are added the redirection the houses to the links such as cmu and ncsu websites is very intuitive and well thought out and thus barring out a few minor mistakes in linking and page definitions the code has a good ability to run for the defined cases specially for the admin to be failsafe only one complaint though the whole structure does crumble when one sees that they have allowed the admin to be deleted this is their biggest loophole  
problem well not much information has been given on the wiki page though they have put some uml flow diagrams which give us an idea of the flow
problem well not much information has been given on the wiki page though they have put some uml flow diagrams which give us an idea of the flow
problem well all the important points have been mentioned like problem statement test plan etc though the test plan must include how the proposed solution is going to be achieved which they have not mentioned
problem well all the important points have been mentioned like problem statement test plan etc though the test plan must include how the proposed solution is going to be achieved which they have not mentioned
problem well a small paragraph on implementation has been given but that does not quite serve the purpose though there are uml diagrams which explain the flow
problem well a small paragraph on implementation has been given but that does not quite serve the purpose though there are uml diagrams which explain the flow
problem well written and able to follow however i see no branches created and hence pull requests merged all work is pushed direct to master
problem well structured code using mvc pattern   couldn t find admin credentials mentioned on readme  
problem well done most of the functionality i commented on last time has been fixed with very intuitive ui the only thing i couldn t find still was being able to view all inquiries as an admin very good updates overall
problem well done work except the lack of search  the readme file and the ui is not so good  anyway it s a good work  
problem watching the videos i feel it is ready but no deployment link
problem was unable to test the work from ui but the implementation looks okay i would have liked some screen hots of mails and videos to be uploaded as references so that reviewers could look at them as well    
problem was unable to test the work from ui but the implementation looks okay i would have liked some screen hots of mails and videos to be uploaded as references so that reviewers could look at them as well    
problem visualizations are great for helping to clarify system analysis and relations in this portion of the image more images on the design and implementation would also be a great addition for further understanding
problem visualization  offers only a flow chart but other uml diagrams like class diagram would have been more helpful    
problem visualization  offers only a flow chart but other uml diagrams like class diagram would have been more helpful    
problem visualization  offers only a flow chart but other uml diagrams like class diagram would have been more helpful    
problem visual aids are absent from the write up suggestions use cases for email notification can be added template design of the new modified email can be added   any relevant design pattern diagram can be added
problem visual aids are absent from the write up suggestions use cases for email notification can be added template design of the new modified email can be added   any relevant design pattern diagram can be added
problem visual aids are absent from the write up suggestions use cases for email notification can be added template design of the new modified email can be added   any relevant design pattern diagram can be added
problem view inquiries links to the createhouseinformation page and when you are creating any type of object there seems to be no validation and you are required to manually input things like id it seems like inquiries don t exist in the system and when you create a house it s done through the inquiry page
problem videos provided and the project is not deployed so cannot test from ui but the issues are fixed and the system is working as expected  
problem very well implemented all edge cases i tried are working readme md  does not detail how the system handles edge cases
problem very inconvenient for me to review without a deployed version  
problem very impressed by writeup one suggestion problem statement is not mentioned thoroughly however solution is very well ellaborated with screenshots and code snippets  
problem very impressed by writeup one suggestion problem statement is not mentioned thoroughly however solution is very well ellaborated with screenshots and code snippets  
problem very good guidance works as intended this project is about enhancing juniper bookmarks the features work as they are supposed to automated rspec tests were added could have described the automated tests in the wiki
problem very good guidance works as intended this project is about enhancing juniper bookmarks the features work as they are supposed to automated rspec tests were added could have described the automated tests in the wiki
problem very good explanation and good work on giving alternatives it would have been great if the team had added db design as well but the work done is sufficient  
problem very good explanation and good work on giving alternatives it would have been great if the team had added db design as well but the work done is sufficient  
problem very few conflicts
problem very few commits in the project with most commits coming just from one user towards the deadline period a lot of commits done after the deadline period
problem very basic design
problem very basic design
problem very basic design
problem variable names and test cases are named appropriately explanation of reasons for the style of code and problem solving approach is lacking
problem variable names and test cases are named appropriately explanation of reasons for the style of code and problem solving approach is lacking
problem variable names and test cases are named appropriately explanation of reasons for the style of code and problem solving approach is lacking
problem variable names and test cases are named appropriately explanation of reasons for the style of code and problem solving approach is lacking
problem variable names and test cases are named appropriately explanation of reasons for the style of code and problem solving approach is lacking
problem variable names and test cases are named appropriately explanation of reasons for the style of code and problem solving approach is lacking
problem validations are not implemented in all the models
problem using google charts is a good idea
problem using a strategy pattern to solve this problem is one of the simplest approach according to me and team has selected the same thing only thing i would suggest the team is to be carefull when separating the classes as it might have some un intended side affect
problem uses uml diagrams and images to explain where the changes will be made
problem user view is easy to understand and navigate there are certain links which don t work  and doesn t load any page  
problem user role once a user is created and goes to edit their profile if they uncheck both roles there is no way for that user to get any role back their should be a check in the user table that both roles cannot be blank also unfortunately there is no mention of how the system handles edge cases in the readme file
problem user model doesn t include any relationship with other models
problem user model doesn t have all has_many relations defined
problem user model could have been subdivided into different roles models such as realtor and househunter  
problem user interface should not show the location users dashboard   find me in app views users dashboard html erb
problem user interface should not show the location users dashboard   find me in app views users dashboard html erb
problem user interface should not show the location users dashboard   find me in app views users dashboard html erb
problem user interface is nice team has tried keeping the ui as per standards and easy to access to user they have also added validation team could give more clear and understandable errors
problem user interface is nice team has tried keeping the ui as per standards and easy to access to user they have also added validation team could give more clear and understandable errors
problem use of  a few variables is hard to understand for e g   x assignment id otherwise most variables and classes are aptly named
problem use of  a few variables is hard to understand for e g   x assignment id otherwise most variables and classes are aptly named
problem use of  a few variables is hard to understand for e g   x assignment id otherwise most variables and classes are aptly named
problem use case diagrams explain the requirements properly but no system design related diagram or mock ups are given
problem use case diagrams explain the requirements properly but no system design related diagram or mock ups are given
problem use case diagram is present but it would have been nice to see a sequence diagram to understand the flow  
problem use case diagram is present but it would have been nice to see a sequence diagram to understand the flow  
problem use case diagram is present but it would have been nice to see a sequence diagram to understand the flow  
problem upon testing the system for edge cases the following results were obtained 1 the real estate company is destroyed and the realtors houses and houses inquiries for the same are removed 2 the realtor can switch to another company they will be prohibited to remove the houses listed in the previous company though 3 the house hunter accounts are deleted without their inquiries 4 the system does not check for regex fr phone number input during signup
problem upon testing the system for edge cases the following results were obtained 1 the real estate company is destroyed and the realtors houses and houses inquiries for the same are removed 2 the realtor can switch to another company they will be prohibited to remove the houses listed in the previous company though 3 the house hunter accounts are deleted without their inquiries 4 the system does not check for regex fr phone number input during signup
problem upon manually testing the author s work it is noticed that the functionalities have not been implemented to the full the team did perform migration of the crud functionality for the questionnaires from questionnairescontroller and removed large patches of if case statements by placing it in the helper function in the apt model this however has reduced their coverage
problem unsure in this regard since they neither have the deployment neither the github link to their repository and also the coverage and the travis ci say otherwise even so in their video they show in proof that everything runs one does wonder though how to test without actually having the links of the repo  
problem unfortunately there was no new commit added the latest commit is 10 days ago
problem unfortunately the test cases are lacking this could be improved before the second submission
problem unfortunately the test cases are lacking this could be improved before the second submission
problem unfortunately the test cases are lacking this could be improved before the second submission
problem unfortunately the team has not provided any link to the write up hence i would not be able to provide reviews for this question
problem unfortunately the team has not provided any link to the write up hence i would not be able to provide reviews for this question
problem unfortunately the team has not provided any link to the write up hence i would not be able to provide reviews for this question
problem unfortunately the team has not provided any link to the write up hence i would not be able to provide reviews for this question
problem unfortunately the build failed in the second round   but in my opinion this was not due to the team s mistake the build failure says the two examples failed are in files assignment_spec rb and assignment_participant_spec rb both files which the team had no connection with i could be wrong though as the build was passing and there tests were running in the first round i am inclined to believe it was because of another team s incorrect code that this team pulled into their branch by mistake
problem unfortunately the build failed in the second round   but in my opinion this was not due to the team s mistake the build failure says the two examples failed are in files assignment_spec rb and assignment_participant_spec rb both files which the team had no connection with i could be wrong though as the build was passing and there tests were running in the first round i am inclined to believe it was because of another team s incorrect code that this team pulled into their branch by mistake
problem unfortunately the build failed in the second round   but in my opinion this was not due to the team s mistake the build failure says the two examples failed are in files assignment_spec rb and assignment_participant_spec rb both files which the team had no connection with i could be wrong though as the build was passing and there tests were running in the first round i am inclined to believe it was because of another team s incorrect code that this team pulled into their branch by mistake
problem unfortunately no tests were added it would have been good if the team added test cases to check their ui changes
problem unfortunately no mention of the word test plan has even taken place in their whole wiki page so it seems that they are yet to implement the testing functionalities in their project although it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository    
problem unfortunately no mention of the word test plan has even taken place in their whole doc so it seems that they are yet to implement the testing functionalities in their project although it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository     moreover as a part of their project one of their problem statements is in fact to write the tests for a specific problem scenario i  have  reason to believe even that has not been done  judging  from the pull  request
problem unfortunately no mention of the word test plan has even taken place in their whole doc so it seems that they are yet to implement the testing functionalities in their project although it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository  
problem unfortunately no mention of the word test plan has even taken place in their whole doc so it seems that they are yet to implement the testing functionalities in their project although it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository  
problem unfortunately most of the test cases failed while testing the realtor does not get deleted from the system after the deletion of his her respective real estate company the link to create new houses redirects to a different link hence i was not able to create new houses and test certain cases the inquiries submitted by the house hunter remain in the database even after the deletion of the house hunter all the inquires of the particular house are shown to every realtor which is not an ideal case these are some of the cases that need attention owing to the work done on remainder of the project these changes would be implemented easily with some effort  
problem unfortunately most of the test cases failed while testing the realtor does not get deleted from the system after the deletion of his her respective real estate company the link to create new houses redirects to a different link hence i was not able to create new houses and test certain cases the inquiries submitted by the house hunter remain in the database even after the deletion of the house hunter all the inquires of the particular house are shown to every realtor which is not an ideal case these are some of the cases that need attention owing to the work done on remainder of the project these changes would be implemented easily with some effort  
problem unfortunately i could not see any code written by the team for testing however the team has provided a description on how some of the edge cases have been handled according to coveralls the overall test has decreased by 0 01 this could be one of the major topics for improvements with regards to this issue
problem unfortunately i could not see any code written by the team for testing however the team has provided a description on how some of the edge cases have been handled according to coveralls the overall test has decreased by 0 01 this could be one of the major topics for improvements with regards to this issue
problem unfortunately i am unable to view this git repository this is most likely due to the fact that the repo is set to private and only available to those currently collaborating i would suggest making the setting adjustment for the repo to be public so reviewers and ta s can grade the work that has been  completed when coding take note of the stylistic norms of ruby regarding method calls parenthesis and syntax best practices additionally maintain a consistent indention scheme for ease of review
problem unfortunately all the edge cases in the given question are failing the system encounters an error while deleting a real estate company after changing the real estate company the realtor can still delete the house that he had created with a previous company even after deleting the user from the dashboard the queries submitted by the users are not deleted there was no potential buyers list available for viewing even after adding houses to the interest list myself these cases could be seen upon and improved
problem unfortunately all the edge cases in the given question are failing the system encounters an error while deleting a real estate company after changing the real estate company the realtor can still delete the house that he had created with a previous company even after deleting the user from the dashboard the queries submitted by the users are not deleted there was no potential buyers list available for viewing even after adding houses to the interest list myself these cases could be seen upon and improved
problem unfortunately there were no visual aids provided even though they went through the plan in a good way but few diagrams would definitely help
problem unfortunately the visual aids are missing
problem unfortunately the visual aids are missing
problem unfortunately the visual aids are missing
problem unfortunately the team has missed out on adding any visual aids to the document i would suggest that where you list all the column names which would be sorted in each view also add a screenshot of how that view looks at the present moment and a low fi sketch of how the view would look after the changes have been implemented
problem unfortunately the team has missed out on adding any visual aids to the document i would suggest that where you list all the column names which would be sorted in each view also add a screenshot of how that view looks at the present moment and a low fi sketch of how the view would look after the changes have been implemented
problem unfortunately the authors have not added any more text to improve the writeup as suggested in the first round of reviews
problem unfortunately the app has not been deployed on a cloud platform and neither is there any description in the readme file i suggest to use heroku as your deployment platform you may want to look into this video here   https www youtube com watch v 5kvtmnznc8w feature youtu be   also if you deploy in heroku it does not support sqlite or mysql in production hence you will need to migrate your db to postgres check out this link for help   https devcenter heroku com articles sqlite3
problem unfortunately the app has not been deployed on a cloud platform and neither is there any description in the readme file i suggest to use heroku as your deployment platform you may want to look into this video here   https www youtube com watch v 5kvtmnznc8w feature youtu be   also if you deploy in heroku it does not support sqlite or mysql in production hence you will need to migrate your db to postgres check out this link for help   https devcenter heroku com articles sqlite3
problem unfortunately no visual aids are provided in the design i would suggest providing the simplified uml diagram that does not  necessarily capture all of the classes that interact with the ones that will be modified by the team but  the ones that the team finds will be  most relevant to the reader
problem unfortunately no visual aids are provided in the design i would suggest providing the simplified uml diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team but the ones that the team finds will be most relevant to the reader
problem unfortunately no visual aids are provided in the design i would suggest providing the simplified uml diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team but the ones that the team finds will be most relevant to the reader
problem unfortunately no visual aids are provided in the design i would suggest providing the simplified uml diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team but the ones that the team finds will be most relevant to the reader
problem unfortunately most of the edge cases fail the houses of the realtors are listed even after deleting the real estate company also the realtors list display the realtors associated with the deleted real estate company the realtor is able to access the houses owned by old real estate companies after changing their own real estate company after deleting a user the inquiries continue to be listed
problem under tested methods they have explained everything really nicely the video is just to long 22 minutes you have have made it short
problem under tested methods they have explained everything really nicely the video is just to long 22 minutes you have have made it short
problem unable to view the git repository git is truly your friend during development make a habit of really committing with useful commit messages and at appropriate feature development times my team and i found that having different commits for each feature implementation gave many options for points in time that we could revert back to in the invent that something went awry
problem unable to view an enquiry for a house
problem unable to view an enquiry for a house
problem unable to view a newly created house
problem unable to test
problem unable to test
problem unable to switch real estate companies leads to an error page
problem unable to login to the expertiza url
problem unable to list houses in the application since the basic functionalities are not working the edge cases could not be tested
problem unable to list houses in the application since the basic functionalities are not working the edge cases could not be tested
problem unable to list houses in the application since the basic functionalities are not working the edge cases could not be tested
problem unable to find any difference after the first review although the team had to explain about some issues
problem unable to delete users from admin why can the admin edit password of the users  
problem unable to delete users from admin why can the admin edit password of the users  
problem unable to delete users from admin why can the admin edit password of the users  
problem unable to create houses so couldn t really check any functionality
problem unable to create houses so couldn t really check any functionality
problem unable to create houses so couldn t really check any functionality
problem unable to create company from admin
problem unable to create company from admin
problem unable to create company from admin
problem unable to create a new house
problem unable to create a new house
problem unable to create a new house
problem unable to change company as a realtor readme file isn t discussing any of the possible edge cases
problem unable to change company as a realtor readme file isn t discussing any of the possible edge cases
problem uml mockup and tables are absent  
problem uml mockup and tables are absent  
problem uml mockup and tables are absent  
problem uml mockup and tables are absent  
problem uml is missing but er diagram is given you can add a uml diagram it explains things better  
problem uml is missing but er diagram is given you can add a uml diagram it explains things better  
problem uml is missing but er diagram is given you can add a uml diagram it explains things better  
problem uml diagrams are not provided please add it
problem uml diagrams are not provided please add it
problem uml diagrams are not provided please add it
problem uml diagrams are not mentioned but since these are ui changes the changes are sufficiently explained with the help of representation of ui in terms of images
problem uml diagrams are not included
problem uml diagrams are not included
problem uml diagrams are not included
problem uml diagrams and the solution proposed by the authors to solve the issues is missing
problem uml diagrams and the solution proposed by the authors to solve the issues is missing
problem uml diagrams and the solution proposed by the authors to solve the issues is missing
problem uml diagrams and the solution proposed by the authors to solve the issues is missing
problem uml diagram is missing though the modified ui is explained
problem uml diagram is missing though the modified ui is explained
problem uml and class diagram are needed   if the screenshot of the same functionality was given then it would have been  better
problem uml and class diagram are needed   if the screenshot of the same functionality was given then it would have been  better
problem ui mockups and uml diagrams are descriptive however more information should be conveyed to how to solve the problem
problem ui looks nice but i found the it to be a bit confusing the relation between user house hunter and realtor is not apparent it would helpful if it could be explained in detail in the readme file
problem ui looks nice but i found the it to be a bit confusing the relation between user house hunter and realtor is not apparent it would helpful if it could be explained in detail in the readme file
problem ui is simple to follow enhancements mentioned below can simplify various tasks 1 preferred contact method can be drop down with text mail phone options 2 user role can be drop down with buyer and realtor
problem ui is simple to follow enhancements mentioned below can simplify various tasks 1 preferred contact method can be drop down with text mail phone options 2 user role can be drop down with buyer and realtor
problem ui is nicely done   there are a few things that can be improved   1 clear all list all houses field once a search parameter has been given 2 do not show receiver object id in inquiries maybe something more useful
problem ui is nicely done   there are a few things that can be improved   1 clear all list all houses field once a search parameter has been given 2 do not show receiver object id in inquiries maybe something more useful
problem ui is fine but cannot access readme file
problem ui is fine but cannot access readme file
problem ui is easy to use a suggestion would be to display tables of data better with better  spacing the list houses page for example has the columns cramped up together
problem ui is easy to understand but problematic to use   admin must use user ids to create hunters or realtors or inquiries and the display is via user  ids too signup page redirect to show all signed up users from there any one who is not logged in can delete users same user can be added as house hunter any number of times with separate entries no validations are added i can choose role no 5 for signup and no error messages have been provided passwords are in plain text in some cases wrong notices are displayed create user with wrong info gives user account was successfully created aaa which is incorrect as user was not actually created   back to your page links do not work
problem ui is easy to understand but problematic to use   admin must use user ids to create hunters or realtors or inquiries and the display is via user  ids too signup page redirect to show all signed up users from there any one who is not logged in can delete users same user can be added as house hunter any number of times with separate entries no validations are added i can choose role no 5 for signup and no error messages have been provided passwords are in plain text in some cases wrong notices are displayed create user with wrong info gives user account was successfully created aaa which is incorrect as user was not actually created   back to your page links do not work
problem ui has modified which is good
problem ui for new house needs improvement forms need to be more precise rather than adding many radio buttons as in the case for new house ui for inquiry reply needs to be more clear  
problem ui for new house needs improvement forms need to be more precise rather than adding many radio buttons as in the case for new house ui for inquiry reply needs to be more clear  
problem ui for new house needs improvement forms need to be more precise rather than adding many radio buttons as in the case for new house ui for inquiry reply needs to be more clear  
problem ui doesn t have proper navigation in many pages a suggestion would be to display the data in a more spaced out way using html tables or such methods as it looks very cramped and confusing
problem ui doesn t have proper navigation in many pages a suggestion would be to display the data in a more spaced out way using html tables or such methods as it looks very cramped and confusing
problem ui displays session info file paths and tags could be improved with little efforts
problem ui displays session info file paths and tags could be improved with little efforts
problem ui displays session info file paths and tags could be improved with little efforts
problem two  names for the realestate company references creates confusion   company_id   re_company_id  
problem two issues resolved seem like working pretty well and can be deployed in production third unresolved issue is a good start for future team to pick up
problem try to include use case diagram to indicate your flow and a class diagram of how you ll be implementing the solution
problem try to give a class diagram inorder to explain  your implementation
problem tried to run the rspec test by copying the _spec rb file and enusred that the factory method is inserted i got an error in 2 examples   participant email sends an email to the participant        failure error assignment assignment find_by id self assignment_id participant score get participant score within a round        failure error scores questionnaire_symbol scores answer compute_scores scores questionnaire_symbol assessments questions questionnaire_symbol        
problem tried to run the rspec test by copying the _spec rb file and enusred that the factory method is inserted i got an error in 2 examples   participant email sends an email to the participant        failure error assignment assignment find_by id self assignment_id participant score get participant score within a round        failure error scores questionnaire_symbol scores answer compute_scores scores questionnaire_symbol assessments questions questionnaire_symbol        
problem travis tests have failed no conflicts in the pull request with the master branch
problem travis tests have failed no conflicts in the pull request with the master branch
problem travis test has failed i can see it in pull request page conflict has not been resolved  
problem travis test has failed i can see it in pull request page conflict has not been resolved  
problem travis test did not pass errors were not fixed continuous integration failure  
problem travis test build have failed can write version compatible code
problem travis says some tests have failed no conflicts though
problem travis says some tests have failed no conflicts though
problem travis passed code climate has 82 issues
problem travis failed
problem travis cl build failed
problem travis ci tests have failed but there are no conflicts and the build is ready to be merged with master branch
problem travis ci test has been failed on github
problem travis ci has error ed the tests fail however there are no conflicts with the base branch or master branch
problem travis ci failed
problem travis ci didn t pass but team have fixed most of code climate issues
problem travis ci didn t pass but team have fixed most of code climate issues
problem travis ci didn t pass but team have fixed most of code climate issues
problem travis ci did not pass code climate also has 121  issues to fix
problem travis ci did not pass code climate also has 121  issues to fix
problem travis ci did not pass code climate also has 121  issues to fix
problem travis ci build passed but code climate identified few issues
problem travis ci build passed but code climate identified few issues
problem travis ci build is not passed though this was a bit common even for the second review the codeclimate issues are still showing
problem travis ci build is failing other things are fine
problem travis ci build is failing other things are fine
problem travis ci build is failing lot of warnings and issues that have not been fixed many of them are trivial and easy to fix  
problem travis ci build is failing lot of warnings and issues that have not been fixed many of them are trivial and easy to fix  
problem travis ci build is failing lot of warnings and issues that have not been fixed many of them are trivial and easy to fix  
problem travis ci build is failing
problem travis ci build indicates that the tests have failed the code climate issues in the danger bot also did not pass the team must look towards cleaning up the code  
problem travis build failing at  spec models menu_spec rb 120
problem total of only 10 commits has been made on 3 days
problem total of 10 commits are visible on got but do not show a linear increment in the work done
problem too long if statements are  written
problem to the most extent of it since the profile of admin is problematic and not allowing us to login at all that area is unavailable for testing  
problem throws error when deleting house hunter who has an inquiry
problem though this project doesn t require any uml diagram as such however a flowchart showing the work flow would have made the design document better and efficient
problem though this project doesn t require any uml diagram as such however a flowchart showing the work flow would have made the design document better and efficient
problem though this project doesn t require any uml diagram as such however a flowchart showing the work flow would have made the design document better and efficient
problem though they have detailed their approach on dry they haven t documented the core issue beyond non utf 8 not accepted its hard to follow their scope as only review or entire expertiza use as the table alteration is done as a whole
problem though they have detailed their approach on dry they haven t documented the core issue beyond non utf 8 not accepted its hard to follow their scope as only review or entire expertiza use as the table alteration is done as a whole
problem though the ui mockup explains the functionalities it could have been more legible
problem though the ui mockup explains the functionalities it could have been more legible
problem though the team have explained their work pretty well the team should think about adding a few diagrams to better help in the understanding of the project currently the team have not used any diagrams
problem though the pull request has been passed but the writeup does not explain the details of the implementation like what sorting algorithm the team has implemented using jquery etc the design part of the writeup is very hollow and needs further refinement
problem though the pull request has been passed but the writeup does not explain the details of the implementation like what sorting algorithm the team has implemented using jquery etc the design part of the writeup is very hollow and needs further refinement
problem though the commits started late in the project s life there were commits frequently and also after round 1 the commit messages could have been a little more descriptive to fully comprehend the commit changes  
problem though the authors have included a thorough testing plan inside the commits i couldn t find any commits for adding testing files they could have added basic ui testing using capybara and cucumber
problem though the authors have included a thorough testing plan inside the commits i couldn t find any commits for adding testing files they could have added basic ui testing using capybara and cucumber
problem though the authors have included a thorough testing plan inside the commits i couldn t find any commits for adding testing files they could have added basic ui testing using capybara and cucumber
problem though the author has not used uml diagram but the author has used other forms of picrorial representation to convey what he meant to say but the team should definitely consider adding one or two i the future
problem though not much of design  has been giving but as per the functional diagram given it  appears simple implementation 
problem though not much of design  has been giving but as per the functional diagram given it  appears simple implementation 
problem though not much hand writed but still great code with good project structure
problem though an approach has been mentioned of the proposed changes but they do not have a test plan
problem though an approach has been mentioned of the proposed changes but they do not have a test plan
problem this ui is pretty good it s fairly intuitive to follow the only thing i d recommend is to have a link to the signup page on your welcome screen
problem this ui is pretty good it s fairly intuitive to follow the only thing i d recommend is to have a link to the signup page on your welcome screen
problem this team used migrations effectively and generally had dry code but it still felt very ad hoc i couldn t find any patterns that drove the changes they made
problem this team pushed code in a few very bursty  times but they did push commits after the initial review
problem this team has done a good job of following rails conventions there are db migrations common layouts of the application structure and proper use of activerecord helpers
problem this team claimed to have fully tested the realestatecompany  model and controller but there were no  tests in the realestatemodel  tests i didn t check every file after since i don t like being lied to
problem this team claimed to have fully tested the realestatecompany  model and controller but there were no  tests in the realestatemodel  tests i didn t check every file after since i don t like being lied to
problem this system is not properly linked together real estate companies are not required to list houses realtors can see and respond to all inquiries from everyone creation of inquiries is not linked to a specific house
problem this system has almost all needed functionality but it s by far the best i ve seen replying to an inquiry does not seem to work properly
problem this system has almost all needed functionality but it s by far the best i ve seen replying to an inquiry does not seem to work properly
problem this system handles all relationships  properly by using has_many belongs_to constructs correctly and addition of relevant foreign key attributes in the appropriate tables
problem this system doesn t have a ui i can view as it seems to be a browser add on
problem this system does not seem to work correctly when i log in as a realtor and go to view companies i get a something went wrong error from heroku telling me to check the logs validation in adding houses also doesn t seem to work correctly
problem this system does not seem to work correctly when i log in as a realtor and go to view companies i get a something went wrong error from heroku telling me to check the logs validation in adding houses also doesn t seem to work correctly
problem this section of the wiki is currently missing when you write this section be sure to state why you tested certain cases in a particular fashion accompanied with code examples so that the reader can clearly see what was done
problem this section is still blank  
problem this section is still blank  
problem this project is on implementing a single rejoinder per team for reviews instead of per participant reviews and also makes the feedback link for reviews more accessible the writeup explained the background about expertiza and the motivation for the project it then moved on to list the tasks that were implemented and files that were modified in the project it showed the current and new implementation clearly the writeup however could have quoted the tests done using rspec and the ui instead of plainly mentioning the that the tests were modified to suit the current implementation
problem this project doesn t involve the ui it focusses on audio processing by fixing the missing audio nodes in servo s webaudio standard precisely it generates the sine square sawtooth and triangle waveforms the code that was modified and included from scratch works as intended  
problem this project does not deal with ui
problem this project does not deal with ui
problem this logic to calculate composite score composite score max score self review score peer review score is basically taking the min scores not sure what you are trying to achieve here it is not a good measure to calculate composite score
problem this logic to calculate composite score composite score max score self review score peer review score is basically taking the min scores not sure what you are trying to achieve here it is not a good measure to calculate composite score
problem this is where the project lacks the mos the write up isn t very informative specially for an outsider it states the points very shortly without going into much depth also the writeup bombards the user with lots of un relevant information and pieces of code which make it feel very long although lacking significant content the writeup could have been more detailed and could have omitted the unnecessary parts like dumping of code and not explaining what it does  
problem this is where the project lacks the mos the write up isn t very informative specially for an outsider it states the points very shortly without going into much depth also the writeup bombards the user with lots of un relevant information and pieces of code which make it feel very long although lacking significant content the writeup could have been more detailed and could have omitted the unnecessary parts like dumping of code and not explaining what it does  
problem this is the only place i found the authors could improve there is no mention of the actual files that need to be modified they have detailed out the change that they propose but no mention of actual files and the code change it would be further increase the clarity of the solution if you could include that too
problem this is semi passable the wiki is hosted on wikipedia so they clearly didn t read the directions i mean i get it though i wrote tests and was also unclear about what exactly the wiki should contain
problem this is semi passable the wiki is hosted on wikipedia so they clearly didn t read the directions i mean i get it though i wrote tests and was also unclear about what exactly the wiki should contain
problem this is one area where the authors could have improved even though there is a good amount of textual description and images the authors could have added a snapshot of the code changes that they wanted to propose this would make it clear as to the exact changes that you propose and further help answer this question
problem this is one area where the authors could have improved even though there is a good amount of textual description and images the authors could have added a snapshot of the code changes that they wanted to propose this would make it clear as to the exact changes that you propose and further help answer this question
problem this is not a fair ask as far as i can tell there is no document that says we should create a test plan
problem this is a very innovative idea well explained design document files needed to be changes are also mentioned
problem this is a mozilla project and i am not sure what are the testing requirements and depth to be covered as it is not mentioned in the document but the steps mentioned do suggest that basic testing id done
problem this is a mozilla project and i am not sure what are the testing requirements and depth to be covered as it is not mentioned in the document but the steps mentioned do suggest that basic testing id done
problem this doesn t apply here much as its just writing testcases however some of the tests documented in menu like mean with role and without role are confusing i had to look through the entire doc to figure out why is that written that way it could be better to have comments as to why a particular test is written what does it test and why is the expected output the way it is
problem this design is good there are no visual aids maybe they can consider use it to make it more detailed
problem this design is good there are no visual aids maybe they can consider use it to make it more detailed
problem this couldn t be reviewed as the design doc is incomplete
problem this couldn t be reviewed as the design doc is incomplete
problem this code will need to be refactored however we will not need to build it from scratch only some functionality has to be divided into chunks and moved into helper functions the functionality works well
problem this code will need to be refactored however we will not need to build it from scratch only some functionality has to be divided into chunks and moved into helper functions the functionality works well
problem this code will need to be refactored however we will not need to build it from scratch only some functionality has to be divided into chunks and moved into helper functions the functionality works well
problem this code is ready to be deployed if they ensure that variables are renamed to resemble their actual functionality   no big issues as such resolves the problems well
problem this application has the layout expected of a rails application however not enough information was included in the readme file about installation
problem this application has the layout expected of a rails application however not enough information was included in the readme file about installation
problem this application has the layout expected of a rails application however not enough information was included in the readme file about installation
problem they used ui mockups to explain their implementation though some uml diagrams like use case would be preferred over this
problem they used ui mockups to explain their implementation though some uml diagrams like use case would be preferred over this
problem they used the uml diagrams it really help me a lot when reading the wiki page maybe they can also make diagrams about the changes they are going to make
problem they use er diagram to describe the changes but i think it is not very intuitive for me to understand their task
problem they use er diagram to describe the changes but i think it is not very intuitive for me to understand their task
problem they use er diagram to describe the changes but i think it is not very intuitive for me to understand their task
problem they use er diagram to describe the changes but i think it is not very intuitive for me to understand their task
problem they use correct files to do specific behaviors and make advantage of the features ruby and rails provides however i think the structure of the files is not clear enough
problem they use correct files to do specific behaviors and make advantage of the features ruby and rails provides however i think the structure of the files is not clear enough
problem they tested at least one controller but none of the models
problem they tested at least one controller but none of the models
problem they team has successfully followed most of the conventions of good programming principles of ruby the schema was very detailed and cohesive and the variables were named appropriately and effectively the readme provided was helpful but the project lacked in program documentation comments which made me to go through each line of code to make sense out of the code apart from that the practices seemed good
problem they still have the problem i found in the first round
problem they still have the problem i found in the first round
problem they started adding more commits after the first round of reviews
problem they should have included screenshots associated with the issue it would help one understand the solution better
problem they should have included screenshots associated with the issue it would help one understand the solution better
problem they should have added the code as a part of the writeup instead of providing links to github commits
problem they only presents a flow chart it will be better if there is a uml diagram
problem they only presents a flow chart it will be better if there is a uml diagram
problem they only presents a flow chart it will be better if there is a uml diagram
problem they only presents a flow chart it will be better if there is a uml diagram
problem they only had 30 commits which i think is a little low considering there were two phases of submission in my first phase my team had at least 30 commits
problem they missed some relation such as house and inquires 1 n relation
problem they missed some relation such as house and inquires 1 n relation
problem they missed some relation such as house and inquires 1 n relation
problem they might like to elaborate more on how they plan to use the hash of students to retrieve the specific information of the assignments for eg what models will you be using to query the db
problem they may misunderstand the meaning of test plan they just put the code on test plan so i cannot judge weather they are success or fail
problem they may misunderstand the meaning of test plan they just put the code on test plan so i cannot judge weather they are success or fail
problem they made commits but some commits combined a lot of features together at once
problem they list the files to be changed for the final stage of the project but the description of what will be changed is still lacking i d love to see screenshots of added code or an explanation of what is and is not needed
problem they include the interface required they should include more details about their design like how to implement and what need to be changed
problem they include the interface required   they should  include more details about how the functionality should be implemented
problem they haven t made any change since round 1 review haven t changed the naming as well eg  topic_id1 doesn t seem right to me but other than 1 or 2 names everything else looks clean also you haven t added comments to you code you should add comments when working in a open source project
problem they haven t added any test plan but the test method in documentation shows that all test cases  has been checked properly and coverage is also 100
problem they haven t added any test plan but the test method in documentation shows that all test cases  has been checked properly and coverage is also 100
problem they have very well stated of about the purpose of their project they have properly mentioned about the flow of their project which includes the flow chart for their project and also have specified of what kind of graphs they would prefer to show the visualization to the instructor they have mentioned about how they will proceed in test case but haven t specified which files needs to be test inclusion of that would make the doc more complete
problem they have very well stated of about the purpose of their project they have properly mentioned about the flow of their project which includes the flow chart for their project and also have specified of what kind of graphs they would prefer to show the visualization to the instructor they have mentioned about how they will proceed in test case but haven t specified which files needs to be test inclusion of that would make the doc more complete
problem they have very well stated of about the purpose of their project they have properly mentioned about the flow of their project which includes the flow chart for their project and also have specified of what kind of graphs they would prefer to show the visualization to the instructor they have mentioned about how they will proceed in test case but haven t specified which files needs to be test inclusion of that would make the doc more complete
problem they have used the design patterns well and made a good choice in explaining the class hierarchy with the class diagram however i m not quite sure whether it s right to call the diagram as a uml diagram
problem they have tested initial testing but functional testing of functionalities is not done once we log in we do not understand which user is it realtor house hunter  
problem they have tested initial testing but functional testing of functionalities is not done once we log in we do not understand which user is it realtor house hunter  
problem they have test plan but i don t think they include test in it they just put some examples about how to run their code    
problem they have test plan but i don t think they include test in it they just put some examples about how to run their code    
problem they have test plan but i don t think they include test in it they just put some examples about how to run their code    
problem they have test plan but i don t think they include test in it they just put some examples about how to run their code    
problem they have test plan section but too few test cases
problem they have test plan section but too few test cases
problem they have test plan section but too few test cases
problem they have test plan section but too few test cases
problem they have test plan part but not including specific plans
problem they have provided code snippets explaining what they did no design pattern used or specified
problem they have one scenario maybe a few more could help better test their work
problem they have not yet reached the desired goal of 90 coverage
problem they have not provided a descriptive test plan however they have added rspec test cases for their code changes
problem they have not created a wiki page but uploaded a doc file which explains the work they have done adequately
problem they have not created a wiki page but uploaded a doc file which explains the work they have done adequately
problem they have mentioned the method to calculate the composite reviews but where this method is planned to be added in expertiza  is unclear this needs to be mentioned
problem they have mentioned the method to calculate the composite reviews but where this method is planned to be added in expertiza  is unclear this needs to be mentioned
problem they have mentioned  that they will be using rspec framework but have not given what tests they will be implementing and hence can not comment if tests will be shallow or not  
problem they have mentioned  that they will be using rspec framework but have not given what tests they will be implementing and hence can not comment if tests will be shallow or not  
problem they have mentioned  that they will be using rspec framework but have not given what tests they will be implementing and hence can not comment if tests will be shallow or not  
problem they have mentioned that they use factory but it hasn t been mentioned clearly how they use factories it would be great if they can incorporate this in the wiki
problem they have mentioned that they use factory but it hasn t been mentioned clearly how they use factories it would be great if they can incorporate this in the wiki
problem they have mentioned that its ui  change and has been discussed that testing isn t required in there documentation but i think you should still have mentioned something there steps to follow to check how your changes work  
problem they have listed various possibilities to get the task done the use case and uml diagrams also help here suggestion please add the places where you want to make have made the changes  
problem they have listed various possibilities to get the task done the use case and uml diagrams also help here suggestion please add the places where you want to make have made the changes  
problem they have listed various possibilities to get the task done the use case and uml diagrams also help here suggestion please add the places where you want to make have made the changes  
problem they have listed various possibilities to get the task done the use case and uml diagrams also help here suggestion please add the places where you want to make have made the changes  
problem they have kept up to the standards of the goof coding practice like they have given reasonable  variables names and functions name which makes it easy to understand what is the function supposed to do however they haven t added the comments
problem they have just tested signup   controller looks good but model testing isn t complete
problem they have just tested signup   controller looks good but model testing isn t complete
problem they have included the initial design it s suggested that they include more details about the design
problem they have explained their implementation through ui mockups well they are not quite understandable but for the first submission this could work
problem they have explained their implementation through ui mockups well they are not quite understandable but for the first submission this could work
problem they have depicted their working strategy through an er diagram however i would suggest them to include more uml diagrams to enhance understandability also the er diagram is somewhat incomplete
problem they have depicted their working strategy through an er diagram however i would suggest them to include more uml diagrams to enhance understandability also the er diagram is somewhat incomplete
problem they have depicted their working strategy through an er diagram however i would suggest them to include more uml diagrams to enhance understandability also the er diagram is somewhat incomplete
problem they have added test cases but very limited the code coverage was just 14 percent
problem they have added test cases and the coverage did increase but only by a little amount they should have considered adding more test cases since the task of changing the color of the links was such a minuscule one
problem they have added new test cases and hence code is not dry  
problem they have added new test cases and hence code is not dry  
problem they have added a test for the feature implemented but coverage has decreased by a little
problem they have a very detailed test plan section where they explain every method and what  they did they don t talk about pre condition or edge cases or invalid input or things like that 
problem they have a very detailed test plan section where they explain every method and what  they did they don t talk about pre condition or edge cases or invalid input or things like that 
problem they have a uml diagram which pretty much does it job i am not in favor of the ui mockups they have put they could have used any software for the same which would have made it legible
problem they have a uml diagram which pretty much does it job i am not in favor of the ui mockups they have put they could have used any software for the same which would have made it legible
problem they have a paragraph saying what they are going to do but it could be broken up into parts with images for better understanding
problem they had 2 diagrams one for ui and one for the implementation the implementation can me less words and more simple
problem they got pretty much every basic functions in the app but i am not sure where should i login as an admin and there are some small bugs there will display two logout button after you login as a hunter back does not work well  
problem they got pretty much every basic functions in the app but i am not sure where should i login as an admin and there are some small bugs there will display two logout button after you login as a hunter back does not work well  
problem they fix part of the problems showed in round 1 all kinds of user still cannot edit his own profile even though admin can perform crud of hunters and realtors and the realtor can not replace and create a new company the hunter can not make inquires and realtor are not able to reply them besides the search filter for the houses are not working and when a realtor views the house s potential buyers he she will see all the hunters registered in the system
problem they fix part of the problems showed in round 1 all kinds of user still cannot edit his own profile even though admin can perform crud of hunters and realtors and the realtor can not replace and create a new company the hunter can not make inquires and realtor are not able to reply them besides the search filter for the houses are not working and when a realtor views the house s potential buyers he she will see all the hunters registered in the system
problem they explained it well but there were no  larger design patterns they seemed to be following i did think that they used ajax in the appropriate way but it could be improved in the future
problem they explained it well but there were no  larger design patterns they seemed to be following i did think that they used ajax in the appropriate way but it could be improved in the future
problem they explained from their requirements and in their flow that they only need to plan to edit the view so there is no need for a uml
problem they don t have test plan section but they added some screenshots of the test result i can see they have pretty good path coverage but i can not know if they test edge cases or invalid input values without seeing their test plan
problem they don t have a wiki page link so i cann t see their oss writeup
problem they don t have a wiki page link so i cann t see their oss writeup
problem they don t have a wiki page link so i cann t see their oss writeup
problem they don t have a test plan
problem they don not have any test plan so i can not judge it
problem they don not have any test plan and some functionality of code is not adequate for the test
problem they don not have any test plan and some functionality of code is not adequate for the test
problem they don not have any test plan and some functionality of code is not adequate for the test
problem they don not have a test plan
problem they don not have a test plan
problem they don not have a test plan
problem they discussed just 1 test case and did implement it some more corner cases can be thought of
problem they discussed just 1 test case and did implement it some more corner cases can be thought of
problem they didn t provide a link for me to test their work
problem they didn t add the code change details or the files in which they might work that s still fine as those details can be filled once the implementation is done
problem they didn t add the code change details or the files in which they might work that s still fine as those details can be filled once the implementation is done
problem they didn t add the code change details or the files in which they might work that s still fine as those details can be filled once the implementation is done
problem they did not write test code
problem they did not write or add proper visual aids to help readers to understand
problem they did not write or add proper visual aids to help readers to understand
problem they did not write or add proper visual aids to help readers to understand
problem they did not very well dealing with the edge cases 1 nothing happens 2 nothing happens 3 nothing happens
problem they did not very well dealing with the edge cases 1 nothing happens 2 nothing happens 3 nothing happens
problem they did not provide a link for me to test but their video shows that their code works well
problem they did not post their test cases coverage so i don t know whether their coverage increase or not
problem they did not offer any link to code of their project
problem they did not have a test plan
problem they did not have a test plan
problem they did not have a test plan
problem they did not deploy their code on a server so i cannot test it manually however they upload a video about their work and all the function seems work well
problem they did include a test plan it would be better if they also test the instructor side
problem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
problem they did add the test cases but the coverage only increased by 3
problem they did add one test case but i think it is not enough
problem they did a good job  and they can make it better by fixing some issues  according to the pull request page the travis ci build failed and there are 5 code climate issues to fix
problem they did a good job  and they can make it better by fixing some issues  according to the pull request page the travis ci build failed and there are 5 code climate issues to fix
problem they could have also documented their design approach if any and also use  of mocks and stubs their test intentions could have been more detailed
problem they are trying to fix code climate issues but there are still many failed and no code change to improve readability
problem they are trying to fix code climate issues but there are still many failed and no code change to improve readability
problem they are done with one of the test plan scenarios second one is yet to be done
problem they are done with one of the test plan scenarios second one is yet to be done
problem they added a few changes could ve listed more on readme
problem they added a few changes could ve listed more on readme
problem they add a lot of tests but they did not mention which test they plan to do in the test plan section
problem these fixes appear to be acceptable code climate could be better and debug code could be removed but if the changes in the document are in the source than i have no complaints
problem these fixes appear to be acceptable code climate could be better and debug code could be removed but if the changes in the document are in the source than i have no complaints
problem these fixes appear to be acceptable code climate could be better and debug code could be removed but if the changes in the document are in the source than i have no complaints
problem these explanations feel kinda minimalist
problem these explanations feel kinda minimalist
problem these changes seem to be appropriate  for the objectives they have only a small set of files are being changed and the functionality is isolated well my only feedback here is that there is likely a place to create helpers or utilities for time tracking
problem these changes seem to be appropriate  for the objectives they have only a small set of files are being changed and the functionality is isolated well my only feedback here is that there is likely a place to create helpers or utilities for time tracking
problem these are my views on their writeup 1   certain sections are too bold i find that to be distracting 2   i like the way that they highlighted the lines of code that they have edited modified it made it easier to understand their work 3 it was also good that they included references section at the end it was something that i haven t seen in the other projects i have reviewed so far
problem there s still some minor style issues in the code regarding unnecessary parenthesis
problem there s only one diagram from the perspective of the user in terms of how the functionality should be like it does clearly describe the changes to be made to the system it should be better if there s another diagram which explains the work flow in terms of which files we need to do at each step and what we need to do one step after another to implement the project  
problem there s not really a rationale for why these particular tests are sufficient
problem there s not really a rationale for why these particular tests are sufficient
problem there s no way to actually test this but from the code i don t believe that any of the edge cases would do anything
problem there s no visual aids   i think other than a screenshot of a finalized result possible a workflow diagram will also be useful the work design
problem there s no upload for the local folder it seems that no new pull requests has been committed during the 2nd round so i would guess no new code being committed for the 2nd round
problem there s no diagrams or any other visual aids available i would suggest adding at least some workflow diagram
problem there s no diagrams or any other visual aids available i would suggest adding at least some workflow diagram
problem there s no diagrams or any other visual aids available i would suggest adding at least some workflow diagram
problem there s basically no documentation outside the source code itself
problem there s basically no documentation outside the source code itself
problem there s a testing plan although the testing plan seems to cover the fuctionalities it is not clearly stated the tester should log in as what role how to select a teams assignment and review it how to log out and check the instructor s email which instructor email should the tester check these questions should have been answered in the test plan
problem there s a testing plan although the testing plan seems to cover the fuctionalities it is not clearly stated the tester should log in as what role how to select a teams assignment and review it how to log out and check the instructor s email which instructor email should the tester check these questions should have been answered in the test plan
problem there s a testing plan although the testing plan seems to cover the fuctionalities it is not clearly stated the tester should log in as what role how to select a teams assignment and review it how to log out and check the instructor s email which instructor email should the tester check these questions should have been answered in the test plan
problem there s a testing plan although the testing plan seems to cover the fuctionalities it is not clearly stated the tester should log in as what role how to select a teams assignment and review it how to log out and check the instructor s email which instructor email should the tester check these questions should have been answered in the test plan
problem there s a test  plan the test plan is deep and indeed tests the functionality it should be better if the test plan also includes another step between 4 and 5 in terms of how to make the step student can or cannot do the second review without the first one
problem there s a flow chart about how the end result look like but the flow chart only tells a user story there s no detailed implementation plan in this flow chart 3     some diagrams are too high level design and do not provide enough details applies here
problem there were some issues which i reported regarding comments and notice messages displayed to user which needs to be improved but they haven t been incorporated it is not a blocker but definitely an important change to improve user experience and better code readability for example in submitted_content controller there is a comment which says sending email to users however it is just a method call which redirects it to delayed_mailer rb so this should be properly mentioned as it will be helpful for someone refactoring or understanding the code later
problem there were some build issues raised by travis ci which have not been handled yet however there are no merge conflicts with the master branch
problem there were not any bad naming in round 1 as well comments could have been added for new additions which is still missing there has been no dry issues
problem there were not any bad naming in round 1 as well comments could have been added for new additions which is still missing there has been no dry issues
problem there were no testcases and since they provided a screenshot of the desired work i suppose it fulfills the requirement
problem there were no testcases and since they provided a screenshot of the desired work i suppose it fulfills the requirement
problem there were no test files added in the pull request
problem there were no test cases in the pull request
problem there were no test cases in the pull request
problem there were no test cases in the pull request
problem there were no such solutions listed on the basis of which i could suggest some better solutions a couple of test cases or issue resolutions would have been handful for further suggestions
problem there were no such solutions listed on the basis of which i could suggest some better solutions a couple of test cases or issue resolutions would have been handful for further suggestions
problem there were no such solutions listed on the basis of which i could suggest some better solutions a couple of test cases or issue resolutions would have been handful for further suggestions
problem there were no such solutions listed on the basis of which i could suggest some better solutions a couple of test cases or issue resolutions would have been handful for further suggestions
problem there were no new commits in the second round the team did not work on the project during the second round of the submission
problem there were no new commits in the 2nd round
problem there were no flow or uml diagrams
problem there were no flow or uml diagrams
problem there were no flow or uml diagrams
problem there were mock ups of the final result of the project however there were no uml diagrams i think the uml diagrams are not necessary for this project since the flow of how the instructor will change the language is fairly simple and one can understand it by just reading the document maybe they could have done a mock up of how some of the other views would have looked like once the language has changed especially the pages with flash messages if any currently they have just shown the proposed changes on the page where the instructor will change the language
problem there were mock ups of how the analyze button would be displayed along side each rubric however there is no mock up for how the response would be displayed suggestions i would like to see where and how would that response be displayed because from the flow diagram the response seems to be quite big i would like to also know if the team is planing to display all the components of the response from the api or just a few
problem there were mock ups of how the analyze button would be displayed along side each rubric however there is no mock up for how the response would be displayed suggestions i would like to see where and how would that response be displayed because from the flow diagram the response seems to be quite big i would like to also know if the team is planing to display all the components of the response from the api or just a few
problem there were mock ups of how the analyze button would be displayed along side each rubric however there is no mock up for how the response would be displayed suggestions i would like to see where and how would that response be displayed because from the flow diagram the response seems to be quite big i would like to also know if the team is planing to display all the components of the response from the api or just a few
problem there were many missing pieces of functionality i note them below i was unable to create a house as an admin   i get an error when attempting to search for houses   as an admin i was unable to update or create a realtor though i could delete them as an admin i shouldn t be able to set the password of a realtor or house hunter that is a security vulnerability   i was unable to create a house hunter as an admin when signing up as a realtor i shouldn t be given the list of companies to join before signing up this is a security vulnerability as a realtor i was unable to create a new company   as a realtor i was unable to list a new house
problem there were many missing pieces of functionality i note them below i was unable to create a house as an admin   i get an error when attempting to search for houses   as an admin i was unable to update or create a realtor though i could delete them as an admin i shouldn t be able to set the password of a realtor or house hunter that is a security vulnerability   i was unable to create a house hunter as an admin when signing up as a realtor i shouldn t be given the list of companies to join before signing up this is a security vulnerability as a realtor i was unable to create a new company   as a realtor i was unable to list a new house
problem there were many missing pieces of functionality i note them below i was unable to create a house as an admin   i get an error when attempting to search for houses   as an admin i was unable to update or create a realtor though i could delete them as an admin i shouldn t be able to set the password of a realtor or house hunter that is a security vulnerability   i was unable to create a house hunter as an admin when signing up as a realtor i shouldn t be given the list of companies to join before signing up this is a security vulnerability as a realtor i was unable to create a new company   as a realtor i was unable to list a new house
problem there were many lingering code climate issues and the danger bot and travis didn t pass either a little cleaning could be done
problem there were many lingering code climate issues and the danger bot and travis didn t pass either a little cleaning could be done
problem there were few hand made diagrams posted however i feel used of some other high level uml diagrams and screenshots would have been better
problem there were few hand made diagrams posted however i feel used of some other high level uml diagrams and screenshots would have been better
problem there were 4 commits on the day it was due presumably to get the project up and running for submission and 1 today to upload the development database
problem there were 4 commits on the day it was due presumably to get the project up and running for submission and 1 today to upload the development database
problem there wasn t any link provided to check if the ui was working fine this project was majorly focussed on refactor and looking at the code changes in the pr i can guess that the features might be working as they were supposed to
problem there wasn t any link provided to check if the ui was working fine but there was a video showing the project  successfully running and also the tests did seem to cover almost all the scenarios
problem there was one new commit during the second round
problem there was not an explicit test plan your design looks good though
problem there was not an explicit test plan your design looks good though
problem there was not an explicit test plan your design looks good though
problem there was no working deployment presented
problem there was no working deployment presented
problem there was no test plan
problem there was no test plan
problem there was no test plan
problem there was no link included to allow a reviewer access to the deployed application when you are finally able to submit the appropriate working link i would suggest having a readme that contains the suggested ruby content along with the information encouraged by the project write up   additionally i would suggest having a person not participating in the course to take a look at your application he she may be able to offer a way to gauge the ease and effectiveness of your site they may also offer valuable insight into feature placement and page flow
problem there was no functionality implemented during 1st review so there is a drastic improvement however there are some functionalities which need further improvements 1 admin has no option to post or view houses 2 admin is not able submit inquiry or reply to inquiries 3 admin has no option currently to edit his profile he should be able to edit his name 4 multiple realtors and house hunters can be created with the same email id there is no email or role validation this will allow a lot of duplicate entries and the app will also be suseptible to attacks by robots can be improved by a 2 line validation code in model 5 password should be encrypted while entering the details too it should not be displayed as plain text can be improved by simply using type as password instead of text  in views and applying encryption in model so that password is encrypted throughout the application6 search house functionality does not work when a new house is created it shows the same old results 7 also the description specifies search by price range but it has only one field to input price this won t work if the user wants to see a house which is between 1000 to 3000 bucks or any house which is less then 3000 bucks since the app shows only houses greater then the price entered 8 realtor is able to create a house even if he is not associated with a company 9 realtor is able to view potential buyers and reply to inquiries for all houses without being associated to a company there should be a check to ensure that realtor is able to post a house only if he is associated with a company also the option to view potential buyers and reply to inquiries should only be enabled for houses which are associated with his company in case of no company association he should be promted to associate himself with a company or create a new company first
problem there was consistent commits with a spike in between when probably most development happened
problem there should be more explanations
problem there should be more explanations
problem there seems to be no testing done
problem there seems to be no testing done
problem there seems to be many functionalities missing i cannot register as hunter or realtor hunter realtor interest of buying inquiries these model do not appear to be in the folder app models seems to be an incomplete project unless the previous reviewer cracked the system
problem there seems to be many functionalities missing i cannot register as hunter or realtor hunter realtor interest of buying inquiries these model do not appear to be in the folder app models seems to be an incomplete project unless the previous reviewer cracked the system
problem there must be some test cases that should have been covered according to travis ci also the build has failed however the team claims that some of the tests are running locally if some of these points are looked upon the code would be ready to be deployed on the main server
problem there isnt any commit after the first submission
problem there is some repetition of code but overall code quality is ok there are some comments from the professor which should have been addressed  
problem there is some explanation about the general idea of what needs to be added to implement the new functionality however there are several sections missing that give light to the details of implementation and how this is tested to ensure correctness adding a description of where and how this new model will be developed with the existing image would  be beneficial for a thorough understanding of the reader this could also be achieved by rearranging the logic of the sections as sum sections elude to purpose and intent of implementation
problem there is only one relationship in the whole project not a good database design plus destroying one entity won t delete another as i can see from the code rest i am not able to test as i am not able to login other than admin not able to register as well
problem there is only one relationship in the whole project not a good database design plus destroying one entity won t delete another as i can see from the code rest i am not able to test as i am not able to login other than admin not able to register as well
problem there is only one commit made during the entire project there is no new code added during the 2nd round
problem there is only a title for test plan which could be in a great detail
problem there is only a title for test plan which could be in a great detail
problem there is only a single test file included with this application sessions_controller_test the functionality tested within this file attempts to cover starting a new user session the test ensures that a new session is returned through an assertion statement equating to true there are many additional functions of the sessions controller that should be tested including create destroy successful log in etc making sure that each of these methods are functional will aid in the development of further successful application flows i would recommend testing the basic models and their accompanying controllers before you begin implementing things such as house inquires and user responses
problem there is only 1 issue stated in the code climate regarding code refactoring if that is done this code can be merged
problem there is only 1 issue stated in the code climate regarding code refactoring if that is done this code can be merged
problem there is one box for both review controller and assignment controller a better picture of how they handle each event differently would have been helpful
problem there is nothing wrong in current design looks good suggestion however since i have already worked on a similar assignment so i know that similar issue has already been resolved for drop topic deadline you can reuse the entire code and just change deadline type have a look at oss project topic 1843   check with the professor once
problem there is not a specific test plan section in the wiki there is a work to be done section that discusses the work that should be completed for project success i would suggest rearranging or rename this section and continue to describe your plan of attack for testing
problem there is not a specific test plan section in the wiki there is a work to be done section that discusses the work that should be completed for project success i would suggest rearranging or rename this section and continue to describe your plan of attack for testing
problem there is no write up provided as of now the wiki page is also not done yet
problem there is no visual aid
problem there is no test plan the section is left blank
problem there is no test plan the section is left blank
problem there is no test plan for this project it could be difficult to test the exact time returned however it would be a good idea to test that the report page in fact shows the statistics
problem there is no test plan for this project it could be difficult to test the exact time returned however it would be a good idea to test that the report page in fact shows the statistics
problem there is no test plan  
problem there is no test plan  
problem there is no test plan  
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan
problem there is no test plan yet implemented in the wiki documentation be sure that when you include this section that you make the inclusions specific and intentional
problem there is no test plan yet implemented in the wiki documentation be sure that when you include this section that you make the inclusions specific and intentional
problem there is no test plan section or any information on how or if the feature was tested
problem there is no test plan included
problem there is no test plan included
problem there is no test plan included in the design document actually there should be a lot of tests need to be done for this project from the ui controller to model the project should include test plan cover all these aspects to make sure the function can work as intended
problem there is no test plan included in the design document actually there should be a lot of tests need to be done for this project from the ui controller to model the project should include test plan cover all these aspects to make sure the function can work as intended
problem there is no test plan
problem there is no separate test plan section but the test functionality has been shown in the form of screenshots could add it under the testing header in the document so that the code and test would be separeated
problem there is no proper test plan the authors have just mentioned the required tests that needs to be done no proper explanation has been given about how these tests will be implemented
problem there is no proper test plan the authors have just mentioned the required tests that needs to be done no proper explanation has been given about how these tests will be implemented
problem there is no need to use the student3 and participant3
problem there is no need to use the student3 and participant3
problem there is no mention of testing also code change related details have not been included otherwise the document is very good
problem there is no mention of testing also code change related details have not been included otherwise the document is very good
problem there is no mention of testing also code change related details have not been included otherwise the document is very good
problem there is no mention of testing also code change related details have not been included otherwise the document is very good
problem there is no mention for the design strategy or design pattern to be used in the implementation
problem there is no mention for the design strategy or design pattern to be used in the implementation
problem there is no mention about what work they did the wiki page hasn t been properly formatted and the information is not adequate
problem there is no mention about their test plan the section has not been included in the wiki page as well
problem there is no link to login as an admin the site went down so could not test further this site can  t be reached 18 224 197 227  refused to connect   search google for  224 197 227 8080 house hunters sign   err_connection_refused    
problem there is no link provided to test the code manually however from the video provided i can infer that all the features have been implemented and are working properly issue 718 and 926 are working as expected in issue 971 i could see that the previous version of the add new topic page had a topic description and topic category field which is not seen in the updated version suggestion the team could implement that or if already implemented add that to the wiki page to reflect the way in which that is handled
problem there is no link provided to test the code manually however from the video provided i can infer that all the features have been implemented and are working properly issue 718 and 926 are working as expected in issue 971 i could see that the previous version of the add new topic page had a topic description and topic category field which is not seen in the updated version suggestion the team could implement that or if already implemented add that to the wiki page to reflect the way in which that is handled
problem there is no link provided to test the code manually however from the video provided i can infer that all the features have been implemented and are working properly issue 718 and 926 are working as expected in issue 971 i could see that the previous version of the add new topic page had a topic description and topic category field which is not seen in the updated version suggestion the team could implement that or if already implemented add that to the wiki page to reflect the way in which that is handled
problem there is no github link provided instead the code was zipped in an archive and posted on expertizza the code has no implementation of any functionality whatsoever however scaffold code files exist in the zip with nil developer implementation code for house is added though
problem there is no functionality to edit a realtor s company
problem there is no external  link provided to the application
problem there is no external  link provided to the application
problem there is no external  link provided to the application
problem there is no external  link provided to the application
problem there is no external  link provided to the application
problem there is no explicit test plan section but all the scenarios are covered with appropriate images
problem there is no explicit test plan section but all the scenarios are covered with appropriate images
problem there is no explanation
problem there is no explanation
problem there is no explanation in the writeup
problem there is no explanation in the writeup
problem there is no edge case
problem there is no edge case
problem there is no edge case
problem there is no detailed documentation provided by the author on changes just few db data points and controller functionality very generic so it hard to visualize a solution
problem there is no description of what the team plans to implement
problem there is no description of what the team plans to implement
problem there is no description of what the team plans to implement
problem there is no description of what the team plans to implement
problem there is no code included in the write up but the team had mentioned the changed files in the write as a reviewer it is difficult to find out which code has been added by the team the team should clearly explain what they are doing
problem there is no code included in the write up but the team had mentioned the changed files in the write as a reviewer it is difficult to find out which code has been added by the team the team should clearly explain what they are doing
problem there is no code included in the write up but the team had mentioned the changed files in the write as a reviewer it is difficult to find out which code has been added by the team the team should clearly explain what they are doing
problem there is no code apart from a basic scaffold generated   commit id reviewed   7fe864078b219bebacc0046b8f45c6e25cc1544c
problem there is no change in the code in this round the variable names and method names are intuitive the code is well indented some useful comments can be included to improve readability the code is dry
problem there is no change in the code in this round the variable names and method names are intuitive the code is well indented some useful comments can be included to improve readability the code is dry
problem there is no automated tests about the test plan were found it seems the tests were all done by themselves
problem there is no association between models
problem there is no association between models
problem there is no admin credentials provided so could not test the edge cases which involves admin could not establish a relationship between a realtor and company there is no delete and update functionality provided so could not validate the edge cases related to them
problem there is less about what they gonna do but more about before and after part
problem there is less about what they gonna do but more about before and after part
problem there is just one user role in the current submission unable to test the admin functionality
problem there is just one user role in the current submission unable to test the admin functionality
problem there is just one user role in the current submission unable to test the admin functionality
problem there is just one flow diagram which does explain the activities to happen there is no use case diagram with actors and all the uses cases expected suggestion the use case diagram would have given better clarity about the system
problem there is an er diagram helps the reviewer understand the relationship between different sets maybe more screenshot can be provided to show where is the search bar etc
problem there is an er diagram helps the reviewer understand the relationship between different sets maybe more screenshot can be provided to show where is the search bar etc
problem there is an er diagram helps the reviewer understand the relationship between different sets maybe more screenshot can be provided to show where is the search bar etc
problem there is an assign grade link for everyone but only perform review for certain teams but why doesn t perform review appear for everyone or at least update review not if a review has been submitted at least until the next round starts   this was confusing   do something that s clearer   sol the feature as understood from the past project is that assign grade is present for all teams standardize the functionality case 1 no review performed yet perform review button case 2 review started view review button edit review button case 3 review submitted deadline not crossed view review button case 4 review submitted deadline crossed update review button   lets always have view review button once review has started change the update review name to edit only available for instructors and ta  s itself that should be clear i hope we will make changes in list_submissions html erb   comments case 3 and 4 buttons should be switched if the deadline has been crossed you should have the option to view the review otherwise you should be able to edit the review
problem there is an assign grade link for everyone but only perform review for certain teams but why doesn t perform review appear for everyone or at least update review not if a review has been submitted at least until the next round starts   this was confusing   do something that s clearer   sol the feature as understood from the past project is that assign grade is present for all teams standardize the functionality case 1 no review performed yet perform review button case 2 review started view review button edit review button case 3 review submitted deadline not crossed view review button case 4 review submitted deadline crossed update review button   lets always have view review button once review has started change the update review name to edit only available for instructors and ta  s itself that should be clear i hope we will make changes in list_submissions html erb   comments case 3 and 4 buttons should be switched if the deadline has been crossed you should have the option to view the review otherwise you should be able to edit the review
problem there is a webpage linked which is helpful but i do not see any other visual aids it would be better to have some screenshots to help the reader understand your project
problem there is a test plan the tests are deep and detailed however the current test plan is not enough to test the functionalities they are just unit tests it should be added with a tests that directed tests whether  the instructor can do the same kind of review as the students from the user s perspective for example log in do the review etc
problem there is a test plan the tests are deep and detailed however the current test plan is not enough to test the functionalities they are just unit tests it should be added with a tests that directed tests whether  the instructor can do the same kind of review as the students from the user s perspective for example log in do the review etc
problem there is a test plan for part one of the problem state however no implementation plan or test plan for part two
problem there is a test plan for part one of the problem state however no implementation plan or test plan for part two
problem there is a test plan for part one of the problem state however no implementation plan or test plan for part two
problem there is a separate testing section in the writeup but it does not have much explanation could have added a couple of test case explanations also a screenshot of a passed test case could work wonders
problem there is a section titled test plan however it does not seem to be a plan or give an outline for the development of the code instead it describes what the methods do but shows the testing code for the method this is confusing as no explanations are given for the coding design
problem there is a section titled test plan however it does not seem to be a plan or give an outline for the development of the code instead it describes what the methods do but shows the testing code for the method this is confusing as no explanations are given for the coding design
problem there is  a search rb which seems very vague and unused it has an extensive search logic it should be a method in the house rb file instead of a separate file of its own
problem there is a scope of improvement by eliminating multiple back links on each page
problem there is a scope of improvement by eliminating multiple back links on each page
problem there is a relationship established between users and the company however a relationship between a house and a realtor or a company has not been established this has negative impacts on the functionality   there is no relationship between an inquiry and a house hunter or a realtor which has impacts on the functionality for example if a certain house hunter is deleted from the data base the inquiry associated with the house hunter will not be destroyed  
problem there is a one to many relationship between user and company a realtor model is not applied
problem there is a one to many relationship between user and company a realtor model is not applied
problem there is a minor code climate error as mentioned above similar code an easy fix and you will be green with the climate check
problem there is a minor code climate error as mentioned above similar code an easy fix and you will be green with the climate check
problem there is a lot of visual help which is good but project design could have been expanded upon more
problem there is a hint of visual aid in terms of the section of application flow for the instructor and student and thus we can say that it does slightly help get a sense of putting things into perspective   1 none both the diagrams seem important enough for the scope of the project and in conjunction with the intended functionalities 2 the uml diagram is in line with the conventions and follows suite 3 the diagram of the instructor can be said to be bordering on one to be too high level and should go a bit more into detail  
problem there is a hint of visual aid in terms of the section of application flow for the instructor and student and thus we can say that it does slightly help get a sense of putting things into perspective   1 none both the diagrams seem important enough for the scope of the project and in conjunction with the intended functionalities 2 the uml diagram is in line with the conventions and follows suite 3 the diagram of the instructor can be said to be bordering on one to be too high level and should go a bit more into detail  
problem there is a good amount of diagrams technicality in terms of the section of workflow flow   and models and thus we can say that it does slightly help get a sense of putting things into perspective   1 none both the diagrams seem important enough for the scope of the project and in conjunction with the intended functionalities 2 the uml diagram is in line with the conventions and follows suite 3 the diagrams are technically sound enough to define problem scenario  
problem there is a change in the colour code required so there was not much of a naming convention to be followed here dint find any instances in the attached code where name could be changed one instance of  is_submitted could be changed to  is_submitted
problem there have been some screenshots however i feel like some more details and diagram could have been added in this section
problem there have been only two commits one on 30th oct and second on 31st october there have been no commits since it would have been better if you people had given one more commit resolving the issues given by code climate since most of them are trivial  
problem there have been only two commits one on 30th oct and second on 31st october there have been no commits since it would have been better if you people had given one more commit resolving the issues given by code climate since most of them are trivial  
problem there have been only two commits one on 30th oct and second on 31st october there have been no commits since it would have been better if you people had given one more commit resolving the issues given by code climate since most of them are trivial  
problem there have been no new commits since the last round of submission there seems to be some work pending since the last round for integrating the branch
problem there have been no additions to test cases although they have added a test case in last round   the test coverage has significantly gone down by 39 4 after their code changes
problem there has not been any changes after first round in the writeup so my opinion remains the same as it was in the previous review
problem there has been test failures but not related to the project
problem there has been some improvement in the content of the write up but not all suggestions have been incorporated adding more screenshots of the functionality or a video of the project being explained will always be helpful
problem there has been some improvement in the content of the write up but not all suggestions have been incorporated adding more screenshots of the functionality or a video of the project being explained will always be helpful
problem there has been only one commit for the entire project
problem there has been few code climate issues reported but few of travis tests has failed mot all changes has been verified successfully
problem there has been a significant improvement in the level of details provided the author can further improve the document by providing the details of the design pattern to be used
problem there does not seem any issues with the code the team has properly used the naming convention and has provided comments wherever necessary
problem there could have been other tests with different inputs tried on the setup initialize and select methods the pre conditions could have been more eloborate
problem there could have been certain negative scenarios tested as well  
problem there could have been certain negative scenarios tested as well  
problem there could be more visual aids to help reviewers get a better understanding of this project
problem there could be more test cases included and did not find enough information on test cases in the read me
problem there could be more test cases included and did not find enough information on test cases in the read me
problem there can be a few changes incorporated to the code especially the name mismatch of the web idl and corresponding rust file needs to be fixed the unnecessary comments have to be removed moreover the pull request shows that there are a few changes that have been requested and all checks have failed so the code can be merged and deployed only after these are incorporated  
problem there can be a few changes incorporated to the code especially the name mismatch of the web idl and corresponding rust file needs to be fixed the unnecessary comments have to be removed moreover the pull request shows that there are a few changes that have been requested and all checks have failed so the code can be merged and deployed only after these are incorporated  
problem there aren t many visual aids used it may be a good idea to do some mockups for this project
problem there aren t any test cases listed in the writeup can explain the test cases a bit in the github commit message
problem there are two git links given not sure which one to review so reviewing the one which has more commits major functionalities are not implemented so cannot  comment on this namings are properly  given as per the rails standard
problem there are still session variables and route names being displayed on some of the screens which were suggested to be removed the functionality is quite good considering there was no implementation during first review potential buyers functionality is not implemented enquiry functionality doesn t work it throws application error check logs error when clicked possibly a deployment issue when  a new house is created it is not displayed in the listings immediately admin login doesn t work it may be possible that someone might have edited admin login during review or else please paste the latest login details in readme
problem there are still session variables and route names being displayed on some of the screens which were suggested to be removed the functionality is quite good considering there was no implementation during first review potential buyers functionality is not implemented enquiry functionality doesn t work it throws application error check logs error when clicked possibly a deployment issue when  a new house is created it is not displayed in the listings immediately admin login doesn t work it may be possible that someone might have edited admin login during review or else please paste the latest login details in readme
problem there are still session variables and route names being displayed on some of the screens which were suggested to be removed the functionality is quite good considering there was no implementation during first review potential buyers functionality is not implemented enquiry functionality doesn t work it throws application error check logs error when clicked possibly a deployment issue when  a new house is created it is not displayed in the listings immediately admin login doesn t work it may be possible that someone might have edited admin login during review or else please paste the latest login details in readme
problem there are some test plans in place and others will be done after the bugs are generated suggestions it would have been great to have screenshots of the test plans
problem there are some test plans in place and others will be done after the bugs are generated suggestions it would have been great to have screenshots of the test plans
problem there are some test plans in place and others will be done after the bugs are generated suggestions it would have been great to have screenshots of the test plans
problem there are some style issues related to spacing and unnecessary parenthesis  
problem there are some small problems like final  newline missing but overall looks good
problem there are some repetitions in the code which can be avoided by creating a helper function and calling that function from each place but apart from that code is well thought out and implemented nicely
problem there are some really great controller tests included in this application most of the functions in each controller are tested to ensure that they are returning and routing to the appropriate pages unfortunately there are no model tests implemented model tests should be written to test that the appropriate attributes and relationships of each model are implemented successfully it will prove extremely helpful in the improved functionality of your application make your model tests look like the controller test and you will be doing great  
problem there  are some instances of variable names that are concatenated with numbers for example answer2 questionnaire2 etc while this approach can be justified in some cases i would suggest using more descriptive names instead or arrays if multiple instances are required for example team could be used instead of team1 because that is the only team instance variable in the source code
problem there  are some instances of variable names that are concatenated with numbers for example answer2 questionnaire2 etc while this approach can be justified in some cases i would suggest using more descriptive names instead or arrays if multiple instances are required for example team could be used instead of team1 because that is the only team instance variable in the source code
problem there are some indentation issues but otherwise the code has method names in line with convention over configuration and the spacing and line spacing are reasonable also ids should not be on the ui the house hunters and realtors should not have to sign in after signing up
problem there are some indentation issues but otherwise the code has method names in line with convention over configuration and the spacing and line spacing are reasonable also ids should not be on the ui the house hunters and realtors should not have to sign in after signing up
problem there are some functionalities which needs to be implemented areas you should focus on are destroy is not working correctly in some cases application is getting crashed again and again admin should not be deleted by user how is house associated with a company is something which i was not able to understand    
problem there are some duplicate codes could substitute with before statement for example line 100 are exactly the same with line 108 it is better to use before even if there is only one line duplicate    
problem there are some duplicate codes could substitute with before statement for example line 100 are exactly the same with line 108 it is better to use before even if there is only one line duplicate    
problem there are several minor issues to be fixed before the code is deployed   64 code climate issues travis build 1 error and 2 warnings i guess once these are taken care of the deployment is likely
problem there are several minor issues to be fixed before the code is deployed   64 code climate issues travis build 1 error and 2 warnings i guess once these are taken care of the deployment is likely
problem there are several improvements over the last review dropdowns have been implemented which make a huge improvement to the ease of use of the system     while the ui has become a lot better there are several  flaws   admin is shown to be registered as a realtor but cannot be redirected to the  pages househunter link works househunter can set another hunter s interest liist  by manipulating id   househunter can edit companies admin cannot destroy users   admin can not create edit destroy a realtor error page is shown realtor can list houses even if not enrolled in a company admin can not destroy househunter passwords are visible to admin   there are a few minor problems which if dealt with would make code even better   proper error messgaes while signing up with wrong password length a heroku  error shows up which makes it feel like the functionality isn t working whereas the problem can be user s fault as they  could have entered only 4 digit pin let users know that they need to provide proper input   also please do not ask passwords in a text field a very simple change can go a long way
problem there are quite a lot of commits meaning that the team could have grouped some of the changes together into one commit instead of commiting every small modification to make them more meaningful
problem there are project purpose and design but no testing plan is included
problem there are only ten commits and that too only from one account which means it has only been done by one individual and not a team
problem there are only ten commits and that too only from one account which means it has only been done by one individual and not a team
problem there are only four commits visible and no proper commit messages initial commit has 228 file changes
problem there are only four commits visible and no proper commit messages initial commit has 228 file changes
problem there are not enough introductions about what the functionality of the class they will test and what it is used for the team can introduce more about what expertiza is and what the role of the class will be test and its functions  
problem there are not enough information to help me understand  what the design looks like
problem there are not enough information to help me understand  what the design looks like
problem there are no visual aids to support the document i would suggest them to design a flow chart that can show their design planning
problem there are no visual aids on that page but there are some on the previous page some more would definitely be welcome and should be placed on the final project wiki page
problem there are no visual aids given maybe some flow charts or screenshots can be added to help people understand the project
problem there are no uml diagrams i would suggest them to include a test case diagram that can improve understandability
problem there are no uml diagrams i would suggest them to include a test case diagram that can improve understandability
problem there are no uml diagrams or screenshots please include the same in the following submissions to make the design document stronger
problem there are no uml diagrams as such in the writeup however there is a flowchart which somewhat gives a clear view how they plan to do the things
problem there are no uml diagrams as such in the writeup however there is a flowchart which somewhat gives a clear view how they plan to do the things
problem there are no uml diagrams as such in the writeup however there is a flowchart which somewhat gives a clear view how they plan to do the things
problem there are no tests probably you guys will do it in the next phase
problem there are no test plans in the documentation
problem there are no test plans in the documentation
problem there are no test cases other than those auto generated by the scaffold generator thus cannot comment more on testing
problem there are no test cases
problem there are no such design explanations on which i can improve or suggest on it would have been great if there were some more explanations
problem there are no solutions proposed just the issues are listed and explained a possible screenshot or a flow diagram would have been better to catch the proposed solution
problem there are no solutions proposed just the issues are listed and explained a possible screenshot or a flow diagram would have been better to catch the proposed solution
problem there are no solutions proposed just the issues are listed and explained a possible screenshot or a flow diagram would have been better to catch the proposed solution
problem there are no solutions proposed just the issues are listed and explained a possible screenshot or a flow diagram would have been better to catch the proposed solution
problem there are no sections titled project purpose project design or testing plan however much of the information required to create those sections is provided
problem there are no sections titled project purpose project design or testing plan however much of the information required to create those sections is provided
problem there are no sections titled project purpose project design or testing plan however much of the information required to create those sections is provided
problem there are no sections titled project design or project purpose
problem there are no sections titled project design or project purpose
problem there are no proper commit messages
problem there are no new commits during second round
problem there are no issues with code quality or naming   code is clean and readable and follows ruby on rails practices   most methods are short and do  one  specific task one possible improvement would be moving out  authorization functionality from controller methods to separate functions
problem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
problem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
problem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
problem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
problem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
problem there are no diagrams present in the document while the diagrams for apis and class interactions may have been helpful they are not necessary for this project as the authors provide a detailed explanation of the relevant functionalities
problem there are no changes to any files in the spec directory so there are no new tests
problem there are new commits however the quality of commit messsages is terrible commit message should have a short description of what was changed not just be random words like foo1 foo2 or hasdfsdsd
problem there are new commits however the quality of commit messsages is terrible commit message should have a short description of what was changed not just be random words like foo1 foo2 or hasdfsdsd
problem there are mock ups of the end result but there are no other uml diagrams there should have been some uml diagrams to help explain their design better as well as the flow of the implementation
problem there are mock ups of the end result but there are no other uml diagrams there should have been some uml diagrams to help explain their design better as well as the flow of the implementation
problem there are mock ups of the end result but there are no other uml diagrams there should have been some uml diagrams to help explain their design better as well as the flow of the implementation
problem there are mock ups for the final result of the team s changes however i would like some uml like diagram or some flowchart explaning how a user gets to a particular point i don t know if it s me or maybe my lack of familiarity with the bacui interface but i found the navigation part a bit difficult to follow
problem there are mock ups for the final result of the team s changes however i would like some uml like diagram or some flowchart explaning how a user gets to a particular point i don t know if it s me or maybe my lack of familiarity with the bacui interface but i found the navigation part a bit difficult to follow
problem there are many places where puts statements are used where a logger statement should be used there is also a set of if else blocks that check to see if a variable is of a certain type which could have been abstracted with an appropriate design pattern
problem there are many places where puts statements are used where a logger statement should be used there is also a set of if else blocks that check to see if a variable is of a certain type which could have been abstracted with an appropriate design pattern
problem there are lots of code climate issues to be fixed
problem there are lots of code climate issues to be fixed
problem there are lines that were tested but commented out which makes it little tough to read other than that the flow of the code refactoring methodologies are good
problem there are lines that were tested but commented out which makes it little tough to read other than that the flow of the code refactoring methodologies are good
problem there are issues in the build
problem there are issues in the build
problem there are enough aids such as uml diagrams and screen shots the authors explicitly mention that there are no db changes so no need of an er diagram although i would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
problem there are enough aids such as uml diagrams and screen shots the authors explicitly mention that there are no db changes so no need of an er diagram although i would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
problem there are enough aids such as uml diagrams and screen shots the authors explicitly mention that there are no db changes so no need of an er diagram although i would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
problem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
problem there are commits on a single day that is yesterday one suggestion would be to commit regular progress on the git  
problem there are commits on a single day that is yesterday one suggestion would be to commit regular progress on the git  
problem there are build failures mentioned but i  don t think the errors  are due to this team s code hence giving them the benefit of doubt
problem there are build failures mentioned but i  don t think the errors  are due to this team s code hence giving them the benefit of doubt
problem there are ample screenshots of the ui to help the user understand the flow of the changes made however there aren t any uml diagrams that explain the use cases and the design of the newly added functionalities
problem there are almost no comments
problem there are a moderate amount of spelling and grammatical errors
problem there are a lot of not so important comments in the controllers and a lot of dry code
problem there are a lot of not so important comments in the controllers and a lot of dry code
problem there are a lot of functionalities missing like ability to add photos for the house being one of them for the funtionalities which are present there are quite a few bugs for example signing in again after signing up realtor being able to delete any houses whether or not listed by him etc there are a few functionalities added after the first round but the implementation is not upto the mark
problem there are a lot of functionalities missing like ability to add photos for the house being one of them for the funtionalities which are present there are quite a few bugs for example signing in again after signing up realtor being able to delete any houses whether or not listed by him etc there are a few functionalities added after the first round but the implementation is not upto the mark
problem there are a lot of functional bugs also lots of required functionalities like listing a house as interested list of potential buyers etc are missing also there are a lot of navigational bugs for example when a user is both a realtor and a househunter he gets an option to create a new company when viewing list of enquiries which should not have been the cae
problem there are a lot of diagrams but the application flow and the uml diagram doesn t look very clear we can hardly see the words in the uml diagram also the diagrams seem to not fit each other how does the application diagram and the uml diagram connect to each other there s no clear instructions also i don t think a screen shot of code in the design doc is a good idea i think it could be better if the changes expected to be made can be described in a more abstract fashion  
problem there are a lot of diagrams but the application flow and the uml diagram doesn t look very clear we can hardly see the words in the uml diagram also the diagrams seem to not fit each other how does the application diagram and the uml diagram connect to each other there s no clear instructions also i don t think a screen shot of code in the design doc is a good idea i think it could be better if the changes expected to be made can be described in a more abstract fashion  
problem there are a lot of diagrams but the application flow and the uml diagram doesn t look very clear we can hardly see the words in the uml diagram also the diagrams seem to not fit each other how does the application diagram and the uml diagram connect to each other there s no clear instructions also i don t think a screen shot of code in the design doc is a good idea i think it could be better if the changes expected to be made can be described in a more abstract fashion  
problem there are a lot of diagrams but the application flow and the uml diagram doesn t look very clear we can hardly see the words in the uml diagram also the diagrams seem to not fit each other how does the application diagram and the uml diagram connect to each other there s no clear instructions also i don t think a screen shot of code in the design doc is a good idea i think it could be better if the changes expected to be made can be described in a more abstract fashion  
problem there are a few warnings thrown by other tests that must be rectified but otherwise ready to deploy
problem there are a few issues regarding code repetition and extra white space especially in the controller rspec file
problem there are a few issues regarding code repetition and extra white space especially in the controller rspec file
problem there are 7 issues pointed by the auto bot which require code to follow coding standard  
problem there are 7 issues pointed by the auto bot which require code to follow coding standard  
problem there are 16 commits in all not a lot changes have been pushed throughout the project period
problem there are 16 commits in all not a lot changes have been pushed throughout the project period
problem there a large set of variables that do not follow typical ruby naming convention an example is that existassignment should be  exit_assignment additionally some names are not very helpful for instance the variable frm is used for a form but why not just use form   there is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non intuitive variable  names
problem there a large set of variables that do not follow typical ruby naming convention an example is that existassignment should be  exit_assignment additionally some names are not very helpful for instance the variable frm is used for a form but why not just use form   there is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non intuitive variable  names
problem there a large set of variables that do not follow typical ruby naming convention an example is that existassignment should be  exit_assignment additionally some names are not very helpful for instance the variable frm is used for a form but why not just use form   there is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non intuitive variable  names
problem their writeup is still the same doc file they had uploaded in the first submission now while it was a good progress in resolving some of their errors in their first submission clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it  
problem their writeup is still the same doc file they had uploaded in the first submission now while it was a good progress in resolving some of their errors in their first submission clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it  
problem their writeup is still the same doc file they had uploaded in the first submission now while it was a good progress in resolving some of their errors in their first submission clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it  
problem their test plan includes a test case for successfully displaying the pop up text message as json and  displaying suggestion metrics for the review segment a block of review a comment box try to include test cases where a review message is absent i e the code should not break for empty review segment include a test case where review segment has a suggestion and test if the output says suggestion present include a negative test case for the the suggestion where a suggestion is not given by the reviewer and test that the output says suggestion absent
problem their test plan includes a test case for successfully displaying the pop up text message as json and  displaying suggestion metrics for the review segment a block of review a comment box try to include test cases where a review message is absent i e the code should not break for empty review segment include a test case where review segment has a suggestion and test if the output says suggestion present include a negative test case for the the suggestion where a suggestion is not given by the reviewer and test that the output says suggestion absent
problem their task introduction is too short but the background part explain the changes very well
problem their solutions are well explained the way they have explained attaching a screenshot of a code snippet and telling this is where we made this change and this is how it works gives a better understanding of their project it could have been better if they could have compare and contrasted the previous codes where the features where not there that way the background of the why this feature could have been clear
problem their solutions are well explained the way they have explained attaching a screenshot of a code snippet and telling this is where we made this change and this is how it works gives a better understanding of their project it could have been better if they could have compare and contrasted the previous codes where the features where not there that way the background of the why this feature could have been clear
problem their methods name is too long such as copy_questionnaire_details and assign_instructor_id
problem their github link is unavailable and non functional they don t seem to have uploaded on heroku app  
problem their github link is unavailable and non functional they don t seem to have uploaded on heroku app
problem their github link is unavailable and non functional they don t seem to have uploaded on heroku app
problem their explanations are not detailed and sometimes it s not easy to understand
problem their explanations are not detailed and sometimes it s not easy to understand
problem their explanations are not detailed and sometimes it s not easy to understand
problem their explanations are not detailed and sometimes it s not easy to understand
problem their designs are great but some designs may be complicated
problem their designs are great but some designs may be complicated
problem their designs are great but some designs may be complicated
problem their design is pretty well but some part of that are not very detailed
problem their code is good but some of them are too long
problem their code is good but some of them are too long
problem their code changes are little though they have handled naming conventions in a good way as illustrated below def self handle_duplicate  
problem thee writeup page is concise and easy to understand but there is no insight into the code
problem thee writeup page is concise and easy to understand but there is no insight into the code
problem thee writeup page is concise and easy to understand but there is no insight into the code
problem the youtube screenshare clearly shows the changes made and works perfectly since the edge cases arent defined not sure about the functionalities of edge cases in this case as it involves ui most of the time
problem the writup  includes the work done however there is no explanation about why that 
problem the written explanation is good add few screenshots  of the change to be able to understand the changes done visually
problem the writeup written well the team could have included snippets of their code instead of screenshots
problem the writeup written well the team could have included snippets of their code instead of screenshots
problem the writeup was written well enough to understand screenshots were also attached along with the steps making the documentation better can definitely understand what project does and how it is done
problem the writeup was well written and easy to understand however it would have been better if some steps accompanied the screenshots as to what was happening in each screenshot that would have made the writeup even easier to understand
problem the writeup was still on wikipedia and didn t expand on the reasons why the test cases were the way they are no justification was provided for why only 34 of the loc in the model was covered
problem the writeup was still on wikipedia and didn t expand on the reasons why the test cases were the way they are no justification was provided for why only 34 of the loc in the model was covered
problem the writeup was fairly specific on how the solution was implemented although more qualitative description should have replaced the source code dumps the writeup barely explained why the improvements were needed focusing on what was implemented  
problem the writeup was fairly specific on how the solution was implemented although more qualitative description should have replaced the source code dumps the writeup barely explained why the improvements were needed focusing on what was implemented  
problem the writeup was clear enough to be understood by anyone familiar with developing or contributing on expertiza it provided a high level view and then dug deep into implmentation which is great since it saves time and also look concise but for someone outside the domain of expertiza it feels too sudden of a transition that it takes time and in many cases other resources to figure out why the author did what he did but the overall flow and structure was very great
problem the writeup was clear enough to be understood by anyone familiar with developing or contributing on expertiza it provided a high level view and then dug deep into implmentation which is great since it saves time and also look concise but for someone outside the domain of expertiza it feels too sudden of a transition that it takes time and in many cases other resources to figure out why the author did what he did but the overall flow and structure was very great
problem the writeup thoroughly details the changes written in this project but the first section seems like informally written reminders for the development team
problem the writeup states correctly the changes performed but fails to provide a reasoning behind every change suggestion you can include reasons behind choosing an approach for atleast one refactoring code change
problem the writeup starts off by introducing servo mozilla s experimental high performance browser engine and rust which is a systems programming language with memory safety and concurrency used to build servo it then moves over to web audio api for handling audio operations inside audio context and allow modular routing and a workflow for implementing web audio was clearly listed it then flows into the scope of the project and the implementation the graphical and mathematical representation of the sine square sawtooth and triangle waveform gave a solid conceptual foundation the code snippet of the changes done in oscillator_node rs and the new file oscillator rs created by the team has also been included the section build that explains the procedure to install dependencies rust step by step procedure for building and running the build was very useful to explore the project the team had included the build instructions for windows and debian based linux they could have augmented the build instructions for mac os x which might save mac users from reading verbose instructions on the official documentation and instead refer to a single source the wiki the authors end the wiki by providing the test plan with examples of generated sine square sawtooth and triangle waveforms as audio files pull request and references
problem the writeup shows very little since the work has not yet been started therefore it does not clearly incorporates what all functionalities will be required however there are some mentioned in proposed changes area
problem the writeup shows very little since the work has not yet been started therefore it does not clearly incorporates what all functionalities will be required however there are some mentioned in proposed changes area
problem the writeup shows very little since the work has not yet been started therefore it does not clearly incorporates what all functionalities will be required however there are some mentioned in proposed changes area
problem the writeup should be written in a emore elaborative way clearly stating at the minimum the problem statement new implementation strategy design principles test plan and references
problem the writeup seems to be missing
problem the  writeup  seems to be missing
problem the writeup seems apt i had a little problem understanding the solution to problem 1 but otherwise it seems fine
problem the writeup seems apt i had a little problem understanding the solution to problem 1 but otherwise it seems fine
problem the writeup seems apt i had a little problem understanding the solution to problem 1 but otherwise it seems fine
problem the writeup s format on how they distinguished the features and explained solutions for each and everything is good first they give a bird s eye view of the problems and then deep diving into each problem with solution and screenshot is good the background explanation given could have been more specific towards their problem statement rather than just about expertiza the images tend to occupy the entire page and its little difficult while going through it a little foramatting could have made their page really good
problem the writeup s format on how they distinguished the features and explained solutions for each and everything is good first they give a bird s eye view of the problems and then deep diving into each problem with solution and screenshot is good the background explanation given could have been more specific towards their problem statement rather than just about expertiza the images tend to occupy the entire page and its little difficult while going through it a little foramatting could have made their page really good
problem the writeup s format on how they distinguished the features and explained solutions for each and everything is good first they give a bird s eye view of the problems and then deep diving into each problem with solution and screenshot is good the background explanation given could have been more specific towards their problem statement rather than just about expertiza the images tend to occupy the entire page and its little difficult while going through it a little foramatting could have made their page really good
problem the writeup provides a gist of the project implementation stages though it does specifically include a test plan section it has the list of tasks performed while testing for various scenarios as a part of the issues to be resolved section
problem the writeup provides a gist of the project implementation stages though it does specifically include a test plan section it has the list of tasks performed while testing for various scenarios as a part of the issues to be resolved section
problem the writeup only tells what is to be done and how it is done the rational behind choosing the approach is not mentioned neither are any of the principles mentioned
problem the writeup only tells what is to be done and how it is done the rational behind choosing the approach is not mentioned neither are any of the principles mentioned
problem the writeup only tells what is to be done and how it is done the rational behind choosing the approach is not mentioned neither are any of the principles mentioned
problem the writeup needs significant improvement no clear explanation is given as to which files are edited for which reason only file names are stated along with changes made why the changes were made and what do those changes correct is not given this review was given by me last time and no improvement has been made in this regard
problem the writeup needs significant improvement no clear explanation is given as to which files are edited for which reason only file names are stated along with changes made why the changes were made and what do those changes correct is not given this review was given by me last time and no improvement has been made in this regard
problem the writeup misses out on elaborating the approach taken it just lists the problem statement and jumps to test cases and fix i would like to see more details on the approach taken   the why is missing   
problem the writeup misses out on elaborating the approach taken it just lists the problem statement and jumps to test cases and fix i would like to see more details on the approach taken   the why is missing   
problem the writeup mentions what lines of code were changed but it does not clearly specify what each changed portion of code means
problem the writeup mentions what lines of code were changed but it does not clearly specify what each changed portion of code means
problem the writeup mentions about the changes done in the code but not how and why it was done instead the team could explain each code change more and give a link to the code change from github
problem the writeup lists the task to be performed under the work to be done section it enlists the criteria required to be achieved as part of the project submission the team can adopt a workflow that can give details about how the team managed to reach the current implementation such as understanding the files involved steps taken for setting the expertiza environment etc
problem the writeup lists the task to be performed under the work to be done section it enlists the criteria required to be achieved as part of the project submission the team can adopt a workflow that can give details about how the team managed to reach the current implementation such as understanding the files involved steps taken for setting the expertiza environment etc
problem the writeup leaves me unable to really determine what was done to the point where i can examine the work in their application for correctness especially since as a refactor the behavior should not have changed from the base expertiza application
problem the writeup leaves me unable to really determine what was done to the point where i can examine the work in their application for correctness especially since as a refactor the behavior should not have changed from the base expertiza application
problem the writeup just simply explanin what is expertiza and the requirement for this program
problem the writeup is written in a very verbose manner they still haven t added the test plan which was missing   suggestion i feel that the test plan should have been added explicitly  
problem the writeup is well written but i feel there are some missing details about the project the team could elaborate on the issues in the project and the solution that they have implemented this way it would better in understanding how and why the authors did the work that they did
problem the writeup is well written but i feel there are some missing details about the project the team could elaborate on the issues in the project and the solution that they have implemented this way it would better in understanding how and why the authors did the work that they did
problem the writeup is well written with proper screenshots i liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project however the test plan section could be improved by adding the test code
problem the writeup is well written with proper screenshots i liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project however the test plan section could be improved by adding the test code
problem the writeup is well written with proper screenshots i liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project however the test plan section could be improved by adding the test code
problem the writeup is well written but not as explanatory as required
problem the writeup is thorough but screenshots could be added the instructions are missing too rest all looks good
problem the writeup is sufficient in itself but not as exhaustive or easy to understand from the perspective if an outsider the author could have elaborated more on the problem statement and how it related with expertiza also instead of directly jumping to the implementation the author could have explained a little bit more about why and what was the approach taken by the author
problem the writeup is sufficient in itself but not as exhaustive or easy to understand from the perspective if an outsider the author could have elaborated more on the problem statement and how it related with expertiza also instead of directly jumping to the implementation the author could have explained a little bit more about why and what was the approach taken by the author
problem the writeup is really nicely written it clearly mentions the work done however the problem statement could have been explained a little more
problem the writeup is really nicely written it clearly mentions the work done however the problem statement could have been explained a little more
problem the writeup is lucid enough to explain the details of the issue and how the system works after fixing it suggestion 1 the authors can add a section on testing explaining about how the issue fix can be tested 2 they can improve the readability by mentioning issue numbers from document issued by the prof on the write up it will save time of the reader to go through the document and map which issue has been fixed
problem the writeup is lacking in terms of explanation of how to test the funcionality thoroughly
problem the writeup is lacking in terms of explanation of how to test the funcionality thoroughly
problem the writeup is lacking in terms of explanation of how to test the funcionality thoroughly
problem the writeup is great i could get all the info i needed to understand the problem could refine the describing issues section a bit as i could see sentences like   please take a look at the github issue for suggestions on how to solve this
problem the writeup is good overall but  it would have been better if more code snippets were added along with explanation of why certain methods are obsolete
problem the writeup is good overall but  it would have been better if more code snippets were added along with explanation of why certain methods are obsolete
problem the writeup is good and clearly explains the issues faced however instead of putting  in the code changed i feel it would be better to have screenshots of git commit history where we can see both the previous code and new code to get a good idea of what actually was changed
problem the writeup is excellent very carefully written a lot of detailed explanation some more background information about the functions can be more helpful as well as syntax summation
problem the writeup is excellent very carefully written a lot of detailed explanation some more background information about the functions can be more helpful as well as syntax summation
problem the writeup is disorganized and does not specify the function carried out by the team during the project   it does not follow the typical format of the writeup and provides a list of items such as files involved and task expected
problem the writeup is detailed but it doesn t explain why code in the model had to be commented out very well that was a bit alarming
problem the writeup is detailed but it doesn t explain why code in the model had to be commented out very well that was a bit alarming
problem the writeup is clear it is easy to understand what the project does it would be better if you can put in more code details and major pieces that do the important logic
problem the writeup is clear and has illustrations to explain the flow however none of the code is added to the documentation the project also only defines the test added but could add more details about the increase in coverage
problem the writeup is clear and has illustrations to explain the flow however none of the code is added to the documentation the project also only defines the test added but could add more details about the increase in coverage
problem the writeup is a bunch of codes there s not enough explanation   the allow function is important for the mock functions but it is explained in no place
problem the writeup is a bunch of codes there s not enough explanation   the allow function is important for the mock functions but it is explained in no place
problem the writeup includes the code used but it would help if the wiki also explained how the authors came up with that solution
problem the writeup includes some of the work done although it looks a bit incomplete and does not convey much about the project
problem the writeup has proper instructions but needs some improvements 1 explain the problem statement  2 explain why you need the solution 3 explain the steps you took the code snippets are added but could be improved by adding explanation of the tests may be adding 1 2 lines can help
problem the writeup has  covered nearly everything we need all the function details are in the writeup as welll as each function however i think there s too much code and not enough textual explanation
problem the writeup has  covered nearly everything we need all the function details are in the writeup as welll as each function however i think there s too much code and not enough textual explanation
problem the writeup gives an easy understanding introduction of the two classes the team needed to test also there is detailed test plan is provided the wiki also shows how the test cases are designed and the results however for the motivation part it is a little bit general which needs to add more things specific for this project
problem the writeup gives a high level overview of the work done suggestion 1 you can try to make the write up more illustrative by discussing which refactoring principles were implemented in which files and how does it make a difference 2 you can take help of code snippets to make it more understandable
problem the writeup explains why the tests they write relate to their respective methods but doesn t justify a 77 loc coverage which is below the requirements for the project
problem the writeup explains why the tests they write relate to their respective methods but doesn t justify a 77 loc coverage which is below the requirements for the project
problem the writeup explains what is intended to be done however still the information is somewhat incomplete
problem the writeup  explains the problem statement well but fails to explain the approach and just have pasted their code it also fails to have a reasoning behind the approach they chose suggestion 1 the author can describe how they came up with an approach starting from analyzing the issue this will remarkably improve the writeup 2   the author can talk about atleast one more approach to fix the solution and explain why they chose a particular approach for implementation  
problem the writeup explains how the changes are made but does not state about design patterns used and the code dose not show any use of patterns
problem the writeup explains everything regarding why and how the steps were carried out
problem the writeup expalins clearly enough what the authors did though the part of why the authors did what they did isn t elaborated with much depth from the authors perspective the articles seems exhaustive and comprehensive but for a person reviewing the article who doesn t have much background of the problem at hand the article make it tough to decipher why certain program is written the way it is  
problem the writeup expalins clearly enough what the authors did though the part of why the authors did what they did isn t elaborated with much depth from the authors perspective the articles seems exhaustive and comprehensive but for a person reviewing the article who doesn t have much background of the problem at hand the article make it tough to decipher why certain program is written the way it is  
problem the writeup expalins clearly enough what the authors did though the part of why the authors did what they did isn t elaborated with much depth from the authors perspective the articles seems exhaustive and comprehensive but for a person reviewing the article who doesn t have much background of the problem at hand the article make it tough to decipher why certain program is written the way it is  
problem the writeup does talk about the changes and why the authors did it that way   rather than pasting the code without any indentation in the wiki page the authors could have pasted screenshots of the code this might have made it easier to comprehend    
problem the writeup does not talk about the functionalities however they include what is missing and what they will include
problem the writeup does not talk about the functionalities however they include what is missing and what they will include
problem the writeup does not talk about the functionalities however they include what is missing and what they will include
problem the writeup does not talk about the functionalities however they include what is missing and what they will include
problem the writeup does not include the test plan section it is suggested that the team add the section and include a number of different aspects such as specifying the edge cases and preconditions considered while working on the test cases
problem the writeup does not include the test plan section it is suggested that the team add the section and include a number of different aspects such as specifying the edge cases and preconditions considered while working on the test cases
problem the writeup does not include the test plan as of now but that is the only thing which is left for the team to complete the team could work on this and try to improve the test coverage
problem the writeup does not include the test plan as of now but that is the only thing which is left for the team to complete the team could work on this and try to improve the test coverage
problem the writeup does not include the test plan as of now but that is the only thing which is left for the team to complete the team could work on this and try to improve the test coverage
problem the writeup does not include any test plan
problem the writeup does not have the test plan section they need to include it by specifying the section that describes the pre conditions considered by the team while working on the refactor review on the different question types from the uiz feature  
problem the writeup does not have a test plan not able to check if they considered  different pre conditions edge cases invalid input values and other possibilities
problem the writeup does not have a test plan not able to check if they considered  different pre conditions edge cases invalid input values and other possibilities
problem the writeup does not have a test plan
problem the writeup does not have a test plan or any related info on why it is not covered
problem the writeup does not explain the changes also the wiki page is not elaborative about the changes made
problem the writeup does emphasize on how the issues are resolved however lacks a reasoning as to why did they choose it   suggestion it is hard to follow the code as there is lack of comments you can try to include meaningful comments for every function you have introduced that will increase code readability
problem the writeup does bot explain how and why the authors did the work the way they did
problem the writeup clearly explains the project a single rejoinder per team for reviews but does not explicitly say the advantages of having such a system on the other hand the authors do justify the need to fix navigation issues for giving feedback to reviewers as it results in a user friendly ui the modification to summary report to accommodate collective feedback is logical and directly implied if the main problem statement of single rejoinder per team is properly justified
problem the writeup clearly explains the implementation details and why those changes were made it is nicely articulated and leaves no ambiguity
problem the writeup clearly explained the need for the off screen canvas api however the explanation of how the feature was implemented was too shallow what is in those rs files
problem the writeup clearly explain why the team did the work that they did good job on that the only thing i may have preffered to have as a reviwer is a detailed step by step instruction on how to view the changes made by the team in the app this could be added in the wiki or a short screencast could me made to help follow the steps
problem the writeup can be improved to begin with a short description of the project backgound so that anyone reading the writeup can understand what the project is all about
problem the writers have explained what they did in the project and how they did it but i could not find a why no reason behind the approach is specified
problem the writers have explained what they did in the project and how they did it but i could not find a why no reason behind the approach is specified
problem the write ups been written well a small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does also the team could use code snippets instead of screenshots of the code
problem the write ups been written well a small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does also the team could use code snippets instead of screenshots of the code
problem the write ups been written well a small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does also the team could use code snippets instead of screenshots of the code
problem the write up was very good in the sense that it mentioned the high level view of the tasks first and then dug deeper under the hood but it only showed what files they changed and what it produced as a result they could have also shown what is that they changed or provided a link in the wiki yes one can deduce that from the pull request too but having a link or the content itself on the wiki is a big boon
problem the write up was very good in the sense that it mentioned the high level view of the tasks first and then dug deeper under the hood but it only showed what files they changed and what it produced as a result they could have also shown what is that they changed or provided a link in the wiki yes one can deduce that from the pull request too but having a link or the content itself on the wiki is a big boon
problem the write up was nicely written in the first round itself it gives a clear idea of the project
problem the write up was good and clearly explains the issues faced and the code changed it would have been much more clear if screenshots of git file changed were posted  
problem the write up only tells what is to be done and how it is done the rational behind choosing the approach is not mentioned neither are any of the principles mentioned   it has comparisons between the previous and new versions and why they made they made the necessary modifications
problem the write up mentions the function of each section of the relevant code however it is not clear what the changes made to the code are
problem the write up lacks screenshots relevant images screencast to explain the workflow of the project this would increase the readability of the wikipage also the team has added testplan and included description for the code presented in the wiki these points were mentioned during the previous review which were picked up by the team the team has done a good work in improving their writeup as compared to the previous version
problem the write up lacks screenshots relevant images screencast to explain the workflow of the project this would increase the readability of the wikipage also the team has added testplan and included description for the code presented in the wiki these points were mentioned during the previous review which were picked up by the team the team has done a good work in improving their writeup as compared to the previous version
problem the write up is well written it looks like they have improved the test plan sections but still no automated tests in the repository
problem the write up is well written it looks like they have improved the test plan sections but still no automated tests in the repository
problem the write up is well written it looks like they have improved the test plan sections but still no automated tests in the repository
problem the write up is well written but is missing a few things the original problem description how will the changes being proposed will be implemented etc
problem the write up is well written but is missing a few things the original problem description how will the changes being proposed will be implemented etc
problem the write up is well written but is missing a few things the original problem description how will the changes being proposed will be implemented etc
problem the write up is well written and organised everything looks fine the team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand also the team could have included few screen shots in the write up  
problem the write up is well written and organised everything looks fine the team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand also the screenshots could be a little better
problem the write up is well written and organised everything looks fine the team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand also the screenshots could be a little better
problem the write up is well written and organised everything looks fine the team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand    
problem the write up is well written and looks through the write up details what has been accomplished and there are plenty of screenshots to support this however there is no mention of what code has been changed added and why the authors chose this change   test plan has also been well written   the parts written are well written but there s a good scope of improvement
problem the write up is well written and looks through the write up details what has been accomplished and there are plenty of screenshots to support this however there is no mention of what code has been changed added and why the authors chose this change   test plan has also been well written   the parts written are well written but there s a good scope of improvement
problem the write up is well written and looks through the write up details what has been accomplished and there are plenty of screenshots to support this however there is no mention of what code has been changed added and why the authors chose this change   test plan has also been well written   the parts written are well written but there s a good scope of improvement
problem the write up is well written along with the screenshots attached for the code changes which helps in explaining the issues and changes made to solve those   just one suggestion if you are explaining all the steps and redirection for some issues changes please keep the content consistent for other issues changes as well
problem the write up is well written along with the screenshots attached for the code changes which helps in explaining the issues and changes made to solve those   just one suggestion if you are explaining all the steps and redirection for some issues changes please keep the content consistent for other issues changes as well
problem the write up is well explained but could have described more on the methods whey implemented and why did it implement  in a certain way
problem the write up is well explained but could have described more on the methods whey implemented and why did it implement  in a certain way
problem the write up is well explained along with the test plans explained in steps to make it easy for testing but that just have a few cases with cover basic functionalities
problem the write up is well explained along with the test plans explained in steps to make it easy for testing but that just have a few cases with cover basic functionalities
problem the write up is very well written and documented it is aided well with the the help of screenshots and proper labelling the only small thing that i would like to suggest is the steps to reproduce or something similar so that the person not familiar with the expertiza  can also reach to the desired place
problem the write up is very self explanatory it successfully covers each and every aspect of the work done by the team and also to an extend delvers what mindset they had while working o the project which is very great just one sugestion is that instead of simply dumping the files they could have made a quick note of what the code in the file does no one want to go through each and every line of code just to get an idea what it is meant to be
problem the write up is very minimal i think it should elaborate made 
problem the write up is very minimal i think it should elaborate made 
problem the write up is very detailed with comparisons between previous and new versions as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features
problem the write up is very detailed with comparisons between previous and new versions as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features
problem the write up is very detailed as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features
problem the write up is very detailed as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features
problem the write up is very detailed as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features and how to test the code or show how they have tested the code
problem the write up is very detailed as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features and how to test the code or show how they have tested the code
problem the write up is very detailed as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features and how to test the code or show how they have tested the code
problem the write up is pretty ambiguous and feels all cluttered up maybe elaborating on few lines and separating the one whole paragraph into bullet points under different headings would have made it more readable and clear
problem the write up is good but it doesn t feel much refined or improvised after the initial edit as mentioned above the image isn t visible clearly which means that it wasn t reviewed much after posting but apart frm that the flow of the write up is very effective in fact one of the best that i ve reviewed the concept of giving a higher lvel view and then diving deeper into the implementation is very subtly applied
problem the write up is difficult to follow and doesn t provide much insight into how the testing code works despite having a test plan section no test plan is included
problem the write up is difficult to follow and doesn t provide much insight into how the testing code works despite having a test plan section no test plan is included
problem the write up gave a good introduction to the project by providing the background information about the servo parallel web engine project by mozilla for web page rendering and rust programming language to execute html5 and css3 parsers it then highlighted the offscreencanvas api that can be used to generate frames and also return the rendered image using the transfertoimagebitmap method the writeup covered how web workers can be used to implement offscreencanvas api to render images as an independent process isolated from the webpage the problem statement of of creating  offscreencanvas and offscreencanvasrenderingcontext2d interfaces with  offscreencanvas constructor properties  width and height and getcontext method was defined the use of web idl to describe interfaces for web browsers was briefed and that was followed by the code flow and the code snippet of the two web idl files namely offscreencanvas webidl and offscreencanvasrenderingcontext2d webidl while the write up was cogent and clearly explained the work done it could have elaborated on the implementation of the methods like transfertoimagebitmap and how the interface is integrated into the system to render images in a webpage using an isolated web worker
problem the write up does not include a test plan section if a test section had been included then the different scenarios pre conditions edge cases and invalid input values would have been dealt
problem the write up did cover about the efficiency of servo to render webpages quickly and smoothly when compared to mozilla s other rendering engines servo does this using  parallel layout styling web renders and constellation and in turn sandboxes the processes   threads and tasks that allows the browser to fail better hence making it more robust and secure   it justified the use of rust to rewrite c and effectively the browser as well  
problem the write up contains the information about how the solution was achieved the details about why the solution was implemented in this way is currently missing from the documentation the team should include the same in the documentation as well  
problem the write up contains the information about how the solution was achieved the details about why the solution was implemented in this way is currently missing from the documentation the team should include the same in the documentation as well  
problem the write up contains the information about how the solution was achieved the details about why the solution was implemented in this way is currently missing from the documentation the team should include the same in the documentation as well  
problem the write up contains the information about how the solution was achieved the details about why the solution was implemented in this way is currently missing from the documentation the team should include the same in the documentation as well
problem the write up contains the information about how the solution was achieved the details about why the solution was implemented in this way is currently missing from the documentation the team should include the same in the documentation as well
problem the write up was well explained test cases were with images of test cases in the ui the code could have a github screenshot or the link to the changed file for more clarity
problem the write up starts with introduction about expertiza test driven development and unit testing it then moves over to describing the problem statement team members test plan and implementation that contains detailed documentation on the procedure to set up the expertiza environment functionalities of menu model sample views declaration of mock objects as test entries and finally the conditions tested on each of the method of the node and menu class the various methods tested on the node class include initialize setup site_controller controller_action content_page and add_child similarly the methods tested on the menu class include initialize select get_item get_menu selected selected and crumbs   the write up also includes the screenshot of the rspec tests that were run the screenshot of the simplecov coverage report is blurred and not readable   the write up ends with concluding remarks learning outcomes and references overall the documentation was very precise and clear with all the information needed to understand the code on github the authors could have included and highlighted how to run the rspec code since their project specifically deals with unit testing another apparent issue that i can point out is the quality of screenshot
problem the write up is written adequately only thing is to reduce the code shown on the wiki page as i feel that it might be irrelevant to have the whole code increasing the reading page size
problem the write up is written adequately only thing is to reduce the code shown on the wiki page as i feel that it might be irrelevant to have the whole code increasing the reading page size
problem the write up is well documented there is a clear flow from the code change part to the screenshots of the implementation it would have been better if there was a screenshot of the code from git or a link to git so that the code changes would have been more defined as per the green and red colour also the code change could be explained more
problem the write up is very well detailed with good information and pictures two things 1 put the write up on the expertiza wiki page instead of in a word document 2 on the wiki use the   tag to insert code snippets into the page instead of a screenshot of the code
problem the write up is simple and understandable it starts off by describing about expertiza motivation behind the project the tasks to do list of classes that are modified and impacted by the change i like how the authors have screenshots of both the existing code that is removed and the new code that is added in the pull request which juxtaposes them and highlights the tasks in the problem statement and goals of the project the write up then ends with the test plan which lists the test cases handled
problem the write up is short and to the point it could have been formatted and arranged in a better way
problem the write up is okay but could be a bit more descriptive could have provided screen shots of the changes to help reader understand better no initial instructions on where to get started
problem the write up is lacking screenshots for example the colour coded views etc and the test plan to verify the issues only the test plan for colour coding has been mentioned the issues and the plan of action have been described properly
problem the write up is lacking screenshots for example the colour coded views etc and the test plan to verify the issues only the test plan for colour coding has been mentioned the issues and the plan of action have been described properly
problem the write up is lacking screenshots for example the colour coded views etc and the test plan to verify the issues only the test plan for colour coding has been mentioned the issues and the plan of action have been described properly
problem the write up is good contains lots of pictures to show the added functionality i found the test steps a bit confusing and it made validation hard
problem the write up is good contains lots of pictures to show the added functionality i found the test steps a bit confusing and it made validation hard
problem the write up is good overall i believe there could be more explanation or discussion into test cases not included in the design but otherwise a good wiki
problem the write up is clear and concise the details about the functionalities are adequately explained  
problem the write up has some great information and snip its of code it would have been a great addition to have included more discussion on the overall design of your test cases overall a nice wiki
problem the write up has some great information and snip its of code it would have been a great addition to have included more discussion on the overall design of your test cases overall a nice wiki
problem the write up has not been formatted well most of it consists of what can already be read from the oss assignment specifications document i would strongly suggest the team to include screenshots of their commits instead of using wiki code formatting
problem the write up has most of the relevant information the formatting could have been better i would suggest the team to use a standard dimension for the screenshots they have added
problem the write up has most of the relevant information the formatting could have been better i would suggest the team to use a standard dimension for the screenshots they have added
problem the write up has been written well there s obviously some additions possible to the write up the code changes additions have been shown i would recommend description of why those changes additions were made i would also suggest the team to standardize the size of their screenshots  
problem the write up has been written well there s obviously some additions possible to the write up the code changes additions have been shown i would recommend description of why those changes additions were made i would also suggest the team to standardize the size of their screenshots  
problem the write up has a lot of code in it which does not show up what are the changes exactly made it would have been better to put the links to the git files where the code changes are made for good comparisons also with this the wiki size would have reduce
problem the write up has a lot of code in it which does not show up what are the changes exactly made it would have been better to put the links to the git files where the code changes are made for good comparisons also with this the wiki size would have reduce
problem the write up doesn t has a test  plan but looking at the code it seems they have check every edge case also since there coverage is coming to to be 100 everything should work
problem the write up does not show any detailed explanation of the project  
problem the write up does not mention any patterns if used and could not identify the pattern from the code as they have made changes using the database and not any function
problem the write up does not mention any patterns if used and could not identify the pattern from the code as they have made changes using the database and not any function
problem the write up does not have a test plan
problem the write up could ve been organized in a better manner and the authors could ve given more attention to detail for example i see they mention the project e1791 but without a hyperlink it was a little difficult to reach the documentation of that project the search bar didn t help matters too   it could ve been stated more clearly what requirement the earlier project implemented and what improvement this one does also the document does not  cover testing even some basic test cases a little formatting inconsistency the heading flowchart always has a colon attached to it but none of the other headings do
problem the write up could ve been organized in a better manner and the authors could ve given more attention to detail for example i see they mention the project e1791 but without a hyperlink it was a little difficult to reach the documentation of that project the search bar didn t help matters too   it could ve been stated more clearly what requirement the earlier project implemented and what improvement this one does also the document does not  cover testing even some basic test cases a little formatting inconsistency the heading flowchart always has a colon attached to it but none of the other headings do
problem the write up could ve been organized in a better manner and the authors could ve given more attention to detail for example i see they mention the project e1791 but without a hyperlink it was a little difficult to reach the documentation of that project the search bar didn t help matters too   it could ve been stated more clearly what requirement the earlier project implemented and what improvement this one does also the document does not  cover testing even some basic test cases a little formatting inconsistency the heading flowchart always has a colon attached to it but none of the other headings do
problem the write up can be improved by explaining all the methods which are tested
problem the write up can be improved by explaining all the methods which are tested
problem the write up as well done however the write up is missing the test plan  
problem the write up addresses details of all the three problem statements along with the code changes done in every file and the files added the team has also added screenshots of the manual testing
problem the write is well organized and clear in its material the authors have improved the write up by explaining what each newly defined functions work and added code snippets wherever necessary   however the test plan is still missing from the write up
problem the write has only details of team members and files changed out of the two files mentioned only one is currently committed in git vm_question_response rb is missing may be a commit issue
problem the wirteup is pretty good it gives the test plan and all the test cases also there is explanation of the test process and logic just one minor problem   the 29 tests provide 100 coverage of the lines in menu rb before the project the coverage was only it is an incomplete sentence
problem the wireframes themselves make the project self explanatory that being said enough explanation about how the team will tackle the problem statement has been given things like what api will be used to achieve the objective has been mentioned no suggestions
problem the wiki talk about what they have done throughly it could be better if they have mention about how they do that  
problem the wiki talk about what they have done throughly it could be better if they have mention about how they do that  
problem the wiki should not include conclusion and learning outcomes part it is not a report of the project but a page to show what the project itself is
problem the wiki provides enough introductions for this project according to the wiki i can get a clear insight about what the project is what s the issues include in it why the team do things as the way they said and the tests they give to make sure the functions work properly however the description for the first issue is not very clear and makes me confusing
problem the wiki provides enough introductions for this project according to the wiki i can get a clear insight about what the project is what s the issues include in it why the team do things as the way they said and the tests they give to make sure the functions work properly however the description for the first issue is not very clear and makes me confusing
problem the wiki page is prepared with a good research on the topic just test plans are left to be added
problem the wiki page is divided into some nice sections however the authors have just included the code as it is without any description of the work that they have done
problem the wiki page is divided into some nice sections however the authors have just included the code as it is without any description of the work that they have done
problem the wiki page is divided into some great sections that provide details about the project   i appreciate that the team provided actual code snipits along with explanation of the test to afford the reader a deeper understanding the first paragraph in the design section is a bit hard to follow it would be helpful to have this explanation accompanied by the tests these stubs were associated with and or the actual implementation of these stubs for a better grasp of their purpose i  would recommend combining the test and design sections for a easier flow of reading and following test implementations thank you for the results section of the wiki that wraps up the project and is an easy point of reference for the reader to see the outcome of the project  
problem the wiki looks too long with a lot of code it does have all the code and test cases but its better to have git links to each code and more explanation of the code used above it in the wiki this will help the readers to compare the changes in the code with the explanation parallelly
problem the wiki looks too long with a lot of code it does have all the code and test cases but its better to have git links to each code and more explanation of the code used above it in the wiki this will help the readers to compare the changes in the code with the explanation parallelly
problem the wiki lists a lot of terminology but few with how they do this project
problem the wiki is well written and contains all required information regarding the project the screenshots can be included in the wiki and the code pasted in the documentation could be formatted the team also need to inlcude the test plan section in the wiki apart from this the team did a great work    
problem the wiki is well written and contains all required information regarding the project the only scenario missing from the documentation is the scenario where the ta is assigned to a instructor what will happen to the instructors impersonated students when the ta of the constructor login to the application apart from this the team did a great work  
problem the wiki is well written and contains all required information for issue 1 the documentation for other issues still needs to be included apart from this the team did a great work    
problem the wiki is quite comprehensive and gives the build steps clearly it could also include a more basic explanation in layman terms about what the offscreencanvas api does
problem the wiki is quite comprehensive and gives the build steps clearly it could also include a more basic explanation in layman terms about what the offscreencanvas api does
problem the wiki is great but i believe it s better to move the testing framework part to front of the page
problem the wiki is detailed enough that it mentions all the functionalities required in the project the team has made sure to  explain all the changes they wish to make to the system they list all columns that need to be sorted and how they will implement the sorting
problem the wiki is descriptive and covers the essentials of the project in my opinion i think the code for every test is not required it is enough to explain the structure and code for one test maybe and what each test is supposed to do for the rest of the tests that should suffice
problem the wiki is descriptive and covers the essentials of the project in my opinion i think the code for every test is not required it is enough to explain the structure and code for one test maybe and what each test is supposed to do for the rest of the tests that should suffice
problem the wiki has all the relevant information though i feel it needs to be a bit more organized the titles and order need to change the content needs to be placed at proper places for example test plan lists all the test cases and code which  according to me should be covered in the implementation
problem the wiki has all the relevant information though i feel it needs to be a bit more organized the titles and order need to change the content needs to be placed at proper places for example test plan lists all the test cases and code which  according to me should be covered in the implementation
problem the wiki give the motivation for this project but it is general and should be more detailed for this project
problem the wiki give the motivation for this project but it is general and should be more detailed for this project
problem the wiki explains the problem statement well and proposes relevant solution the team has done a great job on stating the design approach and has included diagrams for them however the team needs to add the testing plan for the project
problem the wiki explains the problem statement very well along with the proposed solution which seems reasonable but the wiki does not include any test plans as of now there are a few test cases which can be used to write the test plan for eg not adding drop deadline for the assignment itself and assigning each topic a drop deadline and check the behaviour of the system
problem the wiki does not include any discussions about design principles or patterns that were used in the project   one thing that stands out in the code is that every mock object is defined at the start of the file the team could provide a rationale for this decision and why it is superior to for example using different mocks for each separate test suite
problem the wiki does not include any discussions about design principles or patterns that were used in the project   one thing that stands out in the code is that every mock object is defined at the start of the file the team could provide a rationale for this decision and why it is superior to for example using different mocks for each separate test suite
problem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to they havent updated any part of the wiki documentation but overall their documentation is concise and to the point
problem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to they havent updated any part of the wiki documentation but overall their documentation is concise and to the point
problem the wiki document for the project does not provide enough details about the project and the task performed by the team it contains of only a rough overview of the project at this stage it does not reveal much about the functionality of the program
problem the wiki document for the project does not provide enough details about the project and the task performed by the team it contains of only a rough overview of the project at this stage it does not reveal much about the functionality of the program
problem the wiki defines the primary goal of the project but it does not contain a discussion about the plan or strategy that is utilized to solve the problem raw code is copied from review_response_map rb and review_response_map_spec rb files however this does not give the reader any useful information   i would suggest replacing the review_response_map rb code with a short description of what the team needed to understand about the given code in order to write the test suite furthermore the team can provide a listing of higher level method descriptions from review_response_map_spec rb what are the expectations and which mock objects are being used to achieve the result one minor improvement would be removing parts like expertiza description http wiki expertiza ncsu edu index php csc ece_517_fall_2018 e1850 _write_unit_tests_for_review_response_map rb background because it is redundant in this context
problem the wiki defines the primary goal of the project but it does not contain a discussion about the plan or strategy that is utilized to solve the problem raw code is copied from review_response_map rb and review_response_map_spec rb files however this does not give the reader any useful information   i would suggest replacing the review_response_map rb code with a short description of what the team needed to understand about the given code in order to write the test suite furthermore the team can provide a listing of higher level method descriptions from review_response_map_spec rb what are the expectations and which mock objects are being used to achieve the result one minor improvement would be removing parts like expertiza description http wiki expertiza ncsu edu index php csc ece_517_fall_2018 e1850 _write_unit_tests_for_review_response_map rb background because it is redundant in this context
problem the wiki could have been organized better it looks a little messy not self explanatory the use case does not have any actors in it suggestion code screenshots could have been placed better
problem the wiki clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of  their inner workings i would suggest removing parts like high level descriptions of expertiza and unit tests http wiki expertiza ncsu edu index php oss_e1852 rb unit_test_description because they are redundant in this context
problem the whole wiki page is complete and neat while it might be easier to understand if they reorder the test plan with other parts of the page
problem the website is not up yet i looked through the code looks like there are still some functionalities not implemented
problem the website is not up yet i looked through the code looks like there are still some functionalities not implemented
problem the way the team plans to loop through each review to calculate a review score seems slightly more complex than necessary but i agree with them taking this apporach as it will allow them to break down the reason why the scores are different
problem the visuals used are excellent but it would have been nice to not overwhelm the reader
problem the visuals used are excellent but it would have been nice to not overwhelm the reader
problem the visuals used are excellent but it would have been nice to not overwhelm the reader
problem the visuals are very helpful more clear view of how delegation pattern is being used would have been appreciable
problem the visualizations help a bit alongside the descriptions but aren t really useful for conveying information
problem the visualization includes a screen mock up analyze   button which will implement the algorithm and produce the output however there is no mock up of the screen of what will the output be like the flow diagram is highly redundant according to me as it does not portray any additional information about the design i would suggest them to provide a sequence diagram of the algorithm methods so as to illustrate their changes
problem the visualization includes a screen mock up analyze   button which will implement the algorithm and produce the output however there is no mock up of the screen of what will the output be like the flow diagram is highly redundant according to me as it does not portray any additional information about the design i would suggest them to provide a sequence diagram of the algorithm methods so as to illustrate their changes
problem the visualization includes a screen mock up analyze   button which will implement the algorithm and produce the output however there is no mock up of the screen of what will the output be like the flow diagram is highly redundant according to me as it does not portray any additional information about the design i would suggest them to provide a sequence diagram of the algorithm methods so as to illustrate their changes
problem the visualization clearly conveys the high level goals of the project it does not explain the design in detail however
problem the visualization aids used currently are application flow diagram and use cases they are useful to understand the scenario of the problem statement however a sequence or a communication diagram will really be beneficial to understand how the method interfaces with the other  methods this will help identify if the new method impacts other functionalities and will portray the proposed solution efficiently
problem the visualization aids used are class diagram for the strategy pattern use cases to explain the test plan the class diagram is very useful to illustrate the approach used by the team and it succeeds in explaining they have made changes according to the suggestion provided in the previous review a sequence diagram will help understand the flow of the methods from one controller to the other as the design suggests so
problem the visualization aids used are class diagram for the strategy pattern use cases to explain the test plan the class diagram is very useful to illustrate the approach used by the team and it succeeds in explaining they have made changes according to the suggestion provided in the previous review a sequence diagram will help understand the flow of the methods from one controller to the other as the design suggests so
problem the view inquiries link takes you to the wrong page users can t view nor edit their profile there isn t as far as i can tell any way to post a house as a realtor
problem the view file contain 200 more files so it is quite difficult to figure out the  structure of the view it is better if independent component is introduced to construct the whole task view and the commits contain the gemfile which is considered not secure to deploy for it alters the production environment  
problem the view file contain 200 more files so it is quite difficult to figure out the  structure of the view it is better if independent component is introduced to construct the whole task view and the commits contain the gemfile which is considered not secure to deploy for it alters the production environment  
problem the view file contain 200 more files so it is quite difficult to figure out the  structure of the view it is better if independent component is introduced to construct the whole task view and the commits contain the gemfile which is considered not secure to deploy for it alters the production environment  
problem the video shows all the test cases pass but i m skeptical that they got all the  corner cases looking at the review_response_map rb model there are a lot of methods which aren t explicitly tested
problem the video shows all the test cases pass but i m skeptical that they got all the  corner cases looking at the review_response_map rb model there are a lot of methods which aren t explicitly tested
problem the video shows all the test cases pass but i m skeptical that they got all the  corner cases looking at the review_response_map rb model there are a lot of methods which aren t explicitly tested
problem the variables methods and class names do seem to follow proper convention and are suggestive of the functionality they are being used for in some cases they could have used a liitle more desciptive names for variables for example inside app helpers student_task_helper rb  they could have used background_colour instead of rtn as a variable name in the due_date_color method it will become more readable for the reviewers to understand the functionalities
problem the variables methods and class names do seem to follow proper convention and are suggestive of the functionality they are being used for in some cases they could have used a liitle more desciptive names for variables for example inside app helpers student_task_helper rb  they could have used background_colour instead of rtn as a variable name in the due_date_color method it will become more readable for the reviewers to understand the functionalities
problem the variables methods and classnames are aptly named i could not find names which are not suggestive of functionaliy
problem the variables methods and class names used do not justify the features performed and do not implement the desired functionality expected also the code added does not improve the coverage of the files the team should look towards using appropriate names and provide desired code segments to get a high coverage
problem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality i the writeup is well written and easy to read ii it is adequately descriptive of the work done iii   explanation of reasons for the style of code and problem solving approach is lacking
problem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality i the writeup is well written and easy to read and well commented ii it is adequately descriptive of the work done iii explanation of reasons for the style of code and problem solving approach is lacking
problem the variable and method names look clean and concise no new class is added
problem the users controller has a lot of nested if block in the forgotpassword method and resetpassword method
problem the users controller has a lot of nested if block in the forgotpassword method and resetpassword method
problem the user name issue seems to not have been resolved when tested manually the code may be deployable and would not cause a problem since there are not many complicated changes
problem the user name issue does not seem to have been resolved although the code added seems adequate i was able to create a username with spaces in the string
problem the user name issue does not seem to have been resolved although the code added seems adequate i was able to create a username with spaces in the string
problem the user model has been tested although i can t say it is thorough at this point as it only tests the validity that is already required by the model
problem the user model has been tested although i can t say it is thorough at this point as it only tests the validity that is already required by the model
problem the user model and controller has been tested it does not test whether the system handles the case that a user uses the same email to register twice  
problem the user model and controller has been tested it does not test whether the system handles the case that a user uses the same email to register twice  
problem the user interface was working as described in the readme file   the ui functionality don t have any issues apart from the one noted in additional comments if team would have given some assets stylesheets config   the ui would have been great on the looks as well
problem the user interface looks pretty is clean and intuitive but the placement of menu buttons was rather not obvious it took time for me to figure out login signup buttons and i also had to actively look for buttons to perform actions after signing in which isn t actually much user friendly though it may seemed cliche but i think it is very user friendly to have action buttons on the content of the web page rather than having them at the top inside the header but apart from that the simplicity and the look and feel was pretty good
problem the user interface lack multiple navigation functionalities such as it does have any cancel or back button   so if a user tries to move back or cancel while creating a company he would be stuck and would not be able to move to any other tab
problem the user interface is very well designed and the cleanest and the most user friendly among all that i ve reviewed till now the ui is very intuitive and the alternate shading of the lists improves legibility a lot the only place where the ui was deficient was that it didn t seem consistent the login signup page had a different ui compared to other pages i suppose improving consistency would increase user friendliness of the application to a lot of extent  
problem the user interface is very simple clear and straightforward but it lacks depth where it should have been extensive for example after signing up for the first time the user is directed by to the login page to login again this is not very user friendly and is rather redundant one must automatically sign in after creating an account also the application should deduce whether i m a realtor or a househunter or an admin from the email id i entered i should atleast now have to specify for househunter or realtor about my role
problem the user interface is very pimitive the team could have done much more they have not designed it very well although i was not looking for graphics but the element placement could have been much more improved  
problem the user interface is very intuitive the idea to add a field for preferred contact is very smart and relevant displaying the number of registered users however seems irrelevant to the house hunter and realtor perhaps this can be a function of the admin account where it would be more relevant
problem the user interface is very intuitive i like the modern look and feel of the ui as well as the icons and images it s quite professional excellent work the various buttons are in good locations the button text could be darker however the new user link could be made into a bigger button which would make it more prominent right now it is hard to see
problem the user interface is very confusing it is difficult to get to the sign up page to begin with and then the messages isrealtor and ishousehunter are cryptic to actual users anyone other than computer scientists it is very difficult to follow where the links take you on the website and what exactly you are looking at at any given moment
problem the user interface is very appealing the show view is especially remarkable that makes good use of the attractive classes of css and bootstrap the navigation links provided in every page are very helpful to explore the website the switch user capability makes it easy for users to switch between roles without the hassle of logging out and logging in again one issue that i encountered was that the inquiries controller has not been fully implemented which lands the website into an error page  
problem the user interface is pretty intuitive few things like the create house functionality is breaking on heroku and giving an application error
problem the user interface is pretty intuitive few things like the create house functionality is breaking on heroku and giving an application error
problem the user interface is nice i suggest you move the search button in the houses screen to the left also yes and no would probably be more user friendly than true and false for the basement condition the new user window was very intuitive and powerful note i found a bug in this window changing the admin account with realtor checked causes an error the error screen was graceful however also please use radio buttons for hunter or realtor not checkboxes please also include the type of the user in the users window
problem the user interface is done as it would be in a basic ruby application which is good there is no login functionality this is mentioned in the readme which was helpful some functionalities which could be improved are 1         1   when i try to add a new house hunter from admin i get a contact method is not included in the list error as a user i don  t know what kind of values your system is expecting in this field so it might help to probably provide a dropdown selection element and put in your values there in this way the user will always select a value which your system is expecting if there are a finite number of values you can just hard code them into the html element else pick it up from the db and populate your dropdown as such 2           2 when i click on back from the new househunter url i am directed to show all house hunters url you could improve this by updating the link to for this back button by providing it with the user_url or you could detect which is the current user logged in realtor house hunter admin and accordingly redirect to that role  s home page url
problem the user interface is average   the good parts i found about ui are 1 error messages while registering a new admin house hunter realtor house company were helpful 2 front end checks like mail and phone number size and type etc have been used properly 3 dropdown for companies while registering houses for houses while submitting inquiruies  etc are properly implemented and easy to use however several very small changes would make the ui much better 1 allow a drop down  when signing up as roles 2 add inquire  a house or add a new house to interest list etc functionalituies  at the top if house list gets a few hundred rows long user must scroll all the way down to  access the functionalities 3 add message as  to why login failed something as simple as invalid credentials would suffice and let user know that the login is working but the password is incorrect
problem the user interface is average   the good parts i found about ui are 1 error messages while registering a new admin house hunter realtor house company were helpful 2 front end checks like mail and phone number size and type etc have been used properly 3 dropdown for companies while registering houses for houses while submitting inquiruies  etc are properly implemented and easy to use however several very small changes would make the ui much better 1 allow a drop down  when signing up as roles 2 add inquire  a house or add a new house to interest list etc functionalituies  at the top if house list gets a few hundred rows long user must scroll all the way down to  access the functionalities 3 add message as  to why login failed something as simple as invalid credentials would suffice and let user know that the login is working but the password is incorrect
problem the user interface has a very basic look and feel the sign up links being on every page is not ideal there should only be a log out link also the company in the realtor page is showing the id not the company s name i suggest you use a drop down menu for the preferred contact of the house hunter who is signing up it would be much more intuitive to have a single sign in page for all users there were also missing back buttons
problem the user interface has a very basic look and feel the sign up links being on every page is not ideal there should only be a log out link also the company in the realtor page is showing the id not the company s name i suggest you use a drop down menu for the preferred contact of the house hunter who is signing up it would be much more intuitive to have a single sign in page for all users there were also missing back buttons
problem the user interface has a bare bones look and feel but is intuitive overall the inquiries list is hard to find for the admin and the links below the tables could be placed at the top of the screen to improve the ux the inquiry component of the app had awkward navigation particularly for the realtor this is also awkward for the house hunter only one link is needed up top
problem the user interface has a bare bones look and feel but is intuitive overall the inquiries list is hard to find for the admin and the links below the tables could be placed at the top of the screen to improve the ux the inquiry component of the app had awkward navigation particularly for the realtor this is also awkward for the house hunter only one link is needed up top
problem the usecase diagram is helpful but does not help much as it just explains what is provided in the approach section more in depth functionality of what each user will do or how will the design flow flow chart would be more helpful
problem the usecase diagram is helpful but does not help much as it just explains what is provided in the approach section more in depth functionality of what each user will do or how will the design flow flow chart would be more helpful
problem the use of jquery plugin sounds simple and easy to use
problem the use of flowcharts  describe the functioning of the project exceptionally suggestion including screen mockups to your doc will add more weight to it
problem the use of active record is missing from the application there are no foreign key relationships in the schema although the relationship are maintained in the model file a separate database is created for admin realtor hunter which will store a lot of redundant data there is no database for storing the response of inquiries according to the db design a house belongs to both a company and a realtor directly which is not correct  
problem the use of active record is missing from the application there are no foreign key relationships in the schema although the relationship are maintained in the model file a separate database is created for admin realtor hunter which will store a lot of redundant data there is no database for storing the response of inquiries according to the db design a house belongs to both a company and a realtor directly which is not correct  
problem the use of active record is missing from the application there are no foreign key relationships in the schema although the relationship are maintained in the model file a separate database is created for admin realtor hunter which will store a lot of redundant data there is no database for storing the response of inquiries according to the db design a house belongs to both a company and a realtor directly which is not correct  
problem the use case diagrams are understandable but i think images of web pages will make things more clear
problem the use case diagrams are understandable but i think images of web pages will make things more clear
problem the use case diagram appears to be slightly incorrect the symbol for an should be a stick figure not a rectangle but that is a minor error also the use case diagram details mention student as an actor but the diagram shows no instance of student as an actor i think the student as an actor shouldn t be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores thus requiring no involvement from the students at that point in time mention of primary sequence in the use case diagram details seems highly unnecessary and potentially unrelated
problem the use case diagram appears to be slightly incorrect the symbol for an should be a stick figure not a rectangle but that is a minor error also the use case diagram details mention student as an actor but the diagram shows no instance of student as an actor i think the student as an actor shouldn t be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores thus requiring no involvement from the students at that point in time mention of primary sequence in the use case diagram details seems highly unnecessary and potentially unrelated
problem the use case diagram appears to be slightly incorrect the symbol for an should be a stick figure not a rectangle but that is a minor error also the use case diagram details mention student as an actor but the diagram shows no instance of student as an actor i think the student as an actor shouldn t be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores thus requiring no involvement from the students at that point in time mention of primary sequence in the use case diagram details seems highly unnecessary and potentially unrelated
problem the use case diagram appears to be slightly incorrect the symbol for an should be a stick figure not a rectangle but that is a minor error also the use case diagram details mention student as an actor but the diagram shows no instance of student as an actor i think the student as an actor shouldn t be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores thus requiring no involvement from the students at that point in time mention of primary sequence in the use case diagram details seems highly unnecessary and potentially unrelated
problem the use case diagram added is drawn well and helps explaining the system team could have added screenshots of the expertiza pages that would have helped us understand whoch part of the system is changing well
problem the use case diagram added is drawn well and helps explaining the system team could have added screenshots of the expertiza pages that would have helped us understand whoch part of the system is changing well
problem the url is not working
problem the url is not working
problem the unit tests affording 95 coverage is great but the code climate and other build problems are a bit concerning i think this could be pulled in with more attention from the developers
problem the unit tests affording 95 coverage is great but the code climate and other build problems are a bit concerning i think this could be pulled in with more attention from the developers
problem the unit test step section is included but there is no test plan
problem the uml use case diagram takes into consideration the system specifications and the manner in which the users interact with each other in the process it makes it easy to analyze how the implementation can take place in the current scenario  
problem the uml diagrams given in the document list the process flow for testing understanding the changes which will be made in the document but unfortunately no diagram exists which describe the changes to be made   i would suggest the team to add diagrams for the pseudo code they may have written
problem the uml diagrams given in the document list the process flow for testing understanding the changes which will be made in the document but unfortunately no diagram exists which describe the changes to be made   i would suggest the team to add diagrams for the pseudo code they may have written
problem the uml diagrams given in the document list the process flow for testing understanding the changes which will be made in the document but unfortunately no diagram exists which describe the changes to be made   i would suggest the team to add diagrams for the pseudo code they may have written
problem the uml diagrams does seems to be a bit at a high level i couldn t get a clear idea of how it would actually be implemented
problem the uml diagrams does seems to be a bit at a high level i couldn t get a clear idea of how it would actually be implemented
problem the uml diagrams are supposedly the best part of the writeup gives a very lucid and engaging representation of the underlying architecture if the system also clearly depicts the understanding of the problem by the team
problem the uml diagrams are missing but they are compensated by the sequence of steps which is easy to follow
problem the uml diagrams are missing but they are compensated by suitable explanations i could follow it very easily
problem the uml diagrams are missing but they are compensated by suitable explanations i could follow it very easily
problem the uml diagrams are missing but they are compensated by suitable explanations i could follow it very easily
problem the uml diagrams are  detailed and explained well suggestion the application flow could be explained in points so that the reviewer has a clearer view of what is the sequence of events occurring
problem the uml diagram shows the various subclasses clearly it would have been better if it had also explained a few attributes methods
problem the uml diagram is having the correct contents but needs the rough names of class methods
problem the uml diagram is good but the diagram in the test plan is not very helpful i d suggest either another uml ish diagram or just a bulleted list of the features from the report controller
problem the uml diagram is good but the diagram in the test plan is not very helpful i d suggest either another uml ish diagram or just a bulleted list of the features from the report controller
problem the uml and flow charts used by the teams are good but can be made more clear and appealing
problem the ui seems to be flexible it could include trace back to the home page the readme file could include the details to login as email this would be helpful to use the site to it s full potential
problem the ui seems to be flexible it could include trace back to the home page the readme file could include the details to login as email this would be helpful to use the site to it s full potential
problem the ui mockups uploaded are very unclear as they are just pictures of hand drawn designs this too could have worked had the diagrams and the text inside them been clear i can understand the flow however the components are tough to decipher
problem the ui mockups uploaded are very unclear as they are just pictures of hand drawn designs this too could have worked had the diagrams and the text inside them been clear i can understand the flow however the components are tough to decipher
problem the ui mockups are good i m not entirely sure that the uml diagram is effective perhaps a better diagram style would work better
problem the ui mockups are good i m not entirely sure that the uml diagram is effective perhaps a better diagram style would work better
problem the ui looks appealing and very easy to follow the choice of layout properly differentiates various class of functionalities possible with the application yet the ui lacks the below aspects 1 there is no concept of user role in the signup form though there is role field it always shows empty 2 few links in the layout are broken 3 few fields like the phone number can be made optional for creating users which eases the process
problem the ui looks appealing and very easy to follow the choice of layout properly differentiates various class of functionalities possible with the application yet the ui lacks the below aspects 1 there is no concept of user role in the signup form though there is role field it always shows empty 2 few links in the layout are broken 3 few fields like the phone number can be made optional for creating users which eases the process
problem the ui is straight forward and easy to use the implementation of the menu bar makes it look better though there is a scope for improvement the admin link in the readme file is not working
problem the ui is straight forward and easy to use the implementation of the menu bar makes it look better though there is a scope for improvement the admin link in the readme file is not working
problem the ui is simple however because of the lack of functionality cannot be assessed properly one suggestion  would be to  rename the label of back button to logout   to make it  more intuitive
problem the ui is quite good but the design can be improved the application allows a realtor to add company details while signing up which does not make for great design without authentication no user should be allowed to perform any functionality
problem the ui is quite good but the design can be improved the application allows a realtor to add company details while signing up which does not make for great design without authentication no user should be allowed to perform any functionality
problem the ui is mostly easy to use but the readme is nearly undocumented
problem the ui is mostly easy to use but the readme is nearly undocumented
problem the ui is intuitive and the readme provides basic information to get started a universal navigation bar at the top would be very helpful
problem the ui is basic as of now the show profile link is broken
problem the ui for the login page is the only thing that loads as i m unable to sign up a suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work
problem the ui for the login page is the only thing that loads as i m unable to sign up a suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work
problem the ui for the login page is the only thing that loads as i m unable to sign up a suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work
problem the type of user in the view user panel through admin login is unavailable would it be possible for the team to have two separate views controllers and crud functions on realtors and hunters
problem the type of user in the view user panel through admin login is unavailable would it be possible for the team to have two separate views controllers and crud functions on realtors and hunters
problem the type of user in the view user panel through admin login is unavailable would it be possible for the team to have two separate views controllers and crud functions on realtors and hunters
problem the travis  tests have failed there was one main failure in the travis  log which could be addressed
problem the travis test has not passed
problem the travis test has not passed
problem the travis  test has failed and overall coverage has also decreased there were many errors in the build log of travis
problem the travis test had failed and codeclimate shows indentation and other such minor errors i think that the team just needs to work on the styling and following some ruby guidelines and they are good to go
problem the travis test had failed and codeclimate shows indentation and other such minor errors i think that the team just needs to work on the styling and following some ruby guidelines and they are good to go
problem the travis report shows failing case implying no coverage there
problem the travis ci test has been failed
problem the travis ci test did not past   i did not find any test cases written suggestion test cases should have been written as a part of the final deliverable
problem the travis ci test did not pass suggestion rectify the travis ci issue
problem the travis ci is in progress and there are 3 codeclimate issue to fix  
problem the travis ci is in progress and there are 3 codeclimate issue to fix  
problem the travis ci is in progress and there are 3 codeclimate issue to fix  
problem the travis ci has passed
problem the travis ci has failed and also code climate
problem the travis ci has failed and also code climate
problem the travis ci did not pass this time          
problem the travis ci build passed for the test cases also the code passed for danger bot however there were some issues for the code climate that required to be resoled overall the pull request satisfies the required criteria  
problem the travis ci build passed for the test cases also the code passed for danger bot however there were some issues for the code climate that required to be resoled overall the pull request satisfies the required criteria  
problem the travis ci build passed the code does not have any conflicts with the master initially stage 1 a lot of changes were made so that the travis ci build would pass kudos for effort
problem the travis ci build has failed
problem the travis ci build has failed
problem the travis ci build has failed
problem the travis ci build has failed however there are no merge conflicts you could have fixed the travis ci build errors in phase 2   still overall good job
problem the travis ci build failed
problem the travis ci build does not pass   suggestion team should have rectified this
noproblem the code is very well written and arranged to be easily understandable no extraneous code or unused code visible dry principles have been implemented very well
noproblem the code is very well written and organised all the framework conventions have been followed such as the naming conventions comments have been added at appropriate places which improved the readability
noproblem yes code is written properly followed dry principle added comments where possible followed mvc with rails framework
noproblem it does well to follow the good ruby and rails coding practices it follows the dry code approach
noproblem the git code included almost everything that follows good coding practices using ruby and rails
noproblem yes user interface is good and easy to access
noproblem excellent commit history contributions from all team members could be seen
noproblem yes i could see many push requests on the github hence concluding team is pushing their changes periodically
noproblem yes the team kept pushing changes throughout the project period
noproblem there was consistent commits with a spike in between when probably most development happened
noproblem looking at   your commit history    you guys started it on saturday when the submission was monday
noproblem the website did not seem to work at first now i was able to access it i also noticed some features that were included in the meantime like testing by adding house hunters overall the team did work on updating the site functionalities
noproblem the git repo shows total of 15 commits although majority of the places ruby standards have been followed but at some places variables names such as househunter_url does not show any relavancy   or understandidng   to the reader if the variable is pointing to a function or belongs to for example it can be house_hunt_xyz overall i think good standards are being followed
noproblem yes we can see many pushes on git hence they have updated code
noproblem timely commits and elaborated readme file
noproblem the code is clear and concise it does follow good ruby and rails coding practices
noproblem yes the code does follow ruby and rails practices to an extent as i can see the use of many helper methods in the code
noproblem most files seem to be following good ruby and rails practices
noproblem did a good job using forms to stay dry with the edit and new pages some more comments especially in the models would have been helpful to understand why certain validations were chosen the use of json to store and recall in views was clever
noproblem yes it is well written and they managed to follow dry principle
noproblem code follows the basic crud structure given by rails and neatly explains what is being performed the notices nicely explains the user what is happening the db schema is designed to incorporate most of the requirements
noproblem reviewed the git code for all controller models and views    standard ruby coding practices have been followed and code is easily readable
noproblem code follows good ruby and rails coding practices naming   conventions are correct methods in controllers are short and concise and there are no instances of spaghetti code
noproblem yes user interface is easy to use on the first page
noproblem tests are added for most controllers
noproblem multiple commits are present in the repo
noproblem all of the commits for this application were made on the same day
noproblem there were 4 commits on the day it was due presumably to get the project up and running for submission and 1 today to upload the development database
noproblem i see commits only on a single day
noproblem all the changes are pushed at once
noproblem they have attached 2 other files saying what all they have implemented
noproblem everything was described properly in the readme file
noproblem i could see testing done i could see extra test cases added
noproblem yes
noproblem the team all had multiple commits throughout the course of the project
noproblem yes i could see multiple pushes
noproblem the team has been pushing changes since around 12 days ago and the project structure feels well planned with some changes and testing required
noproblem they have 195 commits ui is great everything is running smoothly
noproblem the project was continuously updated during the past two weeks
noproblem code commit frequency is fairly good
noproblem readme file contains enough information to understand the project implementation basics
noproblem basic scaffold generated tests available
noproblem several linear commits with good explanations available
noproblem very clearly code
noproblem this team has followed the basic structure followed in every ruby on rails application which made my task easier to access files and understand their logic properly described readme file and also one additional pdf given with application was enough to give me proper understanding of the modules
noproblem yes the user interface is intuitive and easy to use also the readme file has been perfectly described to give the proper idea of the flow and login credentials of an admin
noproblem team has perfectly implemented major modules and also they have implemented the extra credit portion i tried to login with invalid credentials or some invalid password email phone lengths but there were validations hence they have perfectly focused on this parts too and tested it    i believe this has implemented a through test of at least one module and controller
noproblem tem has properly used git and only pushed the changes when necessary and also consistently throughout the project period
noproblem i think it does pretty well to follow the   good ruby and rails coding practices it is elegant and follows the dry code approach
noproblem the user interface is very intuitive and easy to use it is very well explained in the readme file the steps to run the code are described as well
noproblem yes from what i could see they have done well in testing at least one model and one controller
noproblem most code seems to be written with good coding practices in mind
noproblem the repository looks to be set up well and the app is laid out like a typical ruby on rails application good readme file was present as well
noproblem good coding style names are well selected and good readability
noproblem have used dry principles followed good coding practices
noproblem the code follows the right style and in a good format
noproblem have listed out the functionality which is very intuitive but some links like as realtor and as house hunter are broken making a bit of a confusion
noproblem deployed on heroku friendly interface good readme file
noproblem they had a good amount of tests the usermodel
noproblem comprehensively tested for users
noproblem in the files they provided i found they provided test for most of controllers and models
noproblem have implemented basic testing could add more application specific test cases
noproblem well tested
noproblem yes it looks like all team members contributed and they have 80 commits over the course of several weeks
noproblem so many commits it makes me proud starting as early as september 22nd they make progress up until today either way they passed this with flying colors
noproblem about 80 commits were done along the timspan
noproblem according to the record on github they committed for many times so they may keep pushing changes
noproblem evenly committed code during the project duration
noproblem the team pushed changes frequently
noproblem well written code following coding practices
noproblem ruby coding convention has been followed almost throughout the project
noproblem all practices were followed
noproblem code looks good use comments wherever necessary
noproblem coding standards are fairly good
noproblem constant changes were being made
noproblem team was proactive in working together
noproblem code commit frequency is fairly good
noproblem code follows general ruby guidelines and is formatted in a legible manner
noproblem the ruby code is precise and the project follows a proper structure with all the required files
noproblem yes the team has included tests for controller model and have also implemented integration tests
noproblem yes their commits started from september they have been working on the project for the entire period
noproblem 16 commits in last 11 days implies have been pushing code frequently
noproblem    the repo has many commits contributed by the teammates throughout   the project period
noproblem i found many commits throughout the project period about fixing bugs add new features and update readme
noproblem user interface is very nice and well organized
noproblem readmd   has all important required details
noproblem this application is deployed on heroku and the user interface is easy to understand and use
noproblem    the code is neat and concise with required comments and messages for all the changes
noproblem the controllers are well written
noproblem the code follows good ruby and rails coding practice from my point of view
noproblem have used dry principles the code has good readability and good naming conventions are followed have grouped similar functionalities into classes so that it is modularized have used iterators such as each instead of for and while
noproblem the user interface is easy to use and the readme file is explicit
noproblem great ui admin dashboard looks very professional
noproblem ui ux is awesome and intuitive read me file is also well described
noproblem yes you have the tests written
noproblem the code followed best practices for items such as indentation line separation and method naming
noproblem mvc structures are very nice and every required functions are finished
noproblem very nicely written code dry principles used nicely formatting is also done very nicely
noproblem code looks as they say hella fresh very clean from the files i looked over
noproblem the team has used excellent ruby standards coding practice controller as well as model has variable names which are self explanatory
noproblem the code on git has good readability with proper indentation and naming conventions similar functionalities have been combined together into a class like in the case of potentialbuyercontroller the use of a single user model and role based authentication has certainly dry d up the code one possible alternative to further dry up the code is that in many controllers like in the case of users_controller every method is storing the list of real estate companies in an instance variable real_estate_companies so in this case a callback like before_action can be used to save the real estate companies in real_estate_companies variable so that all methods have access to it    the use of appropriate iterators instead of looping constructs like for and while follows ruby s good coding practices every controller serves a specific purpose and the use of a common welcome_controller and its associated views has again modularised the code for easy extensibility
noproblem ruby rails code standards are correctly followed and code is committed properly
noproblem the code followed best practices for items such as indentation line separation and method naming
noproblem mvc structures are very nice and every required functions are finished
noproblem very nicely written code dry principles used nicely formatting is also done very nicely
noproblem code looks as they say hella fresh very clean from the files i looked over
noproblem the team has used excellent ruby standards coding practice controller as well as model has variable names which are self explanatory
noproblem the code on git has good readability with proper indentation and naming conventions similar functionalities have been combined together into a class like in the case of potentialbuyercontroller the use of a single user model and role based authentication has certainly dry d up the code one possible alternative to further dry up the code is that in many controllers like in the case of users_controller every method is storing the list of real estate companies in an instance variable real_estate_companies so in this case a callback like before_action can be used to save the real estate companies in real_estate_companies variable so that all methods have access to it    the use of appropriate iterators instead of looping constructs like for and while follows ruby s good coding practices every controller serves a specific purpose and the use of a common welcome_controller and its associated views has again modularised the code for easy extensibility
noproblem ruby rails code standards are correctly followed and code is committed properly
noproblem ui has modified which is good
noproblem the interfce is very good clean and very easy to use
noproblem very nice ui great ux great use of material design icons and bootstrap enjoyed using the website great job
noproblem in general ui was great the site looks really clean and the buttons did what i expected them to do
noproblem user interface is well organized and easy to use
noproblem highly intuitive user interface properly states admin as well as new user login the navebar   shows the logged in user as well as log out options very easy to user and understandable
noproblem yes the ui is interactive and easy to use
noproblem modules have test cases
noproblem yes at least one controller and one model have been tested
noproblem two tests have been implemented and working
noproblem hunters functionalities are working properly
noproblem the team used multiple development branches and a master branch along with frequent commits to stay in sync
noproblem
noproblem yes the team keep on pushing their changes
noproblem yes there are periodic commits and the messages are very descriptive
noproblem starting on september 22nd and going up through today 100 commits is great
noproblem yes the team kept pushing changes throughout the project period
noproblem a total of 105 commits consecutive update done on github
noproblem the team has started to work on the project from sept 16th and has regularly pushed their commits to the repository both the team members have been actively contributing to the project a total of 58 commits have been made so far and the project is progressing at a very good rate
noproblem i could see commits made my team members in timely manner
noproblem the user interface is very intuitive i like the modern look and feel of the ui as well as the icons and images it s quite professional excellent work the various buttons are in good locations the button text could be darker however the new user link could be made into a bigger button which would make it more prominent right now it is hard to see
noproblem the interfce is very good clean and very easy to use
noproblem very nice ui great ux great use of material design icons and bootstrap enjoyed using the website great job
noproblem in general ui was great the site looks really clean and the buttons did what i expected them to do
noproblem user interface is well organized and easy to use
noproblem highly intuitive user interface properly states admin as well as new user login the navebar   shows the logged in user as well as log out options very easy to user and understandable
noproblem the user interface is very appealing the show view is especially remarkable that makes good use of the attractive classes of css and bootstrap the navigation links provided in every page are very helpful to explore the website the switch user capability makes it easy for users to switch between roles without the hassle of logging out and logging in again one issue that i encountered was that the inquiries controller has not been fully implemented which lands the website into an error page
noproblem the testing was thorough although one model and one controller individually did not appear to be tested thoroughly
noproblem yes at least one controller and one model have been tested
noproblem some test cases are missing for complicated flows like real estate company should only be deleted when there are no realtors assigned
noproblem the inquiry controller was thoroughly tested but none of the models appear to have the same amount of testing
noproblem two tests have been implemented and working
noproblem the team has not yet started to test their models unit test and controller functional and integration test test driven development tdd is a good strategy to test the application features before and during the application development phase by using tdd it is possible to anticipate the potential pit falls and corner cases before starting to address the code to tackle those
noproblem the team used multiple development branches and a master branch along with frequent commits to stay in sync
noproblem yes the team keep on pushing their changes
noproblem yes there are periodic commits and the messages are very descriptive
noproblem starting on september 22nd and going up through today 100 commits is great
noproblem yes the team kept pushing changes throughout the project period
noproblem a total of 105 commits consecutive update done on github
noproblem the team has started to work on the project from sept 16th and has regularly pushed their commits to the repository both the team members have been actively contributing to the project a total of 58 commits have been made so far and the project is progressing at a very good rate
noproblem i could see commits made my team members in timely manner
noproblem code is written properly and followed ruby framework with mvc architechure also added various packages
noproblem basic practices were followed reusability of code is maintained and the code is well intended
noproblem it has a good structure choice of names of the files is appropriate and readable
noproblem no
noproblem realtor user can perform basic functionalities
noproblem yes we could see updated git hence i can   conclude that they are updating code regularly
noproblem somewhat since i can see the commits were made in 2 days only
noproblem there were 24 commits in 6 days which means that they have been working in last few days and have been doing check in regularly since they started work
noproblem    i can see 28 commits which is descent
noproblem code follows general ruby guidelines and is formatted in a legible manner
noproblem the ruby code is precise and the project follows a proper structure with all the required files
noproblem yes the team has included tests for controller model and have also implemented integration tests
noproblem yes their commits started from september they have been working on the project for the entire period
noproblem there is no external   link provided to the application
noproblem 16 commits in last 11 days implies have been pushing code frequently
noproblem very inconvenient for me to review without a deployed version
noproblem the code is as per coding practices nice first attempt
noproblem looks good to me the ruby dry code approach is followed throughout
noproblem easy to understand
noproblem yes it is very intuitive and easy to use
noproblem test cases are generated through scaffold
noproblem only controller tested
noproblem the team has not implemented a testing module as of yet
noproblem test skeletons are present doesn t look like tests are added yet
noproblem committed throughout the period to avoid merge conflicts
noproblem yes timely pushing of code and creation of branches to avoid merge conflict
noproblem the team has a well documented history of commits for the code repository
noproblem you guys started pretty late but overall great effort great ui
noproblem good coding style
noproblem overall the following things can be improved 1 the primary key for the real estate company should be auto generated this is done automatically by the rails framework so maybe you can remove the code from the view which asks for the user to select the primary key while creating a company 2 whenever there is a reference to a foreign key in a model you can validate and use that reference by following the format model_id where model is the entity of your foreign key eg if house has foreign key of realtor realtor is the entity of your foreign key hence you can reference the realtor as realtor_id in your house model this is because rails follows convention over configuration and this is the naming convention with respect to foreign keys
noproblem navigation between pages is not defined well
noproblem deployed on heroku interface is not friendly but thr readme file explained some of it
noproblem decent coding practice
noproblem the app s indentation method names and line separation seem to match solid ruby style guidelines
noproblem from what i see it seems to be following the practice we have been using in class
noproblem    yes the source code follows expected ror style the directory names and project structure also follow ror conventions good job
noproblem good rails coding practice has been implemented in model as well controller we can see variables names that shows the relation to overall module and model
noproblem the interface is intuitive specially they have very good form structure for realtor as well as new users and house hunters
noproblem it appears minimal controller testing has been performed
noproblem no testing but at least they mentioned it in the readme
noproblem the team used mutliple branches and many commits throughout the project to increment on the codebase
noproblem    they have a lot of commits so they were always working on it
noproblem yes it looks like sizable commits were made before the 24th
noproblem yes 95 commits
noproblem the interface is good and the readme   provides good documentation
noproblem couldn t find any issues respective to style guidelines
noproblem there were 9 commits overall in the git
noproblem the user interface is quite intuitive to use i had a very minor suggestion i found a case where the go back link was missing and thus i had to click on the dashboard link to go back ex after i click on view companies there s   no go back link    overall i feel you did a really good job for example while switching the role you gave an option to edit the roles as well as well as a delete account functionality
noproblem very nice code and almost every functions that test required are finished
noproblem the interface is easy to use and it is wll described in the readme file
noproblem good set of directions in readme
noproblem there were continuous code pushes
noproblem most files seem to be following good ruby and rails practices
noproblem yes it is well written and they managed to follow dry principle
noproblem code follows the basic crud structure given by rails and neatly explains what is being performed the notices nicely explains the user what is happening the db schema is designed to incorporate most of the requirements
noproblem reviewed the git code for all controller models and views    standard ruby coding practices have been followed and code is easily readable
noproblem code follows good ruby and rails coding practices naming   conventions are correct methods in controllers are short and concise and there are no instances of spaghetti code
noproblem yes user interface is easy to use on the first page
noproblem tests are added for most controllers
noproblem multiple commits are present in the repo
noproblem most files seem to be following good ruby and rails practices
noproblem yes it is well written and they managed to follow dry principle
noproblem code follows the basic crud structure given by rails and neatly explains what is being performed the notices nicely explains the user what is happening the db schema is designed to incorporate most of the requirements
noproblem reviewed the git code for all controller models and views    standard ruby coding practices have been followed and code is easily readable
noproblem not much of coding is done only the files automatically created by rails are present
noproblem code follows good ruby and rails coding practices naming   conventions are correct methods in controllers are short and concise and there are no instances of spaghetti code
noproblem yes user interface is easy to use on the first page
noproblem no work has been done application throws error as soon i click on sign up button and choose any type of account
noproblem tests are added for most controllers
noproblem multiple commits are present in the repo
noproblem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
noproblem all the changes are pushed at once
noproblem i looked through their github commits log and found that their first commit is on oct 1 2018 maybe their just began to do the project on oct 1
noproblem not much functionality is available of what is available however the code does follow   good ruby and rails coding practices
noproblem have used dry principles follows good coding practices
noproblem yes the ui is good and easy for navigation usage
noproblem the ui is good and intuitive good use of colors and html features
noproblem yes tests are done for many models and controllers
noproblem yes there are lot of commits over many days from multiple contributors
noproblem yes there are many commits which added new features and fixed some bugs
noproblem yeah they have done the project with even number of commits throughout the duration
noproblem code is written properly and followed ruby framework with mvc architechure also added various packages
noproblem basic practices were followed reusability of code is maintained and the code is well intended
noproblem it has a good structure choice of names of the files is appropriate and readable
noproblem no
noproblem realtor user can perform basic functionalities
noproblem yes we could see updated git hence i can   conclude that they are updating code regularly
noproblem somewhat since i can see the commits were made in 2 days only
noproblem there were 24 commits in 6 days which means that they have been working in last few days and have been doing check in regularly since they started work
noproblem    i can see 28 commits which is descent
noproblem well written code following coding practices
noproblem ruby coding convention has been followed almost throughout the project
noproblem all practices were followed
noproblem code looks good use comments wherever necessary
noproblem coding standards are fairly good
noproblem a model has been thoroughly tested
noproblem constant changes were being made
noproblem yes there are 24 commits done over a span of 13 days
noproblem team was proactive in working together
noproblem code commit frequency is fairly good
noproblem the code is very neat and easy to read but i can tell it is the auto generated code from scaffold
noproblem the application is deployed on heroku and the user interface is easy to use
noproblem no roles implemented
noproblem no none of the controllers or models have been tested
noproblem actually i did find some auto generated test code for the controllers but i don t think it is a thoroughly test and there is no test code for the model
noproblem total of 10 commits are visible on got but do not show a linear increment in the work done
noproblem yes good effort in case of pushing changes
noproblem no updates since 6 days ago
noproblem only on 2 days all together
noproblem total of only 10 commits has been made on 3 days
noproblem i looked through their github commits log and found that their first commit is on   sep 28 2018 maybe their just began to do the project on   sep 28
noproblem the application is deployed on heroku and the user interface is easy to use
noproblem basic tests are present not custom tests though
noproblem total of 10 commits are visible on got but do not show a linear increment in the work done
noproblem yes good effort in case of pushing changes
noproblem no updates since 6 days ago
noproblem only on 2 days all together
noproblem total of only 10 commits has been made on 3 days
noproblem i looked through their github commits log and found that their first commit is on   sep 28 2018 maybe their just began to do the project on   sep 28
noproblem the code follows mvc architecture and practices in an organized way
noproblem even though the codebase is not large ruby and rails standards such as naming conventions file structure and the correct usage of mvc pattern are followed
noproblem the user interface looks intuitive as it has options for signing up with different roles
noproblem they have tested for the models and controllers constructed
noproblem seem to be following standard practices
noproblem yes the code has the parameters well defined for all the users and has the correct mvc layout as expected    for instance they seem to have created separate mvc architectures for houses inquiries interests companies and users this goes to show that they have a layered approach on access and privileges    also the code is written in a very clean and formatted style with the variable definitions to be self explanatory of the functionalities they perform
noproblem good job done here you have listed the features available to test
noproblem the app is deployed very well and is very easy to use
noproblem all the basic features implemented for admin house hunter and realtor is functional
noproblem there are 67 commits made during the tenure of the project by all the team members the team has worked on git since the start of the project
noproblem yes 67 commits it seems they have been pushing changes regularly
noproblem yes the commits were regular after the project was assigned there were several commits on a weekly basis and as the deadline neared the frequency of the commits kept increasing in an orderly manner there was no last minute rush and the development of the project seemed pretty well planned
noproblem yes as seen from the number of commits on each section of their github profile not only have they meticulously made a number of changes on repo but they have also updated what all changes they made against the files this is a very neat practice in my opinion and shows that they have put ample effort to structure the code moreover they have updates the gemfile multiple times so as to make it run for the heroku app which is a must thing to do and a challenge we faced too
noproblem yes there are git commits and pushes after initial commit as well
noproblem no not really no user type has all the functionality in this review s check boxes much less all the functionality specified in the project description manual inspection of the test folder reveals that all the model and controller tests are empty as are the fixtures
noproblem i cannot appraise this because   i do not believe they did their development in the linked repo there is only one commit where all the functionality was added i am inclined to say the team was not actively developing over the project period
noproblem the model and controller are well designed each method covers a single functionality good job
noproblem all users have their own model controllers the code is following ruby on rails standards but there are some debug puts that should   be removed
noproblem yes it is deployed on heroku
noproblem most of the practices have been followed
noproblem the ruby source code appears to follow ror conventions and uses a few rails associations the directory names and project structure appear to follow good ror mvc conventions source code is organized and uncluttered too
noproblem the code is neat and precise with proper structure and comments
noproblem very good structure readable and names are very relevant to the functionality
noproblem the code is written   really well
noproblem controller has been tested
noproblem extensive testing was done
noproblem yes
noproblem team was active thoughout the process
noproblem there are many commits which are divided almost equally between all teammmates
noproblem code commit frequency is good
noproblem the code seems to be following the examples in cookbook app
noproblem yes timely commits with comments
noproblem the code written was clear and i believe that it follows good ruby and rails coding practices to a certain extent
noproblem it is done well and i can say it is a indeed a good ruby and rails coding practice
noproblem yes
noproblem i have seen they keep updating the github
noproblem there were changes pushed to the branch throughout the project period
noproblem    no the initial commits were made the thursday before the 1st submission was do it is great to see additional commits since the 1st submission
noproblem the first commit for the project was made only 4 days before the deadline since then the team kept continuously pushing their changes
noproblem i can see 28 commits with a good distribution over the time span
noproblem yes we can see many pushes on git hence they have updated code
noproblem timely commits and elaborated readme file
noproblem the code is clear and concise it does follow good ruby and rails coding practices
noproblem yes the code does follow ruby and rails practices to an extent as i can see the use of many helper methods in the code
noproblem yes i am able to login into the system via the link provided
noproblem they have attached 2 other files saying what all they have implemented
noproblem everything was described properly in the readme file
noproblem yes
noproblem all the   tests are auto generated
noproblem the team all had multiple commits throughout the course of the project
noproblem yes i could see multiple pushes
noproblem the team has been pushing changes since around 12 days ago and the project structure feels well planned with some changes and testing required
noproblem they have 195 commits ui is great everything is running smoothly
noproblem the project was continuously updated during the past two weeks
noproblem git shows too many changes which are not required one can test thoroughly before submitting the changes
noproblem code commit frequency is fairly good
noproblem the code follows common ruby rails guidelines
noproblem have used dry principles follows good coding practices
noproblem yes the ui is good and easy for navigation usage
noproblem the ui is good and intuitive good use of colors and html features
noproblem yes there are many commits which added new features and fixed some bugs
noproblem yes there are lot of commits over many days from multiple contributors
noproblem yeah they have done the project with even number of commits throughout the duration
noproblem yes tests are done for many models and controllers
noproblem the code seems to be following the examples in cookbook app
noproblem    the source code and project structure seems fine but most of it still looks scaffold generated ror conventions have been maintained
noproblem yes timely commits with comments
noproblem the code written was clear and i believe that it follows good ruby and rails coding practices to a certain extent
noproblem it is done well and i can say it is a indeed a good ruby and rails coding practice
noproblem i dd not find the link i viewed the code on github it seems work
noproblem yes
noproblem i have seen they keep updating the github
noproblem there were changes pushed to the branch throughout the project period
noproblem    no the initial commits were made the thursday before the 1st submission was do it is great to see additional commits since the 1st submission
noproblem the first commit for the project was made only 4 days before the deadline since then the team kept continuously pushing their changes
noproblem i can see 28 commits with a good distribution over the time span
noproblem the app s indentation method names and line separation seem to match solid ruby style guidelines
noproblem decent coding practice
noproblem from what i see it seems to be following the practice we have been using in class
noproblem    yes the source code follows expected ror style the directory names and project structure also follow ror conventions good job
noproblem the code base is very well written and commented the code has been done with good coding practices the only point to note would be to update the readme to be more informative
noproblem good rails coding practice has been implemented in model as well controller we can see variables names that shows the relation to overall module and model
noproblem the user interface is nice i suggest you move the search button in the houses screen to the left also yes and no would probably be more user friendly than true and false for the basement condition the new user window was very intuitive and powerful note i found a bug in this window changing the admin account with realtor checked causes an error the error screen was graceful however also please use radio buttons for hunter or realtor not checkboxes please also include the type of the user in the users window
noproblem    ui is easy to use but not well described in the readme please add brief test cases to demonstrate expected functionality
noproblem the interface is basic and no extra styling is done but overall the web application is easy and intuitive to use the read me   file of the github repo should be updated to make it more    detailed to use
noproblem the interface is intuitive specially they have very good form structure for realtor as well as new users and house hunters
noproblem no they have not they said they will for the final submission
noproblem the team used mutliple branches and many commits throughout the project to increment on the codebase
noproblem while the team did push changes to the project there are 95 commits which are unnecessary instead of pushing every change to the final project the team could have combined a few of the changes and pushed them all at once to make for better record of the changes made
noproblem teams looks fairly active but the project progress does not correspond to the number of commits made in the git repository
noproblem    they have a lot of commits so they were always working on it
noproblem yes it looks like sizable commits were made before the 24th
noproblem yes 95 commits
noproblem the code is very well written and organised all the framework conventions have been followed such as the naming conventions comments have been added at appropriate places which improved the readability
noproblem yes code is written properly followed dry principle added comments where possible followed mvc with rails framework
noproblem it does well to follow the good ruby and rails coding practices it follows the dry code approach
noproblem the git code included almost everything that follows good coding practices using ruby and rails
noproblem yes user interface is good and easy to access
noproblem excellent commit history contributions from all team members could be seen
noproblem yes the team kept pushing changes throughout the project period
noproblem the website did not seem to work at first now i was able to access it i also noticed some features that were included in the meantime like testing by adding house hunters overall the team did work on updating the site functionalities
noproblem the code seems very good and the code is very clearly
noproblem the git code did follow the good coding practices using ruby and rails
noproblem all files they provided are clearly structured especially for the routes file they provide clear routes for different conditions
noproblem for all user sign up and log in should at the same place
noproblem the ui had good directives between operations functionalities and was easy to use the admin profile was available in the readme file
noproblem yes it is
noproblem code seems to follow the ruby practices
noproblem code is written in a clean and readable way there are separete methods for separate tasks    good naming convention is followed throughout the project
noproblem recompany could have been just company
noproblem the team seems to have attempted to add to their functionality from the previous round they have attempted to use the devise gem for allowing multiple user logins it seems that they created a new git repo and started from the beginning which seems like a fair idea given that they wanted to use devise instead of implementing the user registration sessions
noproblem yes they have keep commit to git as their project been working
noproblem the team submitted their changes towards the end of the project they committed changes in round 2
noproblem yes there is a has_many relationship in company model and also realtor is able to create mutliple house in one company
noproblem the relationship between house hunter realtor and companies have been well established
noproblem the link submitted is not live as a result i could not test if the system is working as it is supposed to
noproblem edge cases are not handled but most of the logic will automatically handle edge cases
noproblem yes they have tested a lot like admin house and inquiries
noproblem testing has been done for users controller and model
noproblem yes the team has tested model and controller
noproblem code is well written and organised all the functions have been objectively defined and does only what it is supposed to do
noproblem code looks neat methods have only one functionality well organized
noproblem the earliest commit is dated around oct 4
noproblem yes they have been committing a bit regularly although the commits contribution are not equally distributed among the team members
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem all commits happened during round 2 but work was done before
noproblem started committing after round 1
noproblem yes the team kept commiting the changes throughout the project and also in round 2
noproblem yes feedback has been accepted and changes made in round 2
noproblem all the relationships have been properly defined in the models
noproblem yes they have properly defined the associations for every table and haven t missed on anything
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented each company has multiple realtors and each realtor can have multiple houses everything good here
noproblem by looking at their model files relationships are handled well
noproblem db mappings are done well cascading delete and cascading nullify implemented to handle delete cases
noproblem not many problem detected working to the expectations
noproblem all functionality seems to be present now
noproblem yes the system works fine and authors have fixed the problems found in the first round for an instance admin functionality and interest functionality were not present in round one but authors have implemented them now
noproblem all feedback has been accepted and changes made to fix them
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if an admin tries to delete a house hunter with multiple inquiries all of his her inquiries are deleted as well
noproblem all deletion edge cases seem to be accounted for
noproblem yes all the edge cases are handled very well
noproblem not able to log in as admin incorrect credential of admin
noproblem the edge cases tested where handled properly with proper messages that shows which other entities will be affected by the change
noproblem models are not tested and controllers are partially tested
noproblem no they haven t tested
noproblem yes the team has thoroughly tested and did validations
noproblem tests for controllers look good need to include more tests for models
noproblem code naming convention done well
noproblem the code has been implemented as per the ruby standards of coding however there are few instances of code could be better handled such as the index function in admin controller
noproblem 1 yes 2 no 3 no
noproblem commits performed during the course
noproblem all the code of the project has been pushed to github on a single day
noproblem only 8 commits were found the first commit was dated around oct 6 no changes were committed in round 2
noproblem didn t commit at regular intervals yes committed changes in round 2
noproblem the git repository was created on oct 6 after the round 1 was completed the commits were no regular during the complete course of the project all the commits happened on the day of final submission
noproblem handled 1 to n and n to n relationships succesfully
noproblem the team has handled all the associations between multiple entities quite well
noproblem the relationships are properly defined
noproblem follows the relationships properly
noproblem the basic functionalities work successfully
noproblem some edg cases are working
noproblem yes
noproblem test for model are missing basic test cases for controllers are present but the testing is not through
noproblem the code follows all design style guidelines for ruby good job all methods are well designed and serve only one function naming and structure is uniform across the project
noproblem the code is clean and readable and has been properly modularized
noproblem the code is clean and easy to understand    code modularization principles are followed didn t find any major code duplication issues
noproblem yes code is clean and easy to read has followed coding standards there are separate functional calls for each task
noproblem the team committed changes fairly frequently there are no commits for the first phase of the project however the project saw regular contributions after that during the round 2 overall good job could be more proactive during the first phase
noproblem they only had 30 commits which i think is a little low considering there were two phases of submission in my first phase my team had at least 30 commits
noproblem for the most part it looks like this group only committed changes in round two i know there was roughly one commit when i reviewed the first time and the remainder of the changes were between oct 6 10
noproblem yes they did keep pushing updates after round 1
noproblem yes the commit count has almost doubled from round 1 to round 2
noproblem yes the team had multiple changes committed through oct 6th through oct 10 in round 2
noproblem the team has committed   regularly
noproblem the relationship realtor has many houses is not represented however all other edge cases are covered the db is well designed with clear relationships and field names this team is a pro
noproblem it looks like all the needed relationships were present in the schema
noproblem cardinal relationships have been defined in appropriate models
noproblem 1 n and n n relationships are all properly defined
noproblem all basic functionalities work as expected you could have gone for the extra credit functionality such as the google login or the email part the email part was pretty easy you ve still done a great job with the overall design the best i ve seen thus far
noproblem authors   delivered nearly all the functionality i could think to test    it was a little weird being referred to a totally different page to have to upload images to houses but not enough to deduct points
noproblem yes major changes and feature implementations are there after   1st round all basic functionalities are working properly
noproblem 1 admin can delete real estate companies with realtors attached to it 2 realtor is being able to delete any house 3 admin can delete house hunter with several enquires
noproblem all test cases are covered the readme doesn t cover how edge cases are covered but that s not an issue
noproblem 1 when the   company   of a realtor was changed realtor details got updated with this new company details but he could still edit update the houses that he she had listed for   the prev company they could send replies to inquiries also 2 a realtor could edit the details of all the houses 3 what will happen if the   admin tries to delete a house hunter who has submitted several inquiries cascade delete in working 4 other major edge cases are also working
noproblem could see default testcases
noproblem code naming convention done well
noproblem 1 yes 2 no 3 no
noproblem commits performed during the course
noproblem handled 1 to n and n to n relationships succesfully
noproblem the team has handled all the associations between multiple entities quite well
noproblem the relationships are properly defined
noproblem follows the relationships properly
noproblem the basic functionalities work successfully
noproblem the code is well written following the right ror coding practices
noproblem
noproblem follows good coding practice at most places
noproblem code is written in an efficient clean and readable manner all the functions are lucid and defined properly in blocks a proper use of names for controllers migrations and views can be seen
noproblem yes the coding style was good
noproblem the committs have been done regularly throughout the development period even during the round 2
noproblem
noproblem code has been submitted frequently
noproblem commit were done at a timely manner
noproblem the 1 n and n n relationships are properly handled
noproblem handles most of the relationships properly
noproblem
noproblem all the relationships are correct also the houses table shows the time at which the house was created which is impressive additionally the real estate company also shows the number of realtors for each company good work on that
noproblem yes even constraints were defined well
noproblem relationships are implemented correctly
noproblem there were issues with the admin functionalities in the first round they have been fixed
noproblem
noproblem most issues were fixed
noproblem
noproblem i think the code is well written the function calls are very well done it is neat and easily readable also there is no bad naming the project code very well follows the dry approach
noproblem the code is clean and easily understood a separate controller for adding the buyers to the potential buyer list is created overall the structure and naming of controllers and migration file is clear and the respective functionalities can be identified based on the names the team has done good work on that
noproblem function calls are added code is formatted and neat naming conventions are followed
noproblem several linear commits visible on the git most of the work done in round 2 is fixes and additional functionalities on top of the base that was finished before round 1
noproblem the team promptly handled the task by working on it regularly and committing changes frequently
noproblem i was unable to judge if this works there was no way for me to determine that the admin can not delete companies can not view edit or delete realtors or househunters also users cannot delete themselves    further the third party admin gem or module   used does not let me edit or delete users or companies either it gives an error on heroku    thus i was unable to determine if the edge cases work also readme does not specify anything
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem the team submitted the changes at equal intervals of time and the last commit was performed a day prior to the deadline which is commendable
noproblem this team continued to commit throughout the project
noproblem the test for real_estate_companies_controller and real_estate_company model are present
noproblem team has been consistent in pushing code changes
noproblem they have tested real_estate_company controller and model
noproblem
noproblem yes there are 60 commits well done
noproblem yes they have implemented unit tests as well as functional tests
noproblem    the team has done an impressive job in handling the tests for messages and real estate companies
noproblem yes i can see a variety of edge cases being tested
noproblem the code looks comprehensive to a good extent with the usage of comments and clear naming 1 adding the remove from wish list feature is a   plus   point 2 the naming is done well with attention to the singular and   plural nouns for models and controllers 3 no   problem with respect to the coding clarity
noproblem the quality of the code is impeccable use of helper files and establishing a specific user through def current_user function in the application helper allowed the team to use a common user parameter throughout the application development and reduced the amount of   effort that would have been needed other wise
noproblem    code is very much readable there are proper comments before the functions
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem code quality seems to be very good documentation aloong with instructions are present
noproblem mapping has been properly implemented
noproblem the database design is close to perfect the destroy and delete dependencies have also been well managed to allow deletion in cases where a house hunter gets deleted and all its inquiries are deleted automatically
noproblem    yes the system does handle the relationships and the mappings are clearly defined
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem this system handle the 1 to n and n to n relationships
noproblem the above case is covered
noproblem the realtors controller has been very well tested by the team
noproblem    the test cases are running fine clear steps for the same are given in the readme
noproblem excellent use of rspec
noproblem yes the team has tested thoroughly at least one model and one controller
noproblem there isnt any commit after the first submission
noproblem there are several linear commits to show progression of all the functionalities that were added to the project from the beginning the team had more or less finished their work before round 1 and fixed a few bugs that were not easily   discernible in round 2
noproblem    there are 136 commits i can see with clear commit messages
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well th
noproblem 67 commits by one   whereas 26 by the other two i was expecting an even number of commits
noproblem very good commiting by entire team project was handled well and not messy
noproblem the system has no perceivable issues
noproblem    functionalities are working fine they are well documented in a separate pdf file as well even the read me contains clear instructions for setup
noproblem almost every feature is working as it s supposed to
noproblem app as a whole works very well the look and feel of it is also very good contributes to a very good overall user experience
noproblem the system was able to pass all listed test cases all the views have been perfectly setup as well and have disabled buttons where needed
noproblem    there are enough edge cases tested and well documented in the attached pdf file could also view the some points to be taken care that are documented in specific cases
noproblem 1 if the admin tries to delete a real estate company which has some realtors and houses it would not delete the record because a dependent realtor exists 2 the realtor can change his real estate company and he won t be prohibited from removing houses 3 if   admin tries to delete a house hunter who has submitted several inquiries the inquiries will be deleted and house hunter will be removed from the buyers list
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem looks decent
noproblem coding standards are followed properly
noproblem code is clear and concise with   explanatory commits
noproblem this team continued pushing changes throughout the project
noproblem only one person has committed throughout the project which looks strange to me however there have been regular commits by the person
noproblem the readme file is completed and explicit so great
noproblem the mappings are present and clearly defined
noproblem yes
noproblem the relationships appear to be documented correctly here
noproblem the functionalities are working fine the input fields in the forms have good explanations for some specific cases
noproblem yes it works perfectly fine
noproblem basic functionalities are working fine
noproblem validations are properly provided to handle edge cases
noproblem houses and inquiries controller seem to be thoroughly tested as do house inquiry search and user models
noproblem the code is well written following the right ror coding practices
noproblem follows good coding practice at most places
noproblem code is written in an efficient clean and readable manner all the functions are lucid and defined properly in blocks a proper use of names for controllers migrations and views can be seen
noproblem yes the coding style was good
noproblem the committs have been done regularly throughout the development period even during the round 2
noproblem
noproblem the 1 n and n n relationships are properly handled
noproblem handles most of the relationships properly
noproblem
noproblem all the relationships are correct also the houses table shows the time at which the house was created which is impressive additionally the real estate company also shows the number of realtors for each company good work on that
noproblem relationships are implemented correctly
noproblem there were issues with the admin functionalities in the first round they have been fixed
noproblem
noproblem most issues were fixed
noproblem
noproblem code is compliant to rails coding style
noproblem yes they did
noproblem no lot of specified features still missing
noproblem no idea
noproblem the edge cases aren t testable because of the incompleteness of the project
noproblem some edg cases are working
noproblem yes
noproblem the code is clean and readable
noproblem code looks quite readable
noproblem looks alright
noproblem the code is clean and well written the controllers and models are named accurately and each filename describes the desired functionality good work on that
noproblem the system properly handles the relationships where a real estate company can have multiple realtors also it supports a realtor to create multiple houses and the house hunters to add multiple houses to their interest list
noproblem yes 1st cut did not have heroku link this time apart from additional code link is present and may of non functional flows seems to be in place
noproblem code naming convention done well
noproblem commits performed during the course
noproblem handled 1 to n and n to n relationships succesfully
noproblem the team has handled all the associations between multiple entities quite well
noproblem the relationships are properly defined
noproblem follows the relationships properly
noproblem yes
noproblem the basic functionalities work successfully
noproblem different methods for different functionality no long methods    overall good job by the team on the structure of the project
noproblem the code is clearly written and easy to understand the functionalities are separated and well defined
noproblem commits aren t exactly spread evenly across the entire duration of the project but they have made changes in round 2 there have been significant improvements in the functionality   and overall code in the project from my previous review
noproblem with 108 commits te team has continuously pushed changes to git to keep the version control in tact
noproblem the team has been constantly submitting changes to the repository with each team member having considerable commits which says the work was divided equally among team members
noproblem yes i think the whole team has been participated in this project and kept on submitting changes throughout the project and they still keep on submitting changes in round 2 even though the deadline for round 2 has passed their last record of commitment is on oct 16
noproblem good job on the comments and description of the git commit    it makes the job of the product owner lead software to review your code
noproblem the commits were fairly frequent even in round 2
noproblem the project mentions the belongs_to and has_many parts of the problem specification in the right ruby files so they are handled correctly
noproblem yes authors have done a great job in this part and they handle the 1 to n and n to 1 relationships properly
noproblem good job on the db design mappings between model are good
noproblem relationships are properly defined and mapping is correct
noproblem yes i could not create another account with the same email    validations seem to be done on user level while creating account signing in etc
noproblem yes they did put effort on test part they have done a good job in testing model users
noproblem only basic test cases have been given for any cont
noproblem code in the files are auto generated every function is implemented in a clean and readable manner and performs only one task code on whole follows ruby on rails practices
noproblem code is clean and readable 1 yes 2 no 3 no readme file is well written and descriptive
noproblem some files like comment rb don t suggest what they are used for
noproblem the code is quite clearly written with all the good coding practices being followed
noproblem although there aren t too many commits the team does seem to have been updating their git in a continuous manner
noproblem a total of 26 comments and recently updated also
noproblem the team has committed changes in round 2
noproblem 26 commits overall with about 13 commits for round 2
noproblem yes    1 to n and n to n relationships are handled correctly tables are mapped correctly
noproblem most of the mappings are done correctly
noproblem the relationships have been set up properly in the model files as well as the schema however a destroy dependency in the model file would be a great addition       has_many   enquiries    dependent destroy
noproblem the code on github shows the 1 to n relationship between real estate company and realtor the realtor is also able to create real estate companies of his own
noproblem yes the mapping is done quite well
noproblem edge cases are handled good and the readme is effective enough to understand the entire code flow
noproblem no tests are added for any model or controller
noproblem no specific testing apart from scaffold generated tests seems to have been implemented by the team
noproblem only default tests are present
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem code is clear and concise with   explanatory commits
noproblem looks decent
noproblem coding standards are followed properly
noproblem this team continued pushing changes throughout the project
noproblem the readme file is completed and explicit so great
noproblem the mappings are present and clearly defined
noproblem yes
noproblem the relationships appear to be documented correctly here
noproblem the functionalities are working fine the input fields in the forms have good explanations for some specific cases
noproblem yes it works perfectly fine
noproblem basic functionalities are working fine
noproblem could not test most of the edge cases as functionalities have not been implemented
noproblem validations are properly provided to handle edge cases
noproblem a realtor changing real estate company makes them unable to edit houses they ve listed with the previous company
noproblem houses and inquiries controller seem to be thoroughly tested as do house inquiry search and user models
noproblem not mentioned in readme file and couldnt   find any in code
noproblem    yes code is well structured overall interests and potential buyers functionality are separated from house hunter model view proper naming conventions are followed
noproblem    no issue found classes looks very clean and nicely naming
noproblem the quality of the code was efficient it allowed to use the system in an understandable manner it followed approach for clean coding using ruby and rails
noproblem the code is clean and easy to read
noproblem
noproblem 30 commits during the last week
noproblem yes the commit increased from 8 to 40
noproblem the team worked on a lot of things from the first stage this includes testing for admin and realtor functionalities allowing admin user to view and destroy the accounts of realtor and house hunter
noproblem 40 commit the last one was on oct 10
noproblem code quality is impressive every action has a different function call the methods are well defined to understand to purpose it serves
noproblem the code is clean naming conventions are followed
noproblem have followed good ruby coding practices with meaningful variable names single responsibility paradigm is well portrayed
noproblem the code is clean and solid easy to read
noproblem commits in the repo are consistent commits show some changes were made to improve the functionalities
noproblem this team pushed code in a few very bursty   times but they did push commits after the initial review
noproblem the team has committed the code continuously yes the team had made commits in round 2 also
noproblem they have consistently checked in code during the project duration even in phase 2
noproblem the last commit is in 10 10
noproblem yes code handles the mapping as mentioned in the given example
noproblem yes the db design looks to have the proper relationships
noproblem there are plenty of relations mentioned in the model files for the mentioned case as well
noproblem there is   a search rb which seems very vague and unused it has an extensive search logic it should be a method in the house rb file instead of a separate file of its own
noproblem enquiries hasnt been tested
noproblem tested for a realtor account the code handles the lifecycle   of the user pretty well
noproblem yes they tested the user_controller and model
noproblem cant see a rspec folder
noproblem test cases in user model present
noproblem thorough testing has been done for user_test rb and controllers
noproblem they test 7 different controllers and 7 different models vert convincing work
noproblem code is well written all the conventions of the rails framework have been followed the functions have been properly defined and does only what it is supposed to do
noproblem the code follows the general guidelines for quality and concept of clean coding the models and controller were designed with general practice approach using ruby and rails coding methodologies
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem code looks neat and clean
noproblem the code was committed throughout the project and code was committed in the second round too
noproblem this team is keep on submitting their changes throughout the project and not only one or two members of the team but all of them are playing a role in this project besides they did commit changes in round 2
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem yes about 83 commits
noproblem the team improved upon certain aspects of their code this included establishing the admin functions and actions as adding new companies and to view various participants involved
noproblem found that company has many users missing house   has many inquiries and reply missing
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem seeing from the schema file the logic seems fine but unable to test it out
noproblem the code procedure and application justified the 1 to n and n to n relationships between the realtor and house hunter model as well as real estate company and realtor relationship mapped as 1 to n
noproblem i think the authors did a good job in developing the system the system is working as it is supposed to work
noproblem yes i feel the team has done pretty well in testing at least one model and one controller
noproblem the team thoroughly tested the admin model and controller the tests for admin performed checks for admin functionality to be able to view the list of houses created by the realtors as well as look up for realtors and house hunters information that are involved in application
noproblem yes the code is written in a clean and readable way only one task is handled by each method and in case of multiple tasks function calls have been implemented perfectly there is no bad naming in this project code in model and controller looks fine proper spacing of function and its block is done
noproblem
noproblem the code looks comprehensive to a good extent with the usage of clear naming the naming is done well with attention to the singular and   plural nouns for models and controllers no   problem with respect to the coding clarity
noproblem most of the code follows standards    but i was not able to verify the complex examples like adding house to interest list email when a reply is given by realtor as it is not working in   replies_controller rb avoid using class variable and use instance variable
noproblem code is well written
noproblem    the code was very easy to read and follow good coding practices
noproblem solid code easy to read
noproblem commits after the first review by all team members is seen
noproblem
noproblem regular commits were not done everything was committed in one commit which should be discouraged think about working professionally you should be committing code asap and committing with proper commits and description commit also should not be all module at once but individual
noproblem yes there are commits in phase 2 as well
noproblem 26 commits with about 10 commits after round 1
noproblem 26 commits last one on 11th oct
noproblem this relation is handled well
noproblem
noproblem the company house inquiry user   etc mapping is done well and according to the functionalities
noproblem yes all the db relationships are handle properly
noproblem first round their login functionality wasnt working it is working now as expected
noproblem few edge cases not working
noproblem it seems some destroy function have some issue
noproblem only auto generated test cases are present
noproblem none of the controller or model was tested
noproblem no test for any of the models
noproblem from what i can tell code quality in this application is good functions generally   look small and there is good use of rails utilities
noproblem code is written properly one method is covering only one functionality also for more features team has created new controllers hence i can conclude code is neat and readable
noproblem the code is clean
noproblem great code writing habit
noproblem yes they did
noproblem yes
noproblem    all the mapping looks good nice job
noproblem yes the db design handles these relationships correctly
noproblem team has mapped house realtor company also house hunter inquiries well in the model
noproblem the schema is very well defined most of the suggestions provide as part of initial review are incorporated the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record this ensures there is consistency
noproblem implemented the mappings properly
noproblem this system handles all relationships   properly by using has_many belongs_to constructs correctly and addition of relevant foreign key attributes in the appropriate tables
noproblem yes
noproblem the team has done a great job in testing admin controller is tested extensively with relevant concise comments   and rspec is used to test admin model with its validators
noproblem every action has a different definition written the code is well structured
noproblem code is written properly and followed dry each function is handling single task team understands mvc architecture very well but i could see controller for every functionality where in such functionalities could have been handled with mere methods in other main controllers
noproblem no bad naming handles multiple tasks with multiple function calls
noproblem the code is in general clean and readable nearly all methods seen handle only one task or use function calls to handle other tasks naming seems appropriate in all of the files there are no overly nested blocks
noproblem the code is well written
noproblem the code looks clear and understandable
noproblem commits can be seen throughout the project duration
noproblem i could see a huge number of commits on the github but it is not evenly distributed
noproblem submitted changes throughout the project committed changes in round 2
noproblem the team did a good job of making consistent commits throughout the life of the project
noproblem the team kept committing   their changes throughout the project
noproblem the code frequency is pretty good
noproblem mappings are mentioned appropriately
noproblem team has handled 1 to n and n to n relationship very cleanly not only in code but also the related functionalities are working great except few like i can not see realtor associated with any company
noproblem handles all relationships
noproblem i think it does but i don t feel confident in my answer
noproblem the relation mapping is well made
noproblem models show good relation mapping
noproblem above listed test cases were handled
noproblem handles all edge cases
noproblem everything explained in readme    works great
noproblem all meaningful tests
noproblem yes    1 to n and n to n relationships properly are handled properly tables are mapped properly too i don t find any issue related to db
noproblem the corresponding ruby files maintain the belongs_to and has_many relationships to reflect this
noproblem potential buyers interest house and inquiry dependencies are not handled properly
noproblem    in the model classes and schema file each object has good relationship with each other
noproblem there is 1 to n realtionship between company and realtors
noproblem the system handles the 1 to n and n to n relationships properly the real estate company and realtor relationship mapped as 1 to n
noproblem all the basic functionalities have been implemented team as whole have worked really hard to make common functionality work
noproblem as a house hunter i am not
noproblem the system performs almost all the functionalities that are described as part of the deliverables one specific issue that was suggested and resolved was mapping the realtor to a real estate company
noproblem corner cases like removing house from interest list have not been tested
noproblem
noproblem the team has thoroughly tested each model and controller and the tests were performed to check realtor functionality works as described
noproblem thoroughly test the admin model
noproblem this system handle the 1 to n and n to n relationships
noproblem the quality of the code is impeccable use of helper files and establishing a specific user through def current_user function in the application helper allowed the team to use a common user parameter throughout the application development and reduced the amount of   effort that would have been needed other wise
noproblem there are several linear commits to show progression of all the functionalities that were added to the project from the beginning the team had more or less finished their work before round 1 and fixed a few bugs that were not easily   discernible in round 2
noproblem the database design is close to perfect the destroy and delete dependencies have also been well managed to allow deletion in cases where a house hunter gets deleted and all its inquiries are deleted automatically
noproblem the system has no perceivable issues
noproblem the system was able to pass all listed test cases all the views have been perfectly setup as well and have disabled buttons where needed
noproblem the realtors controller has been very well tested by the team
noproblem code quality seems to be very good documentation aloong with instructions are present
noproblem very good commiting by entire team project was handled well and not messy
noproblem app as a whole works very well the look and feel of it is also very good contributes to a very good overall user experience
noproblem the code looks comprehensive to a good extent with the usage of comments and clear naming 1 adding the remove from wish list feature is a   plus   point 2 the naming is done well with attention to the singular and   plural nouns for models and controllers 3 no   problem with respect to the coding clarity
noproblem mapping has been properly implemented
noproblem the above case is covered
noproblem almost every feature is working as it s supposed to
noproblem the team has done a good job in submitting changes throughout the project the team has not committed changes in round 2
noproblem excellent use of rspec
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well th
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem yes the team has tested thoroughly at least one model and one controller
noproblem    code is very much readable there are proper comments before the functions
noproblem    there are 136 commits i can see with clear commit messages
noproblem    yes the system does handle the relationships and the mappings are clearly defined
noproblem    functionalities are working fine they are well documented in a separate pdf file as well even the read me contains clear instructions for setup
noproblem    there are enough edge cases tested and well documented in the attached pdf file could also view the some points to be taken care that are documented in specific cases
noproblem    the test cases are running fine clear steps for the same are given in the readme
noproblem well written and able to follow however i see no branches created and hence pull requests merged all work is pushed direct to master
noproblem seems alright
noproblem yes the code written was clean and readable
noproblem code quality is good linked features are working fine like the one asked in question
noproblem good code writing
noproblem good coding practices have been followed methods are crisp and single responsibility paradigm has been implemented
noproblem submitted well within deadline
noproblem yes they did
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem the team committed their changes throughout the project period consistently
noproblem yes the team has committed code changes in round2
noproblem they added a few changes could ve listed more on readme
noproblem yes they still commited until yesterday
noproblem yes the team kept committing changes throughout the duration of the project
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem yes the relationships are handled properly 1 company multiple realtors etc no mapping table as such the schema handles it
noproblem i did not find any problems in the first phase testing all basic functionalities work as expected bonus points for the ui one of the best i have seen the web application is intuitive and guides the user in performing any function great job
noproblem first reviews comments were fixed
noproblem they still have the problem i found in the first round
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if a house hunter is deleted all of his her inquiries are also deleted
noproblem i could not login as admin using username password combination provided in readme so edge cases could not be tested
noproblem the readme document clearly mentions the edge cases when a company is deleted what happens to the houses and realtors
noproblem edge cases like real estate company deletion are handled as deletions which is basically not handling it could ve done some case like transferring them to other user account or such
noproblem they did not very well dealing with the edge cases 1 nothing happens 2 nothing happens 3 nothing happens
noproblem edge cases are covered when a company is deleted the realtors and houses are also deleted along with it the readme md file also details how the edge cases are handled
noproblem not thoroughly test not enough test written for inquiries
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the inquiries controller is especially well tested all assert statements are well thought of
noproblem yes the team has thoroughly tested
noproblem the test only validates cases with valid attributes
noproblem most common cases are tested in controllers they are using fixtures for testing
noproblem yes they used rspect to test the code
noproblem code quality is impressive every action has a different function call the methods are well defined to understand to purpose it serves
noproblem the code is clean naming conventions are followed
noproblem have followed good ruby coding practices with meaningful variable names single responsibility paradigm is well portrayed
noproblem the code is clean and solid easy to read
noproblem commits in the repo are consistent commits show some changes were made to improve the functionalities
noproblem the team has committed the code continuously yes the team had made commits in round 2 also
noproblem 108 commits quite impressive
noproblem they have consistently checked in code during the project duration even in phase 2
noproblem the last commit is in 10 10
noproblem yes code handles the mapping as mentioned in the given example
noproblem yes the db design looks to have the proper relationships
noproblem there are plenty of relations mentioned in the model files for the mentioned case as well
noproblem tested for a realtor account the code handles the lifecycle   of the user pretty well
noproblem yes they tested the user_controller and model
noproblem test cases in user model present
noproblem thorough testing has been done for user_test rb and controllers
noproblem they test 7 different controllers and 7 different models vert convincing work
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem adopted good coding practices
noproblem code was very clear and concise implemented concepts of cohesion and coupling related functionalities were placed together
noproblem yes the code looks good code modularization principles are followed didn t find any major code duplication issues
noproblem the code is very well written with maximum functionalities   covered including adding a house to interest list as a hunter and showing that hunter as a potential buyer for that particular house well done
noproblem yes timely commits
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem the team has been using github for almost entire tenure of the project yes the team has made multiple changes during the round 2 the team has been making changes after the code submission as well till today s date
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem 20 commits in round 2
noproblem team showed great consistency in committing changes changes increased in round 2
noproblem yes the commit count has almost doubled
noproblem 52 commits the team seems to be quite active throughout
noproblem code is pushed but frequency is very less
noproblem yes models are maintained properly
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem yes the team has handled all the   single and multiple   associations among all entities quite well all the relationships can be reviewed under the model of all the entities
noproblem database was well designed so as to avoid redundancy
noproblem looks good all types of relationships are handled properly
noproblem yes the mapping of 1 to n for company realtor and company houses is correctly done
noproblem the design is well implemented relationships are well defined in models and edge cases are handled in schema itself
noproblem the system seemed to handle test cases
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well
noproblem edge cases are well handled with the appropriate handling of dependencies between companies and users houses and their creators etc
noproblem test cases for the user have been implemented
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the user model is especially well tested
noproblem testing was done
noproblem the code is written in a clean way
noproblem the quality of the code is good clean and well readable multiple tasks are handled by function calls and a method handles only one task there is not many nested blocks or long methods there is no bad naming in this project and is well organised
noproblem submitted changes throughout the project committed changes in round 2
noproblem yes timely commits
noproblem i   see 1 big commit with all the files which is the first commit and 19 very small other commits done in round 2
noproblem there are some commits around 19hrs ago most commits are 6 7 days prior
noproblem compared to other teams that i have reviewed there are fewer commits here and some are recently committed on oct 15
noproblem    relationship looks good in both models and schema
noproblem yes all relationships properly defined in the model
noproblem the db is well designed and relationship mappings are proper
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships
noproblem no schema or relations are implemented
noproblem all db relation and validation are correct and complete    good job
noproblem the project is implemented incorrectly and is incomplete
noproblem only ba
noproblem the tests are the normal ones generated by scaffold
noproblem tests are written for the controllers
noproblem the code is clean and readable
noproblem code looks quite readable
noproblem looks alright
noproblem the code is clean and well written the controllers and models are named accurately and each filename describes the desired functionality good work on that
noproblem the commits were regularly   till round 2
noproblem i could see commits in round 2 as well
noproblem yes 67 commits
noproblem yes the team kept pushing their updates even in round 2
noproblem yes there are commits after round 1 review but by review 1 the project wasn t working and hence these commits are probably partially to make it work in the first place
noproblem the team has contributed to the repo regularly all the team members have contributed to the project in the second phase the system has improved a lot as compared to the previous version
noproblem yes lot of code has been checked in post 1st cut
noproblem since the last time they have improved a lot    the basic functionalites are working
noproblem yes 1st cut did not have heroku link this time apart from additional code link is present and may of non functional flows seems to be in place
noproblem as mentioned in the read me file the inquiry controller and the admin model have been tested thoroughly
noproblem no model or controller has been tested
noproblem they ve tested one controller thoroughly and one basic feature of admin model is tested
noproblem the user and realtor roles are tested to prevent any abnormal occurrences during the sign up good work on that
noproblem the code is very well structured and written with good coding practice
noproblem the code quality is fairly standard    the code does follow   good ruby and rails coding practices no bad naming every file is properly named based on their functionalities i cannot find issues with coding one method handles only one task i could not find any bugs in the system and this works exactly how it is supposed to work
noproblem code is written in an efficient clean and readable manner proper use of data structures like hash maps are used wherever necessary a proper use of names for controllers migrations and views can be seen the names given for controllers properly signifies the tasks performed the readme file is thorough and provides all the functionalities implemented in the project
noproblem every method is handling only one task and the code is written in a clean and readable manner the naming conventions are maintained the code was also very modular the overall gui is user friendly
noproblem the code is written clearly
noproblem commits on the repo show updates of functionalities
noproblem yes the commits were very well spread out throughout the development cycle which was evident from the quality of the project that was delivered
noproblem checking git log the team kept submitting their changes throughout the project
noproblem yes the team kept on submitting changes throughout the project the commits also includes messages and descriptions about the changes made the team still committed changes in round 2
noproblem the team has worked hard on the project which is evident by the fact that i can see commits almost daily throughout the project period an excellent job on that end
noproblem they keep commit code until 10 10
noproblem all known mappings are present
noproblem the db was very well designed and successfully mapped all the required relations effectively
noproblem by looking at their model files relationships are handled well
noproblem this system handles the 1 n and n n relationships properly the relationships have been set up properly in the model files as well as the schema    they have also implemented the destroy dependency in the model hence no error pops out when the parent record is deleted
noproblem the team has done praise worthy work in handling relationships in the system the real estate company can add multiple realtors as well as the authorization of a particular realtor changes with the change in company
noproblem 1 n and n n relationships are all properly defined between realtors company and users
noproblem they added 1 to n and n to n relationship in the model
noproblem all functionalities working with a great ui
noproblem yes the system worked almost perfectly and there was a huge improvement from the first round almost all the issued pointed out after the first round were successfully resolved especially the bug fixing part and adding the new features the user experience was also considerably improved throughout the application
noproblem the system works without any glitches the team has been fixing bugs after the review 1 such that it works clean now i could not find any functionality that is still failing even after trying the edge cases
noproblem edge cases handled well
noproblem all the edge cases pass well done
noproblem 1 the realtors and houses will also be deleted 2 nothing will happen 3 inquires will also be deleted
noproblem every functionality is working
noproblem the application seems to have been well tested almost all of the test cases have been appropriately and effectively written couldn t find bugs while testing the application too
noproblem the team has tested a model where user with email and first name should be valid to sign up or sign in the following tests are meaningful and have the potential to fail    1 when user uses same email to register twice    2 should not save user with password less than 6 chars 3 should not save user with invalid email 4 should not save user without email
noproblem the code shows that most of the controllers and models were tested
noproblem yes they have tested a model and a controller
noproblem yes
noproblem code is well written and organised all the functions have been objectively defined and does only what it is supposed to do
noproblem code looks neat methods have only one functionality well organized
noproblem the earliest commit is dated around oct 4
noproblem all commits happened during round 2 but work was done before
noproblem yes the team kept commiting the changes throughout the project and also in round 2
noproblem yes feedback has been accepted and changes made in round 2
noproblem all the relationships have been properly defined in the models
noproblem yes they have properly defined the associations for every table and haven t missed on anything
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented each company has multiple realtors and each realtor can have multiple houses everything good here
noproblem by looking at their model files relationships are handled well
noproblem db mappings are done well cascading delete and cascading nullify implemented to handle delete cases
noproblem not many problem detected working to the expectations
noproblem all functionality seems to be present now
noproblem excellent code very well commented and followed most of the ruby s standard code formate very well organized
noproblem neat code and well arrangement of the views espaciallly the house_style view
noproblem code was committed throughout the project and during second round too
noproblem all feedback has been accepted and changes made to fix them
noproblem yes committed are constantly updated till today readme file was updated 3 hours ago
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if an admin tries to delete a house hunter with multiple inquiries all of his her inquiries are deleted as well
noproblem all deletion edge cases seem to be accounted for
noproblem yes
noproblem yes all the edge cases are handled very well
noproblem basic functionalities working fine
noproblem all functionalities works and can be successfully implemented
noproblem good readme instructions provided functionalities working fine
noproblem 1 deletes 2 changes successfully 3 deletes 4 all cases works
noproblem good test cases written
noproblem the edge cases tested where handled properly with proper messages that shows which other entities will be affected by the change
noproblem yes the team has thoroughly tested and did validations
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem code was committed throughout the project and during second round too
noproblem yes committed are constantly updated till today readme file was updated 3 hours ago
noproblem although the relationships have been properly handled i see in places with a belongs_to relationship optional true option is present which allows violation of the relationship and is a bad idea
noproblem the schema rb file should be in the repo from the models and the migrations the relationships appeared to be correct
noproblem db relationships looked fine new model was created for house style which could have been a parameter in house   model itself
noproblem can t login as admin in the redame flie
noproblem user model could have been subdivided into different roles models such as realtor and househunter
noproblem the admin credentials provided don t work and hence no admin functionality can be tested
noproblem an exception occurred when replying to an inquiry an inquiry could not be deleted by a house hunter
noproblem basic functionalities working fine
noproblem the code has been written in a very clean and readable way it is very legible and properly indented i could not find and issues with the coding there is no bad naming in this project and is neatly organised with instructions one method handles only one specific task there are function calls for multiple tasks yes adding the user to the house s potential buyers is done by a separate method call on the whole the code quality is legit and i could not spot any long methods or too many nested blocks
noproblem all functionalities works and can be successfully implemented
noproblem this project is very well organized and the code style is great
noproblem can not login as an admin
noproblem it s good to have the search logic in the model as opposed to the controller
noproblem 1 what will happen if the admin tries to delete a real estate company which has some realtors and houses can t be tested 2 what will happen if a realtor changes his her real estate company will s he be prohibited to remove the houses s he listed in the previous company no realtor is still allowed to delete houses 3 what will happen if admin tries to delete a house hunter who has submitted several inquiries will the inquiries be automatically deleted if this house hunter is a potential buyer of a house will s he be removed from the corresponding potential buyers list cannot be tested 4    delete a house in a house hunter s interest list and see if it still appears there works as expected
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem    really good commit record with good comments as to what was changed
noproblem 2 the realtor could only remove the houses he or she created regardless of his or her company the readme md was not very specific on how to handle edge cases
noproblem yes the number of commits have increased upto 110 commits
noproblem good readme instructions provided functionalities working fine
noproblem yes the team kept on submitting their changes throughout their project there are a total of 110 commits from the team and they still committed changes in round 2 they have made 28 commits int the week of oct 7 which is after the first round they have committed the changes with proper messages also
noproblem 1 deletes 2 changes successfully 3 deletes 4 all cases works
noproblem i just see commits done on last few days by most teammates
noproblem this team kept committing through the end of the project
noproblem they have actively committed code during the project duration including round 2
noproblem the tests for the controllers and models were basic scaffold tests with not much meaning
noproblem good test cases written
noproblem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many relations are absent
noproblem    mapping checks out
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships
noproblem house hunter and realtor can easily switch accounts
noproblem all of the relationships are handled properly in the code
noproblem the entity relationships have been established properly they have also implemented cascading delete
noproblem well done most of the functionality i commented on last time has been fixed with very intuitive ui the only thing i couldn t find still was being able to view all inquiries as an admin very good updates overall
noproblem all of these are well handled and documented in the readme good work
noproblem when a realtor changes real estate companies they are able to edit houses listed from the new real estate company but not from their old one when a user with inquiries gets deleted so do the inquiries
noproblem the edge cases are covered the readme file also details how these cases are handled
noproblem test cases for the user have been implemented
noproblem the user model is tested as are multiple controllers
noproblem they have written proper test cases that check both positives and negatives
noproblem the code looks clean and neat couldn t   find any bad naming in the project
noproblem code is written properly with all dry principles methods are simple and clean every method   contains functions specific functionalities mvc are created where they are needed
noproblem yes the code quality seems good team has taken care of keeping a good design
noproblem naming convention followed code is neat formatting is done function calls are included
noproblem 1
noproblem yes
noproblem yes the team has shown proper team collaboration two members of the team kept submitting   the changes throughout the projects and there are sufficient commits for round 2
noproblem yes model and relationships are well designed and cover most of them
noproblem test cases present for user controller
noproblem basic functional test cases are written for four controllers
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem the code has been implemented as per the ruby standards of coding
noproblem the code is written in a clean and readable way
noproblem cthe team has written code in a clean and readable manner the team has implemented individual functions for handling specific individual tasks the application uses proper naming convention and follows singular naming convention for all model classes the team has used singular and plural naming convention as per the standard ruby on rails convention which makes it easier for the reviewer to be able to read and understand the code
noproblem proper naming standards and conventions are followed
noproblem code seems clean
noproblem the code is clean and readme file is also present explaining each and every implementation
noproblem one method handle one task and code is neat and understandable
noproblem the code looks clean and neat couldn t   find any bad naming in the project
noproblem code is written properly with all dry principles methods are simple and clean every method   contains functions specific functionalities mvc are created where they are needed
noproblem yes the code quality seems good team has taken care of keeping a good design
noproblem naming convention followed code is neat formatting is done function calls are included
noproblem 1
noproblem the code was committed throughout the project the code was committed in the second round too
noproblem team continuously pushing changes into github i could not see distribution of work done equally i could see 46 commits with a neat and easy to understand readme file
noproblem yes
noproblem yes the team has shown proper team collaboration two members of the team kept submitting   the changes throughout the projects and there are sufficient commits for round 2
noproblem yes model and relationships are well designed and cover most of them
noproblem test cases present for user controller
noproblem basic functional test cases are written for four controllers
noproblem the code is clean and readable
noproblem code looks quite readable
noproblem looks alright
noproblem the code generally is simple and understandable blocks are simple but maybe its because few features are missing
noproblem the code is clean and well written the controllers and models are named accurately and each filename describes the desired functionality good work on that
noproblem the commits were regularly   till round 2
noproblem i could see commits in round 2 as well
noproblem yes 67 commits
noproblem yes the team kept pushing their updates even in round 2
noproblem yes there are commits after round 1 review but by review 1 the project wasn t working and hence these commits are probably partially to make it work in the first place
noproblem fewer commits compared to other teams that i have reviewed
noproblem the team has contributed to the repo regularly all the team members have contributed to the project in the second phase the system has improved a lot as compared to the previous version
noproblem yes lot of code has been checked in post 1st cut
noproblem the system properly handles the relationships where a real estate company can have multiple realtors also it supports a realtor to create multiple houses and the house hunters to add multiple houses to their interest list
noproblem since the last time they have improved a lot    the basic functionalites are working
noproblem admin requires a separate url to   login
noproblem yes 1st cut did not have heroku link this time apart from additional code link is present and may of non functional flows seems to be in place
noproblem the basic test cases mentioned in the read me work fine it does not cover the edge cases as mentioned above but some of the validations i tried seem to have worked
noproblem as mentioned in the read me file the inquiry controller and the admin model have been tested thoroughly
noproblem they ve tested one controller thoroughly and one basic feature of admin model is tested
noproblem the user and realtor roles are tested to prevent any abnormal occurrences during the sign up good work on that
noproblem well written code clean and easy to read
noproblem checking the git log the team still committed changes in round 2
noproblem they committed quite many changes on the day of submission
noproblem handled perfectly well
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem the code written seems to follow nice
noproblem good coding practice used
noproblem commented code in view controller files
noproblem there were commits with required changes for the second submission commits from all team members could be seen showing their contribution
noproblem yaah frequent commits were done throughout the course of project
noproblem 157 commits
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem 157 commits
noproblem mapping has been properly implemented
noproblem no couldnt find 1to n relationships
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem the team has a well structured schema the team have defined the relationships between the tables properly the models have defined all the relations properly
noproblem yes the team has rectified the errors from the earlier review and has implemented the needed changes additional functionalities like the not interested feature were also used
noproblem yes the problems found in first round were fixed
noproblem no null checks i can submit empty form
noproblem the authors did a good job in developing the system the system is working as it is supposed to work
noproblem    the web application seems to have implemented all the functionalities properly the team have updated the repository and implemented new features after the initial submission
noproblem addressed comment from 1st review
noproblem edge cases are not handled
noproblem the following edge cases seem to have been handled and documented 1 on deleting a user the corresponding househunter and realtor accounts are deleted 2 on deleting a company corresponding houses are deleted and realtors with that company have their company set to null3 on deleting a househunter or house the corresponding entry in interest list is deleted 4 on deleting househunter or house corresponding inquiry is deleted
noproblem works great have mentioned in readme as well
noproblem the above case is covered
noproblem no test cases performed
noproblem tested multiple controllers but i don t see any models being tested
noproblem yes the team has done pretty well in testing at least one model and one controller
noproblem the team have implemented basic testing for basic crud functionalities for all the controllers and models these look like the automatically generated tests from scaffold in rails
noproblem couldn t find rspec file or any other test file
noproblem code follows most of the ruby good practices
noproblem the team seems to have followed proper naming conventions for naming all the classes as well as all the attributes the   team seems to have written a clean and readable code
noproblem the team committed throughout the project and during round 2
noproblem they have 181 commits
noproblem the team has a good history of commits and as can be seen from the github repository the trail of commits is well documented and each new feature added or bug fixed has a documented commit the team kept pushing commits throughout both the deadlines and were regular
noproblem yes a total of 181 comments and are continuously committed on the repo
noproblem the database design is solid with join tables for the n n relationships
noproblem the rb files set the has_many and belongs_to relationships correctly
noproblem the team has a well designed schema and has defined all the relationships between the tables properly
noproblem the system is well designed and all the features have been correctly added and all the functionalities work the authors have fixed all the problems from the previous submission
noproblem the system works as it is supposed to for example the realtor the admin and the user can login and perform the related functionalities successfully
noproblem the system was very strong through edge cases and the readme md was very detailed
noproblem the first edge case wherein a comp any is being deleted by the admin is handled perfectly and the associated listings and inquiries are deleted accordingly the house hunter deletion is also handled perfectly so that their inquiry are deleted accordingly also the readme md   explains the working and the functionalities of each role properly
noproblem 1 what will happen if the admin tries to delete a real estate company which has some realtors and houses it deletes it successfully          2 what will happen if a realtor changes his her real estate company will s he be prohibited to remove the houses s he listed in the previous company no houses are easily changed and can be deleted by realtors       3 what will happen if admin tries to delete a house hunter who has submitted several inquiries will the inquiries be automatically deleted if this house hunter is a potential buyer of a house will s he be removed from the corresponding potential buyers list    it cannot be removed if inquiries are pending       4 you can come up with more edge cases if the system fails in some edge cases explain with enough details most of the functionalities i checked such as creating a house putting inquiries removing various users looking back in different accounts if it removes such as inquiries if user has still submitted or pending inquiries all works fine
noproblem the tests looked good
noproblem the team has tested the app using rspec and thoroughly tests the user module
noproblem good job on testing everything with rspec tests look concise and crisp
noproblem the team has implemented rspec testing and have thoroughly tested one model namely the users model with this also the team has used minitest to thoroughly test the users controller
noproblem test has been written for most of the functionalities and works well the test folder has the relevant files with well commented code
noproblem all functionality seems to be there now
noproblem all deletion cases are taken care of
noproblem tests are good
noproblem controller method testing is incomplete
noproblem there were 26 commits in total the team pushed some commits for the round 2
noproblem did not find such a relationship in the model did not find foreign key constraints as well
noproblem i found rspec tests written for inquiry and users
noproblem 1 the team has tested parts of different models and controllers partially but none of the models controllers is thoroughly tested for complete functional verification
noproblem yes by looking at their   commit history the team still commit changes in round 2
noproblem by looking at their model file they handle the relationship pretty well
noproblem no bad naming multiple calls for multiple tasks
noproblem submitted changes throughout the project made commits in round 2
noproblem from what i can tell code quality in this application is good functions generally   look small and there is good use of rails utilities
noproblem code is written properly one method is covering only one functionality also for more features team has created new controllers hence i can conclude code is neat and readable
noproblem the code is clean
noproblem great code writing habit
noproblem yes they did
noproblem yes
noproblem    all the mapping looks good nice job
noproblem yes the db design handles these relationships correctly
noproblem team has mapped house realtor company also house hunter inquiries well in the model
noproblem the schema is very well defined most of the suggestions provide as part of initial review are incorporated the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record this ensures there is consistency
noproblem implemented the mappings properly
noproblem yes
noproblem the team has done a great job in testing admin controller is tested extensively with relevant concise comments   and rspec is used to test admin model with its validators
noproblem from what i can tell code quality in this application is good functions generally   look small and there is good use of rails utilities
noproblem code is written properly one method is covering only one functionality also for more features team has created new controllers hence i can conclude code is neat and readable
noproblem looks good there are some files which are misleading like realtors folder has edit_company file which is blank also the readme md file is missing the admin login details
noproblem the code is clean
noproblem great code writing habit
noproblem there are new commits however the quality of commit messsages is terrible commit message should have a short description of what was changed not just be random words like foo1 foo2 or hasdfsdsd
noproblem yes they did
noproblem yes
noproblem    all the mapping looks good nice job
noproblem yes the db design handles these relationships correctly
noproblem yes
noproblem this system handles all relationships   properly by using has_many belongs_to constructs correctly and addition of relevant foreign key attributes in the appropriate tables
noproblem implemented the mappings properly
noproblem the schema is very well defined most of the suggestions provide as part of initial review are incorporated the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record this ensures there is consistency
noproblem team has mapped house realtor company also house hunter inquiries well in the model
noproblem the team has done a great job in testing admin controller is tested extensively with relevant concise comments   and rspec is used to test admin model with its validators
noproblem seems alright
noproblem yes the code written was clean and readable
noproblem code quality is good linked features are working fine like the one asked in question
noproblem good code writing
noproblem good coding practices have been followed methods are crisp and single responsibility paradigm has been implemented
noproblem submitted well within deadline
noproblem yes they did
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem the team committed their changes throughout the project period consistently
noproblem yes the team has committed code changes in round2
noproblem yes they still commited until yesterday
noproblem yes the team kept committing changes throughout the duration of the project
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem i did not find any problems in the first phase testing all basic functionalities work as expected bonus points for the ui one of the best i have seen the web application is intuitive and guides the user in performing any function great job
noproblem first reviews comments were fixed
noproblem the readme document clearly mentions the edge cases when a company is deleted what happens to the houses and realtors
noproblem edge cases are covered when a company is deleted the realtors and houses are also deleted along with it the readme md file also details how the edge cases are handled
noproblem able to create two users with same email and if i try to login with that particular email error screen appears
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the inquiries controller is especially well tested all assert statements are well thought of
noproblem yes the team has thoroughly tested
noproblem most common cases are tested in controllers they are using fixtures for testing
noproblem yes they used rspect to test the code
noproblem the code looks clean and neat couldn t   find any bad naming in the project
noproblem yes the code quality seems good team has taken care of keeping a good design
noproblem 1
noproblem naming convention followed code is neat formatting is done function calls are included
noproblem the code was committed throughout the project the code was committed in the second round too
noproblem team continuously pushing changes into github i could not see distribution of work done equally i could see 46 commits with a neat and easy to understand readme file
noproblem yes
noproblem yes the team has shown proper team collaboration two members of the team kept submitting   the changes throughout the projects and there are sufficient commits for round 2
noproblem code is written properly with all dry principles methods are simple and clean every method   contains functions specific functionalities mvc are created where they are needed
noproblem yes model and relationships are well designed and cover most of them
noproblem readme does not talk about edge cases but it covers how to to access the website good thing is that most of the errors pointed out in the prior review have been taken care of    search is missing
noproblem test cases present for user controller
noproblem basic functional test cases are written for four controllers
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem adopted good coding practices
noproblem code was very clear and concise implemented concepts of cohesion and coupling related functionalities were placed together
noproblem yes the code looks good code modularization principles are followed didn t find any major code duplication issues
noproblem the code is very well written with maximum functionalities   covered including adding a house to interest list as a hunter and showing that hunter as a potential buyer for that particular house well done
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem yes timely commits
noproblem 20 commits in round 2
noproblem team showed great consistency in committing changes changes increased in round 2
noproblem yes the commit count has almost doubled
noproblem 52 commits the team seems to be quite active throughout
noproblem code is pushed but frequency is very less
noproblem yes the team has handled all the   single and multiple   associations among all entities quite well all the relationships can be reviewed under the model of all the entities
noproblem yes models are maintained properly
noproblem database was well designed so as to avoid redundancy
noproblem looks good all types of relationships are handled properly
noproblem yes the mapping of 1 to n for company realtor and company houses is correctly done
noproblem the design is well implemented relationships are well defined in models and edge cases are handled in schema itself
noproblem code in the files are auto generated every function is implemented in a clean and readable manner and performs only one task code on whole follows ruby on rails practices
noproblem code is clean and readable 1 yes 2 no 3 no readme file is well written and descriptive
noproblem the code is quite clearly written with all the good coding practices being followed
noproblem yes team kept on submitting their changes throughout the project only readme md file was updated in round 2
noproblem the commits are many and have been done in round 2 as well the commits weren t evenly spaced through the development cycle
noproblem although there aren t too many commits the team does seem to have been updating their git in a continuous manner
noproblem all commits on same day before submission
noproblem a total of 26 comments and recently updated also
noproblem can see the commits in a single shot on few particular days yes the team has committed changes in round 2
noproblem the team has committed changes in round 2
noproblem 26 commits overall with about 13 commits for round 2
noproblem yes    1 to n and n to n relationships are handled correctly tables are mapped correctly
noproblem most of the mappings are done correctly
noproblem the code on github shows the 1 to n relationship between real estate company and realtor the realtor is also able to create real estate companies of his own
noproblem yes the mapping is done quite well
noproblem edge cases are handled good and the readme is effective enough to understand the entire code flow
noproblem only default tests are present
noproblem code in the files are auto generated every function is implemented in a clean and readable manner and performs only one task code on whole follows ruby on rails practices
noproblem code is clean and readable 1 yes 2 no 3 no readme file is well written and descriptive
noproblem the code is quite clearly written with all the good coding practices being followed
noproblem a total of 26 comments and recently updated also
noproblem the team has committed changes in round 2
noproblem 26 commits overall with about 13 commits for round 2
noproblem yes    1 to n and n to n relationships are handled correctly tables are mapped correctly
noproblem most of the mappings are done correctly
noproblem the code on github shows the 1 to n relationship between real estate company and realtor the realtor is also able to create real estate companies of his own
noproblem yes the mapping is done quite well
noproblem edge cases are handled good and the readme is effective enough to understand the entire code flow
noproblem the testing was done
noproblem the system has been fully deployed and tests for the models and controllers are performed for the users involved in the system the team checked for the edge case wherein the admin deleted the real estate company
noproblem the code is clear and simple most functions have seperate   method calls
noproblem the code followed the basic practices for clean and effective programming using ruby and rails the methods and function calls were efficient in that they only performed the task it was assigned to do
noproblem a major portion of the project was completed in the first stage itself certain noticeable changes that the team implemented in this stage included setting up admin functionalities to view and destroy the realtor or househunter accounts
noproblem i think this team nailed the entity relationships with this application everything had the right relationships
noproblem the relationships between various entities is clear
noproblem the relationships of realtor to real estate company or realtor to house hunter justified proper mapping between them the system handled the 1 to n and n to n relationships properly
noproblem the basic functionalities in the system are working properly
noproblem the user interface of the system helps to understand the general flow of the program it also supports sessions and enables user to navigate based on their tasks
noproblem 1 yes that is taken care of 2 no bad naming 3 questionable redirection
noproblem code quality looks good standard conventions have been used it is also good to see that the team has used seeds rb for data generation
noproblem group continued to revise and commit changes for the project throughout round two commits were clearly stated as to the purpose you can see the development process of the project through the changes applied
noproblem yes 22 commits in total and they have consistently kept on working on git throughout
noproblem 1 to n and n to n relationships are handled correctly the system utilizes foreign key columns in the database to achieve this for example 1 to n relationship between realtor and real estate company is achieved by adding a   company_id field to user table same utilized by houses table which are linked to one realtor and one company
noproblem the system now works as expected the common functionalities are working
noproblem most of the functionalities are added and seem to be working there are some breakages like realtor has a create inquiries option which should not be present and it breaks on clicking it search functionalities based on footage price location have not been added interest list for the user and potential buyers list for the realtor is not added
noproblem well written code clean and easy to read
noproblem clean code and readable 1 yes 2 no 3 none
noproblem very well written in the style of writing and the ruby mvc architecture is properly implemented    1 they have suitably defined methods to handle particular tasks following the appropriate mvc architecture and also following the correct session management    2 nothing is inappropriately named they have very smartly worked on it    3 coding style is absolutely conversant with the ruby on rails flavor of coding
noproblem the code is very well written
noproblem code is clean and well written a task is handled by only one method there are no bad naming   in this project and is neatly organised with instructions    no issues with the code
noproblem    the code is written in a clean and readable way
noproblem yes the team has been making commits through out the project tenure as well as round 2
noproblem the commits are visible through out yes commits have occurred in round 2
noproblem they have worked on the project a lot 120 commits each one being descriptive good job there
noproblem yes they did 118 commits
noproblem yes the changes were mostly evenly spread out throughout the development cycle this shows consistent efforts throughout
noproblem yes they have a total of 117 commits which shows the consistency shown by them in working through the project and updating the changes they have made a lot of vital changes in round 2
noproblem yes there are commits continuously made to the code as latest as 5 hours ago during review
noproblem yes the team kept on submitting their changes throughout their project there are a total of 120 commits from the team and they still committed changes in round 2 they have committed the changes with proper messages also
noproblem the relationships in the db table have been carefully defined and they have taken care to relate 1 to n for houses house hunters inquiries and so on
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships
noproblem    by looking at their model   file they handled the relationship properly
noproblem perfectly functional and very well styled with the use of css and also the gui is very user friendly
noproblem there seems to be a rudimentary test they have implemented as gathered by going through their file application_system_test this and the test file in the models shows that they have taken sufficient efforts to thoroughly examine their code
noproblem of the functionality the team have tried to to implement the code quality is not poor however the arrangement of code is difficult to understand given that not all functionalities seem to have been implemented the def after_sign_in_path_for function in the applications controller used by the devise gem only takes realtor as a resource i would advise using an if or case condition within the function to allow other users to login also i was unable to find any implementation for making sure that only the inquiries specific to a real estate company be visible to a realtor and similarly only the inquiries posted by a house hunter themselves be visible to the house hunter on that specific house i would again suggest using some if or case statements in the show function of the inquiries controller to establish identity of current_user
noproblem yes it is
noproblem changes to application continued throughout the second round of project submissions many of the commits deal with the adding additional functionality to the company controller as well as additions to the readme i can see that good work was made toward implementing missing functionality from the first round of submission
noproblem code seems to follow the ruby practices
noproblem code is written in a clean and readable way there are separete methods for separate tasks    good naming convention is followed throughout the project
noproblem recompany could have been just company
noproblem the team seems to have attempted to add to their functionality from the previous round they have attempted to use the devise gem for allowing multiple user logins it seems that they created a new git repo and started from the beginning which seems like a fair idea given that they wanted to use devise instead of implementing the user registration sessions
noproblem yes they have keep commit to git as their project been working
noproblem fewer commits on the project more towards the deadline date
noproblem most of the commits are within the last 2 days before submission of project yes commits for round 2 are provided properly
noproblem the team submitted their changes towards the end of the project they committed changes in round 2
noproblem checking the git log the team still committed changes in round 2
noproblem though the commits started late in the project s life there were commits frequently and also after round 1 the commit messages could have been a little more descriptive to fully comprehend the commit changes
noproblem yes there is a has_many relationship in company model and also realtor is able to create mutliple house in one company
noproblem from the code db design looks fine they have handled most of the relationships properly although i believe having different tables for admins realtors hunters users roles and role maps is un necessary and just increases the complexity of the system
noproblem the relationship between house hunter realtor and companies have been well established
noproblem they committed quite many changes on the day of submission
noproblem i cannot access the link provided by the team since this is hosted on aws i believe they have not opened the ip to public by mistake i have worked with aws before and this happens maybe they worked from library or their house and when you spawn an instance in aws it adds the ip from where the instance is spawned to the access list which is why i am not able to access this from my ip this can also be a problem with the proxy server setup in the instance and since you guys are maybe doing ssh into the server to deploy your code the default http request will go to port 80 and wont be forwarded to 8080 unless explicitly specified in apache nginx and will block the requests easier way would be to host the app on heroku which handles all this automatically and provides you with a dns entry
noproblem the link submitted is not live as a result i could not test if the system is working as it is supposed to
noproblem the given link does not work and gives the following error this site can   t be reached   18 224 197 227   refused to connect hence cannot comment on the functionalities
noproblem the app url provided didn t work
noproblem cannot access app
noproblem edge cases are not handled but most of the logic will automatically handle edge cases
noproblem the given link does not work and gives the following error this site can   t be reached   18 224 197 227   refused to connect hence cannot comment on the edge cases
noproblem the app url provided didn t work
noproblem there is no link to login as an admin the site went down so could not test further this site can   t be reached 18 224 197 227   refused to connect    search google for   224 197 227 8080 house hunters sign    err_connection_refused
noproblem no model tests have been implemented basic controller tests generated by scaffold and devise are available
noproblem yes they have tested a lot like admin house and inquiries
noproblem testing has been done for users controller and model
noproblem yes the team has tested model and controller
noproblem some controllers are tested models are not tested thoroughly
noproblem the test scripts have been written however the scripts could have been written in a more elaborate way to include all the test cases and not just the high level tests for example the system accepts an invalid phone number which is less than 10 digits of length all these test cases could have been written and tested
noproblem in general the code seemed to look fine there were some really long methods like in the users_controller class so i docked a star there was a separate method for adding to interest list
noproblem it looks like all the needed relationships were present in the schema
noproblem authors   delivered nearly all the functionality i could think to test    it was a little weird being referred to a totally different page to have to upload images to houses but not enough to deduct points
noproblem the code follows all design style guidelines for ruby good job all methods are well designed and serve only one function naming and structure is uniform across the project
noproblem all basic functionalities work as expected you could have gone for the extra credit functionality such as the google login or the email part the email part was pretty easy you ve still done a great job with the overall design the best i ve seen thus far
noproblem 1 if admin deletes a company which has realtors and houses the realtor associated with it get deleted 2 realtor can change her company and she can delete the ad posts previously posted by her 3 admin can delete the house hunter who has several queries and inquiries get deleted automatically
noproblem yes the commit count has almost doubled from round 1 to round 2
noproblem 1 n and n n relationships are all properly defined
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem the code has been written in a very clean and readable way it is very legible and properly indented i could not find and issues with the coding there is no bad naming in this project and is neatly organised with instructions one method handles only one specific task there are function calls for multiple tasks yes adding the user to the house s potential buyers is done by a separate method call on the whole the code quality is legit and i could not spot any long methods or too many nested blocks
noproblem this project is very well organized and the code style is great
noproblem it s good to have the search logic in the model as opposed to the controller
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem    really good commit record with good comments as to what was changed
noproblem yes the number of commits have increased upto 110 commits
noproblem yes the team kept on submitting their changes throughout their project there are a total of 110 commits from the team and they still committed changes in round 2 they have made 28 commits int the week of oct 7 which is after the first round they have committed the changes with proper messages also
noproblem this team kept committing through the end of the project
noproblem they have actively committed code during the project duration including round 2
noproblem    mapping checks out
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships
noproblem house hunter and realtor can easily switch accounts
noproblem all of the relationships are handled properly in the code
noproblem the entity relationships have been established properly they have also implemented cascading delete
noproblem the search properties and addition of potential buyers needed to be improved and fixed after the first round the authors fixed all of it for round 2 the system works exactly how it is supposed to work i could not find any functionalities that are still failing they have added additional features like signing up with google and sending replies to enquiries via email
noproblem all feedback has been fixed no pending issues
noproblem all of these are well handled and documented in the readme good work
noproblem 1 if the admin deletes a company all the related properties will be deleted and will remove the company name assigned to any realtor 2 if the realtor changed his or her company the realtor cannot make changes to old posts which they have posted for the previous company they worked for so they will not be able to edit add or remove the houses listed in previous company 3 if the house hunter is deleted by the admin all the inquiries by the house hunter will be deleted and their names in the potential buyers list is removed the readme md covers how the system handles all these edge cases
noproblem when a realtor changes real estate companies they are able to edit houses listed from the new real estate company but not from their old one when a user with inquiries gets deleted so do the inquiries
noproblem the edge cases are covered the readme file also details how these cases are handled
noproblem test cases for the user have been implemented
noproblem still have lots of tests across all of the models and controllers but nothing super extensive that attempts to cover all possible cases
noproblem the team has tested both a model and controller the system can handle the following cases 1 when user uses same email to register twice    2 should not save user with password less than 6 chars 3 should not save user with invalid email 4 should not save user without email
noproblem the user model is tested as are multiple controllers
noproblem they have written proper test cases that check both positives and negatives
noproblem good coding practices have been followed methods are crisp and single responsibility paradigm has been implemented
noproblem good code writing
noproblem code quality is good linked features are working fine like the one asked in question
noproblem yes the code written was clean and readable
noproblem well written and able to follow however i see no branches created and hence pull requests merged all work is pushed direct to master
noproblem seems alright
noproblem submitted well within deadline
noproblem yes they did
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem the team committed their changes throughout the project period consistently
noproblem yes the team has committed code changes in round2
noproblem yes they still commited until yesterday
noproblem yes the team kept committing changes throughout the duration of the project
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem yes the relationships are handled properly 1 company multiple realtors etc no mapping table as such the schema handles it
noproblem i did not find any problems in the first phase testing all basic functionalities work as expected bonus points for the ui one of the best i have seen the web application is intuitive and guides the user in performing any function great job
noproblem first reviews comments were fixed
noproblem yes they used rspect to test the code
noproblem most common cases are tested in controllers they are using fixtures for testing
noproblem yes the team has thoroughly tested
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the inquiries controller is especially well tested all assert statements are well thought of
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if a house hunter is deleted all of his her inquiries are also deleted
noproblem the readme document clearly mentions the edge cases when a company is deleted what happens to the houses and realtors
noproblem edge cases are covered when a company is deleted the realtors and houses are also deleted along with it the readme md file also details how the edge cases are handled
noproblem 1 readable code 2 separation of tasks
noproblem good coding standard
noproblem the code is pretty clean
noproblem yes this team did a lot of work after the initial set of reviews
noproblem 1 yes timely commits on github
noproblem yes the team kept committing   changes in round 2
noproblem lot of commits and branches
noproblem 1 all   relationships are mentioned in the model
noproblem most of the relations holds good
noproblem user level vaildations   seem to do be correctly also i could not create an account with the same email id again
noproblem 1 readable code 2 separation of tasks
noproblem good coding standard
noproblem the code is pretty clean
noproblem the team has committed changes during round 2 though the changes haven t been spaced evenly most of them are close to the deadline also the changes haven t even spaced evenly the names of the commits were descriptive
noproblem yes this team did a lot of work after the initial set of reviews
noproblem 1 yes timely commits on github
noproblem yes the team kept committing   changes in round 2
noproblem lot of commits and branches
noproblem 1 all   relationships are mentioned in the model
noproblem most of the relations holds good
noproblem user level vaildations   seem to do be correctly also i could not create an account with the same email id again
noproblem code follows most of the ruby good practices
noproblem the team seems to have followed proper naming conventions for naming all the classes as well as all the attributes the   team seems to have written a clean and readable code
noproblem the team committed throughout the project and during round 2
noproblem there are quite a lot of commits meaning that the team could have grouped some of the changes together into one commit instead of commiting every small modification to make them more meaningful
noproblem they have 181 commits
noproblem the team has a good history of commits and as can be seen from the github repository the trail of commits is well documented and each new feature added or bug fixed has a documented commit the team kept pushing commits throughout both the deadlines and were regular
noproblem yes a total of 181 comments and are continuously committed on the repo
noproblem the database design is solid with join tables for the n n relationships
noproblem the rb files set the has_many and belongs_to relationships correctly
noproblem the team has a well designed schema and has defined all the relationships between the tables properly
noproblem the system is well designed and all the features have been correctly added and all the functionalities work the authors have fixed all the problems from the previous submission
noproblem the system works as it is supposed to for example the realtor the admin and the user can login and perform the related functionalities successfully
noproblem the system was very strong through edge cases and the readme md was very detailed
noproblem the first edge case wherein a comp any is being deleted by the admin is handled perfectly and the associated listings and inquiries are deleted accordingly the house hunter deletion is also handled perfectly so that their inquiry are deleted accordingly also the readme md   explains the working and the functionalities of each role properly
noproblem the tests looked good
noproblem the team has tested the app using rspec and thoroughly tests the user module
noproblem good job on testing everything with rspec tests look concise and crisp
noproblem the team has implemented rspec testing and have thoroughly tested one model namely the users model with this also the team has used minitest to thoroughly test the users controller
noproblem test has been written for most of the functionalities and works well the test folder has the relevant files with well commented code
noproblem code is well written all the conventions of the rails framework have been followed the functions have been properly defined and does only what it is supposed to do
noproblem code looks neat and clean
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem code is clean and easy to understand some unused unimplemented empty function definitions are there in the files
noproblem the code follows the general guidelines for quality and concept of clean coding the models and controller were designed with general practice approach using ruby and rails coding methodologies
noproblem the code was committed throughout the project and code was committed in the second round too
noproblem this team is keep on submitting their changes throughout the project and not only one or two members of the team but all of them are playing a role in this project besides they did commit changes in round 2
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem yes about 83 commits
noproblem the team improved upon certain aspects of their code this included establishing the admin functions and actions as adding new companies and to view various participants involved
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem the code procedure and application justified the 1 to n and n to n relationships between the realtor and house hunter model as well as real estate company and realtor relationship mapped as 1 to n
noproblem i think the authors did a good job in developing the system the system is working as it is supposed to work
noproblem yes i feel the team has done pretty well in testing at least one model and one controller
noproblem the team thoroughly tested the admin model and controller the tests for admin performed checks for admin functionality to be able to view the list of houses created by the realtors as well as look up for realtors and house hunters information that are involved in application
noproblem there are no new variables etc the code looks fine and logical
noproblem extremely small change no bad naming in question
noproblem there aren t much big changes the changes have been crisp and self explanatory
noproblem 1 functions are of appropriate length and well structured with respect to the purpose in question    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and self explanatory making it easy to follow    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is consistent and to the point
noproblem the added code is crisp and of required size there isn t much addition anyway to worry about it violating dry principles
noproblem extremely small change no problems found
noproblem all tests pass all descriptions in the test plan are just the test cases in the rspec file sooooooo yeah i guess they all exist
noproblem their   variables methods and class names are good
noproblem rspec tests look just fine and descriptions are intuitive
noproblem the tests look fine it s easy to follow what the tests do
noproblem code is well written
noproblem the work takes care of all the edge cases accurately
noproblem yes their code works and some edge cases are also correct
noproblem the writeup clearly explains the problem statement
noproblem the wiki page has showed up what the expertiza is and some examples have show up what the task of the team is
noproblem i could understand what the project does however there are fewer examples of the test
noproblem this is not a fair ask as far as i can tell there is no document that says we should create a test plan
noproblem all test cases are currently passing
noproblem all the cases discussed in test plan have been converted into automated tests
noproblem yes unit tests rspec are provided
noproblem action mirror successfully implemented active record is also getting updated properly
noproblem there were some issues initially when i looked at the code but the professor has already made those suggestions about naming conventions and following the design pattern and to write appropriate methods in the right models or controllers looks good now
noproblem       no naming issues found
noproblem the method names variable names and class names are intuitive and suggestive of the functionality
noproblem code looks perfect follows standards
noproblem all ruby looping constructs followed to a good extent refactoring the code could be possible
noproblem follows most he good coding practices follows dry follows ruby style guide and has no error in code climate as well
noproblem the code follows dry principle none of the functions is very long more comments could be added but not required
noproblem code is not dry
noproblem clear statement and well layout of the wiki page
noproblem all the features are implemented according to the wiki documentation submitted
noproblem edges cases are covered well in the tests
noproblem the features work as intended
noproblem fix is working good link is up
noproblem the features work as intended
noproblem the test has already covered edge cases
noproblem clearly mentions implementation details an the problem descriptions
noproblem documentation is concise and clear
noproblem the wiki document clearly explains what work is done one section for each issue the deadline reminder functionality explains what code is changed but overall what the use case is and what task needs to be performed could have been explained better
noproblem very well written wiki well explained with all the nitty gritty implementation details
noproblem the writeup is written very clearly gives good idea about the project
noproblem very detailed all the implementation details are clearly explained
noproblem the writeup is written really well the description about the functionality has been mentioned clearly good job
noproblem the writeup is clear
noproblem very clearly the authors provide sufficient information about improve the email function such as when become a participant
noproblem test plan is well thought out and thorough
noproblem yes conditions are tested well
noproblem maybe add the code to wikirt from some code climate change the code seems to be ready to merged
noproblem i m not really sure how to categorize this project but it seems to be structured and implemented properly
noproblem the writeup was really well explained
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem well written and self explanatory
noproblem the writeup starts off by introducing servo mozilla s experimental high performance browser engine and rust which is a systems programming language with memory safety and concurrency used to build servo it then moves over to web audio api for handling audio operations inside audio context and allow modular routing and a workflow for implementing web audio was clearly listed it then flows into the scope of the project and the implementation the graphical and mathematical representation of the sine square sawtooth and triangle waveform gave a solid conceptual foundation the code snippet of the changes done in oscillator_node rs and the new file oscillator rs created by the team has also been included the section build that explains the procedure to install dependencies rust step by step procedure for building and running the build was very useful to explore the project the team had included the build instructions for windows and debian based linux they could have augmented the build instructions for mac os x which might save mac users from reading verbose instructions on the official documentation and instead refer to a single source the wiki the authors end the wiki by providing the test plan with examples of generated sine square sawtooth and triangle waveforms as audio files pull request and references
noproblem no new added tests but the team had managed to get 100 test coverage in first round
noproblem yes the travis ci build is passing successfully
noproblem the commits show equal contribution by all team members
noproblem well written with understandable content
noproblem the code was very well written and up to to servo standards
noproblem the writeup is very detailed and gave me a good idea of what was going on with this project
noproblem this code seems to be well structured and written
noproblem commits were made in second round
noproblem yes it was committed and the changes were merged
noproblem yes new code was added and committed during the 2nd round that implements oscillator node example to exercise different oscillator types and generate triangle waveform
noproblem yes new commits were made during the second round
noproblem no conflicts and build passes
noproblem    they add test cases for the first round and the coverage increases however they did not add more in second round
noproblem it is already deployed on the production server
noproblem no test cases present but test plan covers it
noproblem the project is in great shape and has already been merged to the servo repository on github which means that it is production ready the team has fixed the few formatting issues pointed by a servo team member    the approach taken up by the team is in line with what is expected of them and it is a good start to advance the webaudio api of the servo browser engine in the future
noproblem yes no conflicts at all which needs to be resolved
noproblem i believe this code is ready to be deployed and if it isn t it can definitely be picked up in the future
noproblem the team did not add or improve any team cases from the first round the full path coverage of 100 was already achieved in the first stage
noproblem yes the travis ci has passed
noproblem the build has passed in travis ci and no conflicts have occured
noproblem the build passes and there are only minor warnings and issues which can safely be ignored
noproblem coveralls shows the following overall coverage increased 5 5 to   42 266 the coverage of menu rb has increased to 100 great job team no suggestions
noproblem the team s test plan includes running the oscillator binary file using the command oscillator this will run the oscillator rs where various oscillator nodes corresponding to sine square sawtooth and triangle waveforms are generated hence the user will be able to listen to these waves after a definite interval
noproblem it s working
noproblem 100 coverage
noproblem this project doesn t involve the ui it focusses on audio processing by fixing the missing audio nodes in servo s webaudio standard precisely it generates the sine square sawtooth and triangle waveforms the code that was modified and included from scratch works as intended
noproblem 2 commit during 2nd round
noproblem i m not really sure how to categorize this project but it seems to be structured and implemented properly
noproblem as mentioned earlier no new commits were added by the author
noproblem yes this team has been keeping push new commits during the 2nd round
noproblem there was a commit during the 2nd round this was made after the user codeclimate pointed out a few issues with respect to the indentation and lengthy code
noproblem yes new commits were added in the second round to fix the code climate issue
noproblem yes the code climate issues were resolved
noproblem no new commits were found but this was because the project was already done and did not need any changes    no suggestions
noproblem the writeup is very detailed and gave me a good idea of what was going on with this project
noproblem modify some to make it drier
noproblem there are some new commits in the 2nd round
noproblem their code is pretty good and they solved most of the problems
noproblem well done 100 cover
noproblem the writeup was really well explained
noproblem the code is well written no suggestions
noproblem the code follows the ruby style guide and makes good use of the better specs documentation for writing rspec test the team has also made an extensive use of the describe and construct contexts which helps to understand the code written
noproblem    they do not have these problems in the first round
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem well written and self explanatory
noproblem i believe this code is ready to be deployed and if it isn t it can definitely be picked up in the future
noproblem the project is in great shape and has already been merged to the servo repository on github which means that it is production ready the team has fixed the few formatting issues pointed by a servo team member    the approach taken up by the team is in line with what is expected of them and it is a good start to advance the webaudio api of the servo browser engine in the future
noproblem it is already deployed on the production server
noproblem this is not an expertiza project but the pull request does pass
noproblem not an expertiza project
noproblem the code was not much changed after the first round they added a few more sanitation check and rspec functions are not long enough and understandable
noproblem i think the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem    the code is extremly well written
noproblem videos and code explained very well
noproblem yes some of the issues were fixed
noproblem the code was written clearly dry and intuitive to follow the intended functionality
noproblem yes rspec   and few changes were committed
noproblem yes a lot of commits were made mostly to fix the issues pointed out by the ci tools
noproblem yes there were many parts of the code committed during round 2
noproblem 5 new commits were made during second round
noproblem yes
noproblem the team has a really good job of committing their code on a regular basis there has been some code commits even in the 2nd round
noproblem yes there were few new commits
noproblem yes there were some commits fixing the travis and code climate issues
noproblem yes the team actively committed to the project during the second round
noproblem the team seems to have thoroughly tested the use case and the coverage has increased
noproblem yes the team has added test cases and it covers all the functionalities and issues
noproblem no new test cases were added
noproblem video showing test cases passed good job
noproblem yes the team has included the relevant test cases to test their changes and the overall coverage has increased by 0 04 which i think covers the scope of this project
noproblem coverage increased by 0 04
noproblem automated and manual tests have been added and coverage has increased by a very tiny amount
noproblem yes the team did add test cases that increased coverage they are appropriate for the scope of the project
noproblem yes the team has added test for the utf encoding acceptance the coverage is not 100 and not tested with varied inputs but i believe would suffice for sanity check although the description of test in rspec file is ambiguous not clearly mentioning what exactly the test is expected to do there is no test available for the issue 2 documented
noproblem videos provided and the project is not deployed so cannot test from ui but the issues are fixed and the system is working as expected
noproblem my testing shows things seem to be working as expected and documented
noproblem the deployment link hasn t been provided though they have put videos for the same
noproblem it works as intended
noproblem yes code works
noproblem from the video links that have been shared it is very clear that the features are working as they were supposed to even the test cases are passing i see no issues with this part
noproblem looking from videos all the intended features work
noproblem yes the code works has expected it accepts the utf 8 codes now and also parses html tags in reviews like expected
noproblem the write up is well written explaining all the steps undertaken to make desired changes and displaying how the system works after   the changes have been made with screenshots they have also added test plans in the wiki page
noproblem pretty nicely written wiki test plan also describes how various tests were performed
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem properly explained write up with old and new changes
noproblem the writeup i must say has been one of the best i have seen   so far it clearly mentions all the issues that they were facing and were asked to tackle the solutions are well documented as well the screenshots help in understanding the problems that they fixed
noproblem yes the write up is good if they were able to host it d have been better for checking the work
noproblem the write up is well written elaborate and clearly elucidates both the manual test cases considered as well as the automated tests implemented screenshots of both cases were also included as well steps for manual testing were clearly written
noproblem the team has considerably improved the write up the write up was very inefficient and dint provide details of the code base also the video was encoded and impossible to view in round 1 the team has rectified all these issues with round 2 they have documented their fixed more clearly with screen shots and code this time
noproblem it can be deployed but first it should be tested thoroughly
noproblem i think the changes are tested nicely and seem to cover all the necessary cases this can be merged into the master branch and is ready for production use
noproblem watching the videos i feel it is ready but no deployment link
noproblem as it did not pass the test it is not ready for a future team end of this project should be a good starting place
noproblem its ready to be merged
noproblem in my opinion this team has done pretty good work and the code looks like ready to be deployed on the production server
noproblem according to write up it s good to go but since there is no deployed link i couldn t manually check
noproblem yes just fix the few issues present and that should be fine for it to be merged into main line as the feature seems to work and there isn t any major code issue
noproblem i believe this change that affects the system as a whole needs more test to be performed in all affected tables and functions to be sure no other part of the system is broken my opinion is that once all parts of the system test is done corresponding to this centralized db change the code can be deployed to production
noproblem build did pass successfully could have written version specific code to avoid errors
noproblem pull request build passes well and there are issues
noproblem no it did not pass travis ci and there are many conflicts that must be resolved
noproblem few minor issues with the build which can be ignored
noproblem the travis ci test passes
noproblem the build passed in travis ci with no conflicts
noproblem not all changes has been verified successfully few code climates rejects has happened as well
noproblem the code was already delivered in the first round hence no commits this round the author has regularly pushed commits
noproblem team has added many tests coverage has increased from 1 to 38 which is impressive
noproblem yes as mentioned in the problem statement the solution is delivered it works fine
noproblem the last commits were 12 days earlier hence no new commits were made during the second round
noproblem yes the team did add test cases and the coverage increased too but the team didn t put any efforts after the initial review round since the failed tests are still failed and there are no new commits since 12 days
noproblem yes the project did work as intended the video demonstration and manual testing were enough to prove this fact
noproblem the code is well written and well commented and follows ruby style guide
noproblem very good guidance works as intended this project is about enhancing juniper bookmarks the features work as they are supposed to automated rspec tests were added could have described the automated tests in the wiki
noproblem no issues codewise can add test cases and after thorough testing it can be deployed yes other team can take up and fix the minor issues and build pass
noproblem the write up is very detailed with comparisons between previous and new versions as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features
noproblem they don t have code problem for the first round
noproblem no new commit during second round
noproblem yes everything works
noproblem the writeup is great in first round they did not have a test plan part but they added it in the second part
noproblem no new commits
noproblem the testing has been implemented and looks well implemented
noproblem the functionality works and is evidenced by the video
noproblem no i do not think the code is ready to be deployed i found the code change hard to understand there are no comments and neither has the logic or rationale behind the new changed code been given in the wiki besides the build fails and there are a host of issues that   need to be fixed    although all this might only be trivial issues and can be fixed rather easily the code as of now is not deployment ready   according to me
noproblem yes 1 checkin was done on nov 2nd
noproblem yes
noproblem no new code was committed in the second round
noproblem the writeup needs significant improvement no clear explanation is given as to which files are edited for which reason only file names are stated along with changes made why the changes were made and what do those changes correct is not given this review was given by me last time and no improvement has been made in this regard
noproblem yes coding practices seem upto standards
noproblem doesn t seem to have new commits in round 2 last commit was on 2nd november
noproblem seems to be working as intended but all the features have not been implemented the documentation mentions future work but no new code has been added
noproblem no all the features have not been implemented e g 1 a reviewer can be recognized or credited if he added useful bookmarks i e if the author has made use of the bookmark 2 a function to add badges automatically if a participant had submitted more than threshold number of useful bookmarks plus build did not pass as well
noproblem overall the quality of code is great there some variable which does not follow naming convection
noproblem yes they were made
noproblem yes there is one conflict that must be resolved to go ahead reported by travis ci
noproblem they did add the test cases but the coverage only increased by 3
noproblem yes it works as intended
noproblem the writeup is well written and self explanatory
noproblem no its not as the coverage is increases by small amount
noproblem yes everything does seem to work properly
noproblem since the travis   test has failed merging the code would not be a good idea the project doesn t need to be redone from scratch some modifications to the existing work   could make the project ready for deployment
noproblem there are a few issues regarding code repetition and extra white space especially in the controller rspec file
noproblem no new code was added nor was any necessary
noproblem many test cases were added with overall test coverage increasing for the project
noproblem it seems that everything works though it was hard confusing to find everything as per the instructions on the write up
noproblem the code looks good
noproblem very nice code easy to read and understand
noproblem the code written by the team satisfies the basic functionality expected the team followed the comments from previous round of using good naming conventions for certain variables
noproblem travis build passed
noproblem the build passed in travis ci
noproblem yes the travis ci is passed no conflict that are remain do be resolved
noproblem the team has presented a working deployment to be possible it passes most of the builds and can be deployed on the production server
noproblem yes apart from the 7 issues of minor severity from codeclimate the code is perfectly well to integrate with the project no the project need not be planned and executed from scratch it is implemented well enough
noproblem the team has worked on improving the wiki document the writeup now includes the test plan section   that was suggested in the first round specifying the how the team setup an expertiza environment the model functions used and the mock instance built for testing the model file
noproblem the write up is well written in my thought it is clear and understandable
noproblem very nice writeup
noproblem the system operation is verified and works as intended as demonstrated from the video    also all the test scenarios are covered
noproblem nil test were added all scenarios are covered
noproblem the project successfully covered all the scenarios
noproblem yes the team covered all the scenarios i could have come up with i specially appreciate the work that they ve put into the import functionality they have come with with more scenarios than i could   have even thought of and tested it pretty thoroughly
noproblem build says the overall coverage decreased but the coverage of the   test has increased
noproblem the team did not add any test cases since they had achieved a 100 coverage in the first round itself however certain changes made to the test cases included using proper naming conventions for attributes and following the dry principle effectively throughout the model file
noproblem they reached 100 at first round
noproblem coverage was already at 100
noproblem 100 percent coverage
noproblem the coverage is 100 since the first round it seems there s no newly added tests
noproblem yes the team covered 100 of the code they had to test also the video given in the link was very informative and helped to understand the implications of the work done by the team to a far greater extent
noproblem yes new commit is done for second review
noproblem involves fixing code climate issues
noproblem yes new code committed during the 2nd round
noproblem there s no upload for the local folder it seems that no new pull requests has been committed during the 2nd round so i would guess no new code being committed for the 2nd round
noproblem yes the authors have improved the code the team has worked on the issue which i mentioned in the previous review the code doesn t seems to be confusing now but it still needs proper commenting to be done
noproblem they haven t made any change since round 1 review haven t changed the naming as well eg   topic_id1 doesn t seem right to me but other than 1 or 2 names everything else looks clean also you haven t added comments to you code you should add comments when working in a open source project
noproblem a few comments could be included in code to make it more clear
noproblem suggested changes related to naming convention are not included in the 2nd round    variable names rop_topic_deadline1 topic_id1 puts statements are not removed p topic_id1    other than this the code is properly written following coding best practices
noproblem the code is well written i did not see any bad naming conventions or bad coding style
noproblem there is only one commit made during the entire project there is no new code added during the 2nd round
noproblem there has been only one commit for the entire project
noproblem commits were made in second round
noproblem no there was a single commit throughout the project period and that was during the 1st round
noproblem no commits were done in round 2
noproblem nothing changed since round 1 haven t added a shorter video or a video with sound haven t made naming changes
noproblem no the code was last committed   on oct 31st
noproblem there were no new commits in the 2nd round
noproblem i don t see any code changes after the first round
noproblem no need for test cases 1 for mentioning it in the wiki
noproblem no test cases present but test plan covers it
noproblem no the team did not add any test cases and the coverage did not increase the overall decrease was 13 6 to 34 007
noproblem no new tests were added and coverage has also reduced some ui testing could ve been done
noproblem they have mentioned that its ui   change and has been discussed that testing isn t required in there documentation but i think you should still have mentioned something there steps to follow to check how your changes work
noproblem not required
noproblem test cases were not required for this project
noproblem the test cases were required as the chnages were related to ui the team mentioned the same in the wiki
noproblem yes the ui operations works as intended the features fixed now works as intended
noproblem it s working
noproblem since the project was deployed hence manual testing could not be done but the screenshots show that the project works as intended
noproblem the feature works as per the video shown
noproblem fro video it seems to work as intended
noproblem the link to the deployed application was not available so testing could not be performed
noproblem the video explains the new functionality and the functionality is working as expected good job
noproblem yes it works as expected
noproblem writeup has been improved after the first review the codes now look more comprehensive
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem the write was good and well written however it would have been better if some screenshots were also present in the writeup may be juxtaposing the screenshots of before and after of fixing the issues that would have made the write up easier to understand
noproblem the deployed link application again goes to video only if deployment isn t done they could ve removed the link
noproblem write up isn t good they have just added there code in the write up without explaining anything plus no comments in code code snippets in writeup are going off the page
noproblem the writeup is good and clearly explains the issues faced however instead of putting   in the code changed i feel it would be better to have screenshots of git commit history where we can see both the previous code and new code to get a good idea of what actually was changed
noproblem the write up is well written and organised everything looks fine the team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand also the team could have included few screen shots in the write up
noproblem some improvements are required to deployed the code onto the production server the code should included proper commenting so that if the future team picks up from this project they could know what exactly the code is doing
noproblem it might be good to move the long function to smaller functions but the code looks clean and understandable
noproblem in my opinion the project is ready to be deployed and does not need to adopt a different approach
noproblem the feature seems ok but it can t be deployed yet with all pending issues
noproblem since the code coverage has decreased and the video demonstrates   a proper working
noproblem the deployed application was not available so it cannot be accurately predicted if the code functions as intended however the vedio   links in the google drive show that the issues have been resolved through existing code
noproblem ll the checks are failing currently the changes have a lot of robocop issues as well which should be fixed also the ci build is failing at the moment some of the tests are failing because of the change
noproblem code looks fine but build issue has to be fixed
noproblem the build is still failing and there are issues which needs the team s attention there is one warning and 1 error which needs to be fixed by the issue according to the error team should remove the debug code from the pull request
noproblem travis ci build is not passed though this was a bit common even for the second review the codeclimate issues are still showing
noproblem no the build did not pass in travis ci several checks had failed but there was no conflict
noproblem none of the tests travis ci code climate have passed
noproblem everything is failing code climate has 56 issues build is failing haven t made a change since round 1
noproblem the travis   test has failed and overall coverage has also decreased there were many errors in the build log of travis
noproblem all the checks including the ci build is failing
noproblem build is failing in travis ci
noproblem the code is perfect right now
noproblem yes through their commit record i have seen some improvement
noproblem well written code
noproblem yes there s new commits
noproblem yes new code committed during the second round
noproblem yes according to the commit record they have commit new code during the 2nd round
noproblem yes
noproblem the second commit is perfect it got perfect coverage but it seems that the 100 coverage was so since the first round but the new commited   code as better code style and no more indentation issue
noproblem 100 percent coverage
noproblem yes they have added some test cases and coverage increased
noproblem 100 coverage achieved great work
noproblem the team did a great job in   increasing the test coverage to 100
noproblem this is a testing project the tests have covered all the scenarios possible
noproblem yes it works as intended
noproblem the code coverage is 100 every test case passes after a manual check
noproblem great writeup
noproblem the document is well written with all the required details
noproblem yes for production code itself is perfect
noproblem as explained in the video the build seems to work fine
noproblem yes it passed all the pull requests
noproblem the build successfully passes travis ci
noproblem the code seems to be good it follows the principle of good design even though i do not know rust the use of variable names was very intuitive
noproblem the code doesn t make sense to me someone who isn t familiar with this project but it does seem to be formatted well
noproblem some commits were made to rectify old errors and get an approved pull request
noproblem yes there is
noproblem yes there new commits in round 2
noproblem several new commits were added during the second round
noproblem i don t see any tests added by this team although they do mention that their code additions were not particularly testable except with the existing automatic tests which they enabled
noproblem this is not an expertiza project
noproblem to test the system operation the project has to be built and run the sample html file was used to render a test canvas as given in the wiki
noproblem when tested the project does what was desired to be done
noproblem this system doesn t have a ui i can view as it seems to be a browser add on
noproblem write up is good    with code flow diagram and test plan pull request
noproblem the wiki is pretty much strong with plenty of info
noproblem the write up is lucid and has now incorporated the changes that were made in the round 2 it starts off by introducing servo rust offscreencanvas web worker web idl the authors then describe the code flow using a flow chart which was really appealing i especially liked the under the hood section which elucidated the files offscreencanvas webidl offscreencanvasrenderingcontext2d webidl offscreencanvas rs and offscreenrenderingcontext2d rs that they modified created in this project and their functionalities concisely the write up then includes the code from the above four files and finally ends with the test plan with 2 approaches links to pull request and references
noproblem the write up is good i liked the use of the flow chart to explain the flow of their code and explain the functionality i think that this was the first write up that used a flowchart
noproblem the writeup is the best part about the project it describes clearly what and how the work is done one can clearly understand their working strategy from the writeup
noproblem i m unable to get a really good idea of exactly what was done here for this project other than that it can be used as a display and rendering port and that it improves fail safeness of browsers
noproblem the code implementation is correct so with more edge test cases and after resolving the warnings in the travis test the code would be production ready
noproblem the code is well modularized and appropriate names are used for methods
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem first review comment weren t addressed
noproblem new code was comitted
noproblem few commits can be seen during 2nd phase mostly are for test plans
noproblem yes new commits were added during the second round
noproblem no the last commit was on oct 21st
noproblem the code was committed frequently during the second round
noproblem yes lot of code has been checked in most oct 31 good work
noproblem the team added many tests they seem like they would have high coverage but with the failing build this cannot be confirmed easily
noproblem sufficient test cases added
noproblem not able to get coverage from the log https coveralls io jobs 41685719
noproblem ui works as intended
noproblem the project is about improving email notifications    yes it works as intended screenshots of the code and changes made have been clearly described the tests cover all the scenarios
noproblem the features work as intended and the emails are sent to the concerned party
noproblem the write up is good and it clearly explains what each portion of the changed   code is intended for
noproblem it is good starting place for future team to pickup
noproblem the code is ready to be deployed onto the production server and in fact    the project was even partially merged
noproblem no new test cases were added from the previous submit test cases already had full coverage so there was no need for additional testing i was unsure how to answer this question as the rubric says any new test cases added
noproblem all code is good a variable name was even improved during the second round
noproblem a small change was made but there wasn t a need for drastic additions
noproblem all necessary code is passing the build
noproblem the video makes it clear that the tests work and are covering all aspects necessary
noproblem the write up is still good
noproblem the code is quite good
noproblem the coverage was already at 100 but they did update it to pass the build
noproblem yes variable name changes suggestion was incorporated
noproblem travis tests have failed no conflicts the overall test coverage has improved
noproblem it is a testing project the overall test coverage has improved the tests thoroughly test the menu bar and the sub tress of menu bar sub menu options as per the requirements
noproblem no ui or functional changes are applicable all the 29 tests run successfully
noproblem it is very well documented no changes were required even during the first review
noproblem it improves the test coverage so once the travis tests pass it is ready to be merged with the master branch however no production deployment is applicable for test coverage improvement
noproblem nicely written   test cases
noproblem did not pass travis ci
noproblem not deployed
noproblem there is one new commit in round 2
noproblem yes the coverage is 100 already
noproblem the code written follows the ruby on rails best practices
noproblem yes the team has made one commit during the second round they updated an ambiguous variable name
noproblem no the pull request didn t pass the travis   ci build but it doesn t have any conflicts with the base branch
noproblem yes the team has added plenty of tests the test coverage increased to   100 whereas the overall coverage has increased by 11 4
noproblem yes the test covers all the scenarios including testing values of variables   in the menu node and null case scenarios
noproblem the team has corrected a single bad name used in the tests there has been no change done to dry the code yet there test as mentioned earlier has few segments repeated throughout each test for ex the instantiation of menu object there has been no comments added for the code yet
noproblem yes there has been one commit in round 2 rectifying the bad name used
noproblem the code is well written the way the list function was split into multiple modular functions is appreciable a great amount of effort has gone into fixing the issues
noproblem new code added is written well with dry and no long or complicated functions i could see file updated has changes on line such as tab and space team could work upon indentation
noproblem the code is well written no issues with naming conventions or coding style
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem the code is clean
noproblem overall only 3 commits are made during the entire project no new code was committed during the second round
noproblem the last commit is on 10 31
noproblem no new commits in the second round
noproblem no new commits
noproblem could not see any new commits after last change also commits distribution is not equal
noproblem no changes were committed in round 2
noproblem yes
noproblem no new test cases are written
noproblem test plan could be described better
noproblem team could have added test plan in wiki along with test covered and test description also could have worked upon increasing test coverage
noproblem test are written
noproblem the team has added testcases but lacks coverage the overall coverage decreased by 10 6 to 37 063
noproblem no test cases are added by the team and overall coverage of the project is decreased by 10 6
noproblem the operations work as intended but need to have automated test cases
noproblem i could not get a deployment link or watch a video that demonstrates the work done so i m unable to test
noproblem i could neither test it manually nor there were any videos to check the functionality
noproblem write up is explained pretty well
noproblem i think the code need some amount of refactoring before it can be merged with the expertiza master and pushed to production some of the functions implemented by the team seem quite long and they should try and restrict the functionality implemented in each function to just one
noproblem the code seems very well written and approach seems correct if they improve the documentation and add test cases after thorough testing it should be good to be deployed as it stands another team in future can pickup the code and implement these improvements
noproblem yes the code has been written aptly and to the point the intention is clear
noproblem the travis ci build has failed
noproblem pull request is not passed as well as travis ci is also failed
noproblem travis ci build is failing other things are fine
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code added during this project adheres dry principles
noproblem the code was written at it s best
noproblem yes the code is well written
noproblem yes code is well written
noproblem the team has followed rails best practices while writing the code
noproblem all coding principles are followed add more comments
noproblem no new changes were committed during the second round
noproblem no new commits were made during the second round
noproblem no they were no commits during round 2
noproblem no new commits
noproblem yes there are few commits after round 1
noproblem no the team hasn t committed   any changes during the second round the last commit was on 31st october 2018
noproblem no there were no commits made after oct 31st
noproblem the team did add test cases covering the functionality the overall coverage increased by 0 004    to 47 652
noproblem yes they did add the test cases and the coverage increased to 80
noproblem coverage is same
noproblem yes it increases the coverage too
noproblem changes are covered with new test cases
noproblem i followed the steps as mentioned in the wiki and it works as expected
noproblem yes everything works perfectly fine
noproblem works properly
noproblem yes the ui changes according to the specified conditions after logging in as   a   student we can see the team name being displayed at the top of the page
noproblem the features for the issues fixed work as intended
noproblem everything looks fine to me
noproblem the writeup is great i was able to understand the issue and do manual testing
noproblem it was very well written and self explanatory
noproblem the wiki page has been written concisely the team has used screenshots which ease the understanding of the work they ve done
noproblem the write up clearly explains the issues faced and the code fixes used to solve them
noproblem comprehensive
noproblem yes the code changes are simple and to the point i don t see any other way it could be done
noproblem the user name issue seems to not have been resolved when tested manually the code may be deployable and would not cause a problem since there are not many complicated changes
noproblem yes the changes have passed all the   checks and can be deployed in production
noproblem excellent   work
noproblem in good state
noproblem yes the build passes travis ci
noproblem the travis builds on both pull request have passed
noproblem no the test failed
noproblem there are no conflicts
noproblem yes the pull request has passed the travis ci build test and does not contain any conflict with the base branch
noproblem yes the travis build is passing
noproblem the code is well written and understandable
noproblem the code is well written and has proper functions to handle each action not too long functions and names are aptly defined
noproblem the code seemed to be well written and properly commented comments made it very easy to understand the code
noproblem overall the code is written really well snake casing has been thoroughly followed and in case of javascript the camel casing is followed    no additional suggestions
noproblem yes code has been committed in round 2
noproblem last commit was on nov 6
noproblem few commits made in 2nd round
noproblem no link provided but the videos shows that everything is working well
noproblem 2 issues are resolved and when checked from ui    features   are working as expected seems like no code refactoring is required
noproblem manual testing could not be performed due to lack of project deployment but the screencasts show that everything works fine
noproblem the ui seems to work as it should at least from the writeup
noproblem the writeup is great and descriptive i could find all the info i needed
noproblem the writeup is very explanatory with all the screenshots attached which helps in better understanding
noproblem the write up is well written and explain the features that the team has implemented in a verbose manner    the writeup mentions solution description which gives a walk through about what steps were taken to implement the functionality    no suggestions
noproblem the team has definitely resolved one issue this could be a starting point for future teams
noproblem yes the code is written aptly and to the point i don t see any issues
noproblem yes just a few test plans needed and the code can be deployed on production server
noproblem this code can be deployed after solving the issues generated by travis ci
noproblem the approach seems to be correct and the writeup ready to be deployed
noproblem this is a code and project that has been honed into perfection the team has shown due diligence and taken care of long and complicated functions and somewhat shaky coding style from the last submission they have refactored the code to perfection thus fulfilling all their objectives
noproblem the overall structure of the code looks good and all the coding standards have been followed i feel like there could have been more comments to support the large amounts of changes that have been made
noproblem the code follows the general guidelines for standard rspec practices and also keeps the dry principle in check it makes a good use of names to specify what each attribute is assigned for
noproblem no new commits were committed for the second round it was cleaned up 13 days ago
noproblem no new commits were made during the second round the latest commit was on october   31st
noproblem there was   a substantial amount of commits done in the first   phase of the project but i don t see any commits in the second phase this could very possibly be because the team might have completed the requirement in the first phase itself
noproblem yes an excellent job in that regard they have first explained their test plans then even provided links to their rspec tests which i checked then they have run and shown their screenshots of the rspec tests going through successfully
noproblem according to the screenshots uploaded by the authors the features work as they are supposed to new questionnaires   have been successfully created
noproblem yes the code has been refactored to cover all the intended scenarios and the tests have been very well document along with testing the edge cases as per their approach the first segregated   the tests for questionnaires_controller into two test files questionnaires_controller_spec and quiz_questionnaires_controller_spec and separated the tests for crud operations of quiz_questionnaires_controller into the quiz_questionnaires_controller_spec renaming them from view_quiz create_quiz and the like to view and create    this in my opinion is a thorough   enough   test
noproblem the system works as intended the project required to make the features work such as removing hardcoded parameters as save_choice method replacing switch statements with subclass methods and creating models for the subclasses
noproblem extremely well written wiki page thorough and to the point with enough technical content and relevant screenshots pertaining to the before and after scenarios of the problem statements
noproblem the writeup has been pretty well written by the team introduction to the problem statement the implementation details and the test plans have been stated
noproblem the writeup gives a gist of the work carried out by team throughout the project the team added the test plan section describing the testing procedures carried out it is also structured nicely allowing the reader to understand the project in it s entirety
noproblem surely once the code is sufficiently tested by the tas then it is can surely be implemented as a change even so the travis ci and the overall coverage should be verified first going by their page it is a finished project and hence no use giving it to the next semester as a project
noproblem the code has been working fine and once the integration conflict is solved seems ready to be deployed the future team will be able to pick up from where the current team has left
noproblem there is significant improvement in the write up after the first round it gives good idea of the project
noproblem the code changes seem to be fine i do not see any problems regarding the code as it is pretty well explained in the wiki as well
noproblem overall the code was well written as mentioned earlier the only change the team had to make was add color codes hence no mistake was made in the first round itself good job
noproblem everything seems good
noproblem css snippets are still written inline no changes were made after round 1
noproblem code looks good there weren t many changes and mostly are html changes so no commenting is required as such as well
noproblem the code was very well written however that should be a given considering the complexity of the project which wasn t a whole lot
noproblem code is still using dry principles
noproblem no new commits were made during round 2
noproblem the last commit was made 9 days ago as per the given link there were not many changes required so seems fine
noproblem i can not see any new commits in second submission as the functionality was working properly in first submission itself
noproblem new commits were not added in the 2nd round in my opinion they were not required as well as the team completed their task in the first round itself
noproblem no new content was necessary during the second round
noproblem no there were no new commits due to the fact that were no changes to be made
noproblem yes
noproblem no new commits
noproblem no test cases were added no real scope for the test cases to be added to test changes made to html code
noproblem the test cases are added with good explanation it does increase the code coverage the thing i liked that the screenshots itself speak for the test cases
noproblem as mentioned in wiki page by team color change does not affect button functionality hence no test plan is required hence giving full points here
noproblem um somehow your commits increase the overall coverage of the project and as mentioned in the write up test cases aren t possible
noproblem it s ui project testing isn t required as such they have still mentioned in there documentation
noproblem there are no test cases as it is an ui specific project
noproblem no tests were added as part of the project just minimal ui changes
noproblem the code consists of small methods that mostly test one thing this results in high readability the team has made an extensive use of context constructs which further enhance the code documentation moreover the team has improved the sort_by_name method making it cleaner and easier to follow this was   complemented by the fix of bad   names that   were present   in the first round e g stu1 p1 etc one suggestion pertaining to the scores block would be to use specific assertions of fields instead of testing the object via inspect method and comparing it to the string value
noproblem the code coverage is 94 which passes the required threshold
noproblem the writeup is comprehensive and fully covers given functionality there were no significant issues that needed to be fixed from the first round
noproblem code was cleaned up 5 days ago
noproblem code makes good use of rspec s describe and context options and manages to achieve 95 code coverage
noproblem coverage increased by 3
noproblem video demonstrates working and passing tests
noproblem well written
noproblem documentation is well written instructions is given problem statement and solutions are provided screenshots are given
noproblem yes new commits were done in the 2nd round
noproblem there are minor fixes related to code style
noproblem the team makes several commits during the 2nd round to make improvement
noproblem yes the team added test cases and the overall test coverage has increased the team has added a lot of tests and i do feel it does cover the range of this project
noproblem it is a testing project so test cases are added the coverage has increased to 97 5 percent for vm question response model
noproblem yes the coverage has increased and test cases have been added coverage is more than 50
noproblem coverage has increased from 11 to 97 it is impressive great job the team has achieved what they were looking for
noproblem the team added new test cases and make the coverage increase also the overall coverage for the whole system has increased
noproblem there wasn t any link provided to check if the ui was working fine but there was a youtube video showing the tests successfully running and also the tests did seem to cover almost all the scenarios
noproblem yes almost all scenarios for vm_question_response model is covered good work
noproblem this testing project covers all the scenario as required
noproblem since these are unit tests no ui test needed
noproblem the write up explains what functionality is tested and why the coverage is also mentioned along with code snippets which is good
noproblem writeup is well written and gives explanation for all the requirements
noproblem the code is well written the way the list function was split into multiple modular functions is appreciable a great amount of effort has gone into fixing the issues
noproblem code is written very well comments are detailed and functions and variables are named appropriately would just like to point out in student_task_helper rb due_date_color the variable rtn could ve been named better
noproblem new code added is written well with dry and no long or complicated functions i could see file updated has changes on line such as tab and space team could work upon indentation
noproblem the code is well written no issues with naming conventions or coding style
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem the code is clean
noproblem the last commit is on 10 31
noproblem test are written
noproblem the team has implemented there testing plan and have been very thorough with there test cases they seem to have considered a lot of cases and have implemented them in rspec the only thing that they should do is use different commits for adding test cases
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem it is given in wiki that most of your test cases depend on checking the output however like i mentioned in my last review several test cases like the ones mentioned below can be automated this is especially true as tdd is explicitly mentioned in your problem statement write the required tests before implementing refactoring the methods in the above mentioned classes add past due assignments to the student   s task list on student view check for correction in due dates of assignments when an assignment   s due date is edited it should be appropriately moved from the    past assignments   list to the    current assignments   list if needed on student task page separate the list of teamed with students from the current tasks box
noproblem yes
noproblem the code is both succinct and very carefully i have not done the code check in the first round but for this time there s no bad names functions are standardly named good alignment and commenting
noproblem project was on implementing test cases the test cases are well written and the code coverage has increased
noproblem the code is very well written and follows good coding practice
noproblem the code follows ruby style guide
noproblem yes it works as intended it would be better if you could add a video recording of the flow screenshots of the flow in the test plan
noproblem yes new code was committed in the 2nd round
noproblem yes code was committed to follow clean code practices based on first review
noproblem write up is explained pretty well
noproblem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to they havent updated any part of the wiki documentation but overall their documentation is concise and to the point
noproblem before deploying the project onto the production server this projects asks   for some attention new test cases should be added to the project i can t say much on that
noproblem yes the code has been written aptly and to the point the intention is clear
noproblem test coverage remains the same at 94 hence my suggestion opinion is same as the previous review
noproblem yes they have added test case and it has increased the coverage by 3 and has increased the coverage to 39 721
noproblem project was writing unit test cases and the newly written test cases has increased the test cases
noproblem test coverage for assignment_participant model increased to 94 percent
noproblem yes the team has added test cases and the team has covered every functionality
noproblem the code seems very well written and approach seems correct if they improve the documentation and add test cases after thorough testing it should be good to be deployed as it stands another team in future can pickup the code and implement these improvements
noproblem yes the test case covers all the required test cases along with the edge cases
noproblem project was on writing test cases and the newly written test cases has increased the coverage
noproblem all the test cases pass majority of test scenarios described in document is covered and automated
noproblem the writeup seems to be well written it is concise and to the point
noproblem the write up is very well documented as it explains the test plans and also what changes have been made along with the reference to the files which have been modified
noproblem very clearly writeup
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the writeup is complete and well organized and it also mentions the corresponding change in origin code
noproblem yes as the test   case increase the test coverage and the build pass is 100 thus the code is ready to be merged
noproblem yes it is a good code
noproblem yes the travis ci build was passed the conflicts could be seen resolved
noproblem yes no conflict that s not resolved
noproblem the code is very well written there are no bad names long functions or any lack of comments the code written by the team is self explanatory
noproblem code is short variables and functions are well named
noproblem the code follows the dry principles correctly
noproblem yes improved the code
noproblem the code is concise and easy to understand the team has provided comments to explain the logic of the new function created which really helps
noproblem the code was well written in the first round itself and followed good coding standards
noproblem the code was already well written no changes were suggested in the first round the team did a great work in following coding best practices
noproblem yes    2 commits were made in round 2
noproblem a few bug fixes were made after the first round of submissions
noproblem yes new commits were done
noproblem yes
noproblem yes twice during the second round
noproblem there were only 2 commits made during the second round however the team had mostly implemented most of the functionality during the first round maybe due to which there are less commits in the second round
noproblem there are no new commits during second round
noproblem the team did change the project as there are 2 new commits the ci build is still failing
noproblem yes the team had added 2 test cases and the coverage increase is there as well newly added tests are enough to cover the range of project
noproblem this feature doesn t say the view is of which student looking at   student_task list page is confusing since i don t know who am i which student
noproblem the team has added test cases but the coverage did not increase   by much
noproblem coverage has increased
noproblem coverage increased by a good margin
noproblem no new test cases are written from the previous review    the authors have converted all the cases discussed in   test plan   into automated tests overall coverage increased 6 3 to   43 07
noproblem the team has added test cases and increased the test coverage
noproblem the team has added new testcases in the new submission the code coverage has also increased good work with the testcases
noproblem the ui and system operations works well as intended they newly added features works perfectly as they are supposed to do
noproblem everything works as expected except for the case mentioned above
noproblem no credential provided for login hence couldn t check
noproblem works as intended features work as they are supposed to tests cover all scenarios
noproblem the system works perfectly as intended
noproblem the system works as intended
noproblem the video explains the new functionality and the functionality is working as expected all the scenarios are covered in the rspec test as well good job
noproblem the write up clearly mentions how to check test the work done by the team it includes almost everything the team has changed during their project    it clearly mentions the filenames where the changes have been made all the references are also included in the write up
noproblem overall it is well written
noproblem the writeup   has adequate screenshots to help understand the problem statement
noproblem contains all the required explanation
noproblem very good i go by what i said in the first review it is very legible and i could understand what the project does and how the project does what it does
noproblem yes the code is ready to be deployed onto the server this is a good starting place for future team to pick up
noproblem looks fine my biggest concern however is which student s view opens here    add the feature of impersonation to this and we get two identical views of student_task list page one with this particular feature and the other with impersonation feature what is the difference between these views
noproblem the code has mast elements ready but there can be more test cases generated with better test coverage the code need not be rewritten from scratch it just needs to include some more of the expected   functionality
noproblem according to write up and video yes but since i couldn t manually check i would say no
noproblem the build fails and there is one warning and one error which needs to be fixed
noproblem there were some build issues raised by travis ci which have not been handled yet however there are no merge conflicts with the master branch
noproblem no pull request link is provided
noproblem travis failed
noproblem the color scheme added during this project is working when tested through the ui
noproblem with the link provided operation from ui are working as expected no refactoring is required for the code change made
noproblem yes as per the scope of the project all works beautifully well great job team
noproblem works as intended
noproblem yes the color change is as per project no new tests or re factoring done as part of the project
noproblem the writeup is extremely well written in the earlier round i gave the team a suggestion to add the steps needed to check out their changes they have added this part into the wiki now thank you and well done
noproblem write up is written a neat and understandable with system screenshots and steps to test system manually
noproblem the writing is good and completely covers the scope of the project
noproblem writeup is good explains everything they have done and how they have implemented
noproblem no significant change from last round but the writeup was good elaborative with screenshot of code and ui it clearly mentioned the need for the change but no approach mention but to be fair the scope of the project doesnt call for it
noproblem yes the changes made are very basic and should not affect the functionality of the application in any away apart from the cosmetic changes made during the project
noproblem yes code seems ready to deploy also the approach taken is simple and very much acceptable
noproblem i have no concerns regarding merging this into production
noproblem since there are ui changes they seem pretty improved
noproblem i believe the code is the best that it can ever be and should be merged with the expertiza
noproblem the build request passed
noproblem well the build technically failed but seeing as how that s practically impossible for this project i ll give it a pass
noproblem the build has passed and the changes are also well explained in the wiki as expected the screenshots of the test cases are also displayed
noproblem the team has changed a model and a html page but there are no new test cases attached to the changes
noproblem coverage increased by a good margin
noproblem no new test cases are written from the previous review    the authors have converted all the cases discussed in   test plan   into automated tests overall coverage increased 6 3 to   43 07
noproblem the coverage has increased by 6 3 the team has added new tests that check whether assignments is absent in the menu in default view and there is an option to open student view the tests also check whether there is a close button present when the instructor is in the students view also it checks whether the assignment is present by default in the student view or not
noproblem the team has added test cases and increased the test coverage
noproblem the team has added new testcases in the new submission the code coverage has also increased good work with the testcases
noproblem very good i go by what i said in the first review it is very legible and i could understand what the project does and how the project does what it does
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code follows dry principles
noproblem bad names like review_num have been used
noproblem there was no complicated functions code strictly followed dry principle
noproblem no changes in the code from the last time code is written properly
noproblem the code is well written and follows good programming style has good naming and is dry the team has not implemented any suggested changes since there has been no commit after first round
noproblem code was well written dry and intuitively done easy to follow the functionality implemented
noproblem no new commits have been made in round 2
noproblem the last commit i see was 23 days ago which seems that there wernt many changes done in the seond round the wiki mentions the suggestions at the end so it would have been good to have the code changes and tests for the same
noproblem all the commits were completed by oct 31
noproblem no commits were done in 2nd round
noproblem the last commit i see is from oct 31st i m assuming they did not have to   change much in the 2nd round
noproblem no commit
noproblem a small amount of new code was committed in the second round
noproblem no new commits were made during the second round
noproblem no new commits have been made since the last round however there is nothing significant as just codeclimate fixes are remaining
noproblem i couldn t   any new   commits in the second submission though the functionality   seemed to be fulfilled in the first round itself
noproblem yes the team has added test cases
noproblem yes the coverage has increased and has almost reached to 50
noproblem this project is refactoring and there were not much of functionality changes i see that teams have changed the existing tests make sure there is no coverage miss
noproblem the test coverage seems to have increased slightly since this is a refactoring project i wouldn t expect testing to be the focus so that s pretty good even though the added test case most likely doesn t cover all the work done here
noproblem the team had added a test case in the last round which i think was sufficient to test basic functionality    there have been no additions to test cases in the second round
noproblem team added several test cases and the coverage was seen to increase
noproblem yes the code addresses all issues
noproblem most of the functionalities that were required have been implemented but the final changes haven t been merged due to some build issues on travis ci the tests are quite comprehensive
noproblem yes refactoring   did not impact on the existing operation at all
noproblem the system operation works as intended
noproblem yes this is a refactoring project and the ui works as it is supposed to after their code changes all the functionalities seem to be intact good job there
noproblem the system operation works as intended from the link provided
noproblem the team has explained the issue and the solution they chose with enough      details to understand to way of implementation
noproblem the authors should have added screenshots for the changes made in the code otherwise the purpose and work done has been explained well
noproblem overall it is well written they can add reference section where they can put the link to the project etc
noproblem the write up is to the point and explains their approach neatly the team has made efforts to update the write up with the provided suggestions and it has improved the write up
noproblem the writeup was elaborate and fully elucidated the test added and the removed methods and sql lines and their scope
noproblem yes   i think with additional testing it can be deployed
noproblem i feel there are more number of test cases that need to be covered before deploying this in prod
noproblem i strongly believe that this code is ready for production server
noproblem changes are working perfectly
noproblem i think this code is ready to go because it is better organized and structured than it used to be
noproblem i think that it is a neatly written code and once the integration issues have been resolved it should be ready to be deployed on th production server    the code being readable can be easily picked up by the future team
noproblem travis ci test has been failed on github
noproblem build is passing on travis ci there are no pending conflicts
noproblem few issues with the build but i feel they are trivial
noproblem the pull request did not pass the automatic build requirements it seems as though this team worked very hard to try to fix the build errors
noproblem ignoring this question since it is an oss project
noproblem though there were several build fails during the first round which seem to have been triggered   on bundle exec the final build passes in travis ci
noproblem the code was well written dry was not violated
noproblem the code seems to be dry and i had no issues with it in the 1st round
noproblem it looks as good as round 1
noproblem naming looks good they had already added comment to the code in the first review
noproblem don t see any dry issues well written test code
noproblem the code is well written    no suggestions
noproblem no there had been no bad names or wrong conventions used even in round 1 so no change there the   team has made few modifications to beautify the code by using ternary conditions   which did make the code elegant no new comments added
noproblem commits for code climate changes were pushed in
noproblem the team added new commits in the second round as well to improve their code style improve codeclimate issues and changes other reviewer s suggested very few teams have done this great work
noproblem several commits were made to decrease the code climate warnings
noproblem yes they are updating code to fix code climate issues
noproblem yes there are   new codes committed during the 2nd round
noproblem yes commits are done to fix the code climate issues
noproblem i found many commits related to the code climate fixes    no suggestions
noproblem the number of commits since the 1st round is impressive    significant improvements have been done pertaining to naming indentation and overall code climate issues
noproblem test cases were added overall increase in the coverage range observed
noproblem yes the team added relevant test cases which increased the overall coverage
noproblem they achieve 100 during first round so i don t think there are any new test need to be added
noproblem yes they coverage is 100
noproblem yes the project was about testing and coverage has increased
noproblem 100 coverage is achieved
noproblem the coverall showed that the overall coverage increased 3 2 to   39 999 the coverage of the participant rb file is 100 so great job team no suggestions
noproblem the code coverage was 100 in the   1st round
noproblem yes the project was a test project and the team has managed to achieve 100 coverage of the model there was no increase in coverage from round 1 to round 2
noproblem the project works as intended test cases are showing a positive impact on the results
noproblem yes the tests cover all the scenarios one should check for great work
noproblem edge cases are tested and all scenarios for each method are tested
noproblem yes they coverage is 100
noproblem yes a lot of cases concerning a participant has been added
noproblem yes 100 coverage has been achieved as shown in the video
noproblem the tests specified in the participant rb file run perfectly well the same has been demonstrated in the video mentioned above no suggestions
noproblem the code coverage is 100 every test case passes after a manual check
noproblem the writeup was significantly well written almost all the changes were covered
noproblem the team has written their wiki page in a very detailed manner they even added the video links which were missing in the first round as suggested thank you and good job
noproblem easily one of the most clearly documented projects i have reviewed in this class so far i liked their organization of the test plan within the write up
noproblem the wiki page provides clear details about the work and very easy to understand just like round 1
noproblem it is crisp and to the point there are no clarity issues either
noproblem well explained all the test cases have been explained and are self explanatory as well
noproblem well written
noproblem the writeup is really well written and has covered all the desired aspects along with the test plan no suggestions
noproblem the   writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings
noproblem the write up and screen cast were both very explanatory it included detailed code the need for the test of partipant rb and the use of the model there was no change required from the initial write up
noproblem the code is well organized and written ready to be merged into the production server
noproblem the tests are good and it can be merged to the main line
noproblem did not find problems in the code in the first round follows ruby style guide commented and good naming very well written
noproblem the last commit was 21 days ago so i fear that that there are no commits being made in round 2 could have done a commit in round two just to confirm that there were no changes required in round 2 so that the reviewer may be certain about it
noproblem i don t see any new commits for round 2 mostly nothing was needed
noproblem no new commits
noproblem the team has added test cases 1 to check that if there is no rejoinder for the review then it redirects to new author feedback page 2 to check that the other teammate is able to edit 3 to check if the page is redirecting back to review 4 to check if the rejoinder by a participant of a team is saved properly    the overall coverage decreased from 48 to 47 601 it decreased by 0 04
noproblem the coverage has decreased by 0 04 the team has added some tests which were not present in the initial submission 44 9 of the changed lines are covered
noproblem everything is working
noproblem the team has not provided steps for manual testing even though this was requested during round 1 review
noproblem nicely written wiki
noproblem i think the code can be merged all the test cases seem to cover the edge cases and my testing shows that the things function as expected
noproblem yes it is ready to be deployed
noproblem travis ci says tests have failed but these don t include the tests written by the team
noproblem build passed codeclimate 7 issues to fix 2 3 checks were passed issues seem trivial
noproblem the ci build has passed and there are no conflicts
noproblem yes the travis build is passing
noproblem yes the pull request has passed the travis ci build test and does not contain any conflict with the base branch
noproblem there are no conflicts
noproblem the travis builds on both pull request have passed
noproblem yes the build passes travis ci
noproblem yes the code changes are simple and to the point i don t see any other way it could be done
noproblem yes the changes have passed all the   checks and can be deployed in production
noproblem excellent   work
noproblem in good state
noproblem the writeup is great i was able to understand the issue and do manual testing
noproblem it was very well written and self explanatory
noproblem the wiki page has been written concisely the team has used screenshots which ease the understanding of the work they ve done
noproblem the write up clearly explains the issues faced and the code fixes used to solve them
noproblem comprehensive
noproblem i followed the steps as mentioned in the wiki and it works as expected
noproblem yes everything works perfectly fine
noproblem works properly
noproblem yes the ui changes according to the specified conditions after logging in as   a   student we can see the team name being displayed at the top of the page
noproblem the features for the issues fixed work as intended
noproblem everything looks fine to me
noproblem the team did add test cases covering the functionality the overall coverage increased by 0 004    to 47 652
noproblem the team have added adequate tests
noproblem yes they did add the test cases and the coverage increased to 80
noproblem coverage is same
noproblem yes it increases the coverage too
noproblem changes are covered with new test cases
noproblem no new commits
noproblem yes there are few commits after round 1
noproblem no there were no commits made after oct 31st
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code added during this project adheres dry principles
noproblem the code was written at it s best
noproblem yes the code is well written
noproblem yes code is well written
noproblem the team has followed rails best practices while writing the code
noproblem the code was written pretty well
noproblem no commits needed after first review
noproblem the last commit was listed as 12 days prior to this review but the code looks to be in great shape so there was no need for new additions
noproblem no new commits no new bug fixed
noproblem    the last commit was 12 days ago i believe that this team had finished their work well before round 1 itself i think they had planned the work well in advance and followed that plan as well
noproblem there were really few commits in the 2nd round the only commit i could see was on 30th october the only suggestion i would give is to continuously update their work on git
noproblem there is no new commit during the 2nd round
noproblem no need for adding new test cases as the previous submission already achieved 100 coverage i apologize for not being certain how to accurately answer this question
noproblem they didn t add test cases but the test coverage is always above 90
noproblem there are no new tests and that is because the team had already completed their work before deadline 1 and the coverage was 100 on the deadline one itself so there is basically no scope for improvement for this team
noproblem the team did add test cases they achieved a little more than the desired coverage even that means they have done a great work
noproblem from the video the functionality works well
noproblem n a this is a unit test project
noproblem yes the tests cover all the scenarios
noproblem the tests cover most of the scenarios as is evident from their mutant killing capabilities
noproblem the team was asked to write test cases and get a coverage of around 90 the team did a really good job in writing test cases for all the methods present in the assigned files
noproblem the project has a good coverage of the codes
noproblem the writeup is well documented
noproblem the write up is very informative and clearly shows the impact and result of the project tests it would have been a great addition to have included more discussion on the design choices of your testcases and how it was implemented overall a great wiki
noproblem the writeup is pretty good and easy to follow
noproblem i loved the write up write from the beginning to explaining expertiza to explaining their task and the test plan which was very detailed and methodical i also like that they had included a screen shot of the mutant test which shows the thoroughness of their tests overall an impressive job by the authors
noproblem the writeup is well written and clearly tells the flow and method of working it shows clearly what all work is done and how it is done it mentions specifically the explanation of each functionality and how it is checked
noproblem as mentioned above they can make it better by fixing some issues
noproblem the project is almost on the stage that it can be deployed on the production server however there are few test cases that are failing as shown on the git if these minor flaws are fixed then the code is good to go
noproblem the team gives a good guidelines for how to test and what to test for the two classes
noproblem the code is well written i did not see any bad naming conventions or bad coding style
noproblem no need for test cases 1 for mentioning it in the wiki
noproblem no test cases present but test plan covers it
noproblem not required
noproblem test cases were not required for this project
noproblem the test cases were required as the chnages were related to ui the team mentioned the same in the wiki
noproblem yes the ui operations works as intended the features fixed now works as intended
noproblem it s working
noproblem the feature works as per the video shown
noproblem fro video it seems to work as intended
noproblem the video explains the new functionality and the functionality is working as expected good job
noproblem yes it works as expected
noproblem writeup has been improved after the first review the codes now look more comprehensive
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem in my opinion the project is ready to be deployed and does not need to adopt a different approach
noproblem the number of commits since the 1st round is impressive    significant improvements have been done pertaining to naming indentation and overall code climate issues
noproblem the code coverage was 100 in the   1st round
noproblem the   writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings
noproblem yes commits are done to fix the code climate issues
noproblem yes the project was about testing and coverage has increased
noproblem yes a lot of cases concerning a participant has been added
noproblem it is crisp and to the point there are no clarity issues either
noproblem the tests are good and it can be merged to the main line
noproblem don t see any dry issues well written test code
noproblem the code is well written    the variable and method names look clean and concise the functions are small and well defined
noproblem well written
noproblem the code is well commented i did not see any bad naming conventions or bad coding style
noproblem yes the   code seems well written and there was no issue with the naming or functions used however a few comments could be added to impersonating_as_admin
noproblem naming looks good they had already added comment to the code in the first review
noproblem the code was already well written no changes were suggested in the first round the team did a great work in following coding best practices
noproblem code has no problem
noproblem 100 coverage is achieved
noproblem yes 100 coverage has been achieved as shown in the video
noproblem well explained all the test cases have been explained and are self explanatory as well
noproblem there doesn t seem to be any new code added in the github but overall has a good history of commits which is documented well through commit messages
noproblem yes there are   new codes committed during the 2nd round
noproblem yes they coverage is 100
noproblem yes they coverage is 100
noproblem the code was well written dry was not violated
noproblem commits for code climate changes were pushed in
noproblem test cases were added overall increase in the coverage range observed
noproblem the project works as intended test cases are showing a positive impact on the results
noproblem the writeup was significantly well written almost all the changes were covered
noproblem the code is well organized and written ready to be merged into the production server
noproblem it looks as good as round 1
noproblem yes they are updating code to fix code climate issues
noproblem they achieve 100 during first round so i don t think there are any new test need to be added
noproblem edge cases are tested and all scenarios for each method are tested
noproblem the wiki page provides clear details about the work and very easy to understand just like round 1
noproblem the team added new commits in the second round as well to improve their code style improve codeclimate issues and changes other reviewer s suggested very few teams have done this great work
noproblem yes the team added relevant test cases which increased the overall coverage
noproblem the team has written their wiki page in a very detailed manner they even added the video links which were missing in the first round as suggested thank you and good job
noproblem there were no such commits during round 1 all are done in round 2
noproblem there have been no new commits since the last round of review the integration with master branch still has conflicts to be fixed
noproblem as i explained in my first review the test plan is well written and all of these are tested manually there are no separate automated cases written
noproblem the team did add test cases covering the functionality the overall coverage increased   by 6 6 to 43 356
noproblem yes team has written test cases in a proper manner which increases the coverage also
noproblem the code seems to be dry and i had no issues with it in the 1st round
noproblem the team did not add an automated test plan but manual testing   was clearly demonstrated using screenshots
noproblem several commits were made to decrease the code climate warnings
noproblem no there have been no new additions to the test cases since last round of review the code coverage still remains the same as before with an increase of 6 6
noproblem no unit tests were added during the resubmission but they had an initially high coverage
noproblem everything is good here
noproblem easily one of the most clearly documented projects i have reviewed in this class so far i liked their organization of the test plan within the write up
noproblem the code is well written    no suggestions
noproblem i found many commits related to the code climate fixes    no suggestions
noproblem the coverall showed that the overall coverage increased 3 2 to   39 999 the coverage of the participant rb file is 100 so great job team no suggestions
noproblem the tests specified in the participant rb file run perfectly well the same has been demonstrated in the video mentioned above no suggestions
noproblem the writeup is really well written and has covered all the desired aspects along with the test plan no suggestions
noproblem the present test cases appear to be written fine
noproblem passed travis but had many lingering codeclimate failures
noproblem coverage went up by 8 4 according to coveralls
noproblem the latest commit is on 2nd of nov
noproblem the test examples they showed are good
noproblem the build is passing successfully
noproblem yes since it was a unit test assignment tests have been added and overall coverage has increased
noproblem the tests cover all the scenarios given that the problem statement is pretty open ended the changes fulfil the purpose
noproblem overall coverage was increased by 8 percentage
noproblem    they added all the test cases there is so much coverage now
noproblem i think it covers all of the scenarios but don t quote me i don t have a great understanding of review response map
noproblem yes it works
noproblem the code was well written even in the first round
noproblem ui is working correctly   there are no features broken
noproblem yes it works perfectly fine also the screencast they uploaded makes it more easy and convenient for me to understand the portion of changes implemented
noproblem the video explains the new functionality and the functionality is working as expected good job
noproblem the write up clearly captures the functionality that the work is related to
noproblem well written document my suggestion   is put the cropped version of images or even links to images is also fine
noproblem the write up is well written and self explanatory    it would have been better if the screenshots were of standard size but that is not a problem since the purpose of the document is just to explain the project
noproblem the authors have documented the steps they did to solve the issues in a clean manner although they haven t mentioned any particular design principles or design thinking that went on in solving the issues they have explained all the functionalities of each file they have modified and stated why they have modified the particular file one thing they could have added were class diagrams and dependency maps or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea it doesn t seem like the authors have updated their writeups since the last submission
noproblem very well written and elaborated
noproblem the write up is well written and organised everything looks fine great work with the write up
noproblem the write up has been improvised by the authors and they have added the reasoning for the approach they chose this increases the understanding of their solution    they have also modified their test plan steps
noproblem since the code coverage has decreased i don t think this code should be deployed on production however it is a good starting place for a new team to pickup
noproblem this code is ready for server
noproblem yes i think the project is ready to be deployed at the production server since all the required functionalities are implemented
noproblem i think the authors have done a good job in fixing the issues but they should have added tests to check if their code does handle all the possible edge cases and does not break any other code functionalities i think this is a good starting place for a future team to pick up this project and implement some testing specs regarding the functionalities that the authors have fixed
noproblem yes i believe this code is ready to be deployed as it seems perfeclty fin
noproblem the link to the deployed application was not available so the project could not be tested
noproblem travis ci is passed there is no issues with the build
noproblem no i don t find any conflicts in the work which needs to be resolved
noproblem the code was well written following the principles
noproblem yes code is well written
noproblem few new commits are made
noproblem there has been 2 commits made in second round one for adding comments and another one for fixing   issue 926 the sorting of topics by topic number in assignments
noproblem 3 new commits
noproblem properly   done in round 2 also
noproblem the team has done few commits one was on few sort fixes while they other was on refactoring
noproblem a commit was done in second round addressing issues from reviews
noproblem the coverage is actually decreased
noproblem no new tests were written for this functionality
noproblem yes team has added the test case
noproblem tests have been thoroughly and very well performed also well documented
noproblem no deployment   provided so can t be verified
noproblem the code works as required
noproblem the working is perfect everything works as intended the team has explained this in a brief manner in their youtube video
noproblem system works as expected and this is evidenced by tests and videos
noproblem the write up is informative and provides all necessary details of the changes made
noproblem the write up is impressive and very detailed it has been documented well which helps to understand about the project and the code implementation it also provides detailed test plan which makes it easier for end user to do ui testing
noproblem the writeup is well organized and well documented
noproblem writeup is very detailed and well written it is supplemented by enough code pieces and reasoning and good amount of pictures and videos to explain what the team   has done in detail
noproblem    i think with proper testing this code is ready to be deployed onto the production server
noproblem yes the code can be deployed to production
noproblem the code is well written tested and documented and hence i think it should be ready to be deployed
noproblem yes the travis ci build is passing successfully
noproblem the build has passed the are only 2 syntactical issues due to version difference
noproblem no conflicts and build passes
noproblem yes no conflicts at all which needs to be resolved
noproblem yes the travis ci has passed
noproblem the build has passed in travis ci and no conflicts have occured
noproblem code style is good and ruby style guidelines are followed
noproblem it was unit tests code
noproblem rspec code looks good descriptive context and it statements and good variable name usage very good work overall
noproblem the coding style is good the test cases have been written properly also i have seen from the code that the team has covered different cases and not stuck to the common one
noproblem there were no commits in second round but this is due to the fact that they achieved a 100 coverage in round 1 itself
noproblem nope but they already did pretty well
noproblem there were quite a few commits in the second round the team worked hard to improve the existing test cases as well as add new ones even the mentor zhewei approved of their work
noproblem the last commit was on october 30 however the team had already achieved 100 test coverage
noproblem i can see no latest commits the last commit was on 31st october
noproblem project was already completed in round 1
noproblem yes
noproblem the coverage is 100 already
noproblem 100 coverage by the tests
noproblem for a testing project increasing the coverage is important doesnt seem like the coverage was increased to a good extant
noproblem yes the team had added the test cases and this did increase the coverage of the corresponding model file
noproblem the team has not added any test cases but they had already achieved 100 test coverage in the first round
noproblem yes the team has added test cases the coverage is however only 48
noproblem improved
noproblem the tests cover all the scenarios hence they also possess 100 coverage
noproblem they did unit tests
noproblem as stated above the tests cover most of the scenarios
noproblem yes the test covers all the scenarios
noproblem cover all
noproblem the test cases are well written and do test many of the methods and functionalities it is able to achieve around 60 of the task assigned to them
noproblem extremely well written and verbose
noproblem very detailed
noproblem the documentation is detailed covering all the test cases
noproblem the doc is very descriptive and well written good job
noproblem i would describe the write as being 1 very meaningful 2 concise 3 precise te authors do explain the assignment rb file as well as their test plan in veryyyy much a detailed way
noproblem the writeup has a brief explanation on the role of the assignmentteam in the expertiza   project they have given the details on the test plan and test cases i think it is a good writeup
noproblem the writeup is perfectly written clearly indicating the work done it nicely shows how the work was done and what approach as followed
noproblem there are no errors in the build the travis ci build has passed and 100 coverage you are good to go
noproblem the code is easy to read as one places the model file along side the test code it very much makes sense as to why they wrote each line
noproblem the team has successfully managed to pass all test cases with 100 test coverage
noproblem good job done here you are the only team among the ones i reviewed for whom the travis build has passed
noproblem all passed
noproblem it was unit tests
noproblem no issues good job resolving all the issues
noproblem there were just 3 conflicts with respect to codeclimate that needed to be resolved but the mentor seeing their good work had decided to dismiss those
noproblem all checks have passed without any conflicts well done
noproblem passed
noproblem no new commits
noproblem the pull request was not updated in fact i can t see any of the changes in the linked repo
noproblem nope the last commit still shows from 12 days ago which is the time period even before the first submission overall the branch is 3 commits ahead and 20 commits behind the expertiza master even so conclusively going by their git hub their last commit was before the first submission and hence no commits in the second submission
noproblem the commits were done before the first deadline but unfortunately i don t see any commits during the second round or the pull request might not have been updated
noproblem no new commits after the first submission
noproblem no new test cases
noproblem i don t think that writing the test cases was in the scope of this project three files were changes overall which two were rb   files and one was db   file
noproblem the team has changed a model and a html page but there are no new test cases attached to the changes
noproblem works
noproblem as said above no visible testing scenarios have been implemented or even covered in their doc that they have given moreover no changes have even been made since the last submission so answer to all the above questions is no
noproblem the writeup is good i can clearly understand the problems and the fixes
noproblem the write up is very well written and documented it is aided well with the the help of screenshots and proper labelling the only small thing that i would like to suggest is the steps to reproduce or something similar so that the person not familiar with the expertiza   can also reach to the desired place
noproblem yeah the build has passed the travis ci test and there were no conflicts found on the pull request
noproblem the travis ci has passed
noproblem yeah the ui and everything else looks as it is supposed to and the functionalities work as well
noproblem code looks good well formatted and naming conventions are followed
noproblem the code was well written and implemented the functionalities needed it made good use of naming conventions and the team worked on improving the code layout by following the ruby style guide and dry principles
noproblem overall the write up was not bad here were some of the things i believe that could be improved problem statement seems to be wrong i believe it should be included in the background as it merely describes the files that they are supposed to work on
noproblem travis tests have passed there were some initial failures but the team has fixed it there are no lingering failures
noproblem the code passes for the travis build as well as danger bot however it fails for code climate with 3 issues yet to be fixed in totality the pull request does satisfy the need to pass the required builds
noproblem the build passes
noproblem the overall structure of the code looks good and all the coding standards have been followed i feel like there could have been more comments to support the large amounts of changes that have been made
noproblem the project follows most of the dry principles
noproblem yes the code has been well written and very ruby like the usage of existing gems is good functions have were good i did not find many issues with the first review so authors have kept it the same very well done    i wanted few more comment in code but thats okay
noproblem no new commits
noproblem no the new code was not committed during the second round this could be due to the fact that the team finished their code at the end of the first round itself
noproblem the team has not made any new commits in round 2 because they did the code implementation in round 1
noproblem the last commit was made on oct 31
noproblem no new code or improvements have been done in round 2 only documentation has been edited the code could have been improved a little after the suggestions were given
noproblem no new code was necessary
noproblem no new commits in 2nd phase
noproblem no new commits during the second round
noproblem test cases were added to increase the coverage
noproblem the team has added 2 test cases in the   sidekiq_mail_worker_spec more test cases could be added to fully test the functionality
noproblem coverage is present slightly increases the overall project coverage
noproblem yes the team added the test cases 45 69 new lines have been covered in the   tests good work but i feel that they could have added additional ve test cases
noproblem yes everything does seem to work properly since this was a refactoring project every feature worked as it was supposed to
noproblem features work as expected
noproblem this project is based on emails which cannot be tested in test environment
noproblem the team has implemented most of the required functionalities
noproblem the features work as they are supposed to only problem is with the code using excessive if else like structure code is brittle in this sense could have made functions and passed parameters to make it more flexible
noproblem functionality seems correct
noproblem yes
noproblem the refactored mailer with the use of sidekiq works as intended
noproblem the writeup has been pretty well written by the team introduction to the problem statement the implementation details and the test plans have been stated
noproblem the write up addresses details of all the three problem statements along with the code changes done in every file and the files added the team has also added screenshots of the manual testing
noproblem the writeup   is comprehensive and includes code that was added so it is easy to understand
noproblem lots of improvement over the last phase many recommendations have been implemented the write up is well formed and structured the entire flow is explained along with files changed methods implemented in each stage some formatting issues so 1
noproblem the test section has been improved with more detail
noproblem authors have added a new doc in addition to wiki i think that is not required they could have simply added that in the wiki    as in review 1 would have liked a link to the issue in problem statement   2    more details in why this sidekiq was used and not other message queue
noproblem write up is elaborate and elucidates the test cases and tests well
noproblem the code is ready to be deployed in my opinion to the production server the team could improve the quality of their code by visiting the code climate tests
noproblem code can be deployed on production server as necessary test cases and implementation has been carried out succesfully
noproblem the code implementation is correct so with more edge test cases and after resolving the warnings in the travis test the code would be production ready
noproblem the code is written well but there are some small build issues as pointed out by travis ci which need to be rectified for it to be deployed
noproblem code is ready to be deployed in production if it is refactored and broken down into smaller chunks maintenance might me tough on this one functionality wise works great
noproblem there s a lot of changes made to the project to incorporate sidekiq but assuming that s fine the project is ready for merge
noproblem the code has been merged in a good way and there have been no merge conflicts the build did pass the travis ci the code climate test failed but those were small issues which can easily fixed by just revisiting the code also the team have added a debug code which will need to be removed
noproblem the build has passed and has no conflicts with the base branch
noproblem travis ci runs smoothly and no errors occurred no conflicts occurred
noproblem everything checks out
noproblem yes build passed but there are many code climate warnings that can be easily cleaned up such as tips for refactoring and unassigned variables a more careful look at the tool warnings was required
noproblem code build passed the travis ci build with some warnings thrown by the other tests
noproblem yes improved the code
noproblem yes    2 commits were made in round 2
noproblem yes new commits were done
noproblem yes
noproblem yes twice during the second round
noproblem coverage has increased
noproblem works as intended features work as they are supposed to tests cover all scenarios
noproblem the system works perfectly as intended
noproblem the system works as intended
noproblem the video explains the new functionality and the functionality is working as expected all the scenarios are covered in the rspec test as well good job
noproblem the writeup   has adequate screenshots to help understand the problem statement
noproblem overall it is well written
noproblem contains all the required explanation
noproblem the code is well written the way the list function was split into multiple modular functions is appreciable a great amount of effort has gone into fixing the issues
noproblem code is written very well comments are detailed and functions and variables are named appropriately would just like to point out in student_task_helper rb due_date_color the variable rtn could ve been named better
noproblem the code is well written no issues with naming conventions or coding style
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem the code is clean
noproblem test are written
noproblem yes
noproblem write up is explained pretty well
noproblem yes the code has been written aptly and to the point the intention is clear
noproblem codewise no issues build issue has to be fixed
noproblem the code seems very well written and approach seems correct if they improve the documentation and add test cases after thorough testing it should be good to be deployed as it stands another team in future can pickup the code and implement these improvements
noproblem code is well written dry
noproblem the names and the structures of the functions are all used properly besides the team gave comments on the codes which makes it is easier to understand
noproblem the document is well written in   properly   segmented sections
noproblem very well written doc with all the necessary details
noproblem the plan is very well documented i see a lot of brain storming happening
noproblem the team s design   includes   all the models required for incorporating the functionalities the have depicted a high level design in diagram as well
noproblem the design section of the writeup gives a very high level view of the design the team has planned to implement so not much can be deduced until the teams drills down further regarding the same
noproblem the design plan seems to encompass everything required by the project
noproblem yes it does
noproblem yes they have everything that a good doc requires except the empty sections of implementation design and testing these in my opinion should be a part of a very important focus
noproblem yes the team seems to have incorporated all the functionality needed
noproblem the team did a great work in understanding the requirements and have included the design for all the requirement mentioned in the requirement document
noproblem yes they talk about all the functionality to be implemented
noproblem the authors has discussed the functionality implementation in detail it justifies the approach they would be using
noproblem the explaiantions were the best part of the writeup the author has kept in mind that the reviewer might not be familiar with the basics of expertiza and hence gives a very lucid explaianation
noproblem the proposed changes look good
noproblem team suggested that usage of decorator pattern is the key solution to the improvement also approach   on dryness will be handled later
noproblem explanations are given adequately
noproblem i liked the idea of putting the important files for reference this is extremely useful and makes it really easy to understand what is being done
noproblem the team has explained the implementation design strategy in detail the design was explained with all the required details and was very easy to understand
noproblem amazing documentation with diagrams and proper explanation
noproblem the design proposed by the author of reusing   lotterycontroller just like in topic bidding   seems reasonable to address the bidding implementation in peer review
noproblem i feel new design will not add any additional overhead in response
noproblem good application workflow and analysis appears to be sound
noproblem the authors are aware of the principles and are yet to figure out a way to reuse the methods to implement the functionalities no new methods were proposed in the documentation the idea of implementation looks fine and the new design seems seems to follow the already written code structure and design patterns the design doesn t pose any threat to time complexity
noproblem not much has been talked about the methods or classes the changes will be done to but they are clear with their job
noproblem diagrams on peer review assignment   have been included in the design by the team
noproblem the current umls are great make sure to include more of these visual aids in the implementation section of your document it will be a wonderful writeup
noproblem excellent use of class diagrams
noproblem design doc has diagram explanation for working process
noproblem proper visual aids and uml like diagrams are provided in the document for better understanding of the implementation
noproblem well represented
noproblem the design document is well done with proper visual aids and explains the problem being tackled and the proposed solution very well
noproblem yes very easy to follow just by looking once
noproblem the design doc looks complete with all of the necessary details being covered
noproblem    they showed all the details which were asked for
noproblem brilliantly written code document consisting of background problem statement and the implementation plan
noproblem the authors have dine a good job of detailing the issues at hand and their proposed solution uml diagrams like a flowchart could have been used to further clarify the working of the proposed design
noproblem the design incorporates   all the functionalities that needs to be implemented no suggestions are required
noproblem the suggested fix would address all the functionalities which is required to be implemented for the problem statement
noproblem    yes the design include all the required functionalities as their design plan the problem statement specifies 3 task one is related to the admin panel and two are related to the instructor panel in their plan they have specified their approach and which all files need modification
noproblem the document outlines all the required functionalities along with the design and implementation plan stated
noproblem all the requirements have been covered
noproblem yes most of the functionality are included besides they also got detailed explanations
noproblem yes it incorporates all the functionality required by this project
noproblem yes the design doc covers all of the required functionalities
noproblem it seems that the design incorporates all of the necessary functionality it also mentions details of how the team is going to implement said functionality
noproblem    some more specific details could be added
noproblem yes functionalities mentioned are covered in the doc
noproblem yes it covers everything
noproblem yes
noproblem yes the authors have a great job of including all the needed functionality
noproblem the team has provided enough explanation about how they are going to work on this project overall quality of explanation is good    suggestion include the purpose of implementing these functions changes
noproblem the team has proposed reasonable changes to address the problem statement in detail the explanation justifies every change they have suggested
noproblem    the changes that the author has proposed is quite inclined with the task that are expected to be completed the author explains the the changes properly by mentioning the files that needs to updated along with the screenshots of the flow
noproblem the explanation is clear to follow but it could also include some more of the abstract design like uml diagrams explanation of the use cases etc
noproblem looks like the team spent some time looking at the code and coming up with the solution good job
noproblem their explanation is adequate and easy to understand
noproblem the authors have given adequate explanation in terms of the following what is existing currently what needs to be changed the have also explained with a diagram the exact place where they would be adding elements to the ui also the files required to be changed are also mentioned
noproblem    the suggested changes seem to be appropriate explanation was also easy to follow
noproblem the overall quality of explanations is very detailed and good i might even take few ideas from here to improve my own design doc
noproblem    they have explained adequately
noproblem yes very well done in explanation of changes and what needs to be done screen shots are helpful good work
noproblem comprehensive
noproblem detailed implementation plan provided including which files they expect to change and what the output should look like
noproblem the authors have done a pretty good job with explaining the proposed design they have used wire frames to show us exactly where the changes are to be made adding a flow chart would make things much clearer
noproblem the design   seems to be precise the description of the changes are provided in detail team has clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it
noproblem    as the project is more of adding features to the user interface of the website the design plan is covering all the necessary steps that needs to be implemented
noproblem the code design appears to be sound the ui implementation as shown on the screenshot   looks intuitive however the final implementation is necessary to say definitively that the code is not smelly
noproblem design is good there might be some changes when they start implementing it but its a good starting point
noproblem the design appear to be good specific gems are also mentioned eg paginate that would divide the document into discrete pages
noproblem the design changes as described seem sound
noproblem i don t see any trace of smells or redundancy in the proposed solution
noproblem the design seems to be sound i would like more details on the database of the bacui projects seeing as most of us don t know what they look like given that most of us have worked on expertiza projects so a short description of the different tables the project is going to interact with along with any and all modifications would really help understand if there will be any possibility that the design would turn out to be non dry or smelly i think the team is good on what gems are to be used
noproblem no potential smells or problems found
noproblem screenshot explains the functionality of project very well it is really easier to understand how the end product will look like suggestion    the team   should include a flowchart depicting the flow of the functionality
noproblem they have added a screenshot for each of the problem they plan to tackle
noproblem they show their design page as their visual aids and their are helpful for readers to understand what their designs look like
noproblem uml diagrams are not mentioned but since these are ui changes the changes are sufficiently explained with the help of representation of ui in terms of images
noproblem the whole document is easy to understand and well written suggestion it would be better to include what tools and technologies would be used in the project
noproblem there were ample of visual aids to explain and walk through the proposed solution i liked it
noproblem good that you have used screenshots to explain the approach include use case and activity flow diagrams also
noproblem ui enhancements are provided here
noproblem they authors have used visual aids to their benefit even though they could have added a flow diagram the wire frames and other screenshots they have used serve the purpose and add to the clarity of the explanation
noproblem    this was excellently specific and succinct very nice work
noproblem    its fine i have the gist of it but most of the text in the document is cut and pasted from the project description the uml is a nice touch albeit super bare
noproblem well structured i think everything is covered
noproblem the document explains well how the team is planning to approach the refactoring
noproblem the team has incorporated all of the functionality required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy   in this case
noproblem    in a way yes because it copied the project description and illuminated which models they wanted to create in the refactor
noproblem    the design document includes all the functionality the team is hoping to achieve they have explained clearly what they plan to work and modify
noproblem it has most of the functional features available
noproblem as the project is on refactoring not many functionalities to considered given the problem statement it clearly indicates the design should be able to incorporate the requested changes
noproblem yes the design incorporates all of the functionality required
noproblem all the functionality is given for review_mapping_controller rb   along with the design pattern
noproblem the explanation is easy to follow i am able to get a complete idea of what changes the team intend to make
noproblem expectations look attainable the changes proposed are concise and crisp team should be able to do a good job with this implementation
noproblem    again its fine i don t understand the changes too well but i also don t understand mvc and expertiza very well either but maybe they could have tried harder i do feel there is a strong need to refactor and improve the code quality of expertiza
noproblem the explanation is decent and comprehensible
noproblem i don t see any of the above mentioned problems happening since the design matches perfectly with the objective the topic itself is to move unnecessary   code out of review_mapping_controller and hence according to the design the code will actually become cleaner   and better
noproblem the proposed design seems reasonable before proceeding with the project team should also look at other references to those functions and do it accordingly
noproblem the implementation planned by the team seems to follow all ruby on rails guidelines and does seem to follow the dry principle
noproblem no problem   i could observe
noproblem the uml class diagram helps to understand the reports involved their attributes and functionalities it provides a general overview about the interrelation of the seven different reports
noproblem the authors provide a uml diagram to explain the relationship between the classes and a screenshot to show where they are going to add a button which are really helpful
noproblem    this was excellently specific and succinct very nice work
noproblem well structured i think everything is covered
noproblem the team has incorporated all of the functionality required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy   in this case
noproblem the document explains well how the team is planning to approach the refactoring
noproblem    in a way yes because it copied the project description and illuminated which models they wanted to create in the refactor
noproblem    the design document includes all the functionality the team is hoping to achieve they have explained clearly what they plan to work and modify
noproblem it has most of the functional features available
noproblem as the project is on refactoring not many functionalities to considered given the problem statement it clearly indicates the design should be able to incorporate the requested changes
noproblem yes the design incorporates all of the functionality required
noproblem all the functionality is given for review_mapping_controller rb   along with the design pattern
noproblem the explanation is easy to follow i am able to get a complete idea of what changes the team intend to make
noproblem expectations look attainable the changes proposed are concise and crisp team should be able to do a good job with this implementation
noproblem the explanation is decent and comprehensible
noproblem i don t see any of the above mentioned problems happening since the design matches perfectly with the objective the topic itself is to move unnecessary   code out of review_mapping_controller and hence according to the design the code will actually become cleaner   and better
noproblem    not enough implementation description to provide adequate feedback on this question
noproblem the implementation planned by the team seems to follow all ruby on rails guidelines and does seem to follow the dry principle
noproblem the design proposed by the team specifies an addition of a new button to the buttons tray from the existing ui the button when clicked must bring a menu of additional reports this functionality should consider the mapping to the review_mapping controller file that will implement the given features
noproblem no problem   i could observe
noproblem the team has done a good job with the uml diagram however in my opinion it would be better if they can add details for all the classes in the diagram
noproblem the uml diagram shows the various subclasses clearly it would have been better if it had also explained a few attributes methods
noproblem the uml diagram is having the correct contents but needs the rough names of class methods
noproblem the uml class diagram helps to understand the reports involved their attributes and functionalities it provides a general overview about the interrelation of the seven different reports
noproblem the authors provide a uml diagram to explain the relationship between the classes and a screenshot to show where they are going to add a button which are really helpful
noproblem a brief   description for the class level implementation would be better
noproblem everything has been described well and in details
noproblem at current state the design doc has project problem project solution and design diagram and each section has detailed description of the project
noproblem the document is well structured and provides all required information
noproblem the document explains what was asked for
noproblem yes everything is incorporated
noproblem all functions required are stated in the design document which include search for user assignment questionnaire and reviews
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem yes it does they have explained the propose solution as well for each issue
noproblem the design incorporates all the basic functionality
noproblem yes almost all types of search functionalities are covered
noproblem the design implements all the defined functionality elaborately
noproblem yes the design incorporates all of the functionality required and also gives the possible solutions
noproblem the quality of explanation is good and adequate
noproblem the proposed search features are good if all of them are implemented it should more than suffice
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem good explanations easy to follow
noproblem overall    the design   proposed seems good
noproblem yes the changes are completely feasible
noproblem the authors have added the methods in the right classes the new design is properly refactored and the gems are relevantly used the new design might potentially increase the response time of the system because of advanced search option
noproblem yes they have provided an uml diagram which follows convention and explains their approach
noproblem the team has added sufficient diagrams for the reader
noproblem the diagrams are succinct and well understood
noproblem the er diagram is very well done it encompasses all the classes and their attributes also the use of different shapes like diamond square etc is great
noproblem not required for this project
noproblem the e r diagram seems to deliver the task
noproblem there is an er diagram which defines the relationships in the system
noproblem wrtie up clearly explains the project purpose what changes needs to be made however including a mock test plan would have been better
noproblem most of parts are included but they should include more details in their doc
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach
noproblem the design doc contains project purpose project design and testing plan in the wiki the wiki contains mock visualizations which make it easy to understand the project proposal and how are they planning to do the design flow as a flow chart adds to the ease of understanding the test plan explains about the technologies that they are planning to use for testing suggestion    the test plan could say what should be done in testing than just the technologies to be used for a particular part of code for ed we plan to have a dummy small data and see if the graphs output the visualizations correctly if the sum id being counted to 100 of the class participation etc the stacked version could also have been represented for better understanding
noproblem the document shows the flow of work really well however i would like to suggest to put more of test planning and the tools and technologies that will be used this will enhance the quality of the document to a great extent
noproblem the design doc is good and provides a clear picture about the objective of the project however it would also be nice to know what features would be tested in the test plan
noproblem all necessary sections are present
noproblem yes the design incorporates all of the functionalities
noproblem incorporates intended functionality
noproblem yes their design has all of the functionality that are required
noproblem the design document has included all the functionality that is required by the project description
noproblem yes
noproblem the design incorporates and clearly explains flow of diagram for class performance but not much is included for integration of review performance suggestion the topic of integration of review performance can be talked about in brief
noproblem the design has a good design flow diagram which is clear and concise
noproblem the design follows the basic functionality expected by proposing a bar graph solution for the select criteria it could incorporate the rubrics that the team are planning to target the flow in general does help to understand the project
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions
noproblem yes
noproblem the explanation is quite well documented such as including the flow chart kind of bar graphs they would prefer and the files that they will update adding of screenshots of the flow of the website would make it more easy to understand for a leyman
noproblem changes suggested look good
noproblem the overall quality of the explanations are good but they should include more details about their design which may not be easy to understand
noproblem the team has mentioned all the files that will be changed and have also written a paragraph stating what are the proposed changes the team could also document the changes that are being made to individual code files stating the changes done using code snippets and the reason why the changes are being made also they can talk about what design patterns principle are being used to incorporate the functionality that is being proposed the team could also use crc cards to depict the proposed code changes this will not only help readers understand the report better but also help the team in dividing work between the team members and fast tracking the completion of project
noproblem the changes proposed for the class performance is adequate and explains the files to be changed what changes from the controller perspective and views perspective no particular suggestions proposed
noproblem the team proposed to add a bar graph to give a pictorial view of the scores and indicate the performance of students
noproblem the changes proposed by the team include implementing a bar chart stacked or single based upon the project description it is advised that the team look for other alternatives like pie chart that would help to span the   results   with a minimal look
noproblem a simple enough explanation has been provided for the functionality    no suggestions
noproblem for now the design proposed looks perfect
noproblem design flow looks good
noproblem the authors seem to have studied the code well and have thought of a good plan to implement the project they also seem to follow dry principles while adding and changing code also the new design flow is quite simple and easy to understand which can be implemented without any high degree of convoluted code
noproblem the design changes as described are sound they are mostly on javascript for the visualization and dont potentially make the code smelly
noproblem the team has given a design flow that underlines the basic way in which they are planning to target the issue at hand it can make use by giving an example as to how the output might look and the document must also describe the tools that would be used for achieving the task
noproblem the design looks good enough it mostly deals with html erb files to accommodate the graph and some database filtering in the controllers i do not think that the design will increase the responses time of the system suggestion if the details regarding how the graph will be implemented or any gem will be used should have been given i did not find any details regarding about any methods that will be used to implement the functionality that too would have been useful
noproblem the uml diagram included here is a flow chart diagram which explains the process of how the instructor will be able to see the visualization and is easy to understand the flow
noproblem design flow diagram is included indicating the flow which is good
noproblem the uml diagrams is great which is clear and easy to understand
noproblem the have included a detailed design flow representation and have also included the visualizations the could have added lo fi ui cards to depict changes to views which will help them visualize the changes and also help instructors in suggesting improvements at an early stage which will help reduce unnecessary code changes in latter stages of the project
noproblem the team has attached a bar chart for visualization which helps in understanding their purpose suggestion more visual aids could have been added the stacked bar chart as mentioned earlier more mockups could have been added
noproblem the design diagram is good and it would also be helpful to have a few screenshots of the current expertiza   view
noproblem the team has provided a flow diagram that helps to infer the structural outline of the project the scope of the project can be perceived from the diagram
noproblem a flowchart and graph has been shown in the documentation    suggestions i feel that there should have been mockups of the screens where the functionality will actually appear team should have shown how the solution would look like on the expertiza page there could have been use case diagrams too
noproblem two graphs provided provide a good understanding of the   process and what expected visualization should be more diagrams would have been helpful
noproblem design document looks complete with problem statement files that needs to be modified a lo fi diagram to indicate the flow
noproblem clear understanding   of what needs to be done
noproblem this is a very innovative idea well explained design document files needed to be changes are also mentioned
noproblem the design docs looks complete with all of the details being covered
noproblem yes it states the plan design well testing can be better represented in terms of whether its ui testing or automated tests etc
noproblem the design document is well done with proper visual aids and explains the problem being tackled and the proposed solution very well
noproblem the document is well written just that a uml   diagram or something   similar   could have been included to make it clearer and easier for the reader to understand
noproblem good work on problem statement and implementation ideas however screenshots could have added lofi sketches and flowcharts missing
noproblem the design doc is well designed and complete
noproblem the design doc looks complete with all of the necessary details being covered
noproblem completed both the project purpose and design
noproblem the purpose of the project seems quite clear the team has explicitly mentioned all the requirements that has been expected of them along with the ways to implement said requirements there is no testing plan however they should include that and then the document would be good to go
noproblem    they showed all the details which were asked for
noproblem brilliantly written code document consisting of background problem statement and the implementation plan
noproblem the design incorporates   all the functionalities that needs to be implemented no suggestions are required
noproblem the suggested fix would address all the functionalities which is required to be implemented for the problem statement
noproblem it incorporates most of the functionality
noproblem    yes the design include all the required functionalities as their design plan the problem statement specifies 3 task one is related to the admin panel and two are related to the instructor panel in their plan they have specified their approach and which all files need modification
noproblem all the functionality has been covered in the wiki issues are described in detail and files to be modified are also mentioned
noproblem the document outlines all the required functionalities along with the design and implementation plan stated
noproblem all the requirements have been covered
noproblem yes most of the functionality are included besides they also got detailed explanations
noproblem yes it incorporates all the functionality required by this project
noproblem the document addresses everything mentioned in the problem statement
noproblem yes i think the design included all functionality
noproblem yes it does
noproblem yes design doc cover all of the functionaliites
noproblem    yes the design seems to incorporate all the functionalities required
noproblem yes the design doc covers all of the required functionalities
noproblem yes all the requirements are stated and   an implementation plan is given
noproblem yes they have included everything mentioned to implement
noproblem it seems that the design incorporates all of the necessary functionality it also mentions details of how the team is going to implement said functionality
noproblem yes functionalities mentioned are covered in the doc
noproblem yes it covers everything
noproblem yes
noproblem yes the authors have a great job of including all the needed functionality
noproblem the team has proposed reasonable changes to address the problem statement in detail the explanation justifies every change they have suggested
noproblem    the changes that the author has proposed is quite inclined with the task that are expected to be completed the author explains the the changes properly by mentioning the files that needs to updated along with the screenshots of the flow
noproblem looks like the team spent some time looking at the code and coming up with the solution good job
noproblem their explanation is adequate and easy to understand
noproblem the authors have given adequate explanation in terms of the following what is existing currently what needs to be changed the have also explained with a diagram the exact place where they would be adding elements to the ui also the files required to be changed are also mentioned
noproblem    the suggested changes seem to be appropriate explanation was also easy to follow
noproblem the overall quality of explanations is very detailed and good i might even take few ideas from here to improve my own design doc
noproblem    they have explained adequately
noproblem yes very well done in explanation of changes and what needs to be done screen shots are helpful good work
noproblem comprehensive
noproblem detailed implementation plan provided including which files they expect to change and what the output should look like
noproblem the authors have done a pretty good job with explaining the proposed design they have used wire frames to show us exactly where the changes are to be made adding a flow chart would make things much clearer
noproblem the design   seems to be precise the description of the changes are provided in detail team has clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it
noproblem the team has not proposed any design for the suggested changes
noproblem    as the project is more of adding features to the user interface of the website the design plan is covering all the necessary steps that needs to be implemented
noproblem the code design appears to be sound the ui implementation as shown on the screenshot   looks intuitive however the final implementation is necessary to say definitively that the code is not smelly
noproblem design is good there might be some changes when they start implementing it but its a good starting point
noproblem the design appear to be good specific gems are also mentioned eg paginate that would divide the document into discrete pages
noproblem the design changes as described seem sound
noproblem i don t see any trace of smells or redundancy in the proposed solution
noproblem no potential smells or problems found
noproblem there are adequate screenshots to show the required functionalities and how they would look after implementation though there aren t any uml diagrams to explain the use cases
noproblem they have added a screenshot for each of the problem they plan to tackle
noproblem they show their design page as their visual aids and their are helpful for readers to understand what their designs look like
noproblem the whole document is easy to understand and well written suggestion it would be better to include what tools and technologies would be used in the project
noproblem there were ample of visual aids to explain and walk through the proposed solution i liked it
noproblem yes screen shots are helpful but the document missing flow control diagrams
noproblem good that you have used screenshots to explain the approach include use case and activity flow diagrams also
noproblem ui enhancements are provided here
noproblem they authors have used visual aids to their benefit even though they could have added a flow diagram the wire frames and other screenshots they have used serve the purpose and add to the clarity of the explanation
noproblem changes along with the screen mockup   are provided
noproblem explanations are easy to follow
noproblem well the proposed solution looks satisfactory
noproblem explained the objectives very well also the criteria for completion are also explained
noproblem i liked the overall quality of the expalnation
noproblem it explains in an overall sense what the issue is and how its going to be solved
noproblem really like the graph you guys   drawing
noproblem changes suggested look good
noproblem they are trying to leverage the existing screen and adding additonal   fucntionality thus it wouldn t impact the existing code
noproblem new design approach is pretty straight   forward
noproblem all the proposed changes look like exactly what needs to be implemented in this project
noproblem they seem to have a clear idea of what they are going to do
noproblem according to the solution suggested team should be able to implement it
noproblem included a kind of mock ui lo fi diagram to shown how the uiwould like which is great
noproblem they have added notes explaining   the mockup   diagrams
noproblem the hand drawn diagrams are good enough to explain the problem to others next time they can update it with   the actual page once its done
noproblem good ui mockups
noproblem they give the graph of the ui design which is good and explicit
noproblem the design doc is well designed and complete
noproblem they give the graph of the ui design which is good and explicit
noproblem clear understanding   of what needs to be done
noproblem changes along with the screen mockup   are provided
noproblem they are trying to leverage the existing screen and adding additonal   fucntionality thus it wouldn t impact the existing code
noproblem explained the objectives very well also the criteria for completion are also explained
noproblem yes it does
noproblem for now explainations   are in preliminary state i m hoping that team will fillout   this as they progress in project
noproblem new design approach is pretty straight   forward
noproblem they have added notes explaining   the mockup   diagrams
noproblem design document looks complete with problem statement files that needs to be modified a lo fi diagram to indicate the flow
noproblem it incorporates most of the functionality
noproblem changes suggested look good
noproblem the document addresses everything mentioned in the problem statement
noproblem explanations are easy to follow
noproblem based on the mockups it seems like the designs will fit in well with th expertiza system i d like to see more professional mockups or descriptions of the new uis but i understand that might not be feasible yet
noproblem completed both the project purpose and design
noproblem really like the graph you guys   drawing
noproblem yes all the requirements are stated and   an implementation plan is given
noproblem it explains in an overall sense what the issue is and how its going to be solved
noproblem yes i think the design included all functionality
noproblem well the proposed solution looks satisfactory
noproblem according to the solution suggested team should be able to implement it
noproblem good ui mockups
noproblem yes they have included everything mentioned to implement
noproblem they seem to have a clear idea of what they are going to do
noproblem the design docs looks complete with all of the details being covered
noproblem yes design doc cover all of the functionaliites
noproblem i liked the overall quality of the expalnation
noproblem all the proposed changes look like exactly what needs to be implemented in this project
noproblem please add more details about the solution
noproblem it includes all the sections
noproblem i don t think they need any visual aids
noproblem nothing specified
noproblem problem design and test plan are all here tres bien
noproblem this design cod is fully completed including project purpose project design and testing plan
noproblem all necessary parts of design document are included
noproblem yes they include project purpose project design and testing plan it s detailed and easy to understand
noproblem the team has included everything which is required in the documentation in a comprehensive manner the team has also included test plan for two scenarios
noproblem the project purpose design and test plan are all explicit and detailed just one suggestion that the structure can be more centralized for example the 2 3 and 3 3 may better be together like overview and details which i think may be more specific
noproblem all the required parts are in their design
noproblem yes the team have incorporated all the functionality required
noproblem yes the design document mentions all the necessary steps and the design ideas for the implementation of them
noproblem explained the requiremnts   well and their plan but what they will be changing is vague
noproblem design appears to account for all needed functionality
noproblem yes they did a great job incorporate all of the functionality required
noproblem yes all functionalities mentioned in the requirement are listed
noproblem yes
noproblem yes they include all the functionality in the wiki page
noproblem the team has included solutions to all the functionalities   to be implemented
noproblem their design contains all the functionality required
noproblem yes it includes all the functionality mentioned
noproblem it has incorporated all the functionality
noproblem there is adequate explanation for the changes proposed along with screenshots to explain the output
noproblem nice explanation with step by step   implementation plan it is very easy to follow the design document
noproblem they explain the changes step by step very detailed and easy to read
noproblem the team has given a proper explanation by including the workflow steps that need to be achieved to solve the given issue this shows that the team has an organized plan to implement the solutions this will help the team in the later stages of the project
noproblem an explanation for each functionality provided
noproblem the explanation is complete and easy to understand
noproblem design appears to be sound i would do the same
noproblem no question there from my point of view the implementation design is nice
noproblem from the steps taken by each tasks i guess they can perform all the functionalities well
noproblem the design they have right now looks good to me i did not find any   inappropriate design in it
noproblem the desigin has many details which from my point of view is in the right direction
noproblem images were very useful in understanding need intent for the project
noproblem they have included a diagram it do help me understand how they are going to implement this project
noproblem there are screenshots that can help in understanding the purpose
noproblem the entire project flow is well documented along with the basic structural requirements the document aligns with the plan of action and showcases the exact purpose of the project
noproblem the project design doc is complete and specifies both issues and prospective solutions
noproblem the doc mentions the changes to be made in a detailed way along with a proper stepwise explanation of the solution or the approach to be taken plus the screenshots which help in better understanding
noproblem good work good documentation
noproblem the document clearly specifies the problem statement it seems good enough they have mentioned the api they are planning to use as well as the files to be modified however i would like more details on this api and how they plan to integrate it into their project
noproblem the document is almost complete includes proper planning and demonstration only suggestion would be to include more about how the implementation would be done
noproblem the design document states all the required things right from project design to test plan the doc also specifies what all files will be changes along with how the functionality will look like once the project is deployed    suggestion i feel like the test plan should have been a bit more elaborate the team did mention one scenario i feel like there could have been many more but as all the required things are present i am giving this post full stars
noproblem yes i believe they have included all of the required functionality
noproblem the design   encompasses all the features in the specification it only indicates supporting one more language though whereas the design document specifies any language it seems out of the scope of the project but what if you used the   google s cloud translation api to translate the static strings   at run time then you could support almost any language there might be licensing issues though
noproblem yes the design document contains all parts of the functionality ensuring that nothing is missed out
noproblem yes it covers all the functionalities
noproblem implementation looks just like what the requirement asked for no   removing of english code
noproblem implemented major of them
noproblem the design does incorporate all of the necessary functionality
noproblem yes the required functionality is adequately explained good work in that
noproblem the design incorporates everything that the project document has specified about the project    no suggestions
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely
noproblem the changes are apt and easy to follow it makes sense
noproblem good explanations for all solutions
noproblem the wireframes themselves make the project self explanatory that being said enough explanation about how the team will tackle the problem statement has been given things like what api will be used to achieve the objective has been mentioned no suggestions
noproblem the design seemed good
noproblem the design looks solid but it s hard to tell without sufficient detail if anything causing every static string reference to be encapsulated into an object that uses the current language to return the correct string is more dry and maintainable than what we have now i wonder if dynamic translation gems are out there or would work the claim that dynamic translation should not be done in this project should be defended e g it would take too much time
noproblem looking at the doc it seems like the design is precise the description of the changes are provided in details ensuring the satisfaction of the reader
noproblem the design proposed is the natural way anyone would go around solving those issues for example creating separate yaml files for different languages and then picking up the strings from there
noproblem looks good only view files are involving the changes
noproblem well designed
noproblem the design seems sound the team plans to add all translations of the static variables in a separate folder i think that this could potentially increase the response time of the system i would like to see this design in action before making a judgement
noproblem the document does not go much into the technical details the limited details provided sounds right however more research will generate better understanding
noproblem the team have showed what they plan to do in the diagrams
noproblem the diagrams describe the functioning of the project exceptionally
noproblem screenshots are helpful to understand the flow and their work
noproblem screen mock up s are good
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem    this wiki is dope they analyze the requirements for the github metrics they would need and walked the reader through their design considerations it seems like they have a thorough understanding about how to do this project
noproblem well done on adding almost everything
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job
noproblem all the required part is in the document
noproblem i think the diagrams shown include where you intend to add the metrics but not how all the metrics will be incorporated in the next phase make sure to include details for each of these total number of commits number of files changed lines of code added lines of code modified lines of code deleted locs that survived until final submission exclude from mvp due to the complexity and lower priority
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem yes
noproblem includes all the functionality
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc
noproblem    the design contains   all of the functionality required
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem uses uml diagrams and images to explain where the changes will be made
noproblem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem well written
noproblem i think they have done a great job on this doc it complete and detailed
noproblem very robust nearly cover every thing
noproblem yes i believe they have included all of the required functionality
noproblem the design document addresses all the functionalities and even the implementation details in the specification
noproblem    looks good
noproblem most of them are included
noproblem the document does say what they re going to do and that fits fully with the project description
noproblem yes
noproblem the team have given a proper explanation of how the things will be implemented by specifying the files that needs to be modified the team have written it in a good manner which is easy to understand
noproblem their explanations are detailed and easy to understand
noproblem the authors have proposed changes in the   offscreencanvascontextrendering2d webidl by implementing it similar to   htmlcanvascontextrendering2d implement blob api and support webgl contexts as in   webglrenderingcontext the explanations are quite convincing though a little more detail including background specifications would have made the documentation more cogent
noproblem the explanation is nicely written
noproblem nearly perfect
noproblem yes the designs appears to be good to me
noproblem uml diagram is clear
noproblem the design doc is clean and neat it specifies the issues and prospective solutions which are easy to follow
noproblem the design looks almost complete in terms of solution wise details covered
noproblem yes it incorporates all the functionalities
noproblem yes it incorporates all of the functionality required
noproblem they have covered mostly all the problems mentioned and given a tentative solution
noproblem yes the design doc incorporates all of the required functionalities
noproblem the design incorporates all of the functionality required some edge cases are also listed good job
noproblem the explanations are adequate and easy to follow
noproblem explanations are satisfactory and they they have provided multiple solutions for each problem which is good
noproblem    the explanations given for the design are quite succinct and dont go into much details they are just giving a high level overview of the system some of the explanations are thorough in nature kudos
noproblem thye provided a lot of solutions which is great
noproblem adequate explanation is provided for each problem
noproblem since they have not come up with a perfect solution it seems they have been working on that
noproblem changes are adequately explained easy to follow
noproblem though the solutions proposed are at a very high level it does make sense i can t comment on the actual implementation because there isn t much info on that
noproblem no problem found
noproblem it looks more or less right in the sense that the proposed changes are exactly what is required to be done in the project
noproblem the flow seems feasible
noproblem as the project is in the initial stage there is no technical description however i see from the document that their thought process is on the right track
noproblem the new design seems to take into account decreasing response time
noproblem everything has been described well and in details
noproblem at current state the design doc has project problem project solution and design diagram and each section has detailed description of the project
noproblem the document is well structured and provides all required information
noproblem the document explains what was asked for
noproblem yes everything is incorporated
noproblem all functions required are stated in the design document which include search for user assignment questionnaire and reviews
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem yes it does they have explained the propose solution as well for each issue
noproblem yes almost everything seems perfect only a little more explaination is required
noproblem the design incorporates all the basic functionality
noproblem yes almost all types of search functionalities are covered
noproblem the design implements all the defined functionality elaborately
noproblem yes the design incorporates all of the functionality required and also gives the possible solutions
noproblem the quality of explanation is good and adequate
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem good explanations easy to follow
noproblem overall    the design   proposed seems good
noproblem yes the changes are completely feasible
noproblem did not see much info on the files or classes the changes proposed so its hard to comment here
noproblem code level details are not covered in this doc but the high level approach looks fine to me
noproblem yes they have provided an uml diagram which follows convention and explains their approach
noproblem the team has added sufficient diagrams for the reader
noproblem the diagrams are succinct and well understood
noproblem the er diagram is very well done it encompasses all the classes and their attributes also the use of different shapes like diamond square etc is great
noproblem uml is missing but er diagram is given you can add a uml diagram it explains things better
noproblem the e r diagram seems to deliver the task
noproblem not required for this project
noproblem they have depicted their working strategy through an er diagram however i would suggest them to include more uml diagrams to enhance understandability also the er diagram is somewhat incomplete
noproblem there is an er diagram which defines the relationships in the system
noproblem document is very well written and contains all the details like problem statement solution files to be modified testing plan
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a use case diagram will be useful to add
noproblem design doc contains everything in clear explanation
noproblem it incorporates all the functionalites
noproblem the wiki is detailed enough that it mentions all the functinoalities required in the project the team has made sure to not miss out on any functionality and they even took out time to list the column names in each report they would add the sort feature to good work guys
noproblem i think the authors have incorporated most of the functionality in the design document
noproblem design document contains all the functionality required
noproblem the design document   lists every issue that is being addressed in the project providing comprehensive details on the functionality that is required for each one
noproblem changes look good
noproblem it is easy to follow the changes that the authors have proposed
noproblem adequate explanation was given
noproblem the explanations can be more detailed overall understandable
noproblem team have shared the link for the tablesorter which explains the functionality
noproblem need some diagram or prototype
noproblem mainly needs html files to be changed and they have mentioned them which looks good
noproblem the design proposed by the authors appears to be sound since this project is only to sort the views there will be no code added to either the models or controllers i hope the team only adds one sorting function per view and allows that one function to handle sorting for different columns in that view
noproblem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly the team is using one of the existing gems in their design
noproblem the solution looks like it doesnt add any overhead and the doesnt make the code smelly
noproblem the solution seems right
noproblem the team has not mentioned about how they are planning to do the changes
noproblem the design data includes most of the important information required to understand the teams plan
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a uml diagram may prove to be useful
noproblem good job on ui and test cases kindly add uml diagram
noproblem the project documentation looks complete with clear details about the purpose to enable the students to better analyze their review based on the suggestion metrics like   volume sentiment suggestion praise and criticism metrics they have delineated the design that includes the files that the team proposes to change the view    app views response response html erb and the partial app views submitted_content _self_review html erb the screenshot of the existing ui of the review section and how the ui would look after the project with the inclusion of a button to analyze and they have specified that a popup displaying the suggestion metrics will emerge when the button is clicked    i specifically like how the test plan includes their feature in the connextra format they have mentioned 2 scenarios one where the student clicks the button without entering text in which case the popup alerts the reviewer saying no text for analysis and the regular scenario when the user clicks the analyze button after entering text in which case the popup displays the suggestion metrics i wish to suggest an additional scenario where the user can intuitively test the quality of the suggestion metrics based on the review input like for example there can be test cases which show that the suggestion algorithm detects generic reviews that might be seemingly relevant to the topic but add no customization to the project being reviewed like how some reviewers menially copy paste the same format of the review to all projects with just minor changes overall the team has done a great job with the documentation and i look forward to see the implementation of this project in the upcoming review
noproblem the design doc is clean and neat it specifies the issues and prospective solutions which are easy to follow
noproblem yes the documentation looks complete   and states the project purpose and solution are stated the project design could be described in more detail
noproblem i cannot find any project purpose but they did provide a lot of solutions to problems
noproblem the design looks almost complete in terms of solution wise details covered
noproblem yes it incorporates all the functionalities
noproblem yes it incorporates all of the functionality required
noproblem they have covered mostly all the problems mentioned and given a tentative solution
noproblem yes
noproblem yes the design doc incorporates all of the required functionalities
noproblem the design incorporates all of the functionality required some edge cases are also listed good job
noproblem the explanations are adequate and easy to follow
noproblem explanations are satisfactory and they they have provided multiple solutions for each problem which is good
noproblem    the explanations given for the design are quite succinct and dont go into much details they are just giving a high level overview of the system some of the explanations are thorough in nature kudos
noproblem thye provided a lot of solutions which is great
noproblem adequate explanation is provided for each problem
noproblem changes are adequately explained easy to follow
noproblem no problem found
noproblem it looks more or less right in the sense that the proposed changes are exactly what is required to be done in the project
noproblem the flow seems feasible
noproblem as the project is in the initial stage there is no technical description however i see from the document that their thought process is on the right track
noproblem the new design seems to take into account decreasing response time
noproblem the design doc is complete and clearly indicates the project objectives the test plan indicates what aspects are to be tested and screenshots of the proposed analyze button are also posted
noproblem the document is complete and very clear
noproblem the doc is complete and everything is included very well written
noproblem the design document gives details about the problem statement and gives an idea about what is to be done in the project it specifies what files will be modified and the test plan also contains 2 scenarios mentioned no suggestions
noproblem yes i think the document includes everything as expected
noproblem    yes the wiki appears to incorporate all of the required functionality we want students to know if they re giving helpful feedback and we want the nlp algorithm to be local to the expertiza project to decrease its reaction time they have at least shown that they are going to add buttons
noproblem i could not spot the problem statement of the proposed project in the google doc containing the list of problem statements but on reading the team s design documentation on the wiki page i m quite satisfied with the functionality that they plan to include in addition to elucidating the main functional requirement of the project namely the implementation of the suggestion algorithm the team has also proposed a non functional requirement of improving the performance and response time of the time it takes to generate the suggestion through the web service
noproblem yes the design document incorporates the   plan to implement the functionalities as stated in the problem statement
noproblem yes all changes are incorporated and explained well
noproblem the design incorporates most of the functionality required it would be nice to have a design diagram
noproblem yes they have discussed about all the functionality
noproblem yes
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions
noproblem the authors have mentioned including analyze buttons for sentiment analysis of different parts of the comments i think the rationale for this is very good because if they were to send all of the comments at once as input to the api the results would be a mix of the sentiments of all the different comments and would therefore not be accurate also this way i think that the response time of the system would not be affected by a whole lot
noproblem the explanation   is good and clearly indicates the project objectives
noproblem i am able to understand the purpose of the project
noproblem please add more information on the nlp algorithm team is trying to use
noproblem the team has has listed the 2 files that they propose to change namely    the view    app views response response html erb and the partial app views submitted_content _self_review html erb however they could have described what these files currently do and their purpose in the documentation the authors have embedded screenshots of how the ui of the review page will look after the analyze button will be included they have specified that a pop up showing the suggestion metrics pertaining to a review namely    volume sentiment suggestion praise and criticism metrics will be generated once the button is clicked
noproblem the explanation   is pretty good i particularly found the images explaining what all they are going to add pretty intuitive
noproblem changes are explained well suggestion detection algorithm an be explained a bit more or how exactly you will be using it probably some code snippets would help explaining that
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem the explanations are lucid
noproblem the design seems to be following dry principle
noproblem i don t think the authors plan to add methods to a wrong class they seem to be working on the right class namely review and its associated view page review html erb that exactly pertains to their project the response time might potentially increase with this new feature but fortunately the team has proposed to work on optimizing the suggestion algorithm so that it does not take forever to execute the team has done a good job on the design documentation
noproblem the design appears to be sound and wouldn t conflict with the existing classes or methods
noproblem 2 html files require change i don t think it will affect anything
noproblem yes it completes functionality
noproblem yes the design seems to follow all of the functionalities required it looks like they have gone through the project description in a good manner
noproblem the design incorporates all of the functionality required
noproblem the team has done a good job in explaining the project and its purpose with the design and files that need to be changed however    test plan is provided
noproblem nice flow chart
noproblem the design has pretty much covered all the functionalities in the doc
noproblem yes    design incorporates almost all the functionalities that should be tackled as per problem statement
noproblem yes they are trying to incorporate all the requirements
noproblem yes it   incorporates all of the functionality required
noproblem yes
noproblem no design provided use case diagrams have the functionality explained
noproblem the team did a great work in understanding the requirements and have included the design for all the requirement mentioned in the requirement document
noproblem the design has pretty much covered all the requested functionality
noproblem the chart is very clear
noproblem no changes proposed
noproblem the team has explained the implementation design strategy in detail the design was explained with all the required details and was very easy to understand
noproblem not everything
noproblem yes it looks good
noproblem yes document incorporate all the functionalities mentioned in the problem statement assign
noproblem 1 team technically understand the change and proposed solution does not lead to adding methods in wrong classes 2 new design should not make the code smelly 3 changes are logical and proposed solution is reasonable enough no gem required 4 it should not increase response time 5 no the plan is nice and should be taken forward
noproblem the design document contains all the functionality required
noproblem the design does incorporate the functionalities required it is descriptive and easy to understand
noproblem no problem   found
noproblem the design incorporates all the functionality which are required
noproblem no design proposed
noproblem the screenshots posted give a clear picture of the intended output it would be nice to have a design diagram
noproblem it would be better to add more diagrams
noproblem changes proposed by authors are viable
noproblem it was easy to follow
noproblem can t comment on it right now
noproblem adequate diagrams are given explanation of problem statement done well
noproblem looks fine
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach
noproblem all necessary sections are present
noproblem yes the uml diagram have been correctly implemented and help in understanding their approach
noproblem yes gives clear understanding   using the use case diagram
noproblem uml diagrams are drawn well to explain the flow so the diagrams help in explaining the project flow
noproblem screenshots which were included was explanatory more figures such as logic flow wireframes etc can be added for better understanding
noproblem visual aids   are great
noproblem yes the design incorporates all of the functionalities
noproblem incorporates intended functionality
noproblem the team has submitted diagrams and screenshots that explain what is expected from the solutions
noproblem yes their design has all of the functionality that are required
noproblem the document contains a   flow diagram that analyzes the system s requirements and expected flow however it can certainly make use of other uml diagrams in the expected flow section   to give more clarity about the requirements and the sequence of actions
noproblem the team did a great work in explaining the requirement with the help of flow chart which helped in better understanding of the requirements and proposed design
noproblem the diagrams are clear enough to help me understand the flow of the project
noproblem yes
noproblem the design has a good design flow diagram which is clear and concise
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions
noproblem yes
noproblem it would be better to add some uml diagrams
noproblem changes suggested look good
noproblem the changes proposed for the class performance is adequate and explains the files to be changed what changes from the controller perspective and views perspective no particular suggestions proposed
noproblem the team proposed to add a bar graph to give a pictorial view of the scores and indicate the performance of students
noproblem the changes proposed by the team include implementing a bar chart stacked or single based upon the project description it is advised that the team look for other alternatives like pie chart that would help to span the   results   with a minimal look
noproblem a simple enough explanation has been provided for the functionality    no suggestions
noproblem for now the design proposed looks perfect
noproblem design flow looks good
noproblem the authors seem to have studied the code well and have thought of a good plan to implement the project they also seem to follow dry principles while adding and changing code also the new design flow is quite simple and easy to understand which can be implemented without any high degree of convoluted code
noproblem the design changes as described are sound they are mostly on javascript for the visualization and dont potentially make the code smelly
noproblem the uml diagram included here is a flow chart diagram which explains the process of how the instructor will be able to see the visualization and is easy to understand the flow
noproblem design flow diagram is included indicating the flow which is good
noproblem the uml diagrams is great which is clear and easy to understand
noproblem the team has provided a flow diagram that helps to infer the structural outline of the project the scope of the project can be perceived from the diagram
noproblem two graphs provided provide a good understanding of the   process and what expected visualization should be more diagrams would have been helpful
noproblem the team has presented a detailed explanation of   all the topics in the documentation
noproblem following can be added project introduction motivation description of project
noproblem the document includes the problem statements and proposed solutions of all the issues all the proposed solutions have test plans as well
noproblem the design does corporate all the functionalities required
noproblem yes the doc covers every functionality   and detailed description of the approach to deal with the issue
noproblem the design proposes solutions for all the issues every issue is well described and flow diagrams are provided for the solutions
noproblem they have each listed bug explained at the very least and most have a resolution pathway a
noproblem the document incorporates all of the functionalities as mentioned in the google design document the team have made sure to list explain and provide proposed solutions for each bug to be fixed good job guys
noproblem yes i think it includes everything all the functionalities required
noproblem the design incorporates all the functionality required suggestion including screenshots or screen mockups would make the document easier to understand
noproblem yes they have incorporated everything they have explained the solutions as well
noproblem it lists out all the functionalities in the problem solution and looks very clear and very elaborate with codes and diagrams
noproblem the team has included all the 5 issues as stated in the project description google doc the team has provided solutions for all these issues as well the solutions are descriptive and easy to follow
noproblem the design document separately   describes   every distinct issue and in some cases even provides possible finalized fixes to the source code
noproblem the authors have listed all the proposed changes in the problem solution i was able to understand it without any trouble    overall quality of the proposals is good
noproblem the document is very impressive and provides detailed description of all the proposed changes explanations and steps given are easy to follow no suggestions
noproblem well after reading all the proposed solutions i think they look good and the explanation behind all of them are satisfactory as well
noproblem for the bugs which have explanations the proposed fixes and explanations of the problem are sound i d like more info on bugs 1017 and 1072 as they only have the flow
noproblem the good thing about this wiki is that the proposed solution sections is brilliantly explained the team have clearly mentioned all filenames where they propose to make changes drawn diagrams to illustrate the flow control and added snippets of code where necessary brilliant
noproblem the explanations are well written and describe the workflow well there could have been a little more detail in the explanation as some of the statements are very high level
noproblem the changes mentioned seems to be well thought and written as they are well explanatory with adequate description the doc covers all the issues
noproblem the designs proposed makes some sense as they are backed up with diagrams to make them very clear of their approach
noproblem honestly in my opinion the team has given a lot of thought into how to fix the bugs the design proposed solutions look completely logical and should fix the bugs with no least redundancy it also looks like the team has already managed to fix a few bugs as well kudos to them
noproblem the proposed solution would be the best approach to tackle the issues in my opinion they would not make the code smelly or complicated
noproblem for now design plan looks good enough
noproblem it appears to be sound
noproblem the diagrams that are provided in the document visualize the workflows of different actors that pertain to the given issues they are definitely helpful for the reader to understand the scope of the problem that is being addressed
noproblem the team has provided flowcharts which makes it easier to understand their solution the provided diagrams seem enough for the reader to understand the solution
noproblem visual aids are used properly and very helpful in understanding uml diagrams follow the convention everything looks proper
noproblem uml looks good explains whats happening
noproblem they have included flowcharts for each proposed solution the flowcharts can clearly explain the work flow
noproblem all the diagrams are great and none feel extraneous
noproblem the diagrams provided clearly explain the flow control of the proposed solutions the team even mentions preconditions needed for the flow control the only suggestion i have is that the team could also add a low fi sketch or screenshot of how the view would like after before after issue 1008 is fixed
noproblem flow diagrams are well thought of and explain the workflow well adequate details are given for each diagram
noproblem diagrams are proper precise and detailed to understand the behaviour of the system currently and after making changes good effort in making the diagram and wiki
noproblem the design looks fine but no explanation as to why this is done is it already existing or is this a new feature
noproblem the uml is good liked the way they have clearly mentioned the functions
noproblem the step by step instructions are detailed and is good
noproblem yes the design looks complete
noproblem implementation details haven t been added yet but that s fine as it hasn t been started yet
noproblem a very nice uml diagram is added explaining the cases
noproblem yes the design document incorporates all the functionalities stated in problem statement
noproblem document is explained well also the flow of document is good team can add screenshots of existing documents also some diagram to explain the solution well
noproblem 1 authors solution do not seem to create methods to wrong classes 2 new design code does not make the code smelly 3 no new gem required explained solution is adequate 4 proposed design should not hamper system performance 5 well efforts expended on the design
noproblem the team has   done a commendable job in creating a very detailed   uml diagram and explaining the case of every user very well
noproblem test   plan is to be added but the purpose and the design are coherent and easy to follow
noproblem includes everything as far as i can tell
noproblem the proposed flows and project tasks are sufficiently detailed that i can understand the relationship between the issue and how they re going to solve it in each step
noproblem i don t have any issues with the design looking forward to seeing some code snippets to understand it better
noproblem the high level design which is needed to start with the work looks prominent as the project proceeds few intricacies resulting due to design conflicts scalability need to be addressed as and when required but the team has laid out a solid foundation to begin with
noproblem the authors have explained the workflow very well with respect to the different types of users involved in the particular feature the language is simple to follow
noproblem use case diagram adds extra weight to the design since the visuals always help the reader to relate the project well
noproblem the design does incorporate the functionality required of making reviews public allowing the students to toggle the visibility of review submitted it is descriptive and easy to understand
noproblem the proposals given by the team are reasonable and adequately cover the features to be established during the course of the project the changes suggested follow the desired requirements
noproblem as mentioned in their approach section the team decided on adding some functionalities like checkboxes and views i find these changes perfect for the problem statement given
noproblem they have used a use case diagram to explain flow i found it quite understandable and all the steps are clearly drawn out in the diagram it clearly explains the steps required to approach a situation
noproblem the explanations are very clear and easy to follow they give the idea of how team intends to approach the feature
noproblem i think overall it looks good however a bit more low level details may give better insight about such issues
noproblem yes it does
noproblem created a great visual aid which helps us explain the plan
noproblem document is very well written and contains all the details like problem statement solution files to be modified testing plan
noproblem the write up is very minimal i think it should elaborate made
noproblem it says what they will do but it seems high level would appreciate some diagrams or mockups
noproblem design doc contains everything in clear explanation
noproblem it incorporates all the functionalites
noproblem though the pull request has been passed but the writeup does not explain the details of the implementation like what sorting algorithm the team has implemented using jquery etc the design part of the writeup is very hollow and needs further refinement
noproblem the wiki is detailed enough that it mentions all the functinoalities required in the project the team has made sure to not miss out on any functionality and they even took out time to list the column names in each report they would add the sort feature to good work guys
noproblem i think the authors have incorporated most of the functionality in the design document
noproblem design document contains all the functionality required
noproblem please add more details about the solution how to code for that functionality is yet to be thought of
noproblem yes as per the solution provided it does seem that the design incorporates the required functionality it considers sorting on all the specified fields suggestions since you have mentioned the use of jquery tablesorte you may also add explanation as to what is tablesorter and try explaining atleast for one field e g name as to how does it work to sort the entries
noproblem the design document   lists every issue that is being addressed in the project providing comprehensive details on the functionality that is required for each one
noproblem changes look good
noproblem could use more detail
noproblem it is easy to follow the changes that the authors have proposed
noproblem adequate explanation was given
noproblem solutions have been proposed how they are going to do that is not mentioned
noproblem team have shared the link for the tablesorter which explains the functionality
noproblem the authors provide a list of files that will be modified in the scope of this project and a high level overview of what needs to be done the rationale behind using a   tablesorter jquery library and defining the code in the script seems reasonable but the team needs to discuss more   details to further clarity   the solution
noproblem need some diagram or prototype
noproblem mainly needs html files to be changed and they have mentioned them which looks good
noproblem as mentioned above the design part is pretty weak for a writeup and needs to be further worked upon
noproblem the design proposed by the authors appears to be sound since this project is only to sort the views there will be no code added to either the models or controllers i hope the team only adds one sorting function per view and allows that one function to handle sorting for different columns in that view
noproblem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly the team is using one of the existing gems in their design
noproblem the solution looks like it doesnt add any overhead and the doesnt make the code smelly
noproblem the solution seems right
noproblem the team has not mentioned about how they are planning to do the changes
noproblem wrtie up clearly explains the project purpose what changes needs to be made however including a mock test plan would have been better
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem    this wiki is dope they analyze the requirements for the github metrics they would need and walked the reader through their design considerations it seems like they have a thorough understanding about how to do this project
noproblem well done on adding almost everything
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job
noproblem all the required part is in the document
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem get the github pull metrics and show em to a person that person being an instructor
noproblem yes
noproblem includes all the functionality
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc
noproblem    the design contains   all of the functionality required
noproblem the explanation was perfectly organized and flowing    could not have been any better a sample request response of github metric api would ve made it more amazing
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem the explanation given by the authors was pretty straightforward looking at the explanations it looks like the authors have thought about different aspects of the problem statement and also of different ways to implement the github metrics integration feature along with the side effects of implementing it in a particular way e g one would think that adding the metrics to the database would be a sound solution but given the nature of an open source project and the fact that students would commit beyond the deadline the authors have thought not to add the metrics to the database which is sound and reasonable
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem uses uml diagrams and images to explain where the changes will be made
noproblem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem the design document states all the required things right from project design to test plan files that will be changed along with how functionality will work flow are included in the doc clearly    suggestion great work no suggestions required
noproblem the design doc is complete all the relevant sections have been added
noproblem document looks complete
noproblem the design doc clearly explains the project purpose project design and the test plan
noproblem design is very nicely explained with flowchart makes the design flow very clear suggestion if a screenshot of actual screen where the change needs to be made is added that would be perfect
noproblem the document is quite comprehensive in its descriptions of the design proposal
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach
noproblem the design documents contain all required part
noproblem impressive write up flow charts and uml diagrams are well explained detailed explanation of problem statement and solution to be implemented
noproblem yes the document incorporates all the functionality ensuring nothing is missed
noproblem the design incorporates all the required functionality to a good extent
noproblem yes it does
noproblem yes the design incorporates all the functionality required all the issues are explained clearly and their required solutions are also given
noproblem yes all the issues mentioned in the project description are covered along with their proposed solution good job
noproblem design document   has outlined the project requirement and issues they have proposed a solution to each problem they have even figured the files and methods to be modified overall it looks good
noproblem the design contains all of the functionality that required
noproblem yes it is complete
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely no suggestions
noproblem very clear very well organized
noproblem the flowchart makes it very clear
noproblem everything is explained well and easy to understand
noproblem the team has explained the solution with flow charts and code snippets they have even considered the feasibility of their solution which is a good thing as this is a big project so feasibility is a big factor
noproblem they explained   their plan very well both the visual aid and the word they use are very clear
noproblem adequate information given on implementing the solution flow charts are impressive
noproblem great efforts have been taken to convey what is to be done and how the team will do it the design will definitely increase the response time suggestion information about the methods that will be implemented is not given in the design document availability of such info would have been helpful
noproblem though i couldn t follow everything overall the design seems to do the right thing
noproblem as stated above all the references needs to be checked as signup sheet controller is populating the database and every field should be available to maintain consistency
noproblem there is nothing wrong in current design looks good suggestion however since i have already worked on a similar assignment so i know that similar issue has already been resolved for drop topic deadline you can reuse the entire code and just change deadline type have a look at oss project topic 1843    check with the professor once
noproblem all proposed changes seem to be in line with good coding practices and the expertiza system guidelines
noproblem their solution sounds good
noproblem the design they have right now looks good to me it does not have any issue
noproblem not show which method
noproblem the use of flowcharts   describe the functioning of the project exceptionally suggestion including screen mockups to your doc will add more weight to it
noproblem clearly defined uml 1
noproblem uml diagrams mentioned are excellent and to the mark
noproblem diagrams are very clear and well explained
noproblem no diagrams shown
noproblem one of the best wikis i have reviewed with good diagrams and explanations the flow diagrams are really good kudos
noproblem the flowcharts used are very good and do a great job of conveying the intended purpose of each solution presented
noproblem they have used uml diagram and flowcharts which aided in understanding their approach and the logic
noproblem their visual aid is well designed and high quality it helps the reader understand their total design very well
noproblem uml diagrams are well formed flow charts are easy to understand looks like the team has thoroughly understood the problem statement
noproblem no such things like uml
noproblem the design document looks really good all sections are properly described screenshots included a possible uml or workflow diagram would have been appreciated
noproblem all the features are mentioned in the design document it explains the background and the approach that they are going to take to create the view aggregating all the information
noproblem very well maintained and explained
noproblem the document is complete and well structured they have also incorporated the prototype comments and mentor s feedback
noproblem this documentation is the first one to clearly give a background for the project out of all the documentations that i have reviewed until now kudos to the team for taking that extra mile they have clarified the purpose of this project under the task heading as to provide a holistic insight into the performance of each student in a class as an objective the project design includes the view and controller section that projects the requirements of the project i like how the team has listed all the information to be presented in the grade summary the documentation finally contains the test plan where they propose to do controller tests to check if the correct model method is called and if the objects of appropriate datatype are returned and also if the correct view is rendered they have also listed 2 feature tests to see if the correct information is being rendered on the view the team could have added more such tests like to test if the sorting functionality works fine
noproblem the document is well made with necessary snapshots
noproblem the design doc submitted is pretty neat and contains all the necessary information   to understand the requirements of the project
noproblem the design doc is clear and well written the authors have done a great job explaining the project s purpose and their design plan with the use of lofi sketch and prototype for the required view i would suggest the team to include files that are involved for this project overall good work
noproblem the design doc is complete and clearly includes all details about the project
noproblem complete and well explained impressed by background paragraph also the screenshot of problem statement and solution is thorough
noproblem this design documentation is very crisp and clear explained in detail and well organized
noproblem yes the design document does incorporate all the functionality there are proposed test plans so expecting more screenshots with test cases in it
noproblem yes it includes all the functionality
noproblem yes it incorporates   with the functionality
noproblem yes
noproblem the design does incorporate all of the functionalities one suggestion that i can give in the context of the design is that the documentation could have covered the list of files that they plan to work on and the current version of that code they could have shown a uml diagram of the flow of activities for a lucid understandability
noproblem yes according to the given link the design has incorporated all the requirements and mentioned their test plan as well
noproblem the design incorporates all the primary functionality however adding a uml diagram would make it much better
noproblem yes i do not find any information missing
noproblem the authors have incorporated all the functionalities required
noproblem the proposed changes look good explanations are clear also mentioned the continuous talk with mentor to come up with a prototype suggest you to include screenshots of some positive and negative tests in the future submissions
noproblem adequate explanation is provided they also mention what tests are feasible to be performed
noproblem yes all of them are implemented with good quality of explanation
noproblem explanations are very clear and simple to understand
noproblem the proposed implementation design is elaborate and clearly defines what the team plans on doing
noproblem the explanation   is good and more information on which files would be changed would be more helpful
noproblem very well explained solution with lofi sketch
noproblem the explanation is very detailed and easy to understand
noproblem design appears to be good
noproblem well designed
noproblem proper design as well as test features are mentioned
noproblem according to me the given design incorporates all the expected outcomes without disturbing the current functionality
noproblem looks like a lot of effort will go into the view
noproblem the document explains where the changes will be made and also gives screenshots of the appropriate views
noproblem screenshots are helpful to understand the flow
noproblem screenshots and visual ques are provided to the user
noproblem the screenshots posted on the wiki page provide a clear picture of what the team seeks to achieve
noproblem very well explained with sketches and uml diagrams the diagrams are detailed and easy to understand
noproblem even thought there aren t any uml diagrams the team has added a wire frame design of the proposed page and it has helped in visualizing the solution
noproblem yes
noproblem the project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application
noproblem no everything is properly described
noproblem the doc is very succinct and well written
noproblem the team has included all the topics required for the documentation
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem the explanation is descriptive and explains the logic behind the solution which is think should work however i believe that team should can add the explanation about the files and classes they tend to make changes in the team can now focus on implementation of the code
noproblem yes it incorporates all the required functionalities along with the test cases
noproblem yes the required functionality is covered with details in the document
noproblem yes i believe they have included all of the required functionality
noproblem yes their sections method to calculate composite score and application flow sections have a flow chart as well as at least a targeted section of the code which they have planned to work upon
noproblem no not all but major of all functionalities
noproblem the design incorporates all of the functionality required
noproblem the team has suggested reasonable changes to address the problem statement and has given explanation for each solution they have proposed for the implementation
noproblem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
noproblem the project purpose is well defined and clearly explains what this project aims to do the team also identifies the strategies they wish to adopt to fix the issue this explanation is clear and concise however i would also suggest the team to add a basic test plan on how they would test the functionality they add also i suggest them to list down the list of files they would be changing
noproblem the authors propose changes in an extremely concise manner the idea that the team proposes to follow seems logical but i would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well such as this 1 review x is submitted 2 loop through review 1 n if abs review n score review x score some value store review n url in list
noproblem the authors propose a sound logic to improve the functionality required however i would suggest the team to think about looping over each and every review this may increase the response time of the system perhaps more interaction with the instructors could help the team come up with a less complex solution
noproblem the changes are much that is required just some calculated approach of the score which the author has mentioned and seems will be working
noproblem the document seems complete
noproblem could be more specific especially with test plan
noproblem just overview is presented which is explained properly the technical design is not explained in depth
noproblem the design is rather straightforward incorporates all the functionality required
noproblem changes are suggested in a well manner but could have been explained in more details
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the changes are clearly stated and represented
noproblem yes they include project purpose project design and testing plan it s a little short it s suggested that add more details
noproblem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
noproblem the design appears to be complete
noproblem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
noproblem the design appears to be perfect for now   except for the flow diagram
noproblem this design is good there are no visual aids maybe they can consider use it to make it more detailed
noproblem the design gives a proper explanation of the behavior of the system functionality
noproblem the design covers the functionalities but there seem to be no concrete solutions for the same some more explanations is expected
noproblem although it looks like a good start the team can still improve on the design by adding a uml diagram and a test plan there is a need for a low level design explanation   so that others can understand the technical details of the implementation
noproblem have explained the project as according to the given description
noproblem no uml diagram is provided so cant comment
noproblem yes the designs appears to be good to me i believe the diagram shown in wiki helped me to understand their understanding
noproblem the design looks reasonable for me
noproblem the application plan diagram has been shown it distinguishes between instructor and student
noproblem i really like the flow graphs the helped me understand what you are aiming to do
noproblem the flow diagrams are well written and it is easy to understand just looking at them
noproblem the document seems complete
noproblem not explained properly
noproblem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
noproblem the design is rather straightforward incorporates all the functionality required
noproblem have explained the project as according to the given description
noproblem no changes
noproblem not much described to rate over
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem it looks to me from the document that the authors are clear about their implementation suggestion they can elaborate more by specifying how do they intend to store the urls to the reviews how are they identifying the two distinctly different reviews they can also add a basic flow of their proposed solution this will enhance the explanation
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the design appears to be complete
noproblem the explanation is descriptive and explains the logic behind the solution which is think should work however i believe that team should can add the explanation about the files and classes they tend to make changes in the team can now focus on implementation of the code
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem    this wiki is dope they analyze the requirements for the github metrics they would need and walked the reader through their design considerations it seems like they have a thorough understanding about how to do this project
noproblem well done on adding almost everything
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job
noproblem all the required part is in the document
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem get the github pull metrics and show em to a person that person being an instructor
noproblem yes
noproblem includes all the functionality
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc
noproblem    the design contains   all of the functionality required
noproblem the explanation was perfectly organized and flowing    could not have been any better a sample request response of github metric api would ve made it more amazing
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem very good explanation and good work on giving alternatives it would have been great if the team had added db design as well but the work done is sufficient
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem the explanation given by the authors was pretty straightforward looking at the explanations it looks like the authors have thought about different aspects of the problem statement and also of different ways to implement the github metrics integration feature along with the side effects of implementing it in a particular way e g one would think that adding the metrics to the database would be a sound solution but given the nature of an open source project and the fact that students would commit beyond the deadline the authors have thought not to add the metrics to the database which is sound and reasonable
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem proper use case diagram have been added for next submission team can add uml diagrams
noproblem uses uml diagrams and images to explain where the changes will be made
noproblem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem well done on adding almost everything
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job
noproblem all the required part is in the document
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem yes
noproblem includes all the functionality
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem    the design contains   all of the functionality required
noproblem the explanation was perfectly organized and flowing    could not have been any better a sample request response of github metric api would ve made it more amazing
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem very good explanation and good work on giving alternatives it would have been great if the team had added db design as well but the work done is sufficient
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach
noproblem the design doc contains project purpose project design and testing plan in the wiki the wiki contains mock visualizations which make it easy to understand the project proposal and how are they planning to do the design flow as a flow chart adds to the ease of understanding the test plan explains about the technologies that they are planning to use for testing suggestion    the test plan could say what should be done in testing than just the technologies to be used for a particular part of code for ed we plan to have a dummy small data and see if the graphs output the visualizations correctly if the sum id being counted to 100 of the class participation etc the stacked version could also have been represented for better understanding
noproblem the document shows the flow of work really well however i would like to suggest to put more of test planning and the tools and technologies that will be used this will enhance the quality of the document to a great extent
noproblem the design doc is good and provides a clear picture about the objective of the project however it would also be nice to know what features would be tested in the test plan
noproblem all necessary sections are present
noproblem yes the design incorporates all of the functionalities
noproblem incorporates intended functionality
noproblem yes their design has all of the functionality that are required
noproblem the design document has included all the functionality that is required by the project description
noproblem yes
noproblem the design has a good design flow diagram which is clear and concise
noproblem the design follows the basic functionality expected by proposing a bar graph solution for the select criteria it could incorporate the rubrics that the team are planning to target the flow in general does help to understand the project
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions
noproblem yes
noproblem changes suggested look good
noproblem the team has mentioned all the files that will be changed and have also written a paragraph stating what are the proposed changes the team could also document the changes that are being made to individual code files stating the changes done using code snippets and the reason why the changes are being made also they can talk about what design patterns principle are being used to incorporate the functionality that is being proposed the team could also use crc cards to depict the proposed code changes this will not only help readers understand the report better but also help the team in dividing work between the team members and fast tracking the completion of project
noproblem the changes proposed for the class performance is adequate and explains the files to be changed what changes from the controller perspective and views perspective no particular suggestions proposed
noproblem the team proposed to add a bar graph to give a pictorial view of the scores and indicate the performance of students
noproblem more explanation around only those two graphs are being considered is needed while its early in the project at least what changes will be made to a file could have been mentioned
noproblem proposed changes needs more explanation at the files and system specifically what files needs to be changed and how
noproblem the changes proposed by the team include implementing a bar chart stacked or single based upon the project description it is advised that the team look for other alternatives like pie chart that would help to span the   results   with a minimal look
noproblem a simple enough explanation has been provided for the functionality    no suggestions
noproblem for now the design proposed looks perfect
noproblem design flow looks good
noproblem the authors seem to have studied the code well and have thought of a good plan to implement the project they also seem to follow dry principles while adding and changing code also the new design flow is quite simple and easy to understand which can be implemented without any high degree of convoluted code
noproblem the design changes as described are sound they are mostly on javascript for the visualization and dont potentially make the code smelly
noproblem the design looks good enough it mostly deals with html erb files to accommodate the graph and some database filtering in the controllers i do not think that the design will increase the responses time of the system suggestion if the details regarding how the graph will be implemented or any gem will be used should have been given i did not find any details regarding about any methods that will be used to implement the functionality that too would have been useful
noproblem the uml diagram included here is a flow chart diagram which explains the process of how the instructor will be able to see the visualization and is easy to understand the flow
noproblem the uml diagrams is great which is clear and easy to understand
noproblem the design diagram is good and it would also be helpful to have a few screenshots of the current expertiza   view
noproblem the team has provided a flow diagram that helps to infer the structural outline of the project the scope of the project can be perceived from the diagram
noproblem a flowchart and graph has been shown in the documentation    suggestions i feel that there should have been mockups of the screens where the functionality will actually appear team should have shown how the solution would look like on the expertiza page there could have been use case diagrams too
noproblem two graphs provided provide a good understanding of the   process and what expected visualization should be more diagrams would have been helpful
noproblem the design document gives a clear picture of the intended functionality of the project but it should have included test cases or what would be tested
noproblem yes everything is incorporated
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem the quality of explanation is good and adequate
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem overall    the design   proposed seems good
noproblem the authors do not talk much about the technical aspects of how they are going to implement their work the new design they proposed however seem to go on the right track however not much research is done till now
noproblem just one er diagram add use case and activity flow diagrams
noproblem there is an er diagram helps the reviewer understand the relationship between different sets maybe more screenshot can be provided to show where is the search bar etc
noproblem the entire project flow is well documented along with the basic structural requirements the document aligns with the plan of action and showcases the exact purpose of the project
noproblem the project design doc is complete and specifies both issues and prospective solutions
noproblem the doc mentions the changes to be made in a detailed way along with a proper stepwise explanation of the solution or the approach to be taken plus the screenshots which help in better understanding
noproblem good work good documentation
noproblem the document seems complete
noproblem yes they include project purpose project design and testing plan it s a little short it s suggested that add more details
noproblem could have been explained more
noproblem the team has included all the topics required for the documentation
noproblem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
noproblem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
noproblem the design is rather straightforward incorporates all the functionality required
noproblem have explained the project as according to the given description
noproblem the authors propose changes in an extremely concise manner the idea that the team proposes to follow seems logical but i would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well such as this 1 review x is submitted 2 loop through review 1 n if abs review n score review x score some value store review n url in list
noproblem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
noproblem not much described to rate over
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem it looks to me from the document that the authors are clear about their implementation suggestion they can elaborate more by specifying how do they intend to store the urls to the reviews how are they identifying the two distinctly different reviews they can also add a basic flow of their proposed solution this will enhance the explanation
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the authors propose a sound logic to improve the functionality required however i would suggest the team to think about looping over each and every review this may increase the response time of the system perhaps more interaction with the instructors could help the team come up with a less complex solution
noproblem the design appears to be complete
noproblem needs to work a bit on the plan
noproblem the explanation is descriptive and explains the logic behind the solution which is think should work however i believe that team should can add the explanation about the files and classes they tend to make changes in the team can now focus on implementation of the code
noproblem some screenshots of actual emails sent and proposed format of the new email would be helpful
noproblem the design data includes most of the important information required to understand the teams plan
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a uml diagram may prove to be useful
noproblem good job on ui and test cases kindly add uml diagram
noproblem the project documentation looks complete with clear details about the purpose to enable the students to better analyze their review based on the suggestion metrics like   volume sentiment suggestion praise and criticism metrics they have delineated the design that includes the files that the team proposes to change the view    app views response response html erb and the partial app views submitted_content _self_review html erb the screenshot of the existing ui of the review section and how the ui would look after the project with the inclusion of a button to analyze and they have specified that a popup displaying the suggestion metrics will emerge when the button is clicked    i specifically like how the test plan includes their feature in the connextra format they have mentioned 2 scenarios one where the student clicks the button without entering text in which case the popup alerts the reviewer saying no text for analysis and the regular scenario when the user clicks the analyze button after entering text in which case the popup displays the suggestion metrics i wish to suggest an additional scenario where the user can intuitively test the quality of the suggestion metrics based on the review input like for example there can be test cases which show that the suggestion algorithm detects generic reviews that might be seemingly relevant to the topic but add no customization to the project being reviewed like how some reviewers menially copy paste the same format of the review to all projects with just minor changes overall the team has done a great job with the documentation and i look forward to see the implementation of this project in the upcoming review
noproblem looks great test plan screenshots are all given uml is missing but i don t think its required as the changes are in html
noproblem the design doc is complete and clearly indicates the project objectives the test plan indicates what aspects are to be tested and screenshots of the proposed analyze button are also posted
noproblem the document is complete and very clear
noproblem the design document gives details about the problem statement and gives an idea about what is to be done in the project it specifies what files will be modified and the test plan also contains 2 scenarios mentioned no suggestions
noproblem yes i think the document includes everything as expected
noproblem    yes the wiki appears to incorporate all of the required functionality we want students to know if they re giving helpful feedback and we want the nlp algorithm to be local to the expertiza project to decrease its reaction time they have at least shown that they are going to add buttons
noproblem i could not spot the problem statement of the proposed project in the google doc containing the list of problem statements but on reading the team s design documentation on the wiki page i m quite satisfied with the functionality that they plan to include in addition to elucidating the main functional requirement of the project namely the implementation of the suggestion algorithm the team has also proposed a non functional requirement of improving the performance and response time of the time it takes to generate the suggestion through the web service
noproblem yes the design document incorporates the   plan to implement the functionalities as stated in the problem statement
noproblem yes all changes are incorporated and explained well
noproblem the design incorporates most of the functionality required it would be nice to have a design diagram
noproblem yes they have discussed about all the functionality
noproblem yes
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions
noproblem i am able to understand the purpose of the project
noproblem    add a button to these questions to analyze them for their helpfulness seems clear to me
noproblem please add more information on the nlp algorithm team is trying to use
noproblem the explanation   is pretty good i particularly found the images explaining what all they are going to add pretty intuitive
noproblem changes are explained well suggestion detection algorithm an be explained a bit more or how exactly you will be using it probably some code snippets would help explaining that
noproblem the authors have mentioned including analyze buttons for sentiment analysis of different parts of the comments i think the rationale for this is very good because if they were to send all of the comments at once as input to the api the results would be a mix of the sentiments of all the different comments and would therefore not be accurate also this way i think that the response time of the system would not be affected by a whole lot
noproblem the explanation   is good and clearly indicates the project objectives
noproblem the authors have not specified any code changes as of now so i can t comment on it suggestion you might want to add any api adapter class you plan to implement to generalize the solution for any future api implementations
noproblem the explanations are lucid
noproblem the design is likely to increase the response time since api requests take time it is essential to implement a system that keeps track of these api responses and disables this functionality when the api is unresponsive beyond and unreasonable time
noproblem the design seems to be following dry principle
noproblem the design appears to be sound and wouldn t conflict with the existing classes or methods
noproblem 2 html files require change i don t think it will affect anything
noproblem no design has been yet proposed by the author however i feel the author is on track to make the right changes by looking at the files intended to be modified
noproblem not much has been talked about the methods to be added but the files specified seems right
noproblem i do not think that the design will increase the response time of the system suggestion i did not find any details regarding about any methods that will be used to implement the functionality that would have been useful the test plan does mention      viewsuggestionmetricsforreviewsegment though if this is the method name then it does not follow snake casing
noproblem the authors have provided a mock up of their final design which seems pretty good however what s missing is uml diagrams something that would help understand the flow of functionality would be useful
noproblem the screenshots posted give a clear picture of the intended output it would be nice to have a design diagram
noproblem it would be better to add more diagrams
noproblem adequate diagrams are given explanation of problem statement done well
noproblem the design has pretty much covered all the functionalities in the doc
noproblem hard to tell as very little explanation given
noproblem yes    design incorporates almost all the functionalities that should be tackled as per problem statement
noproblem yes they are trying to incorporate all the requirements
noproblem yes it   incorporates all of the functionality required
noproblem yes
noproblem no design provided use case diagrams have the functionality explained
noproblem the team did a great work in understanding the requirements and have included the design for all the requirement mentioned in the requirement document
noproblem the design has pretty much covered all the requested functionality
noproblem the chart is very clear
noproblem the team has explained the implementation design strategy in detail the design was explained with all the required details and was very easy to understand
noproblem the project design has not really been expanded upon so not able to tell
noproblem the reuse of the questionaire class is smart to reduce duplication otherwise the minimal explanations make it hard to judge
noproblem 1 team technically understand the change and proposed solution does not lead to adding methods in wrong classes 2 new design should not make the code smelly 3 changes are logical and proposed solution is reasonable enough no gem required 4 it should not increase response time 5 no the plan is nice and should be taken forward
noproblem try to give a class diagram inorder to explain   your implementation
noproblem no problem   found
noproblem yes the uml diagram have been correctly implemented and help in understanding their approach
noproblem yes gives clear understanding   using the use case diagram
noproblem uml diagrams are drawn well to explain the flow so the diagrams help in explaining the project flow
noproblem visual aids   are great
noproblem the team did a great work in explaining the requirement with the help of flow chart which helped in better understanding of the requirements and proposed design
noproblem the diagrams are clear enough to help me understand the flow of the project
noproblem everything has been described well and in details
noproblem at current state the design doc has project problem project solution and design diagram and each section has detailed description of the project
noproblem the document is well structured and provides all required information
noproblem the document explains what was asked for
noproblem yes everything is incorporated
noproblem all functions required are stated in the design document which include search for user assignment questionnaire and reviews
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem yes it does they have explained the propose solution as well for each issue
noproblem the design incorporates all the basic functionality
noproblem yes almost all types of search functionalities are covered
noproblem the design implements all the defined functionality elaborately
noproblem yes the design incorporates all of the functionality required and also gives the possible solutions
noproblem the quality of explanation is good and adequate
noproblem the proposed search features are good if all of them are implemented it should more than suffice
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem good explanations easy to follow
noproblem overall    the design   proposed seems good
noproblem yes the changes are completely feasible
noproblem yes they have provided an uml diagram which follows convention and explains their approach
noproblem the team has added sufficient diagrams for the reader
noproblem the diagrams are succinct and well understood
noproblem the er diagram is very well done it encompasses all the classes and their attributes also the use of different shapes like diamond square etc is great
noproblem the e r diagram seems to deliver the task
noproblem not required for this project
noproblem there is an er diagram which defines the relationships in the system
noproblem no everything is properly described
noproblem the doc is very succinct and well written
noproblem the project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application
noproblem the design incorporates all of the functionality required
noproblem yes their sections method to calculate composite score and application flow sections have a flow chart as well as at least a targeted section of the code which they have planned to work upon
noproblem yes it incorporates all the required functionalities along with the test cases
noproblem yes the required functionality is covered with details in the document
noproblem yes i believe they have included all of the required functionality
noproblem the changes are clearly stated and represented
noproblem the team has suggested reasonable changes to address the problem statement and has given explanation for each solution they have proposed for the implementation
noproblem the author has given a proper explanation of how the things will be implemented by specifying the files that needs to be modified along with how they are going to merge the grades
noproblem the design document states all the required things right from project design to test plan files that will be changed along with how functionality will work flow are included in the doc clearly    suggestion great work no suggestions required
noproblem the design doc is complete all the relevant sections have been added
noproblem document looks complete
noproblem the wiki explains the problem statement very well along with the proposed solution which seems reasonable but the wiki does not include any test plans as of now there are a few test cases which can be used to write the test plan for eg not adding drop deadline for the assignment itself and assigning each topic a drop deadline and check the behaviour of the system
noproblem the design doc clearly explains the project purpose project design and the test plan
noproblem the document is quite comprehensive in its descriptions of the design proposal
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach
noproblem the design documents contain all required part
noproblem yes the document incorporates all the functionality ensuring nothing is missed
noproblem the design incorporates all the required functionality to a good extent
noproblem yes it does
noproblem yes the design incorporates all the functionality required all the issues are explained clearly and their required solutions are also given
noproblem yes all the issues mentioned in the project description are covered along with their proposed solution good job
noproblem design document   has outlined the project requirement and issues they have proposed a solution to each problem they have even figured the files and methods to be modified overall it looks good
noproblem the design contains all of the functionality that required
noproblem yes it is complete
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely no suggestions
noproblem very clear very well organized
noproblem the flowchart makes it very clear
noproblem everything is explained well and easy to understand
noproblem the team has explained the solution with flow charts and code snippets they have even considered the feasibility of their solution which is a good thing as this is a big project so feasibility is a big factor
noproblem they explained   their plan very well both the visual aid and the word they use are very clear
noproblem adequate information given on implementing the solution flow charts are impressive
noproblem though i couldn t follow everything overall the design seems to do the right thing
noproblem all proposed changes seem to be in line with good coding practices and the expertiza system guidelines
noproblem their solution sounds good
noproblem the design they have right now looks good to me it does not have any issue
noproblem not show which method
noproblem clearly defined uml 1
noproblem uml diagrams mentioned are excellent and to the mark
noproblem diagrams are very clear and well explained
noproblem one of the best wikis i have reviewed with good diagrams and explanations the flow diagrams are really good kudos
noproblem the flowcharts used are very good and do a great job of conveying the intended purpose of each solution presented
noproblem they have used uml diagram and flowcharts which aided in understanding their approach and the logic
noproblem their visual aid is well designed and high quality it helps the reader understand their total design very well
noproblem uml diagrams are well formed flow charts are easy to understand looks like the team has thoroughly understood the problem statement
noproblem yes i believe they have included all of the required functionality
noproblem the design   encompasses all the features in the specification it only indicates supporting one more language though whereas the design document specifies any language it seems out of the scope of the project but what if you used the   google s cloud translation api to translate the static strings   at run time then you could support almost any language there might be licensing issues though
noproblem yes the design document contains all parts of the functionality ensuring that nothing is missed out
noproblem yes it covers all the functionalities
noproblem implementation looks just like what the requirement asked for no   removing of english code
noproblem implemented major of them
noproblem the entire project flow is well documented along with the basic structural requirements the document aligns with the plan of action and showcases the exact purpose of the project
noproblem the project design doc is complete and specifies both issues and prospective solutions
noproblem yes the required functionality is adequately explained good work in that
noproblem the design incorporates everything that the project document has specified about the project    no suggestions
noproblem the doc mentions the changes to be made in a detailed way along with a proper stepwise explanation of the solution or the approach to be taken plus the screenshots which help in better understanding
noproblem the team have suggested reasonable changes to address the problem   statement but have not given explanation for each solution they have proposed for the implementation
noproblem good work good documentation
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely
noproblem the changes are apt and easy to follow it makes sense
noproblem good explanations for all solutions
noproblem the explanations given are succinct and clear the flow of implementation seems very clear however as mentioned before i would like more details on the api
noproblem the design seemed good
noproblem yes i believe they have included all of the required functionality
noproblem looking at the doc it seems like the design is precise the description of the changes are provided in details ensuring the satisfaction of the reader
noproblem the design proposed is the natural way anyone would go around solving those issues for example creating separate yaml files for different languages and then picking up the strings from there
noproblem yes the design document contains all parts of the functionality ensuring that nothing is missed out
noproblem yes it covers all the functionalities
noproblem looks good only view files are involving the changes
noproblem well designed
noproblem the functionality scope is restricted because of the topic but the design doc covers everything what all is required to be done in the project
noproblem implementation looks just like what the requirement asked for no   removing of english code
noproblem implemented major of them
noproblem the design does incorporate all of the necessary functionality
noproblem yes the required functionality is adequately explained good work in that
noproblem the team have showed what they plan to do in the diagrams
noproblem the design incorporates everything that the project document has specified about the project    no suggestions
noproblem the diagrams describe the functioning of the project exceptionally
noproblem screenshots are helpful to understand the flow and their work
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely
noproblem the changes are apt and easy to follow it makes sense
noproblem screen mock up s are good
noproblem good explanations for all solutions
noproblem the wireframes themselves make the project self explanatory that being said enough explanation about how the team will tackle the problem statement has been given things like what api will be used to achieve the objective has been mentioned no suggestions
noproblem the design seemed good
noproblem looking at the doc it seems like the design is precise the description of the changes are provided in details ensuring the satisfaction of the reader
noproblem the design proposed is the natural way anyone would go around solving those issues for example creating separate yaml files for different languages and then picking up the strings from there
noproblem looks good only view files are involving the changes
noproblem well designed
noproblem the team have showed what they plan to do in the diagrams
noproblem the diagrams describe the functioning of the project exceptionally
noproblem screenshots are helpful to understand the flow and their work
noproblem screen mock up s are good
noproblem no clarification
noproblem the changes are much that is required just some calculated approach of the score which the author has mentioned and seems will be working
noproblem changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement it yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution
noproblem the design gives a proper explanation of the behavior of the system functionality
noproblem the design looks reasonable for me
noproblem yes the designs appears to be good to me i believe the diagram shown in wiki helped me to understand their understanding
noproblem i really like the flow graphs the helped me understand what you are aiming to do
noproblem the flow diagrams are well written and it is easy to understand just looking at them
noproblem diagrams are explanatory but few but i think they are sufficient
noproblem the application plan diagram has been shown it distinguishes between instructor and student
noproblem the team has included all the topics required for the documentation
noproblem no uml diagram is provided so cant comment
noproblem it includes all the sections
noproblem no implementation details given so cannot say how they
noproblem no their sections solution design is blank saying everything of importance will be be provided in the final design doc only good thing is that they have at least a targeted section of the code which they have planned to work upon
noproblem no changes proposed
noproblem yes the functionality required is stated but the idea about how to code for that functionality is yet to be thought of
noproblem i don t think they need any visual aids
noproblem not explained properly
noproblem no many functionality are missing in their design
noproblem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
noproblem not descriptive
noproblem the authors have provided a brief design approach of storing the url and looping it into an email notification so that instructor would be able to identify which review has been mapped to it improvisation you can try adding information about new functions you wish to add and if yes which of the files identified by the mentor do you want to add the function to this will increase the depth of your design document
noproblem the design is rather straightforward incorporates all the functionality required
noproblem have explained the project as according to the given description
noproblem just few   high level details very generic are provided which makes it hard to visualize a solution
noproblem no changes
noproblem the authors propose changes in an extremely concise manner the idea that the team proposes to follow seems logical but i would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well such as this 1 review x is submitted 2 loop through review 1 n if abs review n score review x score some value store review n url in list
noproblem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
noproblem not much described to rate over
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem it looks to me from the document that the authors are clear about their implementation suggestion they can elaborate more by specifying how do they intend to store the urls to the reviews how are they identifying the two distinctly different reviews they can also add a basic flow of their proposed solution this will enhance the explanation
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the design appears to be complete
noproblem the new design does not talk about any methods or class definitions thus i cannot comment on this suggestion you can add more information on methods or any usage of design patterns in order to make the review effective and useful
noproblem the new design loops through all existing reviews to compare new review scores with the original ones and stores the url of a specific iteration if its limit is exceeded by waiting for all reviews to be looped in before sending email it may increase the response time of the system
noproblem design document explains the entire project flow very well the   objectives goals are clearly stated in the doc along with the approach which team will be following in future the   flowchart explains the functionality very well overall the doc is easy to understand    suggestion team should include test plan in the doc
noproblem the design document is well planned and does not miss any of the significant details
noproblem the document seems to be generally well designed however i believe that they have glossed over how a link is said to be closed    they properly described the additional functionality   and the challenges they will likely face
noproblem all basic elements are included
noproblem the design document seems to be well written and detailed with respect to the objectives that need to be achieved the team explains well the purpose and project design they have included the database tables which will be modified the team could add a testing plan to make the design document look complete
noproblem the design doc is well written and the points to be completed are clearly expressed
noproblem the design document is very thorough indicating what s the problem how system works and proposed soluion
noproblem yes they ve decided to   do all there is in the scope of the project
noproblem yes the design tries to cover all the requested features
noproblem yes the functionality is explained
noproblem enough explanation about how the team will tackle the problem statement has been given overall explanation is good
noproblem the explanations provided are granular and do not leave any lingering questions in the readers mind
noproblem the explanation given is quite easy to understand and explains the solution to the point
noproblem the design   seems to be precise the description of the changes are provided in detail the team also has mentioned about the api that they will use    they have clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it
noproblem the design appears to be sound considering the expected outcomes of the project and it doesn t seem that it will create any dependency mismatch as well
noproblem the design document is well planned and does not miss any of the significant details
noproblem all basic elements are included
noproblem the design doc is well written and the points to be completed are clearly expressed
noproblem no testing plan or tests are specified
noproblem the design document is very thorough indicating what s the problem how system works and proposed soluion
noproblem yes the design incorporates all the functionalities that are required
noproblem the document incorporates all the functionality required and explains the   same with an ever so accurate reasoning
noproblem yes the design is having also the functionalities that is been required it mentions also mentions a proper proposed solution for all the required tasks
noproblem yes i believe so they discuss what they need to track during a review and what they need display after a review is complete
noproblem yes the design tries to cover all the requested features
noproblem yes the functionality is explained
noproblem yes
noproblem enough explanation about how the team will tackle the problem statement has been given overall explanation is good
noproblem the explanations provided are granular and do not leave any lingering questions in the readers mind
noproblem the explanation given is quite easy to understand and explains the solution to the point
noproblem the expected outcomes of the project have been clearly explained and requirements well understood
noproblem the given flow chart describes the flow of the project and how the implemented system will work
noproblem authors have proposed solutions in detail and is understandable
noproblem the design   seems to be precise the description of the changes are provided in detail the team also has mentioned about the api that they will use    they have clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it
noproblem the design is accurate the changes suggested are minimal and ensure that dry is followed
noproblem i think the writing could be done better with more explanation on why the solutions mentioned in the last paragraph are taken and what other approaches were considered or an explanation of why no alternative exists with regard to design explained in detail in a previous comment
noproblem the design is properly designed
noproblem the flow diagram is good makes understanding easier
noproblem uml looks good follows the convention
noproblem enough visual aids used to make understanding   the project easier
noproblem the design appears to be sound considering the expected outcomes of the project and it doesn t seem that it will create any dependency mismatch as well
noproblem they have specified the files they ll be making the changes to and it looks good
noproblem the changes provided appear to be sound
noproblem the provided flow diagram and db table are enough the explain the functionality of the project
noproblem the visual aids used are precise and explain the in depth functionality of the project the diagrams and flowcharts ensure there is no ambiguity in the functioning of the project
noproblem the uml diagram mentioned her is a flow chart representing the flow of the functionality it is designed in details   which explains the flow of the functionality quite well
noproblem visual aids are very nice especially for the flow diagram
noproblem good use of both diagrams and tables
noproblem the given flow chart describes the flow of the project and how the implemented system will work
noproblem the flow diagram is good makes understanding easier
noproblem enough visual aids used to make understanding   the project easier
noproblem only the issues problem statement is included in the documentation as of now the tea did mention that they will be adding the detailed design in the upcoming submissions
noproblem the doc clearly explains the agenda of the whole project seems like the team still needs time to understand and devise a plan to tackle the issues identified
noproblem team have decided to give all details after final submission a design doc should be available before starting the project i would recommend to provide few details on project design classes involved in the project or application flow etc
noproblem it includes all the sections
noproblem all functionalities required are in the design doc but no content is provided
noproblem please add more details about the solution
noproblem no their sections solution design is blank saying everything of importance will be be provided in the final design doc only good thing is that they have at least a targeted section of the code which they have planned to work upon
noproblem yes the functionality required is stated but the idea about how to code for that functionality is yet to be thought of
noproblem team have decided to give all details after final submission a design doc should be available before starting the project i would recommend to provide few details on project design classes involved in the project or application flow etc
noproblem only the issues problem statement is included in the documentation as of now the tea did mention that they will be adding the detailed design in the upcoming submissions
noproblem have covered almost all the issues it would have been better if an implementation plan was provided
noproblem clearly defined bugs and problem statements but no implementation details given so it is hard to judge this criterion
noproblem did not find much info on the design
noproblem the team has not mentioned about how they are planning to do the changes
noproblem did not find much info on the design
noproblem no plan or uml design is given
noproblem this couldn t be reviewed as the design doc is incomplete
noproblem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
noproblem i don t think they need any visual aids
noproblem no visual aids in the design document
noproblem no uml diagram
noproblem there were no flow or uml diagrams
noproblem nothing specified
noproblem did not find much info on the design
noproblem the design document is well planned and does not miss any of the significant details
noproblem all basic elements are included
noproblem the design document seems to be well written and detailed with respect to the objectives that need to be achieved the team explains well the purpose and project design they have included the database tables which will be modified the team could add a testing plan to make the design document look complete
noproblem the design doc is well written and the points to be completed are clearly expressed
noproblem the design document is very thorough indicating what s the problem how system works and proposed soluion
noproblem yes the design incorporates all the functionalities that are required
noproblem the document incorporates all the functionality required and explains the   same with an ever so accurate reasoning
noproblem yes the design is having also the functionalities that is been required it mentions also mentions a proper proposed solution for all the required tasks
noproblem yes i believe so they discuss what they need to track during a review and what they need display after a review is complete
noproblem yes they ve decided to   do all there is in the scope of the project
noproblem yes the design tries to cover all the requested features
noproblem yes the functionality is explained
noproblem yes
noproblem enough explanation about how the team will tackle the problem statement has been given overall explanation is good
noproblem the explanations provided are granular and do not leave any lingering questions in the readers mind
noproblem the explanation given is quite easy to understand and explains the solution to the point
noproblem the authors propose two changes and have mentioned in detail about the flow in which they will make changes they could benefit from drawing simple lofi ui cards to illustrate how the new review page might look like which will benefit them in improving their ui design and proper representation of data before they actually spend the man hours in coding it overall the have explained the process in detail   and clean fashion
noproblem the expected outcomes of the project have been clearly explained and requirements well understood
noproblem explanation is good and easy to understand proposed solution looks good as well design and implement a solution that handle github hasn t been explained
noproblem authors have proposed solutions in detail and is understandable
noproblem the design   seems to be precise the description of the changes are provided in detail the team also has mentioned about the api that they will use    they have clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it
noproblem the design is accurate the changes suggested are minimal and ensure that dry is followed
noproblem i think the writing could be done better with more explanation on why the solutions mentioned in the last paragraph are taken and what other approaches were considered or an explanation of why no alternative exists with regard to design explained in detail in a previous comment
noproblem the design is properly designed
noproblem these changes seem to be appropriate   for the objectives they have only a small set of files are being changed and the functionality is isolated well my only feedback here is that there is likely a place to create helpers or utilities for time tracking
noproblem the authors seem to have understood the project and know what changes need to be made to what files the changes seem to be targeted to the correct classes and preliminary investigation reveals that it does seem to follow dry principles they might want to make their design diagram more simplified which will not only help in making it look readable and also help in implementing the code effectively this will help in reducing convoluted code
noproblem the design appears to be sound considering the expected outcomes of the project and it doesn t seem that it will create any dependency mismatch as well
noproblem they have specified the files they ll be making the changes to and it looks good
noproblem the changes provided appear to be sound
noproblem the provided flow diagram and db table are enough the explain the functionality of the project
noproblem the visual aids used are precise and explain the in depth functionality of the project the diagrams and flowcharts ensure there is no ambiguity in the functioning of the project
noproblem the uml diagram mentioned her is a flow chart representing the flow of the functionality it is designed in details   which explains the flow of the functionality quite well
noproblem good use of both diagrams and tables
noproblem visual aids are very nice especially for the flow diagram
noproblem the given flow chart describes the flow of the project and how the implemented system will work
noproblem the flow diagram is good makes understanding easier
noproblem uml looks good follows the convention
noproblem enough visual aids used to make understanding   the project easier
noproblem document is very well written and contains all the details like problem statement solution files to be modified testing plan
noproblem it says what they will do but it seems high level would appreciate some diagrams or mockups
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a use case diagram will be useful to add
noproblem the authors can add the project s purpose why this feature is important helpful the authors have mentioned the plan to use tablesorter jquery to sort the table but no design plan is included i suggest the team to remove the introduction to expertiza   since it was clearly mentioned in the requirements to not include it
noproblem design doc contains everything in clear explanation
noproblem the document mentions the tools of jquery sorting table in fact which api or any sample code that can be referenced to is expected in the document also this project seems to focus on the view part of expertiza so the test plan should be more detailed cover more edge case
noproblem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
noproblem unfortunately the team has missed out on adding any visual aids to the document i would suggest that where you list all the column names which would be sorted in each view also add a screenshot of how that view looks at the present moment and a low fi sketch of how the view would look after the changes have been implemented
noproblem the author has not used any uml diagram nor any other forms of pictorial representation
noproblem although the textual explanation is succinct and nice there s not yet diagrams or other visual aids available i think a diagram that depicts the workflow might be very helpful
noproblem 1             the team has already identified the files to be changed which is a good thing it looks like all changes will be handled in the client side so not applicable 2             i assume as it is nowhere mentioned they would be writing a custom js file the team plans to repeat some of the custom written code if same functionality is required in 2 different file which could violate dry team might need to consider such possibility 3             no the team is already optimizing by leverage some javascript libraries 4             it would as user opts to sort but here it seems to be a necessary evil 5             yes the team can elaborate more on their design approach and provide visual aids to help reader understand the sorting intended better
noproblem the authors talk about adding the tablesorter class to the html table and using javascript scripts for further action there are no apparent problems with this strategy however i would suggest for the team to elaborate and provide more details on the implementation for example it is not possible to understand what the javascript part will look like how many functions will be used or how they will interact with html
noproblem mainly needs html files to be changed and they have mentioned them which looks good
noproblem the design proposed by the authors appears to be sound since this project is only to sort the views there will be no code added to either the models or controllers i hope the team only adds one sorting function per view and allows that one function to handle sorting for different columns in that view
noproblem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly the team is using one of the existing gems in their design
noproblem the solution looks like it doesnt add any overhead and the doesnt make the code smelly
noproblem the solution seems right
noproblem i think that the authors have identified changes in the html erb files which looks right to me as it only deals with the sorted view of instructor reports the changes must go in the views part of the application    suggestion you can try to add a bit of information on whether your changes include addition of new code deletion of existing code or just slightly modifying or extending the existing code and justify it query do you plan on creating   a drop down like option to choose from which type of sorting is to be performed if yes it is an add on user friendly feature
noproblem team have shared the link for the tablesorter which explains the functionality
noproblem the explanations can be more detailed overall understandable
noproblem adequate explanation was given
noproblem it is easy to follow the changes that the authors have proposed
noproblem changes look good
noproblem the design document   lists every issue that is being addressed in the project providing comprehensive details on the functionality that is required for each one
noproblem yes as per the solution provided it does seem that the design incorporates the required functionality it considers sorting on all the specified fields suggestions since you have mentioned the use of jquery tablesorte you may also add explanation as to what is tablesorter and try explaining atleast for one field e g name as to how does it work to sort the entries
noproblem the wiki is detailed enough that it mentions all the functinoalities required in the project the team has made sure to not miss out on any functionality and they even took out time to list the column names in each report they would add the sort feature to good work guys
noproblem i think the authors have incorporated most of the functionality in the design document
noproblem design document contains all the functionality required
noproblem it incorporates all the functionalites
noproblem it includes all the sections
noproblem except for the test plan the design doc seems to have all the important details the team should add a test plan before starting in order to go for a test driven development
noproblem test   plan is to be added but the purpose and the design are coherent and easy to follow
noproblem the test plan is not yet done rest i could see that the document is very much complete
noproblem yes the design looks complete
noproblem so far the idea is clearly articulated few things which are not   defined are explicitly stated in the doc
noproblem yes it does
noproblem includes everything as far as i can tell
noproblem yes the design document incorporates all the functionalities stated in problem statement
noproblem the design has not been stated explicitly so its difficult to comment only with the flow and uml diagrams whether it is appropriate and the best way to address the issue
noproblem authors have a clear idea of what details need to be included to make the audience understand the purpose of the project the design document is sufficient to get the basic idea and implementation
noproblem the design does incorporate the functionality required of making reviews public allowing the students to toggle the visibility of review submitted it is descriptive and easy to understand
noproblem it s not a great explanation
noproblem document is explained well also the flow of document is good team can add screenshots of existing documents also some diagram to explain the solution well
noproblem the proposed flows and project tasks are sufficiently detailed that i can understand the relationship between the issue and how they re going to solve it in each step
noproblem the step by step instructions are detailed and is good
noproblem the authors have explained the workflow very well with respect to the different types of users involved in the particular feature the language is simple to follow
noproblem the proposals given by the team are reasonable and adequately cover the features to be established during the course of the project the changes suggested follow the desired requirements
noproblem the team has not addressed the project design approach and the proposed implementation details in the documentation
noproblem 1 authors solution do not seem to create methods to wrong classes 2 new design code does not make the code smelly 3 no new gem required explained solution is adequate 4 proposed design should not hamper system performance 5 well efforts expended on the design
noproblem i don t have any issues with the design looking forward to seeing some code snippets to understand it better
noproblem as mentioned in their approach section the team decided on adding some functionalities like checkboxes and views i find these changes perfect for the problem statement given
noproblem implementation details haven t been added yet but that s fine as it hasn t been started yet
noproblem the design looks fine but no explanation as to why this is done is it already existing or is this a new feature
noproblem i think the uml diagram can be improved further by adding the classes that are related to the use cases separately
noproblem the team has   done a commendable job in creating a very detailed   uml diagram and explaining the case of every user very well
noproblem no uml diagrams
noproblem only a single uml diagram is present but i d have appreciated a couple of flow charts to accompany the expected   flows
noproblem they have used a use case diagram to explain flow i found it quite understandable and all the steps are clearly drawn out in the diagram it clearly explains the steps required to approach a situation
noproblem the document contains a uml use case diagram that analyze the system s requirements and describes the actors involved and the relationship between them it helps to understand the overview of the project details however it can certainly make use of a flow diagram in the expected flow section that gives more clarity about the sequence of actions the flow diagram can follow from the use case diagram to show the tasks performed by the actors in a serial order
noproblem the authors have explained the changes to be made to the system including screenshots of the tables uml diagrams as well as all the files that will be modified suggestion although all the details are explained well in the document by writing the changes proposed to the files in bullet points or by using a diagram the document will be easier to read
noproblem they made clear explanation about their task for example their provide pictures to show what they need to do
noproblem yes the team has elaborated their design approach and changes to system in detail they have mentioned all the file changes and also provided sample code for reader understanding
noproblem the design document clearly specifies all the issues that are going to be addressed by this project ui views are provided which help the reader to better understand the scope of the requirements moreover the authors list the files that are going to be modified and the authors comprehensively describe how the jquery tablesorter 2 0 library will be used for three types of sorting one minor improvement would be to highlight the parts associated with introduced changes that link html table with the library for better readability
noproblem great improvements compared to the previous submission now its a   very well written document good job team
noproblem the team has added uml diagrams images of related web pages and provided details on jquery tablesorter that explains well the changes the team plans to make
noproblem the authors have explained enough about the changes
noproblem the wiki is detailed enough that it mentions all the functionalities required in the project the team has made sure to   explain all the changes they wish to make to the system they list all columns that need to be sorted and how they will implement the sorting
noproblem yes the authors have significantly improved the writeup and very adequately explained the changes that they ve made
noproblem the design is very efficient and follows the standardized software engineering practices
noproblem the design is sound and easy to understand the design proposed also sounds logical i e to sort team names alphabetically and grades numerically to sort by both ascending and descending order
noproblem yes the design seems to be sound
noproblem the authors have justified the use of jquery table sorter by   listing its advantages
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement
noproblem the design appears to be specific to the requirements for this they have used a uml design which basically explains the flow of the use case they have not used any principles or design patterns however there does not seem a need to use any as their changes are limited to the html view and making a call to the tablesorter using jquery as per the document the design does not make any redundant changes or unnecessary changes to the code thus they have done a good job by optimizing the changes
noproblem the authors have improved the part of the document that describes the interactions between html and javascript parts   since the 1st round while this assignment does not require an extensive   discussion about the design principles or patterns it would be better   if the document explicitly addressed this topic
noproblem yes as its sorting not much scope on design approach yet the team has documented well on their approach regarding multi level sortings that they are undertaking in few pages they have also considered cross browser compatibility of their jquery library which is a common design miss during client side changes
noproblem this project is not very difficult so they don t need to follow some principles or patterns
noproblem this their design is very simple and clear
noproblem yes the design is as simple as it can be the current scenario is explained with adequate screenshots and the changes are explained   by stating the field to be used for sorting the table a mock up screen of the expected output would have made it even better to understand however reading the material is sufficient as well the changes are not complex as they interact with a single view at a time the tablesorter function is also called for each view e g view_submissions layout
noproblem yes the design is very simple to understand and also the implementation is pretty clear and effective
noproblem yes the solution proposed is simple by using the   jquery tablesorter gem
noproblem the design is extremely simple and easy to understand good work guys
noproblem the screenshots of the expected result and the uml diagram are good but the screenshots can be smaller to make the page more user friendly the uml diagram can be better if it s designed as a design plan diagram instead of a user diagram which simply states how the reader is to approach this or it could be better if we have both
noproblem the changes are mentioned but not in a concise section which i suggest would make the documentation easier to read
noproblem the document is clear    and they added changes   that have been pointed out in the previous review good job team
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have given proper uml diagrams and then showcased in the new model new controller and new views section
noproblem the changes to be made are clearly stated and explained
noproblem the doc explains the entire project agenda very clearly
noproblem the team has included all the details required to implement the given requirement the wiki has complete details related to requirements analysis of current designs and changes required to achieve the required functionality overall great job
noproblem the design is well considered and design principles are being considered when implementing the design
noproblem the design is the strong point and it is easily understandable    new model table idea is good
noproblem the design is perfectly well depicted in the form of the diagram and   they have been thorough in pointing out the application flow in the workflow and models section so as to elucidate the problem statement
noproblem it s good
noproblem the design is sound with appropriate principles and patterns
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done
noproblem yes from a perspective of an outsider the design seems to be simple enough easy to understand and efficient to implement
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section
noproblem the team has taken enough efforts to make it as simple as possible to explain the design
noproblem the design appears to be simple and is derived from the existing modules designs the workflow is easy to understand
noproblem great visualization on existing   expertiza system i would love to see how the system is going to change after your implementation
noproblem the team has added enough diagrams to explain their design
noproblem most of the edge cases are identified
noproblem add screenshots    uml diagrams are very helpful when viewers walk through the design
noproblem yes the authors have clearly explained the changes to be made to the system document is simple succinct and easy to understand great use of flow charts uml diagrams and mockups to visually represent the information is done
noproblem    yes the author has provided a sufficient explanation of what changes needs to be done to the system by giving flow diagrams and screenshots about what changes they are going to incorporate in their system
noproblem team has added all the diagrams and screenshots the document is well explained and looks complete
noproblem yes their explanations are adequately explained the changes
noproblem 1 the authors have clearly explained the changes to be made to the system 2 they also have given the files to be modified added for each change
noproblem i think that the authors have done a really good job of explaining and covering all the changes to be made overall this is the best document i have seen so far
noproblem the authors have explained all the changes to be made very clearly and concisely each change is supplemented with sufficient diagrams and mock ups so as to make the final task of visualization easier
noproblem yes one of the best design docs of project 4
noproblem the document was very well written previously too and they have improved it with diagrams and test nice work
noproblem the authors have considerably improved on the document uml diagrams as requested have been added
noproblem the team has adequately explained all of the changes required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy in this case
noproblem yes since the previous round of reviews i can see significant and positive progress
noproblem well done adding a lot of detail since your last submission
noproblem the document explains the problem and the approach the team is planning to take clearly
noproblem the explanations are good and the project goals are easily readable
noproblem    refactor the report_formatter_helper into a reports_controller where the reports_controller implements a strategy pattern to help it figure out how it should handle a given report if that is correct then yes their explanation is great
noproblem yes the design follows appropriate principles and patterns suggestions not required
noproblem    as the project is based upon making changes to the ui of the system thus there is no such specific pattern being followed however the design that they have made available in the form of screenshots appear very much inclined with the functionalities that they need to implement
noproblem design is good
noproblem yes their design is very sound and principles and patterns are used appropriately
noproblem the project involves refactoring of the review mappings controller and the authors have proposed a clear action plan they have added a b very detailed testing plan and also a detailed uml diagram the authors have updated their uml diagram and also updated their testing plan after the first submission
noproblem 1 the design appears to be sound 2 also follows proper design principles eg for making changes to nomination and review questions inheritance is used inheriting methods from questions parent class
noproblem the authors have done a very good job at writing the design document their requirements and proposed solutions are properly aligned and their approach takes all the factors into consideration viz listing the major areas that need refactoring changing the code modifying the ui making sure that the refactoring does not affect the existing functionalities    they have explained each of these phases with ample explanation
noproblem the design seems to be appropriate and sound it follows appropriate principles
noproblem yes the design appears to be very sound and follows all the principles that i know i loved the format of the documentation as well
noproblem they have explained very well
noproblem the document enlisted the crucial aspects of the project in the first stage the team has made improvements in this stage by including a test plan section that lists the set of test cases to deal with the retrieval issue and plan on including a new controller for the next stages
noproblem the team has adequately explained all of the changes required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy in this case
noproblem yes the design follows simple rails concepts and is pretty straightforward i would like to see if the team uses existing gems available to speed up implementation and re use
noproblem yes looks clean any design patterns used
noproblem yes since the previous round of reviews i can see significant and positive progress
noproblem yes the design appears to be sound and well made
noproblem yes the plan is clear and easy to read
noproblem well done adding a lot of detail since your last submission
noproblem have updated the test plan good job
noproblem yes the design appears to be sound there could be some rearrangement in the mock up layout e g text box for email address and add button could have the same horizontal alignment for a better user interface
noproblem the document explains the problem and the approach the team is planning to take clearly
noproblem the design looks clear and complete and is using a strategy pattern for implementation
noproblem the design   seems to be very simple i think the team has avoided unnecessary complications and are doing minimal changes to existing system to solve issues given to them
noproblem the explanations are good and the project goals are easily readable
noproblem the design approach seems justified and inline with the functionalities required to be implemented they have mentioned step wise details for all the changes they are going to take done a good job no rework required
noproblem they have used the design patterns well and made a good choice in explaining the class hierarchy with the class diagram however i m not quite sure whether it s right to call the diagram as a uml diagram
noproblem design looks well thought out
noproblem    refactor the report_formatter_helper into a reports_controller where the reports_controller implements a strategy pattern to help it figure out how it should handle a given report if that is correct then yes their explanation is great
noproblem    yes the design is presented in a much simpler form which gives a very clear picture of how the changes are going to be implemented and which functionalities would be witnessing the changes also as they have provide the screenshots it enhances the understanding about the project more
noproblem good design principles are being used for this project
noproblem yes their design is simple and clear enough to read and understand
noproblem refactor functionality from a controller helper into its own controller where that controller will implement the strategy pattern it seems sounds to me
noproblem the project involves refactoring of the review mappings controller and the authors have proposed a clear action plan they have added a b very detailed testing plan and also a detailed uml diagram the authors have updated their uml diagram and also updated their testing plan after the first submission
noproblem 1 the design is simple and well modularized 2 each method is implementing only one task as it should
noproblem the design does appear to be as simple as possible the team have not unnecessarily complicated the project
noproblem yes the design is pretty simple and to the point the design proposed is very clear and talk why each change is necessary
noproblem    the design is straightforward and as simple as possible the team has thought this project out very clearly and laid the same in the form of flowcharts and mock ups this has greatly reduced the complexity of the project and helped decrease the chances of clutter and confusion
noproblem the authors have done a very good job at writing the design document their requirements and proposed solutions are properly aligned and their approach takes all the factors into consideration viz listing the major areas that need refactoring changing the code modifying the ui making sure that the refactoring does not affect the existing functionalities    they have explained each of these phases with ample explanation
noproblem the authors have understood the requirements of each report generation clearly they have converted report generation into a single step by providing a drop down menu for 8 reports for this they have used generatereport method the design uses a strategy pattern to generate a particular type of report the sub classes strategy classes use only required subset of class variables and it seems as an efficient design the strategy pattern is a good example of dry principle
noproblem yes adequate amount of details present
noproblem the design follows the apt principles and patterns in that the refactored version is planned to be implemented using the strategy pattern by working on the eight different report categories
noproblem yes the design principles incorporated is quite impressive they have thought through the best way to accommodate the changes and wrap it up as a good design
noproblem yes    the requirements are simple and the design plan clearly explains all the points
noproblem the document enlisted the crucial aspects of the project in the first stage the team has made improvements in this stage by including a test plan section that lists the set of test cases to deal with the retrieval issue and plan on including a new controller for the next stages
noproblem yes design appears to be very simple
noproblem yes have followed all se practices in design document
noproblem yes the design is quite simple
noproblem great use of uml diagrams flowcharts and mock ups by the team to clearly explain the flow of their work it is   easy to understand the flow and how the end product will look like
noproblem the design is pretty straightforward and   i am able to get a complete idea of what changes the team intend to make
noproblem yes
noproblem they team has done awesome work in representing every detail possible in the flow diagrams they have created uml diagrams which depicts the flow of the admin and students along with other actors as mentioned earlier they have also represented the admin flow diagram and instructor flow diagram through the flow chart which makes it very easy for end user to understand the workflow of the requirements in the expertiza system
noproblem    yes the visualization is pretty clear and good
noproblem using the report interface to assist with specialization was good
noproblem proper use of uml to explain the use cases and flow charts to explain the workflow has been done the plan is complete
noproblem yes their visualization is good they are clear and well described the changes
noproblem yes the plan is clear and easy to read
noproblem using a strategy pattern to solve this problem is one of the simplest approach according to me and team has selected the same thing only thing i would suggest the team is to be carefull when separating the classes as it might have some un intended side affect
noproblem have updated the test plan good job
noproblem the proposed design is simple and no extra changes are being proposed
noproblem 1 in the uml diagram the set of actions that the instructor can perform to add more than one question to nomination and textual type is not added also add the actions to modify the display sequence of existing questions 2 in the instructor flow chart the flow for review questionnaire and to modify the display sequence of existing questions is missing
noproblem    yes the design does sound like the simplest refactoring possible that can move the review mapping controller closer to a single responsibility class
noproblem the design looks clear and complete and is using a strategy pattern for implementation
noproblem the design document is extremely clear they have done a very good job in the design document
noproblem the design document includes flow charts uml diagrams and screenshots which is really impressive as it made the document easier to understand
noproblem i loved the overall use of the visualizations which aids to the understanding of the whole doc the formatting of the documentation makes it really easy to read and understand
noproblem design looks well thought out
noproblem yes the presence of use case diagrams and flow charts explaining the work flow is good it would be nice if there were more uml diagrams such as sequence so show various class interactions    presence of mockup screens is good that helps in understanding what is being implemented it would have been good if the authors put in more details about the validations that that propose in the system
noproblem the design document appears to be concise in it s representation according to the task specified and proposals described the design appears simple to be executed
noproblem good design principles are being used for this project
noproblem       yes the design is simple and straight forward in personal opinion it could not have been simpler than this great work on design
noproblem yes the   uml   diagrams sufficiently provide visualization
noproblem refactor functionality from a controller helper into its own controller where that controller will implement the strategy pattern it seems sounds to me
noproblem yes the plan seems simple and feasible
noproblem easy to comprehend
noproblem the authors have added uml diagrams as requested in the previous review and it has made a lot of difference the explanation is much clearer now
noproblem the team has done   a good   job with the uml diagram they have also added details to the class diagram as was suggested in the last review
noproblem test plan outlines the functionalities that the team will test and it seems sufficient to test the changes
noproblem the proposed refactoring changes seem to follow good ruby principles and also looks dry    they haven t mentioned any pattern as such but overall the design document looks neat and very well written
noproblem they team has done tremendous job in following the test driven approach for the project implementation they have already included the tests they are writing for the functionality implementation they have covered the exhaustive scenarios   for the project in their test their test plan is highly appreciative
noproblem excellent diagrams and ui mock ups
noproblem    the test plan is quite good as it covers all the test cases in the form of 11 test cases which test all the functionalities for the admin and the instructor role it also considers the negative test cases like throwing an exception when the pending instructor tries to add more then 10 students to his her course
noproblem the authors have understood the requirements of each report generation clearly they have converted report generation into a single step by providing a drop down menu for 8 reports for this they have used generatereport method the design uses a strategy pattern to generate a particular type of report the sub classes strategy classes use only required subset of class variables and it seems as an efficient design the strategy pattern is a good example of dry principle
noproblem yes they include the test plan
