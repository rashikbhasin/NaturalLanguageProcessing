Your team have put all "let" behind the code. However, there are, still, a lot of 'let(:response) { VmQuestionResponse.new(review_questionnaire, assignment, 1) }'. It is repetitive and unnecessary.  
Your home page is very clear as to the application purpose. Unfortunately, I am unable to sign up as a new user or login with any of the pre-configured user accounts included in the Readme. I can, however, attempt to sign up and/or login but this information is never saved to the database for future access or the appropriate transitioning is not implemented. I like that there are two options listed on the homepage to either sign up as a new user or to login in as a current user. This is convenient for navigation. Consider spacing these links for easier identification. I would also point out that the options in the drop down box included for selecting user type during sign up is a great idea. The third option, is a ambiguous as to its purpose. What does it mean to sign up as a realtor who is also shopping for a house? Perhaps you can just limit the options to Realtor or House Hunter. The functionality of searching homes should be included in the Realtor services. Keep up the work. Once the database is successfully receiving user details and/or the appropriate routes are assigned, additional functionalities should be easy to implement.
You should restrict the format of the website of company. After add a company, I can't edit and destroy my own company.
You haven't specified anything in your Readme file. Plus you have given a link to heroku app but its not working. Please make sure its working. I saw you guys had been committing code to your master branch, have you guys pushed it to heroku. That might be the reason it got broken. 
You haven't specified anything in your Readme file. Plus you have given a link to heroku app but its not working. Please make sure its working. I saw you guys had been committing code to your master branch, have you guys pushed it to heroku. That might be the reason it got broken. 
You haven't implemented testing yet. I didn't find anything in test files. Probably you'll do it in the next phase. 
You haven't completed this task.
You haven't completed this task.
You guys started pretty late seeing from your commit history.
You guys haven't implemented unit test for your project yet. 
You guys haven't implemented unit test for your project yet. 
You could have made the empty method end on one line. I think _args could be named args.
You can mention that what are you going to do, inorder to acheive your goal. Like it is mentioned that "As a part of the third project, weve already done with the implementation of OffscreenCanvas interface" So how are you going to achieve the next implementation?
You can explain more on what actually are you planning to change.
You can explain more on what actually are you planning to change.
You can add some more explaination of what exactly you'll do in issues like:  Issue #1072 - Issue related to instructor's assignment participation. I felt information is missing here.
You are not testing anywhere yet.
You are following good ruby coding practices. For some places where you are comparing for example in login_controller.rb if params[:login][:email] == 'admin@admin' && params[:login][:password] == 'admin' You can use a constant file where you can write these 'admin@admin.com' and use that constant. Its not a good practice to write it like this. Otherwise everything seems good.
You are following good coding practice. I have a suggestion that you can move realtors, admin and house hunters as childs of user. That is admin belongs to user, realtor belongs to user etc. Currently you have all the information in user model.
Yes.From the system and code, these code changes seem ready to be deployed in production after heavy integration testing as issues seem to be working, but github pull request shows more fixes to work upon.
Yes. The UI is easy to use. But the dashboard could be made better . As every task is written on the same line
Yes. The UI is easy to use. But the dashboard could be made better . As every task is written on the same line
Yes. The team kept pushing commits through out the duration of the project. The team even kept pushing commits during round 2. Though it seems like only 2 of the team members did the majority of work.
Yes. The team kept pushing commits through out the duration of the project. The team even kept pushing commits during round 2. Though it seems like only 2 of the team members did the majority of work.
Yes. The team intends to use grade_controller to show github metric which would be a good place to implement this functionality. The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
Yes. The team intends to use grade_controller to show github metric which would be a good place to implement this functionality. The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
Yes. The team intends to use grade_controller to show github metric which would be a good place to implement this functionality. The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
Yes. The team intends to use grade_controller to show github metric which would be a good place to implement this functionality. The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
Yes. Team is continuously pushing changed on the github but not distributed equally among team mates. I could see 81 commits till now.
Yes. Team is continuously pushing changed on the github but not distributed equally among team mates. I could see 81 commits till now.
Yes. I am able to login into the system via the link provided.
Yes.  I suggestion, since they deployed the code and video, it would have been good if they put a view of the UI usage similar to what they have put as screen shots in the code.   
Yes.  I suggestion, since they deployed the code and video, it would have been good if they put a view of the UI usage similar to what they have put as screen shots in the code.   
Yes, Writeup explains the approach taken by team to solve the issue, theoretically. Team could have explained the issues and resolution practically. Also no design pattern or principle were used.
Yes, Writeup explains the approach taken by team to solve the issue, theoretically. Team could have explained the issues and resolution practically. Also no design pattern or principle were used.
Yes, Writeup explains the approach taken by team to solve the issue, theoretically. Team could have explained the issues and resolution practically. Also no design pattern or principle were used.
Yes, well designed document. UI mock-ups given. It is structured. 
Yes, they surely have done a good job in mentioning the errors in the wiki doc. They have vaguely described the handling of the same, but doubts remain in the details or the changes in the code. Which means that a better job and a more technical description of how It is happening should be given so as to grasp a better understanding for the same.   
Yes, they surely have done a good job in mentioning the errors in the 1st part and the second part. But it is unclear why the 3rd fix is a problem or how they have combatted the 3rd fix in the first place. It just seems so that a screen shot has been put into place and they displayed a No Method Error popup. They have vaguely described the handling of the same, but doubts remain in the details or the changes in the code. In fact, no code screenshots have been put up for this case. 
Yes, they surely have done a good job in mentioning the errors in the 1st part and the second part. But it is unclear why the 3rd fix is a problem or how they have combatted the 3rd fix in the first place. It just seems so that a screen shot has been put into place and they displayed a No Method Error popup. They have vaguely described the handling of the same, but doubts remain in the details or the changes in the code. In fact, no code screenshots have been put up for this case. 
Yes, they surely have done a good job in mentioning the errors in the 1st part and the second part. But it is unclear why the 3rd fix is a problem or how they have combatted the 3rd fix in the first place. It just seems so that a screen shot has been put into place and they displayed a No Method Error popup. They have vaguely described the handling of the same, but doubts remain in the details or the changes in the code. In fact, no code screenshots have been put up for this case. 
Yes, they included some design principles, which is good. Maybe the authors could add some design patterns into wiki.
Yes, they included some design principles, which is good. Maybe the authors could add some design patterns into wiki.
Yes, they included some design principles, which is good. Maybe the authors could add some design patterns into wiki.
Yes, they include this part in the Proposed Solutions field. It would be better if they use visualization to let the readers better understand the flow.
Yes, they include project purpose, project design. It would be better if they include the testing plan.
Yes, they include project purpose, project design, and testing plan. It's a little short. It's suggested that add more details.  
Yes, they include all the functionality in the wiki page. They can work it better if they add more details and some visual aids.
Yes, they have tested a controller but not the model.
Yes, they have tested a controller but not the model.
Yes, they have tested a controller but not the model.
Yes, they have explained why they did that way and it was clear. They have compared and contrasted in each of their feature of "Current Implementation" and "Solution" which is a better way of showing what they implemented One more suggestion would be, it would have been good if they showed the difference in their code snippets too for the current implementation vs Solution proposed.
Yes, they have explained why they did that way and it was clear. They have compared and contrasted in each of their feature of "Current Implementation" and "Solution" which is a better way of showing what they implemented One more suggestion would be, it would have been good if they showed the difference in their code snippets too for the current implementation vs Solution proposed.
Yes, they have been thorough in their approach and this has been a project implemented to perfection. They have not only given proper UML diagrams and the like, but they are yet to implement the code and showcase in the "UML Diagram for Review" section.     
Yes, they have been thorough in their approach and this has been a project implemented to perfection. They have not only given proper UML diagrams and the like, but they are yet to implement the code and showcase in the "UML Diagram for Review" section.     
Yes, they have added a few new test cases. But all scenarios are not covered.
Yes, they had test plan, but only simple test plan, they should add some more corner cases.
Yes, they had test plan, but only simple test plan, they should add some more corner cases.
Yes, they had test plan, but only simple test plan, they should add some more corner cases.
Yes, they did include the test plan, but it's not enough, if just including files.
Yes, they did include the test plan, but it's not enough, if just including files.
Yes, they add test cases, and the coverage is the same as the first round.
Yes, there were some improvements that I noticed while testing the site features in the review duration which included modifications to view list of all houses created by company of which realtor is a part. The program has scope for minimal improvements to make it function as needed.
Yes, there is one commit during round 2, and it fixed trivial rubcop issues related to indentation.  Two suggestions of adding meaningful comments for tree_display function in tree_display.jsx and second on having a single copy of RubricArray for two functions were not implemented.
yes, there is no mention of design pattern yet but overall design appear very clear to me
Yes, their code works pretty good, but their coverage is a big problem.
Yes, their code works pretty good, but their coverage is a big problem.
Yes, the writeup seemed to include everything that was required. Code was also attached along with the screenshots and steps.
Yes, the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality. Design principles are not used but overall quite nicely explained.
Yes, the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality. Design principles are not used but overall quite nicely explained.
Yes, the Wiki is clear and explains most aspects of the project but there could be a better explanation for the IDL files that were added and the corresponding changes that were made because of adding these files
Yes, the wiki does explain the functionalities well. Could have been better to have more attributes in the subclasses in the diagram. This could help the user know about the details of the strategy pattern used.
Yes, the wiki does explain the functionalities well. Could have been better to have more attributes in the subclasses in the diagram. This could help the user know about the details of the strategy pattern used.
Yes, the tests are thorough. Needs some formatting in the code.
Yes, the tests are thorough. Needs some formatting in the code.
Yes, the test does covers 99% of the models variations. The team could have enhanced tests with varied inputs, such as for the handle method check. Even a more through test of the score method with different input data could have been done. 
Yes, the test does covers 99% of the models variations. The team could have enhanced tests with varied inputs, such as for the handle method check. Even a more through test of the score method with different input data could have been done. 
Yes, the team made commits regularly, but some commits whose name suggest changes to the code (not heroku deployment), were done after the deadline of 10th Oct. If those changes were later reversed or not, cannot be ensured. From the reviewer's perspective I would suggest not to add any changes at all after the deadline, as we shouldn't be bothered about looking at what change is done in each commit. Stick to the work you had as it would be graded appropriately by the instructors.
Yes, the team made commits regularly, but some commits whose name suggest changes to the code (not heroku deployment), were done after the deadline of 10th Oct. If those changes were later reversed or not, cannot be ensured. From the reviewer's perspective I would suggest not to add any changes at all after the deadline, as we shouldn't be bothered about looking at what change is done in each commit. Stick to the work you had as it would be graded appropriately by the instructors.
Yes, the team made commits  days ago, but then it seems that they didn't follow-up with the feedback they received on the pull request, as their were 7 issues, though of minor severity, which required fixing, and then there were no commits after that.
Yes, the team made commits  days ago, but then it seems that they didn't follow-up with the feedback they received on the pull request, as their were 7 issues, though of minor severity, which required fixing, and then there were no commits after that.
Yes, the team has used flowcharts and diagrams which clearly describe the changes to be made to the system.
Yes, the team has taken care of it by specially making a section of what is the problem as the introductory section of the WIKI doc so as to make us understand the goals of the project. They have even attached code snaps of the relevant changes they have in mind whilst explaining the error. Although, one questions the details in which they should have gone into explaining the errors and resolution. More mentioning of details is required. 
Yes, the team has taken care of it by specially making a section of "what it does" as the introductory section of the doc so as to make us understand the goals of the project. They have even attached screenshots of the relevant changes they have in mind whilst explaining the error. Although, one questions the details in which they should have gone into explaining the errors and resolution. More mentioning of details is required. 
Yes, the team has made few code climate fixes and also added tests for the UTF-* encoding issue. though no test is available for the sanitize fixes. 
Yes, the team has made a very good testing plan, consisting of functional testing, which covers almost all of the use cases which have been added/modified. However, the author could have added code snippets of the same, instead of just discussing the proposed plan.
Yes, the team has made a very good testing plan, consisting of functional testing, which covers almost all of the use cases which have been added/modified. However, the author could have added code snippets of the same, instead of just discussing the proposed plan.
Yes, the team has made a very good testing plan, consisting of functional testing, which covers almost all of the use cases which have been added/modified. However, the author could have added code snippets of the same, instead of just discussing the proposed plan.
Yes, the team has explained their code and the reason for the additions made. However, for the issue #926, some more information about the Tablesorter and some additional comments would improve the writeup. Solutions to issue #718 and #971 are explained clearly and are easy to follow.
Yes, the team has explained their code and the reason for the additions made. However, for the issue #926, some more information about the Tablesorter and some additional comments would improve the writeup. Solutions to issue #718 and #971 are explained clearly and are easy to follow.
Yes, the team has explained their code and the reason for the additions made. However, for the issue #926, some more information about the Tablesorter and some additional comments would improve the writeup. Solutions to issue #718 and #971 are explained clearly and are easy to follow.
Yes, the team has considered the two important and required test cases- 1) To check whether "Assignments" is not present in the Instructor view, and check the presence of "Open Student View" button in the flyout menu. Here, the team has also checked the precondition whether the user is viewing the correct page (tree_display/list) which is meant for the Instructor.  2) To check the presence of "Close Student View" button for the instructor to return back to the default view and have the "Assignment"  tab for students.  Suggestion: The team could add a line to check whether the system returns back to the instructor page after clicking the "Close Student View" button. maybe include : "expect(page).to have_current_path('/tree_display/list')" .  
Yes, the team has committed changes in round 2 also. Overall it looks like the codes were pushed to master and one go. Regularly committing the files could have been better.
Yes, the team has added test cases, the code for a couple of test cases are in the wiki in a separate section. Again, it would have been better to explain the test cases a little more, may be using screenshots of successful test cases.
Yes, the team has added test cases, the code for a couple of test cases are in the wiki in a separate section. Again, it would have been better to explain the test cases a little more, may be using screenshots of successful test cases.
Yes, the team did add test cases to test their changes, but the overall test coverage has decreased 
Yes, the team did add test cases to test their changes and their overall test coverage has increased.
Yes, the team did add test cases and the coverage increased too. But the team didn't put any efforts after the initial review round, since the failed tests are still failed, and there are no new commits since 12 days.
Yes, the team added visual aids like UML diagrams, screen shots, code snippets to clearly describe the changes to be made to the system. Well done!
Yes, the system works fine and authors have fixed the problems found in the first round. For an instance, Admin functionality and interest functionality were not present in round one but authors have implemented them now. 
Yes, the system handles all the entity relationships well. There is no mapping table as such, but all relationships has been addressed in correct association degree in the application.
Yes, the pull request did pass the Travis CI. It didn't has any conflicts with the base branch, but it did have some unresolved issues which needed to be fixed, namely: cognitive complexity was 6, and condition size for two files were too high.
Yes, the pull request did pass the Travis CI. It didn't has any conflicts with the base branch, but it did have some unresolved issues which needed to be fixed, namely: cognitive complexity was 6, and condition size for two files were too high.
Yes, the proposed solutions part clearly stated that they will go through each review to compare the new review score, etc, and then they will store the review URL. However, the solution is not concrete enough and is a little bit hard to follow. It should be great if there's more details in stating about how to loop through each reviews.  
Yes, the proposed solutions part clearly stated that they will go through each review to compare the new review score, etc, and then they will store the review URL. However, the solution is not concrete enough and is a little bit hard to follow. It should be great if there's more details in stating about how to loop through each reviews.  
Yes, the project is to do 2 things : 1. Stop teams from dropping assignments very late / close to deadline 2. Have different deadlines when assignments are done at different periods. The wiki should be created on expertiza page and not on wikipedia site.
Yes, the login / signup module seems to be very well tested, considering the fact that all the three types of users (admins, househunters and realtors) are managed by using the same table. But, there's also a small functional bug. Even if I hadn't regisitered as a househunter or a realtor, I am able to switch back and forth between the roles, which is kind of counter-intuitive in many ways.
Yes, the github api integration looks good. the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well. Usage of existing gems is good and eases lot of implementation pains  
Yes, the github api integration looks good. the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well. Usage of existing gems is good and eases lot of implementation pains  
Yes, the github api integration looks good. the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well. Usage of existing gems is good and eases lot of implementation pains  
Yes, the functionality required is stated but the idea about how to code for that functionality is yet to be thought of.
Yes, the functionality required is stated but the idea about how to code for that functionality is yet to be thought of.
Yes, the functionalities are present. It would have been good if the issues were listed sequentially following its solutions.
Yes, the functionalities are present. It would have been good if the issues were listed sequentially following its solutions.
Yes, the features which have been done till now work well.
Yes, the explanations provided for changes to be made are clearly mentioned . The authors are very clear what and where to make changes. Use of flowchart makes reviewer to understand their approach more quickly and easily. Suggestion: No test plan is included in the project
Yes, the explanations provided for changes to be made are clearly mentioned . The authors are very clear what and where to make changes. Use of flowchart makes reviewer to understand their approach more quickly and easily. Suggestion: No test plan is included in the project
Yes, the doc contains test plan, but they are not specific.
Yes, the doc contains test plan, but they are not specific.
Yes, the doc contains test plan, but they are not specific.
Yes, the diagrams are clear to show how the system works. But they, are not so lucid so as to show in the diagram how they are going to implement the changes in the system.   
Yes, the diagrams are clear to show how the system works. But they, are not so lucid so as to show in the diagram how they are going to implement the changes in the system.   
Yes, the diagrams are clear to show how the system works. But they, are not so lucid so as to show in the diagram how they are going to implement the changes in the system.   
Yes, the diagrams are clear to show how the system works. But they, are not so lucid so as to show in the diagram how they are going to implement the changes in the system. 
Yes, the diagrams are clear to show how the system works. But they, are not so lucid so as to show in the diagram how they are going to implement the changes in the system. 
Yes, the design proposed by the author seem sound enough. However, the author has only given a high level view of the proposed design. The author should delve deeper into the concept more while describing the intended design.
yes, the design is the simplest I could think about. But it doesn't include how to change the files.  I think it can still be as simple and succinct if the modifications of files can be included. On the other hand, the expected result seems to be too long. There's too many screenshots
yes, the design is the simplest I could think about. But it doesn't include how to change the files.  I think it can still be as simple and succinct if the modifications of files can be included. On the other hand, the expected result seems to be too long. There's too many screenshots
yes, the design is the simplest I could think about. But it doesn't include how to change the files.  I think it can still be as simple and succinct if the modifications of files can be included. On the other hand, the expected result seems to be too long. There's too many screenshots
Yes, the design is sound and clear. Majority of the work is done by the suggestion algorithm. The team proposes to integrate this functionality into Expertiza and also improve the response time. This project does not need to incorporate any design pattern as only the view files are altered. The project does not impact the degree to which it is object oriented.
Yes, the design is simplified and also there is room for some thought that is explicitly stated such as --- not really following the DRY principle and the team is willing to work towards it which is really good.
Yes, the design is simple. The design includes details in checking rounds: when it's bigger than or equal to 2, add the checkbox and otherwise do nothing. However, I doubt if that's needed in design document. Since in the future if we need to do 3-round reviews, this 2 feature can be misleading.
Yes, the design is quite simple.
Yes, the design is as simple as it can get. Understanding the principle is not hard. But making it simple should also not make it costly. Good work to the team if the instructors were looking for something this simple :)
Yes, the design is as simple as it can be. The current scenario is explained with adequate screenshots, and the changes are explained by stating the field to be used for sorting the table. A mock-up screen of the expected output would have made it even better to understand, however reading the material is sufficient as well. The changes are not complex, as they interact with a single view at a time. The tablesorter function is also called for each view, e.g. view_submissions layout.
Yes, the design is as simple as it can be. The current scenario is explained with adequate screenshots, and the changes are explained by stating the field to be used for sorting the table. A mock-up screen of the expected output would have made it even better to understand, however reading the material is sufficient as well. The changes are not complex, as they interact with a single view at a time. The tablesorter function is also called for each view, e.g. view_submissions layout.
Yes, the design is appropriate. It would be better if the authors list the patterns they are going to use.
Yes, the design is appropriate. It would be better if the authors list the patterns they are going to use.
Yes, the design includes a very good test plan. The tests are deep and detailed and completely test the functionalitys. But I think it could be better following the DRY principle if the tester don't need to log in as administrator2 every time.
Yes, the design includes a very good test plan. The tests are deep and detailed and completely test the functionalitys. But I think it could be better following the DRY principle if the tester don't need to log in as administrator2 every time.
Yes, the design includes a very good test plan. The tests are deep and detailed and completely test the functionalitys. But I think it could be better following the DRY principle if the tester don't need to log in as administrator2 every time.
Yes, the design includes a test plan. Its adequate to test all functionality of the newly introduced controllers. It doesnt talk in detail about the ways the system is to be tested and what is the exact outcome to be verified.
Yes, the design includes a test plan. Its adequate to test all functionality of the newly introduced controllers. It doesnt talk in detail about the ways the system is to be tested and what is the exact outcome to be verified.
Yes, the design includes a test plan. I think the tests can be more descriptive, including 'what' is being tested and in 'which scenario' the test is being implemented.
Yes, the design includes a test plan. I think the tests can be more descriptive, including 'what' is being tested and in 'which scenario' the test is being implemented.
Yes, the design includes a test plan. I think the tests can be more descriptive, including 'what' is being tested and in 'which scenario' the test is being implemented.
Yes, the design includes a test plan. I think the tests can be more descriptive, including 'what' is being tested and in 'which scenario' the test is being implemented.
Yes, the design appears to be sound. There could be some rearrangement in the mock-up layout, e.g. text box for email address and 'Add' button could have the same horizontal alignment for a better user interface.
Yes, the database design and flowchart gives a clear picture what system will do after the required changes. Suggestion: add before & after changes screen mock-ups to your document.
Yes, the code was written well but a lot of functionalities related to the session was not added.
Yes, the code seems good to deploy if we consider the manual testing and the video demonstration. But since it didn't pass Travis CI, this claims seems a bit of a concern. If we ignore the fact that lines of code was >500, and thats why Travis CI failed, but still there are a few lingering issues which the Travis CI pointed, which still hasn't been fixed. It seems more of a patch, which would require more patches to patch in the future.
Yes, the code seems good to deploy if we consider the manual testing and the video demonstration. But since it didn't pass Travis CI, this claims seems a bit of a concern. If we ignore the fact that lines of code was >500, and thats why Travis CI failed, but still there are a few lingering issues which the Travis CI pointed, which still hasn't been fixed. It seems more of a patch, which would require more patches to patch in the future.
Yes, the code seems good to deploy if we consider the manual testing and the video demonstration. But since it didn't pass Travis CI, this claims seems a bit of a concern. If we ignore the fact that lines of code was >500, and thats why Travis CI failed, but still there are a few lingering issues which the Travis CI pointed, which still hasn't been fixed. It seems more of a patch, which would require more patches to patch in the future.
Yes, the code is written really well.
Yes, the code has been refactored to cover all the intended scenarios and the tests have been very well documented along with testing the edge cases as said from their videos. Their Rspec however doesn't seem to test many test cases but that's expected I guess given their problem statement. 
Yes, the code did pass Travis CI successfully, but as mentioned earlier, the code did fail on 7 grounds, of low severity. This should have been fixed by the team, as the issues were very small, and required just minimal follow-up.
Yes, the code did pass Travis CI successfully, but as mentioned earlier, the code did fail on 7 grounds, of low severity. This should have been fixed by the team, as the issues were very small, and required just minimal follow-up.
Yes, the code change along with the screenshots does explain the ordeal, but the git screenshots and some more explanation would be well appreciated.
Yes, the code already followed all the good conventions earlier, except the lack of proper comments. The code still lacks comments, and the author hasn't made any changes since the last review. But the overall code quality is upto the mark.
Yes, the code already followed all the good conventions earlier, except the lack of proper comments. The code still lacks comments, and the author hasn't made any changes since the last review. But the overall code quality is upto the mark.
Yes, the changes work as expected in the UI. The test cases cover most of the scenarios. Would have been good if there was some scope for negative test cases that could be explained.
Yes, the changes were committed throughout, but the commit messages could be a bit more descriptive.
Yes, the changes were committed throughout, but the commit messages could be a bit more descriptive.
Yes, the changes to be made are nicely explain. The diagrams and screenshots are in place. Suggestion: There was more scope to the test plans
Yes, the changes to be made are nicely explain. The diagrams and screenshots are in place. Suggestion: There was more scope to the test plans
Yes, the changes are well explained. There are a lot of pictures, snipped screen shots to help explain the changes to be made. There's one issue that the screenshots are not very clear, since it's big. It would look better of the screenshots can be clearer.
Yes, the changes are well explained. There are a lot of pictures, snipped screen shots to help explain the changes to be made. There's one issue that the screenshots are not very clear, since it's big. It would look better of the screenshots can be clearer.
Yes, the changes are well explained. There are a lot of pictures, snipped screen shots to help explain the changes to be made. There's one issue that the screenshots are not very clear, since it's big. It would look better of the screenshots can be clearer.
Yes, the build passes Travis CI. No, it did not had any conflicts. There was only one message, which was a warning, but apart from that, it everything seemed perfect.
Yes, the authors have specified the changes that have already been implemented as a part of the OSS project and the proposed set of changes that are to be implemented as a part of the final project. Detailed information on the changes already made is available as a Wiki link to the previous document. This document clearly captures the implementation of the OffScreenCanvas Webidl and Rust files. The design document attached in this round encompasses the proposed design of- implementation of the OffScreenCanvasRenderingContext2D and enabling of the blob API for testing the code. The authors have also listed the files changed and to be changed, making it easier for the reviewers to keep track of the code on Github. Though the text is lucid, lack of a visual tool- (like flow charts, tables or UML diagrams) to concisely illustrate the workflow might make it difficult for new readers to follow the functionalities proposed and the interlinking of various modules. So, one suggestion at this point is that the authors could have included a visual representation of the design. Apart from that, the document is well made and credits to the team.
Yes, the authors have nicely explained the changes to be made. This includes, the flow diagrams, UML diagrams and many of the screenshots. Good work team. Suggestion: Could include screenshots, if any, of the test plans implemented.
Yes, the authors have nicely explained the changes to be made. This includes, the flow diagrams, UML diagrams and many of the screenshots. Good work team. Suggestion: Could include screenshots, if any, of the test plans implemented.
yes, the authors have improved the code. the team has worked on the issue which I mentioned in the previous review. The code doesn't seems to be confusing now but it still needs proper commenting to be done. 
Yes, the authors are using already existing gems for the implementation. I would have liked to see a section on caching if any.  Rest the solution proposed looks simple and straightforward and looks that it will easily integrate into the current system  
Yes, the authors are using already existing gems for the implementation. I would have liked to see a section on caching if any.  Rest the solution proposed looks simple and straightforward and looks that it will easily integrate into the current system  
Yes, team kept on submitting their changes throughout the project. Only Readme.md file was updated in round 2.
Yes, team kept on submitting their changes throughout the project. Only Readme.md file was updated in round 2.
Yes, team kept on submitting their changes throughout the project and no commits are made in round 2.
Yes, team has added the test case
Yes, since the issues are fixed as required, I think that the project can be merged to the production server. However, there is some work on the conflicts upon resolution of which the fixes can be included to the code. I don't think that there is a need to take another approach for solving the issues.
Yes, seems to be so the case in effect the last commit being just 5 hrs ago. But what changes against each file have been made is not clear hence its a bit unclear as to the extent and the number of changes made. Moreover, the amount of subject matter and the number of sessions or models are far too less to be implementing any changes as such. 
Yes, seems to be so the case in effect the last commit being just 5 hrs ago. But what changes against each file have been made is not clear hence its a bit unclear as to the extent and the number of changes made. Moreover, the amount of subject matter and the number of sessions or models are far too less to be implementing any changes as such. 
Yes, passed Travis CI. Only one code climate issue
Yes, passed Travis CI. Only one code climate issue
Yes, on manual testing, it leads to realization that the code has been suitably written as required by the functionalities and also the doc they have provided is the results that I get on following the procedure. Although, I would suggest that they look more into the test case 3 because how to go about testing it hasn't been explained by them. 
Yes, on manual testing, it leads to realization that the code has been suitably written as required by the functionalities and also the doc they have provided is the results that I get on following the procedure. Although, I would suggest that they look more into the test case 3 because how to go about testing it hasn't been explained by them. 
Yes, no conflict that's not resolved.
Yes, new code has been committed in the 2nd round. The team has essentially implemented the offscreencanvas.rs and offscreenrenderingcontext2d.rs. offscreencanvas.rs is respondible for implementing the OffscreenCanvas.webidl. This interacts directly with javascript and when a new instance of offscreencanvas is created, it calls the constructor with arguments height and width which in turn calls the new method defined in this file. It also contains the reflector object that tells the Javascript garbage collector to ignore the canvas object while clearing memory. Additionally, it has the implementation of the getContext() method that returns a weak reference to OffscreenCanvasRenderingContext2d, which is responsible for doing background rendering task. offscreenrenderingcontext2d.rs has the implementation of OffscreenCanvasRenderingContext2D. It does not interact directly with JavaScript, so it does not have the Constructor or reflector. The functionality to build an offscreencanvas object has been implemented in this file.  
Yes, looks clean. Any design patterns used????
Yes, it works as intended. It would be better if you could add a video recording of the flow/screenshots of the flow in the test plan. 
Yes, it simple but some parts are not easy to understand.
Yes, it simple but some parts are not easy to understand.
Yes, it simple but some parts are not easy to understand.
Yes, it seems very sound. They list what they are going to do in 4 fields.
Yes, it seems like sound, however, the authors could add some principles and patterns into it.
Yes, it has the implementation plan of a checkbox, which allows the instructor to decide about review times. Since that is the only thing to be implemented, there's no more issues. I think the diagram doesn't have very pretty look, it should be better if the screenshot can be smaller so that the fonts in the diagrams can be seen more clearly.
Yes, it does explain but could have added more details to make it clear. 
Yes, it does explain but could have added more details to make it clear. 
Yes, in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document. Good Job !!
Yes, I was able to understand the issue as well as the solution overall. But I couldn't understand why there is a need to append a team name to an assignment. It was just mentioned that it is done in other part of the code as well. Mentioning that would have given me a better idea.
Yes, I was able to understand the issue as well as the solution overall. But I couldn't understand why there is a need to append a team name to an assignment. It was just mentioned that it is done in other part of the code as well. Mentioning that would have given me a better idea.
Yes, everything that the project required to do works. There were a few things which caused issues in the pull request, but none of it related to the functionality of the product to be tested, but rather related to the code complexity. Even the video demonstration clearly shows the changes implemented.
Yes, even constraints were defined well
Yes, Design shows a good amount of work to be done. Team is not using any design pattern.  
Yes, design seems fit. More insight required on the algorithm itself and how it will be implemented.
Yes, design seems fit. More insight required on the algorithm itself and how it will be implemented.
Yes, changes we committed in round 2. Code commit could have better by committing as soon as possible. Committing few files and writing proper comments and description for the commit was missing. As a reader, I was not able to understand what a particular commit meant and what module was changed because there was no proper explanation. 
Yes, changes we committed in round 2. Code commit could have better by committing as soon as possible. Committing few files and writing proper comments and description for the commit was missing. As a reader, I was not able to understand what a particular commit meant and what module was changed because there was no proper explanation. 
Yes, changes we committed in round 2. Code commit could have better by committing as soon as possible. Committing few files and writing proper comments and description for the commit was missing. As a reader, I was not able to understand what a particular commit meant and what module was changed because there was no proper explanation. 
Yes, changes to be made are explained clearly. Document is very clear, includes necessary diagrams, mock-ups and everything possible to make anyone understand what the issues are and what team is planning to do to resolve them. Everything is included in a proper order like for each issue there is a separate flowchart and mock-up. No suggestions required.
Yes, but they didnt show their principles and pattern very well.
Yes, but they didnt show their principles and pattern very well.
Yes, but they didnt show their principles and pattern very well.
Yes, but they didnt show their principles and pattern very well.
Yes, but I find a small bug, the admin can edit his profile and select change his role to realtor, although his role did not change, there is no error report.
Yes, both the the issues seem to be fixed from the screencast video. It clearly explains the before and after scenarios and the system works as expected.  The test plan is still missing for the fixed issues.
Yes, as per the solution provided, it does seem that the design incorporates the required functionality. It considers sorting on all the specified fields. Suggestions: Since you have mentioned the use of jQuery tablesorte, you may also add explanation as to what is tablesorter and try explaining atleast for one field (e.g. name) as to how does it work to sort the entries.    
Yes, as its sorting, not much scope on design approach. Yet the team has documented well on their approach regarding multi-level sortings that they are undertaking in few pages. They have also considered cross-browser compatibility of their jQuery library, which is a common design miss during client-side changes.
Yes, apart from the 7 issues of minor severity from codeclimate, the code is perfectly well to integrate with the project. No, the project need not be planned and executed from scratch, it is implemented well enough.
Yes, and at times, much more than necessary! 
Yes, almost everything seems perfect, only a little more explaination is required
Yes, almost everything seems perfect, only a little more explaination is required
Yes, all the functionalities, including viewing submission, viewing scores, viewing review report, author feedback report, teammate review report are all available. I believe a more intuitive, detailed explanation or description might be even more useful, while describing the functionalities in the design. Here, such design is still just simply stated as the project goal.
Yes, all the functionalities, including viewing submission, viewing scores, viewing review report, author feedback report, teammate review report are all available. I believe a more intuitive, detailed explanation or description might be even more useful, while describing the functionalities in the design. Here, such design is still just simply stated as the project goal.
Yes, all the functionalities, including viewing submission, viewing scores, viewing review report, author feedback report, teammate review report are all available. I believe a more intuitive, detailed explanation or description might be even more useful, while describing the functionalities in the design. Here, such design is still just simply stated as the project goal.
Yes, a good test plan is also included
Yes, a fairly good job in that regard. They have first explained their test plans, then even provided links to their RSPEC tests which I checked. Then they have run and shown their screenshots of the Rspec tests going through successfully. Even, so their coverage seems to be an issue since it hasn't been updates since the last submission that was 19 days ago as per their pull request which even shows a decrease in their coverage.  
Yes visual aid has been provided in the form of Flow charts and screen shots. UML could added.
Yes very well written. I would have given full marks if you would have added code snippet and screenshot of the before and after feature. Visually it would have been great to understand the changes quickly.
Yes very well written. I would have given full marks if you would have added code snippet and screenshot of the before and after feature. Visually it would have been great to understand the changes quickly.
Yes travis CI is passing. Code climate has few issues but they can be easily resolved.
Yes travis CI is passing. Code climate has few issues but they can be easily resolved.
Yes they have explained the way and why they did, and in their writeup, they does not mention any principles or patterns.
Yes they have explained the way and why they did, and in their writeup, they does not mention any principles or patterns.
Yes they have been committing a bit regularly . Although the commits contribution are not equally distributed among the team members.
Yes they do incoroporate but very bad look and feel of the document and hard to understand
Yes they do incoroporate but very bad look and feel of the document and hard to understand
Yes they did commit changes in round 2. But it seems only one person has contributed in a group of 3
Yes they did commit changes in round 2. But it seems only one person has contributed in a group of 3
Yes they committed a lot of code after first review which can be due to the fact it wasn't deployed by review 1. But overall the number of commits is higher than average i believe
Yes they committed a lot of code after first review which can be due to the fact it wasn't deployed by review 1. But overall the number of commits is higher than average i believe
Yes there were some commits fixing the travis and code climate issues.
Yes there is one conflict that must be resolved to go ahead reported by TRAVIS CI.
Yes there is one conflict that must be resolved to go ahead reported by TRAVIS CI.
Yes the writeup explains how and why the did the modifications. It has comparisons between the previous and new versions and why they made they made the necessary modifications.  There was no mention of using design principles or patterns.
Yes the writeup explains how and why the did the modifications. It has comparisons between the previous and new versions and why they made they made the necessary modifications.  There was no mention of using design principles or patterns.
Yes the UI is pretty smooth and a person can navigate freely. However, in some cases there is no "back" link in the web-page, so the user has to use browser navigation to go to the previous page.
Yes The UI is interactive and easy to use.
Yes the test plan is included but the test plan appears to be very shallow as it gives the which functionalities must be test but doesn't mentions it inform of test like what should be the actions taken when a certain condition arises it can be more clearly stated by mentioning the test cases in form of context and it statements
Yes the test plan is included but the test plan appears to be very shallow as it gives the which functionalities must be test but doesn't mentions it inform of test like what should be the actions taken when a certain condition arises it can be more clearly stated by mentioning the test cases in form of context and it statements
Yes the team seem to have a clear idea as to what must be done and how the result must look. It would be helpful if the team gave some insights as to how the composite score formula was decided as this is the heart of the project.
Yes the team seem to have a clear idea as to what must be done and how the result must look. It would be helpful if the team gave some insights as to how the composite score formula was decided as this is the heart of the project.
Yes the team has added tests. I am not sure of the increase in coverage as it is not mentioned in the doc. however, the team has very well explained how the tests were done and what areas they have tested.
Yes the team has added test for the UTF encoding acceptance. the coverage is not 100% and not tested with varied inputs but i believe would suffice for sanity check. Although the description of test in rspec file is ambiguous not clearly mentioning what exactly the test is expected to do. There is no test available for the issue 2 documented
Yes the team did add test cases but I am surprised on why the coverage numbers have fallen so much. This needs some investigation.  I think good test cases were added as part of the work, i would have though liked to see more -ve test cases checking for the failure conditions 
Yes the team did add test cases but I am surprised on why the coverage numbers have fallen so much. This needs some investigation.  I think good test cases were added as part of the work, i would have though liked to see more -ve test cases checking for the failure conditions 
Yes the relationships are handled properly 1 company multiple realtors etc. No mapping table as such the schema handles it
Yes The project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application.  
Yes the project is a test project for menu.rb. The code coverage has increased to 100%. Though the code covers all lines, i feel edge cases are not covered well. 
Yes the Problem Statement and Design Approach sections explain clearly what the usecase is and what the authors think will be a good design to implement.The changes are clearly explained. Having some file names would be useful to review in detail.
Yes the presence of use case diagrams and flow charts explaining the work flow is good. It would be nice if there were more uml diagrams such as sequence so show various class interactions.  Presence of mockup screens is good. That helps in understanding what is being implemented. It would have been good if the authors put in more details about the validations that that propose in the system 
Yes the presence of use case diagrams and flow charts explaining the work flow is good. It would be nice if there were more uml diagrams such as sequence so show various class interactions.  Presence of mockup screens is good. That helps in understanding what is being implemented. It would have been good if the authors put in more details about the validations that that propose in the system 
Yes the flow diagram and graph plots help to understand the changes and its implications. The diagrams clearly describe the change approach followed.
Yes the features work as described in the problem statement. The team has done good job and has fixed all the below issues: Issue #971 Change create topic UI into AJAX. Issue #926 We need a way to sort topics by topic number in assignment#edit page. Issue #718 We should allow instructors to give feedback when accepting or rejecting topic suggestions.
Yes the documentation looks complete  and states the project purpose and solution are stated . The project design could be described in more detail.
Yes the document mainly talks about small changes at different places in the application that are being done. I think more implementation details with ample justification are missing. if the team is using certain apis why are they using should have been mentioned.  
Yes the design looks simple. The use of mock up screens is good and greatly helps understand the flow that has been proposed. Good work! How ever in one of the flow charts the check for "Is Admin" does not show/label  "Y" or "N" path
Yes the design looks simple. The use of mock up screens is good and greatly helps understand the flow that has been proposed. Good work! How ever in one of the flow charts the check for "Is Admin" does not show/label  "Y" or "N" path
Yes the design looks simple. The use of mock up screens is good and greatly helps understand the flow that has been proposed. Good work! How ever in one of the flow charts the check for "Is Admin" does not show/label  "Y" or "N" path
Yes the design looks simple. The use of mock up screens is good and greatly helps understand the flow that has been proposed. Good work! How ever in one of the flow charts the check for "Is Admin" does not show/label  "Y" or "N" path
Yes the design is sound and appeopriate. However, it may be better to implement more code level design.
Yes the design is pretty good. The patterns followed avoids any duplication of code. But I had made a suggestion in Review One to take a look at Project 1843 and it's code. The problem statement is quite similar and the code could be reused. I don't see any mention of it. I hope you do take a look before starting to code as it will avoid any re-work.
Yes the design is pretty good. The patterns followed avoids any duplication of code. But I had made a suggestion in Review One to take a look at Project 1843 and it's code. The problem statement is quite similar and the code could be reused. I don't see any mention of it. I hope you do take a look before starting to code as it will avoid any re-work.
Yes the design is pretty good. The patterns followed avoids any duplication of code. But I had made a suggestion in Review One to take a look at Project 1843 and it's code. The problem statement is quite similar and the code could be reused. I don't see any mention of it. I hope you do take a look before starting to code as it will avoid any re-work.
Yes the design is as simple as possible. However they have only described the proposed design. They could have provided simple mock ups or samples,
Yes the design incorporated all functionality required. But more explanation is needed around which graph they intend to show.
Yes the design incorporated all functionality required. But more explanation is needed around which graph they intend to show.
Yes the design incorporated all functionality required. But more explanation is needed around which graph they intend to show.
Yes the design includes the test plan. However, the test plan could have been more low level, instead of just writing 'it should' statements.
Yes the design includes the test plan. However, the test plan could have been more low level, instead of just writing 'it should' statements.
Yes the design includes the test plan. However, the test plan could have been more low level, instead of just writing 'it should' statements.
Yes the design appears to be sound following the appropriate principles and patterns. Fell the team could have explained in more detail.
Yes the design appears to be sound following the appropriate principles and patterns. Fell the team could have explained in more detail.
Yes the design appears to be sound following the appropriate principles and patterns. Fell the team could have explained in more detail.
Yes the coverage is good but the test scenarios are fairly straightforward and no elegant stubs or mocks used. The code isnt DRY 
Yes the authors have tried to explain what changes are required and what they plan to do however I feel that exact changes that they might be doing are missing. They could have listed most files that will need modification and if necessary new files that will be changed
Yes the authors have tried to explain what changes are required and what they plan to do however I feel that exact changes that they might be doing are missing. They could have listed most files that will need modification and if necessary new files that will be changed
Yes the authors have tried to explain what changes are required and what they plan to do however I feel that exact changes that they might be doing are missing. They could have listed most files that will need modification and if necessary new files that will be changed
Yes the authors have tried to explain what changes are required and what they plan to do however I feel that exact changes that they might be doing are missing. They could have listed most files that will need modification and if necessary new files that will be changed
Yes the author has explained the adequately the changes to be made to the system by giving a detailed flow diagram of the workflow of the the would be implementing the functionality of keeping a track of the review time of a student
yes the application flow diagram tells of how the functionality will be accessed both by user and student and the use case diagram explains the interaction of the instructor and the students for the particular functionalities 
Yes team had been pushing changes on github continuously with neat commit messages in Round 2 also.  With 49 commits till now. Yes i can see last commit on 11 th Oct 2018. But commits are not distributed equally.
Yes team had been pushing changes on github continuously with neat commit messages in Round 2 also.  With 49 commits till now. Yes i can see last commit on 11 th Oct 2018. But commits are not distributed equally.
Yes team had been pushing changes on github continuously with neat commit messages in Round 2 also.  With 49 commits till now. Yes i can see last commit on 11 th Oct 2018. But commits are not distributed equally.
Yes screen shots are helpful but the document missing flow control diagrams 
Yes partially, the code has the parameters not well defined for all only one conceivable user seemingly admin and that too is doubtful to have the correct MVC Layout.  For instance, they seem to have created separate MVC architectures for Admins, Companies and Users only. This goes to show that they are lacking in a layered approach on access and privileges.  Also, the code is written in a reasonably clean and formatted style with the variable definitions to be self-explanatory of the functionalities they perform in most cases for whichever few roles defined. 
Yes partially, the code has the parameters not well defined for all only one conceivable user seemingly admin and that too is doubtful to have the correct MVC Layout.  For instance, they seem to have created separate MVC architectures for Admins, Companies and Users only. This goes to show that they are lacking in a layered approach on access and privileges.  Also, the code is written in a reasonably clean and formatted style with the variable definitions to be self-explanatory of the functionalities they perform in most cases for whichever few roles defined. 
Yes most of them but they have not added any automated integration tests. Unit testing has been done and is great to see such detailed tests
Yes most of them but they have not added any automated integration tests. Unit testing has been done and is great to see such detailed tests
Yes most of the required features are working fine. Some errors are there like Admin is able to add interest to houses which is an unintended feature as admin should change role before doing that.
Yes most of the required features are working fine. Some errors are there like Admin is able to add interest to houses which is an unintended feature as admin should change role before doing that.
Yes most of the required features are working fine. Some errors are there like Admin is able to add interest to houses which is an unintended feature as admin should change role before doing that.
Yes most of the issues identified in the Round 1 was fixed apart from below   1) Admin Login : While creating account The UI says password as option, but i am leave them blank 2) Realtor : VIEW Listing is not working as a result realtor is not able to see the inquireis 3) was able to delete the admin account
Yes most of the issues identified in the Round 1 was fixed apart from below   1) Admin Login : While creating account The UI says password as option, but i am leave them blank 2) Realtor : VIEW Listing is not working as a result realtor is not able to see the inquireis 3) was able to delete the admin account
Yes Most of the issues identified are fixed 1) Admin not able to delete user accounts
Yes it states the plan, design well. Testing can be better represented in terms of whether its UI testing or Automated tests etc.
Yes it explains with clarity the issue at hand, UTF-8 only support & how that causes trouble. Also improper formatting of HTML tags.
Yes good write up but would have like to see details on model.  In test plan lines like " two test cases for method " are redundant. Can / should remove them 
yes good number of tests added coverage increased a but but i would like to see more -ve tests. Mostly +ve test cases are covered in the tests    
yes good number of tests added coverage increased a but but i would like to see more -ve tests. Mostly +ve test cases are covered in the tests    
yes good number of tests added coverage increased a but but i would like to see more -ve tests. Mostly +ve test cases are covered in the tests    
Yes features work as intended but I would like to see tests as well as testing case were job addition to queue fails. I understand this would be edge case and not likely to happen but still needs to be handled. Other edge cases such as participant_mails is nil have been taken care of.  
Yes design appears to be sound. Also the flow diagram helps us understand it better. Team did not use any design pattern. 
Yes commits are done to fix the code climate issues.
Yes authors have done well to explain the changes being done in the project. I think I wish they would have added is the details of languages they are supporting.   Also they do mention that they will add extra column to languages table, they could have pasted the new schema in the doc
Yes authors have done well to explain the changes being done in the project. I think I wish they would have added is the details of languages they are supporting.   Also they do mention that they will add extra column to languages table, they could have pasted the new schema in the doc
Yes authors have done well to explain the changes being done in the project. I think I wish they would have added is the details of languages they are supporting.   Also they do mention that they will add extra column to languages table, they could have pasted the new schema in the doc
Yes authors have an details about code changes that they have done and why they have done. I would have liked more emphasis on "why" 
yes all the test written passes. They could have written a test to check if self[:handle] is returned if no nil parameter is sent
yes all the test written passes. They could have written a test to check if self[:handle] is returned if no nil parameter is sent
Yes all the requirements mentioned in the Problem Statement are considered. Also the corresponding solutions are explained . A flow diagram or screenshots explaining the solution jsut like the problem statement is explained would have been helpful.
Yes all the requirements mentioned in the Problem Statement are considered. Also the corresponding solutions are explained . A flow diagram or screenshots explaining the solution jsut like the problem statement is explained would have been helpful.
Yes all the features work as intended. The participant that is created using the build method describes participant as an instance of the assignment participant class. I observed the handle method has not been tested yet.
Yes all the features work as intended. The participant that is created using the build method describes participant as an instance of the assignment participant class. I observed the handle method has not been tested yet.
yes about 75  commits were done
Yes  I think with additional testing it can be deployed.
Yes
yes
Yep, the spec.rb file works fine. I think only handle method hasn't been tested. This is why the coverage seems to be 94%
Yep, the spec.rb file works fine. I think only handle method hasn't been tested. This is why the coverage seems to be 94%
Yeah, the build has passed the Travis CI test and there were no conflicts found on the pull request.
Yeah, I believe it is as simple as possible while choosing the best path for the expertiza project to grow, but it still sounds like a very ambitious project for 1 group to complete.
Y'all did the least possible work, AND put it on wikipedia instead of the expertiza wiki.
Y'all did the least possible work, AND put it on wikipedia instead of the expertiza wiki.
Wrtie up clearly explains the project purpose, what changes needs to be made, however including a mock test plan would have been better.
Writeup needs to be improved, video needs to have sound or make shorter videos. Build is failing, code climate has 56 issues. So no its not ready for deployment onto production. The way they have implemented is fine but they need to work on the said issue to make it production ready.
Writeup needs to be improved, video needs to have sound or make shorter videos. Build is failing, code climate has 56 issues. So no its not ready for deployment onto production. The way they have implemented is fine but they need to work on the said issue to make it production ready.
Writeup is written well. Understandable and clean explanation. Team has explained the problem statement and issues well with good amount of pictures. Team can improve on formatting.
Writeup is written well. No design principle or pattern involved, But the approach taken is explained in detail, step by step.   Team could add references and links.  
Writeup is written well and explained properly with good indentation, content and screenshots. Team could have explained test plan in more brief so as to understand number of test scenarios covered. 
Writeup is written very neatly and in elaborated fashion with understandable images. Team could have added Github Expertiza link and pull request link at the bottom of the wiki page. Also references and credits.
Writeup is very clearly explained. Writeup clearly explains how they are doing their work but why team is following approach is not explained. 
writeup is too concise code were addded. But the implementation was not explained in detail.
Writeup is still in the form of a word doc instead of a wiki. Test Plan and Tests are missing.
Writeup is still in the form of a word doc instead of a wiki. Test Plan and Tests are missing.
Writeup is still in the form of a word doc instead of a wiki. Test Plan and Tests are missing.
Writeup is readable and written properly. Team could have added code snippet and pictures of changed or improved functionality. Also team could work upon formatting and could also add links and references.
Writeup is readable and written properly. Team could have added code snippet and pictures of changed or improved functionality. Also team could work upon formatting and could also add links and references.
Writeup is descriptive. But missing the following: 1. Screenshots of implementation 2. Steps to replicate the problem  3. Instructions not provided. 4. Too many sub topics for solution implemented
Writeup is decent. I felt that code should have been quoted rather than included pictures of as that would make it easier to modify. The pngs weren't same size which appears to be negative that people  have commented on my work too.
Writeup is decent. I felt that code should have been quoted rather than included pictures of as that would make it easier to modify. The pngs weren't same size which appears to be negative that people  have commented on my work too.
Writeup explains what was to be done and how they did it, but does not give rationale behind the way they coded, and any alternative approaches.
Writeup explains what was to be done and how they did it, but does not give rationale behind the way they coded, and any alternative approaches.
Writeup doesn't has a test plan but in the video they have tested a lot. Also please add audio as well in your video explaining what you are doing and why so that its easy for the user to understand, otherwise watching 23 minutes silent videos is just to much.
Writeup doesn't conatin the test plan section.
Writeup does not mention anything about how the code works, alternative strategies possible or strategies they used.
Writeup does not mention anything about how the code works, alternative strategies possible or strategies they used.
Writeup does not mention anything about how the code works, alternative strategies possible or strategies they used.
writeup covers all the specifications and descriptions but is too lengthy.
writeup covers all the specifications and descriptions but is too lengthy.
Writeup clearly explains what their use cases are and what solution they came up with. There is a lack of background about it, how to test it from UI, test plan, test cases, DRY principle etc. Their write up is not on wiki, which makes it difficult to download the file every time and check it. Although it was pointed out during the first round, the team didn't change it , or they didn't update the wiki page which they created.
Writeup clearly explains what their use cases are and what solution they came up with. There is a lack of background about it, how to test it from UI, test plan, test cases, DRY principle etc. Their write up is not on wiki, which makes it difficult to download the file every time and check it. Although it was pointed out during the first round, the team didn't change it , or they didn't update the wiki page which they created.
Writeup clearly explains what their use cases are and what solution they came up with. There is a lack of background about it, how to test it from UI, test plan, test cases, DRY principle etc. Their write up is not on wiki, which makes it difficult to download the file every time and check it. Although it was pointed out during the first round, the team didn't change it , or they didn't update the wiki page which they created.
Writeup can be improved at the task section and more information could be added
Writeup can be improved at the task section and more information could be added
Write-up provides all the necessary information needed to understand the project but a brief explanation about certain methods would have been better. 
Write-up needs serious attention of the team. The approach followed is good but it still needs to be worked on. the write-up should include contents which makes it self-explanatory.
Write-up needs serious attention of the team. The approach followed is good but it still needs to be worked on. the write-up should include contents which makes it self-explanatory.
Write-up needs serious attention of the team. The approach followed is good but it still needs to be worked on. the write-up should include contents which makes it self-explanatory.
Write-up is little vague. Some are not explained properly.
Write-up is little vague. Some are not explained properly.
Write-up includes everything the team has implemented. It clearly show the files which were involved to complete the project, background of the project and evrything. overall work done by the team is good but I feel that the test plan on the write-up page should be edited. The team should work on presenting their work to everyone in a good way.
Write-up clearly explains with screenshots what is done. However, does not say how the changes have been implemented.
Write-up clearly explains with screenshots what is done. However, does not say how the changes have been implemented.
Write-up clearly explains with screenshots what is done. However, does not say how the changes have been implemented.
Write up isn't provided. I went through their git commit and the requirement for  issue #1201. There is a 'puts' statement in the controller. I feel that should be removed, you guys might have added it for debugging purposes, but it should be removed before committing. Also, not sure how the changes made are applicable to the problem at hand which is to check if assignments have the same name if I'm not wrong.
Write up isn't good. They have just added there code in the write up without explaining anything. Plus no comments in code. Code snippets in writeup are going off the page.
Write up is written well and it is understandable. Images are not in proportion and not of same size and hence wiki page does not look steady. Team can work on image size and image description and manual test plan in more detail.
Write up is too brief. No detail description of approach taken as well as no picture to relate to changes as suggested to add in last review.  
Write up is too brief. No detail description of approach taken as well as no picture to relate to changes as suggested to add in last review.  
Write up is too brief. No detail description of approach taken as well as no picture to relate to changes as suggested to add in last review.  
Write up is really good. but little short. Could have been described with more details. Also, it would have been better if they ha uploaded the screencast of the work they had done.
Write up is Okay, The test plan comes before solution / approach section . pls change the ordering. there is no reference section  instead of putting screen shots of code it would be better if the authors had put code snippets  
Write up is Okay, The test plan comes before solution / approach section . pls change the ordering. there is no reference section  instead of putting screen shots of code it would be better if the authors had put code snippets  
Write up is good. Great job. However I could find few points that if rectified would make it even better.  It would be good if the problem statement could list the issue (hyperlinks) that are being fixed. That would make it easier to navigate Instead of pasting screen shot for solution it would have been good if few words detailing approach would be put. Post that screen shot could be put.  
Write up is good. Great job. However I could find few points that if rectified would make it even better.  It would be good if the problem statement could list the issue (hyperlinks) that are being fixed. That would make it easier to navigate Instead of pasting screen shot for solution it would have been good if few words detailing approach would be put. Post that screen shot could be put.  
Write up is good. Great job. However I could find few points that if rectified would make it even better.  It would be good if the problem statement could list the issue (hyperlinks) that are being fixed. That would make it easier to navigate Instead of pasting screen shot for solution it would have been good if few words detailing approach would be put. Post that screen shot could be put.  
Write up is good but the explanation of plan of work could have included some points like the approach taken.
Write up is good but the explanation of plan of work could have included some points like the approach taken.
Write up is good and self explanatory. Test plan helped a lot in understanding how to test it. As discussed in the earlier review, images could have been resized for better visibility. Was little difficult when one had to scroll along the page to view the entire image.
Write up is good and self explanatory. Test plan helped a lot in understanding how to test it. As discussed in the earlier review, images could have been resized for better visibility. Was little difficult when one had to scroll along the page to view the entire image.
Write up is good and self explanatory. Test plan helped a lot in understanding how to test it. As discussed in the earlier review, images could have been resized for better visibility. Was little difficult when one had to scroll along the page to view the entire image.
Write up doesnt include test plan. Good thing would be include the testing steps they have performed. Few screenshots would be helpful as well.
Write up doesnt include test plan. Good thing would be include the testing steps they have performed. Few screenshots would be helpful as well.
Would be nice to see a sample test plan
Would be good to include  high level overview of changes made in the files. 
Would be good to include  high level overview of changes made in the files. 
Works as intended. Could have elaborated a little more like a guidance in wiki.  Was able to test the features. Works fine.
Works as intended. Could have elaborated a little more like a guidance in wiki.  Was able to test the features. Works fine.
Without a video or instructions, I cannot easily verify that the solution works since there was an error thrown when I tried to follow the recipe. The error occurred while I was trying to request an account. More detailed testing recipes would help. Getting the accounts and their email addresses set up in the deployment is the main difficulty.
Without a video or instructions, I cannot easily verify that the solution works since there was an error thrown when I tried to follow the recipe. The error occurred while I was trying to request an account. More detailed testing recipes would help. Getting the accounts and their email addresses set up in the deployment is the main difficulty.
Within the travis builds, the test folders of helpers, models and features are passing. The test folder for the controller seems to be failing for some reason.
With a total of about 55 commits, the team has made more or less periodic commits. Labels for the commits could be better so it becomes more readable
With a total of 77 commits, the team has actively pushed changes to the project. Although not all commits are labeled very accurately, it is still easy to comprehend the pushed changes.
Wireframes have been given stating what the end product will look like. But I did not find any UML diagrams or tables.  Suggestion: The team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality.
Wireframes have been given stating what the end product will look like. But I did not find any UML diagrams or tables.  Suggestion: The team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality.
Wireframes have been given stating what the end product will look like. But I did not find any UML diagrams or tables.  Suggestion: The team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality.
Wiki page does talk about test plan. But it is explained in brief, but no details of test scenarios or testing technology to be used.  
Wiki page does talk about test plan. But it is explained in brief, but no details of test scenarios or testing technology to be used.  
Wiki page does talk about test plan. But it is explained in brief, but no details of test scenarios or testing technology to be used.  
Wiki or read me does not include instructor or student credential so couldn't check anything.
Wiki or read me does not include instructor or student credential so couldn't check anything.
While Trying to delete a real estate company with existing realtors, the system is failing.
While Trying to delete a real estate company with existing realtors, the system is failing.
While there are test files, I don't see any completed tests (especially for Models) outside of what is provided by default in Rails.
While there are some tests for controllers, they were only the auto-created tests by Rails. There were test files for the models, but not test cases present.
While there are some tests for controllers, they were only the auto-created tests by Rails. There were test files for the models, but not test cases present.
While the typical Rails files for testing were included, I did not see a complete set of tests for model and controller.
While the typical Rails files for testing were included, I did not see a complete set of tests for model and controller.
While the typical Rails files for testing were included, I did not see a complete set of tests for model and controller.
While the test plan for fixing team names have been shown, i couldn't find the test plan for validating username.
While the test plan for fixing team names have been shown, i couldn't find the test plan for validating username.
While the test coverage has increased to 100%, the team has made some changes to "schema.rb" file, this might cause a problem on other dependent modules. Hence, I feel it is risky to deploy it on production. The project doesn't need to be started from scratch by the next team. 
While the team did push changes to the project, there are 95 commits which are unnecessary. Instead of pushing every change to the final project, the team could have combined a few of the changes and pushed them all at once to make for better record of the changes made.
While the functionality is present, there are several debug statements in the code that need to be removed and tests need to be added.
While the functionality is present, there are several debug statements in the code that need to be removed and tests need to be added.
While the code is organized well and seems to follow the Model View Controller design pattern, the project doesn't seem to make good use of the relational database. There are multiple models/controllers (specifically the list of potential buyers) that are not necessary at all because of the relational database.
While the application has a similar layout as a typical Rails application, I noticed there were no migrations in the DB. Also, the README was not formatted very well and didn't tell me much about how to install the project locally.
While the application has a similar layout as a typical Rails application, I noticed there were no migrations in the DB. Also, the README was not formatted very well and didn't tell me much about how to install the project locally.
While some links were easy to find and navigate, after editing houses and companies, I could not return back to a good home screen. I also was unable to log out. 
While some links were easy to find and navigate, after editing houses and companies, I could not return back to a good home screen. I also was unable to log out. 
While some functionality works, the replace existing team functionality did not work when I tried using the examples in your write-up.
While some functionality works, the replace existing team functionality did not work when I tried using the examples in your write-up.
While signing up as realtor or HouseHunter, all fields are not present. Only username and password is being asked.
While signing up as realtor or HouseHunter, all fields are not present. Only username and password is being asked.
While links and navigation were generally easy to find, several links rendered broken pages and several got stuck in a loop asking me to log in as an Admin to edit a user when I was already logged in. 
While links and navigation were generally easy to find, several links rendered broken pages and several got stuck in a loop asking me to log in as an Admin to edit a user when I was already logged in. 
While I understand conceptually, I don't believe they explained their changes in appropriate detail. Simply describing additional columns and a flow chart misses the biggest part of these changes which is user experience. How will windows pop-up? What will the new data look like after a review is complete?
While I understand conceptually, I don't believe they explained their changes in appropriate detail. Simply describing additional columns and a flow chart misses the biggest part of these changes which is user experience. How will windows pop-up? What will the new data look like after a review is complete?
While I understand conceptually, I don't believe they explained their changes in appropriate detail. Simply describing additional columns and a flow chart misses the biggest part of these changes which is user experience. How will windows pop-up? What will the new data look like after a review is complete?
While a thorough controller test exists, there is no model test.
Whether the task is due is determined by a date str and it may be go wrong under different timezone.
Whether the task is due is determined by a date str and it may be go wrong under different timezone.
Whether the task is due is determined by a date str and it may be go wrong under different timezone.
When user is deleted the inquiry remains.
When user is deleted the inquiry remains.
When try to delete a user with inquiry, it return some error. 
When the project was assigned, the team didn't made much commits. But after a week and a half, they started committing on a regular basis. The frequency of commits was then linear, which is a good thing. The project didn't seem to have been completed hurriedly or at the last moment.
when sumbit an iquiry, the page automatically redirect to the homepage and can not find the user page.
When searching for house, type some location, hit Filter, then sort by year. Found a URL like this: https://calm-forest-11598.herokuapp.com/house_lists/filter?Location=RDU&authenticity_token=j0TTfX%2BI50fb9dL3Jg2pDB2ZM6A8bDROES%2F%2F4vuoJ%2BzTeDQdySx6e%2FmmhXeo7ra63kMBDh8RI5jG44QON6PdfA%3D%3D&commit=Filter&id=search-form&method=get&sort=build_year_low&utf8=%E2%9C%93 Passing sensitive info like Authenticity token in URL param is dangerous. Also, is it required?   When viewing interested users of a particular house, what's the point of the url param 'user_id' ? https://calm-forest-11598.herokuapp.com/interests?house_list_id=1&user_id=14 https://calm-forest-11598.herokuapp.com/interests?house_list_id=1&user_id=1000
When searching for house, type some location, hit Filter, then sort by year. Found a URL like this: https://calm-forest-11598.herokuapp.com/house_lists/filter?Location=RDU&authenticity_token=j0TTfX%2BI50fb9dL3Jg2pDB2ZM6A8bDROES%2F%2F4vuoJ%2BzTeDQdySx6e%2FmmhXeo7ra63kMBDh8RI5jG44QON6PdfA%3D%3D&commit=Filter&id=search-form&method=get&sort=build_year_low&utf8=%E2%9C%93 Passing sensitive info like Authenticity token in URL param is dangerous. Also, is it required?   When viewing interested users of a particular house, what's the point of the url param 'user_id' ? https://calm-forest-11598.herokuapp.com/interests?house_list_id=1&user_id=14 https://calm-forest-11598.herokuapp.com/interests?house_list_id=1&user_id=1000
When searching for house, type some location, hit Filter, then sort by year. Found a URL like this: https://calm-forest-11598.herokuapp.com/house_lists/filter?Location=RDU&authenticity_token=j0TTfX%2BI50fb9dL3Jg2pDB2ZM6A8bDROES%2F%2F4vuoJ%2BzTeDQdySx6e%2FmmhXeo7ra63kMBDh8RI5jG44QON6PdfA%3D%3D&commit=Filter&id=search-form&method=get&sort=build_year_low&utf8=%E2%9C%93 Passing sensitive info like Authenticity token in URL param is dangerous. Also, is it required?   When viewing interested users of a particular house, what's the point of the url param 'user_id' ? https://calm-forest-11598.herokuapp.com/interests?house_list_id=1&user_id=14 https://calm-forest-11598.herokuapp.com/interests?house_list_id=1&user_id=1000
When i try to run manually, i still see the same errors   Participant#email sends an email to the participant     Failure/Error: assignment = Assignment.find_by(id: self.assignment_id) Participant#score Get participant score within a round     Failure/Error: scores[questionnaire_symbol][:scores] = Answer.compute_scores(scores[questionnaire_symbol][:assessments], questions[questionnaire_symbol])
When i try to run manually, i still see the same errors   Participant#email sends an email to the participant     Failure/Error: assignment = Assignment.find_by(id: self.assignment_id) Participant#score Get participant score within a round     Failure/Error: scores[questionnaire_symbol][:scores] = Answer.compute_scores(scores[questionnaire_symbol][:assessments], questions[questionnaire_symbol])
When i try to run manually, i still see the same errors   Participant#email sends an email to the participant     Failure/Error: assignment = Assignment.find_by(id: self.assignment_id) Participant#score Get participant score within a round     Failure/Error: scores[questionnaire_symbol][:scores] = Answer.compute_scores(scores[questionnaire_symbol][:assessments], questions[questionnaire_symbol])
When I delete a real estate company, all the realtors in that company get deleted too. Realtors can still edit houses they made for one company after they switch companies.
When I delete a real estate company, all the realtors in that company get deleted too. Realtors can still edit houses they made for one company after they switch companies.
When house is deleted, the inquires and replies are deleted as well, this has been handled. Error page occurs when I try to sign up for the same role with the same email. Error in deleting a user if the user has submitted an inquiry/reply House hunter can add a house to interest list multiple times, should not be allowed, by maybe hiding the button if the house is already in the current user's interest list. README.md does not cover how the system handles edge cases. 
When delete a user with inquiry data, the system crush and return an error.
When an admin deletes a real estate company which has realtors and houses, the company gets is getting deleted along with the realtors which is not the expected functionality because realtors can exist even without being a part of a company. The realtor should not get deleted from the database. Could not test whether the inquiries are deleted if the house hunter is deleted because the admin is unable to delete a house hunter from the Users list.
When admin try to delete a user, the website return some error. When the admin try  to delete a real estate company, it just redirect to the edit route instead of delete the company 
When admin deletes a company associated with a realtor, it gets reflected in the realtors profile. His company name shows nothing and the houses listed were also deleted. Admin is not able to view house hunters profile (error in deployment), but can view the same using Users section. When a user is deleted by admin, his inquiries are removed and he is no more a potential buyer too. When realtor changes/ creates new company, his previous company houses are deleted. This is reflected in the admin table too. Realtor is not able to view houses listed by others.  Edge cases A company can be created without filling in the fields required. (Yes an empty row is displayed to the hunter when a company is created without any detail). But it displays the Company number (row number) while seeing the houses. So a house is shown for a company that doesnt exist in the View companies page. Session control : When user signs out from a page and then goes back, the profile page should not be shown (as he is signed out). This should be considered.
When a real estate company is deleted, the respective houses are deleted, the realtors are not. Further, even after deletion, the company of those realtors remains the same. They can even edit the deleted company from their profile and list a house on behalf of the deleted company. When a realtor edits and updates his company after it is deleted, it actually gets created again. When a realtor changes his company, he can view only the houses of his current company and is prohibited to delete houses of his previous company. This works as expected. When a house hunter is deleted, (s)he gets removed from the potential buyers list, but inquiries are only partially deleted as in the row is still there but only two columns show data.      
When a company is deleted by the admin, the realtor's profile, belonging to that company, crashes.
What will happen if the admin tries to delete a real estate company which has some realtors and houses?: App crashes What will happen if admin tries to delete a house hunter who has submitted several inquiries?: App crashes
What is wrong with the current implementation is clearly not stated.
What is wrong with the current implementation is clearly not stated.
What and how explained well but they explain the why behind their actions a bit more.
Well, we can say that they have indeed tested the models they have defined in their README file on GitHub. The definitions of the functionalities in the 'db' folders and the controllers folder makes it very easy to follow how they have structured the code. Also, the way the houses are added, the redirection the houses to the links such as CMU and NCSU websites is very intuitive and well thought out, and thus barring out a few minor mistakes in linking and page definitions the code has a good ability to run for the defined cases specially for the Admin to be failsafe. Only, one complaint though, the whole structure does crumble when one sees that they have allowed the admin to be DELETED. This is their biggest loophole. 
Well, not much information has been given on the wiki page. Though they have put some UML flow diagrams which give us an idea of the flow.
Well, not much information has been given on the wiki page. Though they have put some UML flow diagrams which give us an idea of the flow.
Well, all the important points have been mentioned, like problem statement, test plan, etc. Though, the test plan must include how the proposed solution is going to be achieved which they have not mentioned.
Well, all the important points have been mentioned, like problem statement, test plan, etc. Though, the test plan must include how the proposed solution is going to be achieved which they have not mentioned.
Well, a small paragraph on implementation has been given, but that does not quite serve the purpose. Though, there are UML diagrams which explain the flow.
Well, a small paragraph on implementation has been given, but that does not quite serve the purpose. Though, there are UML diagrams which explain the flow.
Well written and able to follow. However, I see no branches created (and hence pull requests merged). All work is pushed direct to master.
Well structured code using MVC pattern.  Couldn't find admin credentials mentioned on readme. 
Well done! Most of the functionality I commented on last time has been fixed with very intuitive UI. The only thing I couldn't find still was being able to view all inquiries as an admin. Very good updates overall!
well done work except the lack of search  the README file and the UI is not so good  anyway It's a good work! 
Watching the videos, I feel it is ready but no deployment link.
Was unable to test the work from UI , but the implementation looks okay. I would have liked some screen hots of mails and videos to be uploaded as references so that reviewers could look at them as well.   
Was unable to test the work from UI , but the implementation looks okay. I would have liked some screen hots of mails and videos to be uploaded as references so that reviewers could look at them as well.   
Visualizations are great for helping to clarify system analysis and relations in this portion of the image. More images on the design and implementation would also be a great addition for further understanding.
Visualization offers only a flow chart, but other UML diagrams like class diagram would have been more helpful.,  
Visualization offers only a flow chart, but other UML diagrams like class diagram would have been more helpful.,  
Visualization offers only a flow chart, but other UML diagrams like class diagram would have been more helpful.,  
Visual aids are absent from the write-up. Suggestions: Use cases for email notification can be added. Template/design of the new/modified email can be added.  Any relevant design pattern diagram can be added.
Visual aids are absent from the write-up. Suggestions: Use cases for email notification can be added. Template/design of the new/modified email can be added.  Any relevant design pattern diagram can be added.
Visual aids are absent from the write-up. Suggestions: Use cases for email notification can be added. Template/design of the new/modified email can be added.  Any relevant design pattern diagram can be added.
View Inquiries links to the CreateHouseInformation page, and when you are creating any type of object, there seems to be no validation, and you are required to manually input things like ID. It seems like inquiries don't exist in the system, and when you create a house, it's done through the inquiry page.
Videos provided and the project is not deployed so cannot test from UI. But the issues are fixed and the system is working as expected. 
Very well implemented. All edge cases I tried are working. README.md does not detail how the system handles edge cases.
very inconvenient for me to review without a deployed version! 
Very impressed by writeup. One suggestion: Problem statement is not mentioned thoroughly however, solution is very well ellaborated with screenshots and code snippets. 
Very impressed by writeup. One suggestion: Problem statement is not mentioned thoroughly however, solution is very well ellaborated with screenshots and code snippets. 
Very good guidance. Works as intended. This project is about enhancing Juniper bookmarks. The features work as they are supposed to. Automated RSpec tests were added. Could have described the automated tests in the wiki.
Very good guidance. Works as intended. This project is about enhancing Juniper bookmarks. The features work as they are supposed to. Automated RSpec tests were added. Could have described the automated tests in the wiki.
Very good explanation and good work on giving alternatives. It would have been great if the team had added DB design as well but the work done is sufficient. 
Very good explanation and good work on giving alternatives. It would have been great if the team had added DB design as well but the work done is sufficient. 
very few conflicts
Very Few commits in the project, with most commits coming just from one user towards the deadline period. A lot of Commits done after the deadline period
Very basic design
Very basic design
Very basic design
Variable names and test cases are named appropriately. Explanation of reasons for the style of code and problem solving approach is lacking.
Variable names and test cases are named appropriately. Explanation of reasons for the style of code and problem solving approach is lacking.
Variable names and test cases are named appropriately. Explanation of reasons for the style of code and problem solving approach is lacking.
Variable names and test cases are named appropriately. Explanation of reasons for the style of code and problem solving approach is lacking.
Variable names and test cases are named appropriately. Explanation of reasons for the style of code and problem solving approach is lacking.
Variable names and test cases are named appropriately. Explanation of reasons for the style of code and problem solving approach is lacking.
Validations are not implemented in all the models.
Using google charts is a good idea.
Using a strategy pattern to solve this problem is one of the simplest approach according to me and team has selected the same thing. Only thing i would suggest the team is to be carefull when separating the classes as it might have some un-intended side affect.
Uses UML diagrams and images to explain where the changes will be made.
User view is easy to understand and navigate. There are certain links which don't work and doesn't load any page.  
User Role-: Once a user is created, and goes to edit their profile, if they uncheck both roles there is no way for that user to get any role back. Their should be a check in the user table that both roles cannot be blank. Also, unfortunately there is no mention of how the system handles edge cases in the Readme file
User model doesn't include any relationship with other models.
User model doesn't have all has_many relations defined
User model could have been subdivided into different roles/models such as Realtor and Househunter. 
User interface should not show the location Users#dashboard   Find me in app/views/users/dashboard.html.erb
User interface should not show the location Users#dashboard   Find me in app/views/users/dashboard.html.erb
User interface should not show the location Users#dashboard   Find me in app/views/users/dashboard.html.erb
User Interface is nice. Team has tried keeping the UI as per standards and easy to access to user. They have also added validation. Team could give more clear and understandable errors.
User Interface is nice. Team has tried keeping the UI as per standards and easy to access to user. They have also added validation. Team could give more clear and understandable errors.
Use of a few variables is hard to understand. For e.g. : x.assignment.id Otherwise, most variables and classes are aptly named.
Use of a few variables is hard to understand. For e.g. : x.assignment.id Otherwise, most variables and classes are aptly named.
Use of a few variables is hard to understand. For e.g. : x.assignment.id Otherwise, most variables and classes are aptly named.
Use case diagrams explain the requirements properly but no system design related diagram or mock ups are given.
Use case diagrams explain the requirements properly but no system design related diagram or mock ups are given.
Use case diagram is present but it would have been nice to see a sequence diagram to understand the flow. 
Use case diagram is present but it would have been nice to see a sequence diagram to understand the flow. 
Use case diagram is present but it would have been nice to see a sequence diagram to understand the flow. 
Upon testing the system for edge cases, the following results were obtained : 1. The real estate company is destroyed and the realtors houses and houses inquiries for the same are removed. 2. The realtor can switch to another company. They will be prohibited to remove the houses listed in the previous company though. 3. The house hunter accounts are deleted without their inquiries . 4. The System does not check for regex fr phone number input during signup.
Upon testing the system for edge cases, the following results were obtained : 1. The real estate company is destroyed and the realtors houses and houses inquiries for the same are removed. 2. The realtor can switch to another company. They will be prohibited to remove the houses listed in the previous company though. 3. The house hunter accounts are deleted without their inquiries . 4. The System does not check for regex fr phone number input during signup.
Upon manually testing the author's work it is noticed that the functionalities have not been implemented to the full. The team did perform migration of the CRUD functionality for the Questionnaires from QuestionnairesController and removed large patches of if-case statements by placing it in the helper function in the apt model. This however has reduced their coverage.
Unsure in this regard since they neither have the deployment neither the GitHub link to their repository, and also the coverage and the Travis CI say otherwise. Even so, in their video they show in proof that everything runs. One does wonder though, how to test without actually having the links of the repo. 
Unfortunately, there was no new commit added. The latest commit is 10 days ago
Unfortunately, the test cases are lacking This could be improved before the second submission
Unfortunately, the test cases are lacking This could be improved before the second submission
Unfortunately, the test cases are lacking This could be improved before the second submission
Unfortunately, the team has not provided any link to the write-up. Hence, I would not be able to provide reviews for this question.
Unfortunately, the team has not provided any link to the write-up. Hence, I would not be able to provide reviews for this question.
Unfortunately, the team has not provided any link to the write-up. Hence, I would not be able to provide reviews for this question.
Unfortunately, the team has not provided any link to the write-up. Hence, I would not be able to provide reviews for this question.
Unfortunately, the build failed in the second round. But, in my opinion this was not due to the team's mistake. The build failure says the two examples failed are in files "assignment_spec.rb" and "assignment_participant_spec.rb", both files which the team had no connection with. I could be wrong though. As the build was passing and there tests were running in the first round, I am inclined to believe it was because of another team's incorrect code that this team pulled into their branch by mistake.
Unfortunately, the build failed in the second round. But, in my opinion this was not due to the team's mistake. The build failure says the two examples failed are in files "assignment_spec.rb" and "assignment_participant_spec.rb", both files which the team had no connection with. I could be wrong though. As the build was passing and there tests were running in the first round, I am inclined to believe it was because of another team's incorrect code that this team pulled into their branch by mistake.
Unfortunately, the build failed in the second round. But, in my opinion this was not due to the team's mistake. The build failure says the two examples failed are in files "assignment_spec.rb" and "assignment_participant_spec.rb", both files which the team had no connection with. I could be wrong though. As the build was passing and there tests were running in the first round, I am inclined to believe it was because of another team's incorrect code that this team pulled into their branch by mistake.
Unfortunately, no tests were added. It would have been good if the team added test cases to check their UI changes.
Unfortunately, no mention of the word "test plan" has even taken place in their whole Wiki page. So, it seems that they are yet to implement the testing functionalities in their project. Although, it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository.    
Unfortunately, no mention of the word "test plan" has even taken place in their whole doc. So, it seems that they are yet to implement the testing functionalities in their project. Although, it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository.     Moreover, as a part of their project, one of their problem statements is in fact to write the tests for a specific problem scenario. I have reason to believe even that has not been done judging from the pull request.
Unfortunately, no mention of the word "test plan" has even taken place in their whole doc. So, it seems that they are yet to implement the testing functionalities in their project. Although, it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository.  
Unfortunately, no mention of the word "test plan" has even taken place in their whole doc. So, it seems that they are yet to implement the testing functionalities in their project. Although, it would have been better if they had checked if the checks or the tests already existed in the first place in the git repository.  
Unfortunately, most of the test cases failed while testing The realtor does not get deleted from the system after the deletion of his/her respective real estate company. The link to create new houses redirects to a different link, hence I was not able to create new houses and test certain cases The inquiries submitted by the house hunter remain in the database even after the deletion of the house hunter All the inquires of the particular house are shown to every realtor, which is not an ideal case These are some of the cases that need attention. Owing to the work done on remainder of the project, these changes would be implemented easily with some effort  
Unfortunately, most of the test cases failed while testing The realtor does not get deleted from the system after the deletion of his/her respective real estate company. The link to create new houses redirects to a different link, hence I was not able to create new houses and test certain cases The inquiries submitted by the house hunter remain in the database even after the deletion of the house hunter All the inquires of the particular house are shown to every realtor, which is not an ideal case These are some of the cases that need attention. Owing to the work done on remainder of the project, these changes would be implemented easily with some effort  
Unfortunately, I could not see any code written by the team for testing. However, the team has provided a description on how some of the edge cases have been handled. According to coveralls, the overall test has decreased by 0.01%. This could be one of the major topics for improvements with regards to this issue
Unfortunately, I could not see any code written by the team for testing. However, the team has provided a description on how some of the edge cases have been handled. According to coveralls, the overall test has decreased by 0.01%. This could be one of the major topics for improvements with regards to this issue
Unfortunately, I am unable to view this Git Repository. This is, most likely, due to the fact that the repo is set to private and only available to those currently collaborating. I would suggest making the setting adjustment for the repo to be public so reviewers and TA's can grade the work that has been completed. When coding, take note of the stylistic norms of Ruby regarding method calls, parenthesis, and syntax best practices. Additionally, maintain a consistent indention scheme for ease of review.
Unfortunately, all the edge cases in the given question are failing The system encounters an error while deleting a real estate company After changing the real estate company, the realtor can still delete the house that he had created with a previous company Even after deleting the user from the dashboard, the queries submitted by the users are not deleted There was no potential buyers list available for viewing even after adding houses to the interest list myself These cases could be seen upon and improved
Unfortunately, all the edge cases in the given question are failing The system encounters an error while deleting a real estate company After changing the real estate company, the realtor can still delete the house that he had created with a previous company Even after deleting the user from the dashboard, the queries submitted by the users are not deleted There was no potential buyers list available for viewing even after adding houses to the interest list myself These cases could be seen upon and improved
Unfortunately there were no visual aids provided, even though they went through the plan in a good way but few diagrams would definitely help.
Unfortunately the visual aids are missing.
Unfortunately the visual aids are missing.
Unfortunately the visual aids are missing.
Unfortunately the team has missed out on adding any visual aids to the document. I would suggest that where you list all the column names which would be sorted in each view, also add a screenshot of how that view looks at the present moment, and a low-fi sketch of how the view would look after the changes have been implemented.
Unfortunately the team has missed out on adding any visual aids to the document. I would suggest that where you list all the column names which would be sorted in each view, also add a screenshot of how that view looks at the present moment, and a low-fi sketch of how the view would look after the changes have been implemented.
Unfortunately the authors have not added any more text to improve the writeup as suggested in the first round of reviews.
Unfortunately the app has not been deployed on a cloud platform and neither is there any description in the readme file. I suggest to use heroku as your deployment platform. You may want to look into this video here = https://www.youtube.com/watch?v=5kVtmnZNC8w&feature=youtu.be   Also if you deploy in heroku, it does not support sqlite or mysql in production. Hence you will need to migrate your DB to postgres. Check out this link for help = https://devcenter.heroku.com/articles/sqlite3
Unfortunately the app has not been deployed on a cloud platform and neither is there any description in the readme file. I suggest to use heroku as your deployment platform. You may want to look into this video here = https://www.youtube.com/watch?v=5kVtmnZNC8w&feature=youtu.be   Also if you deploy in heroku, it does not support sqlite or mysql in production. Hence you will need to migrate your DB to postgres. Check out this link for help = https://devcenter.heroku.com/articles/sqlite3
Unfortunately no visual aids are provided in the design. I would suggest providing the simplified UML diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team, but the ones that the team finds will be most relevant to the reader.
Unfortunately no visual aids are provided in the design. I would suggest providing the simplified UML diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team, but the ones that the team finds will be most relevant to the reader.
Unfortunately no visual aids are provided in the design. I would suggest providing the simplified UML diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team, but the ones that the team finds will be most relevant to the reader.
Unfortunately no visual aids are provided in the design. I would suggest providing the simplified UML diagram that does not necessarily capture all of the classes that interact with the ones that will be modified by the team, but the ones that the team finds will be most relevant to the reader.
Unfortunately most of the edge cases fail. The houses of the realtors are listed even after deleting the real estate company. Also the realtors list display the realtors associated with the deleted real estate company. The realtor is able to access the houses owned by old real estate companies after changing their own real estate company After deleting a user, the inquiries continue to be listed 
Under 'tested methods' they have explained everything really nicely. The video is just to long, 22 minutes. You have have made it short.
Under 'tested methods' they have explained everything really nicely. The video is just to long, 22 minutes. You have have made it short.
Unable to view the git repository. Git is truly your friend during development. Make a habit of really committing with useful commit messages and at appropriate feature development times. My team and I found that having different commits for each feature implementation gave many options for points in time that we could revert back to in the invent that something went awry.
Unable to view an enquiry for a house.
Unable to view an enquiry for a house.
Unable to view a newly created house.
Unable to test
Unable to test
Unable to switch real estate companies, leads to an error page.
Unable to login to the expertiza url
Unable to list houses in the application. Since the basic functionalities are not working , the edge cases could not be tested.
Unable to list houses in the application. Since the basic functionalities are not working , the edge cases could not be tested.
Unable to list houses in the application. Since the basic functionalities are not working , the edge cases could not be tested.
Unable to find any difference after the first review although the team had to explain about some issues.
Unable to delete users from admin Why can the admin edit password of the users ?  
Unable to delete users from admin Why can the admin edit password of the users ?  
Unable to delete users from admin Why can the admin edit password of the users ?  
Unable to create houses so couldn't really check any functionality.
Unable to create houses so couldn't really check any functionality.
Unable to create houses so couldn't really check any functionality.
Unable to create company from admin
Unable to create company from admin
Unable to create company from admin
Unable to create a new house
Unable to create a new house
Unable to create a new house
Unable to change company as a realtor, readme file isn't discussing any of the possible edge cases.
Unable to change company as a realtor, readme file isn't discussing any of the possible edge cases.
UML mockup and tables are absent. 
UML mockup and tables are absent. 
UML mockup and tables are absent. 
UML mockup and tables are absent. 
uml is missing but er diagram is given. you can add a uml diagram it explains things better. 
uml is missing but er diagram is given. you can add a uml diagram it explains things better. 
uml is missing but er diagram is given. you can add a uml diagram it explains things better. 
UML diagrams are not provided. Please add it.
UML diagrams are not provided. Please add it.
UML diagrams are not provided. Please add it.
UML diagrams are not mentioned but since these are UI changes, the changes are sufficiently explained with the help of representation of UI in terms of images.
UML diagrams are not included
UML diagrams are not included
UML diagrams are not included
UML diagrams and the solution proposed by the authors to solve the issues is missing.
UML diagrams and the solution proposed by the authors to solve the issues is missing.
UML diagrams and the solution proposed by the authors to solve the issues is missing.
UML diagrams and the solution proposed by the authors to solve the issues is missing.
UML diagram is missing. Though the modified UI is explained.
UML diagram is missing. Though the modified UI is explained.
UML and Class diagram are needed.  If the screenshot of the same functionality was given then it would have been better.
UML and Class diagram are needed.  If the screenshot of the same functionality was given then it would have been better.
UI mockups and UML diagrams are descriptive. However, more information should be conveyed to how to solve the problem
UI looks nice but I found the it to be a bit confusing. The relation between User, House Hunter and Realtor is not apparent. It would helpful if it could be explained in detail in the README file.
UI looks nice but I found the it to be a bit confusing. The relation between User, House Hunter and Realtor is not apparent. It would helpful if it could be explained in detail in the README file.
UI is simple to follow. Enhancements mentioned below can simplify various tasks 1. Preferred contact method can be drop down with "text, mail, phone" options. 2. User role can be drop down with "buyer and realtor".
UI is simple to follow. Enhancements mentioned below can simplify various tasks 1. Preferred contact method can be drop down with "text, mail, phone" options. 2. User role can be drop down with "buyer and realtor".
UI is nicely done.  There are a few things that can be improved:  1. Clear all / list all houses field once a search parameter has been given 2. Do not show receiver object id in inquiries. Maybe something more useful.
UI is nicely done.  There are a few things that can be improved:  1. Clear all / list all houses field once a search parameter has been given 2. Do not show receiver object id in inquiries. Maybe something more useful.
UI is fine but cannot access readme file
UI is fine but cannot access readme file
UI is easy to use, a suggestion would be to display tables of data better, with better spacing (the list houses page for example has the columns cramped up together)
UI is easy to understand, but problematic to use.  Admin must use user ids to create hunters or realtors or inquiries and the display is via user IDs too. Signup page redirect to show all signed up users. From there, any one who is not logged in can delete users. Same user can be added as house hunter any number of times with separate entries. No validations are added (I can choose role no. 5 for signup), and no error messages have been provided. Passwords are in plain text. In some cases, wrong notices are displayed - create user with wrong info gives "User account was successfully created. AAA!" which is incorrect as user was not actually created.  Back to your page links do not work
UI is easy to understand, but problematic to use.  Admin must use user ids to create hunters or realtors or inquiries and the display is via user IDs too. Signup page redirect to show all signed up users. From there, any one who is not logged in can delete users. Same user can be added as house hunter any number of times with separate entries. No validations are added (I can choose role no. 5 for signup), and no error messages have been provided. Passwords are in plain text. In some cases, wrong notices are displayed - create user with wrong info gives "User account was successfully created. AAA!" which is incorrect as user was not actually created.  Back to your page links do not work
UI has modified which is good.
UI for new house needs improvement. Forms need to be more precise rather than adding many radio buttons as in the case for 'New House'. UI for Inquiry/Reply needs to be more clear. 
UI for new house needs improvement. Forms need to be more precise rather than adding many radio buttons as in the case for 'New House'. UI for Inquiry/Reply needs to be more clear. 
UI for new house needs improvement. Forms need to be more precise rather than adding many radio buttons as in the case for 'New House'. UI for Inquiry/Reply needs to be more clear. 
UI doesn't have proper navigation in many pages. A suggestion would be to display the data in a more spaced out way, using html tables or such methods, as it looks very cramped and confusing.
UI doesn't have proper navigation in many pages. A suggestion would be to display the data in a more spaced out way, using html tables or such methods, as it looks very cramped and confusing.
UI displays session info, file paths and # tags. Could be improved with little efforts
UI displays session info, file paths and # tags. Could be improved with little efforts
UI displays session info, file paths and # tags. Could be improved with little efforts
Two names for the Realestate company references creates confusion: company_id, re_company_id  
Two issues resolved seem like working pretty well and can be deployed in production. Third unresolved issue is a good start for future team to pick up.
Try to include use case diagram to indicate your flow and a class diagram of how you'll be implementing the solution.
Try to give a class diagram inorder to explain your implementation
Tried to run the RSPEC test by copying the _spec.rb file and enusred that the Factory method is inserted, I got an error in 2 examples   Participant#email sends an email to the participant     Failure/Error: assignment = Assignment.find_by(id: self.assignment_id) Participant#score Get participant score within a round     Failure/Error: scores[questionnaire_symbol][:scores] = Answer.compute_scores(scores[questionnaire_symbol][:assessments], questions[questionnaire_symbol])     
Tried to run the RSPEC test by copying the _spec.rb file and enusred that the Factory method is inserted, I got an error in 2 examples   Participant#email sends an email to the participant     Failure/Error: assignment = Assignment.find_by(id: self.assignment_id) Participant#score Get participant score within a round     Failure/Error: scores[questionnaire_symbol][:scores] = Answer.compute_scores(scores[questionnaire_symbol][:assessments], questions[questionnaire_symbol])     
Travis Tests have failed. No conflicts in the pull request with the master branch.
Travis Tests have failed. No conflicts in the pull request with the master branch.
Travis test has failed, I can see it in pull request page. Conflict has not been resolved. 
Travis test has failed, I can see it in pull request page. Conflict has not been resolved. 
Travis test did not pass. Errors were not fixed. Continuous Integration failure. 
Travis test build have failed. Can write version compatible code
Travis says some tests have failed. No conflicts though
Travis says some tests have failed. No conflicts though
Travis Passed. Code Climate has 82 issues
Travis failed
Travis Cl build failed
Travis CI tests have failed. But there are no conflicts and the build is ready to be merged with Master branch.
Travis CI test has been failed on Github.
Travis CI has error ed. The tests fail.However there are no conflicts with the base branch or master branch.
Travis CI failed.
TRAVIS CI didn't Pass, but team have fixed most of CODE Climate issues
TRAVIS CI didn't Pass, but team have fixed most of CODE Climate issues
TRAVIS CI didn't Pass, but team have fixed most of CODE Climate issues
Travis CI did not pass. Code climate also has 121 issues to fix.
Travis CI did not pass. Code climate also has 121 issues to fix.
Travis CI did not pass. Code climate also has 121 issues to fix.
Travis CI build passed, But Code Climate identified few issues
Travis CI build passed, But Code Climate identified few issues
Travis CI build is not passed. Though this was a bit common even for the second review, the 'codeclimate' issues are still showing.
Travis CI build is failing. Other things are fine.
Travis CI build is failing. Other things are fine.
Travis CI build is failing. Lot of warnings and issues that have not been fixed. Many of them are trivial and easy to fix. 
Travis CI build is failing. Lot of warnings and issues that have not been fixed. Many of them are trivial and easy to fix. 
Travis CI build is failing. Lot of warnings and issues that have not been fixed. Many of them are trivial and easy to fix. 
Travis CI build is failing.
Travis CI build indicates that the tests have failed. The code climate issues in the Danger Bot also did not pass. The team must look towards cleaning up the code.  
Travis build failing at ./spec/models/menu_spec.rb:120
Total of only 10 commits has been made on 3 days.
total of 10 commits are visible on got but do not show a linear increment in the work done.
Too long if statements are  written.
To the most extent of it. Since, the profile of admin is problematic and not allowing us to login at all. That area is unavailable for testing. 
Throws error when deleting house hunter who has an inquiry.
Though this project doesn't require any UML diagram as such. However, a flowchart showing the work flow would have made the design document better and efficient.
Though this project doesn't require any UML diagram as such. However, a flowchart showing the work flow would have made the design document better and efficient.
Though this project doesn't require any UML diagram as such. However, a flowchart showing the work flow would have made the design document better and efficient.
Though they have detailed their approach on DRY, they haven't documented the core issue beyond non UTF-8 not accepted. Its hard to follow their scope as only review or entire expertiza use, as the table alteration is done as a whole
Though they have detailed their approach on DRY, they haven't documented the core issue beyond non UTF-8 not accepted. Its hard to follow their scope as only review or entire expertiza use, as the table alteration is done as a whole
Though the UI mockup explains the functionalities, it could have been more legible.
Though the UI mockup explains the functionalities, it could have been more legible.
Though the team have explained their work pretty well, the team should think about adding a few diagrams to better help in the understanding of the project. Currently the team have not used any diagrams.
Though the pull request has been passed, but the writeup does not explain the details of the implementation, like what sorting algorithm the team has implemented using jQuery etc. The design part of the writeup is very hollow, and needs further refinement.
Though the pull request has been passed, but the writeup does not explain the details of the implementation, like what sorting algorithm the team has implemented using jQuery etc. The design part of the writeup is very hollow, and needs further refinement.
Though the commits started late in the project's life, there were commits frequently and also after round 1. The commit messages could have been a little more descriptive to fully comprehend the commit changes. 
Though the authors have included a thorough testing plan Inside the commits I couldn't find any commits for adding testing files. they could have added basic UI testing using Capybara and cucumber.
Though the authors have included a thorough testing plan Inside the commits I couldn't find any commits for adding testing files. they could have added basic UI testing using Capybara and cucumber.
Though the authors have included a thorough testing plan Inside the commits I couldn't find any commits for adding testing files. they could have added basic UI testing using Capybara and cucumber.
Though the author has not used UML diagram, but the author has used other forms of picrorial representation to convey what he meant to say. But, the team should definitely consider adding one or two i the future.
Though not much of design has been giving but as per the functional diagram given, it appears simple implementation 
Though not much of design has been giving but as per the functional diagram given, it appears simple implementation 
Though not much "hand writed" but still great code with good project structure.
Though an approach has been mentioned of the proposed changes, but they do not have a test plan.
Though an approach has been mentioned of the proposed changes, but they do not have a test plan.
This UI is pretty good. It's fairly intuitive to follow. The only thing I'd recommend is to have a link to the signup page on your welcome screen.
This UI is pretty good. It's fairly intuitive to follow. The only thing I'd recommend is to have a link to the signup page on your welcome screen.
This team used migrations effectively, and generally had DRY code, but it still felt very ad-hoc. I couldn't find any patterns that drove the changes they made.
This team pushed code in a few very bursty times, but they did push commits after the initial review.
This team has done a good job of following Rails conventions. There are DB migrations, common layouts of the application structure and proper use of ActiveRecord helpers.
This team claimed to have fully tested the RealEstateCompany Model and Controller, but there were no tests in the RealEstateModel tests. I didn't check every file after since I don't like being lied to :)
This team claimed to have fully tested the RealEstateCompany Model and Controller, but there were no tests in the RealEstateModel tests. I didn't check every file after since I don't like being lied to :)
This system is not properly linked together. Real Estate companies are not required to list houses, realtors can see and respond to all inquiries from everyone, creation of inquiries is not linked to a specific house.
This system has almost all needed functionality, but it's by far the best I've seen. Replying to an inquiry does not seem to work properly.
This system has almost all needed functionality, but it's by far the best I've seen. Replying to an inquiry does not seem to work properly.
This system handles all relationships properly by using has_many/belongs_to constructs correctly and addition of relevant foreign key attributes in the appropriate tables.
This system doesn't have a UI I can view as it seems to be a browser add on.
This system does not seem to work correctly. When I log in as a realtor and go to view companies, I get a Something Went Wrong error from heroku, telling me to check the logs. Validation in adding houses also doesn't seem to work correctly.
This system does not seem to work correctly. When I log in as a realtor and go to view companies, I get a Something Went Wrong error from heroku, telling me to check the logs. Validation in adding houses also doesn't seem to work correctly.
This section of the wiki is currently missing. When you write this section be sure to state why you tested certain cases in a particular fashion accompanied with code examples so that the reader can clearly see what was done.
This section is still blank. 
This section is still blank. 
This project is on implementing a single rejoinder per team for reviews instead of per participant reviews and also makes the feedback link for reviews more accessible. The writeup explained the background about Expertiza and the motivation for the project. It then moved on to list the tasks that were implemented and files that were modified in the project. It showed the current and new implementation clearly. The writeup, however, could have quoted the tests done using RSpec and the UI, instead of plainly mentioning the that the tests were modified to suit the current implementation.
This project doesn't involve the UI. It focusses on audio processing by fixing the missing audio nodes in Servo's WebAudio standard. Precisely it generates the sine, square, sawtooth and triangle waveforms. The code that was modified and included from scratch works as intended. 
This project does not deal with UI
This project does not deal with UI
This logic to calculate composite score : composite score= Max score -[self review score - peer review score] is basically taking the min scores. Not sure what you are trying to achieve here . It is not a good measure to calculate composite score.
This logic to calculate composite score : composite score= Max score -[self review score - peer review score] is basically taking the min scores. Not sure what you are trying to achieve here . It is not a good measure to calculate composite score.
This is where the project lacks the mos. The write-up isn't very informative, specially for an outsider. It states the points very shortly, without going into much depth. Also, the writeup bombards the user with lots of un-relevant information and pieces of code, which make it feel very long, although lacking significant content. The writeup could have been more detailed, and could have omitted the unnecessary parts, like dumping of code, and not explaining what it does. 
This is where the project lacks the mos. The write-up isn't very informative, specially for an outsider. It states the points very shortly, without going into much depth. Also, the writeup bombards the user with lots of un-relevant information and pieces of code, which make it feel very long, although lacking significant content. The writeup could have been more detailed, and could have omitted the unnecessary parts, like dumping of code, and not explaining what it does. 
This is the only place I found the authors could improve. There is no mention of the actual files that need to be modified. They have detailed out the change that they propose, but no mention of actual files and the code change. It would be further increase the clarity of the solution if you could include that too.
This is semi-passable. The wiki is hosted on Wikipedia, so they clearly didn't read the directions. I mean, I get it, though. I wrote tests, and was also unclear about what exactly the Wiki should contain.
This is semi-passable. The wiki is hosted on Wikipedia, so they clearly didn't read the directions. I mean, I get it, though. I wrote tests, and was also unclear about what exactly the Wiki should contain.
This is one area where the authors could have improved. Even though there is a good amount of textual description and images, the authors could have added a snapshot of the code changes that they wanted to propose. This would make it clear as to the exact changes that you propose and further help answer this question.
This is one area where the authors could have improved. Even though there is a good amount of textual description and images, the authors could have added a snapshot of the code changes that they wanted to propose. This would make it clear as to the exact changes that you propose and further help answer this question.
This is not a fair ask. As far as I can tell, there is no document that says we should create a test plan.
This is a very innovative idea. Well explained design document. Files needed to be changes are also mentioned.
This is a mozilla project and I am not sure what are the testing requirements and depth to be covered, as it is not mentioned in the document. But the steps mentioned do suggest that basic testing id done
This is a mozilla project and I am not sure what are the testing requirements and depth to be covered, as it is not mentioned in the document. But the steps mentioned do suggest that basic testing id done
This doesn't apply here much as its just writing testcases. However some of the tests documented in Menu like Mean with role and without role are confusing. I had to look through the entire doc to figure out why is that written that way. It could be better to have comments as to why a particular test is written , what does it test and why is the expected output the way it is.
This design is good. There are no visual aids. Maybe they can consider use it to make it more detailed.
This design is good. There are no visual aids. Maybe they can consider use it to make it more detailed.
This couldn't be reviewed as the design doc is incomplete.
This couldn't be reviewed as the design doc is incomplete.
This code will need to be refactored, however, we will not need to build it from scratch. Only some functionality has to be divided into chunks and moved into helper functions. The functionality works well.
This code will need to be refactored, however, we will not need to build it from scratch. Only some functionality has to be divided into chunks and moved into helper functions. The functionality works well.
This code will need to be refactored, however, we will not need to build it from scratch. Only some functionality has to be divided into chunks and moved into helper functions. The functionality works well.
This code is ready to be deployed if they ensure that variables are renamed to resemble their actual functionality.  No big issues as such. Resolves the problems well.
This application has the layout expected of a Rails application. However, not enough information was included in the README file about installation.
This application has the layout expected of a Rails application. However, not enough information was included in the README file about installation.
This application has the layout expected of a Rails application. However, not enough information was included in the README file about installation.
They used UI mockups to explain their implementation. Though, some UML diagrams like USE case would be preferred over this.
They used UI mockups to explain their implementation. Though, some UML diagrams like USE case would be preferred over this.
They used the UML diagrams, it really help me a lot when reading the wiki page. Maybe they can also make diagrams about the changes they are going to make.
They use ER diagram to describe the changes, but I think it is not very intuitive for me to understand their task.
They use ER diagram to describe the changes, but I think it is not very intuitive for me to understand their task.
They use ER diagram to describe the changes, but I think it is not very intuitive for me to understand their task.
They use ER diagram to describe the changes, but I think it is not very intuitive for me to understand their task.
They use correct files to do specific behaviors and make advantage of the features ruby and rails provides. However, I think the structure of the files is not clear enough.
They use correct files to do specific behaviors and make advantage of the features ruby and rails provides. However, I think the structure of the files is not clear enough.
They tested at least one controller, but none of the models.
They tested at least one controller, but none of the models.
They team has successfully followed most of the conventions of good programming principles of ruby. The schema was very detailed and cohesive, and the variables were named appropriately and effectively. The readme provided was helpful, but the project lacked in program documentation / comments, which made me to go through each line of code to make sense out of the code. Apart from that, the practices seemed good.
They still have the problem I found in the first round.
They still have the problem I found in the first round.
They started adding more commits after the first round of reviews.
They should have included screenshots associated with the issue. it would help one understand the solution better
They should have included screenshots associated with the issue. it would help one understand the solution better
They should have added the code as a part of the writeup instead of providing links to github commits.
They only presents a flow chart, it will be better if there is a UML diagram.
They only presents a flow chart, it will be better if there is a UML diagram.
They only presents a flow chart, it will be better if there is a UML diagram.
They only presents a flow chart, it will be better if there is a UML diagram.
they only had 30 commits which I think is a little low considering there were two phases of submission. In my first phase, my team had at least 30 commits.
They missed some relation such as house and inquires 1-n relation.
They missed some relation such as house and inquires 1-n relation.
They missed some relation such as house and inquires 1-n relation.
They might like to elaborate more on how they plan to use the hash of students to retrieve the specific information of the assignments. For eg. what models will you be using to query the DB.
They may misunderstand the meaning of test plan, they just put the code on test plan, so i cannot judge weather they are success or fail.
They may misunderstand the meaning of test plan, they just put the code on test plan, so i cannot judge weather they are success or fail.
They made commits but some commits combined a lot of features together at once
They list the files to be changed for the final stage of the project, but the description of what will be changed is still lacking. I'd love to see screenshots of added code, or an explanation of what is and is not needed.
They include the interface required. They should include more details about their design, like how to implement and what need to be changed.
They include the interface required. They should include more details about how the functionality should be implemented.
They haven't made any change since round 1 review. Haven't changed the naming as well eg topic_id1 doesn't seem right to me. But other than 1 or 2 names, everything else looks clean. Also you haven't added comments to you code. YOu should add comments when working in a open source project.
They haven't added any test plan but the test method in documentation shows that all test cases has been checked properly and coverage is also 100%.
They haven't added any test plan but the test method in documentation shows that all test cases has been checked properly and coverage is also 100%.
They have very well stated of about the purpose of their project. they have properly mentioned about the flow of their project which includes the flow chart for their project and also have specified of what kind of graphs they would prefer to show the visualization to the instructor. They have mentioned about how they will proceed in test case but haven't specified which files needs to be test inclusion of that would make the doc more complete
They have very well stated of about the purpose of their project. they have properly mentioned about the flow of their project which includes the flow chart for their project and also have specified of what kind of graphs they would prefer to show the visualization to the instructor. They have mentioned about how they will proceed in test case but haven't specified which files needs to be test inclusion of that would make the doc more complete
They have very well stated of about the purpose of their project. they have properly mentioned about the flow of their project which includes the flow chart for their project and also have specified of what kind of graphs they would prefer to show the visualization to the instructor. They have mentioned about how they will proceed in test case but haven't specified which files needs to be test inclusion of that would make the doc more complete
They have used the design patterns well, and made a good choice in explaining the class hierarchy with the class diagram (however, I'm not quite sure whether it's right to call the diagram as a UML diagram)
They have tested initial testing but functional testing of functionalities is not done. Once we log in , we do not understand which user is it. Realtor house Hunter.  
They have tested initial testing but functional testing of functionalities is not done. Once we log in , we do not understand which user is it. Realtor house Hunter.  
They have Test plan, but I don't think they include test in it, they just put some examples about how to run their code.  
They have Test plan, but I don't think they include test in it, they just put some examples about how to run their code.  
They have Test plan, but I don't think they include test in it, they just put some examples about how to run their code.  
They have Test plan, but I don't think they include test in it, they just put some examples about how to run their code.  
They have test plan section, but too few test cases.
They have test plan section, but too few test cases.
They have test plan section, but too few test cases.
They have test plan section, but too few test cases.
They have test plan part but not including specific plans.
They have provided code snippets explaining what they did. No design pattern used or specified.
They have one scenario. maybe a few more could help better test their work
They have not yet reached the desired goal of 90% coverage.
They have not provided a descriptive test plan, however they have added rspec test cases for their code changes
They have not created a wiki page but uploaded a doc file which explains the work they have done adequately
They have not created a wiki page but uploaded a doc file which explains the work they have done adequately
They have mentioned the method to calculate the composite reviews. But where this method is planned to be added in Expertiza is unclear. This needs to be mentioned.
They have mentioned the method to calculate the composite reviews. But where this method is planned to be added in Expertiza is unclear. This needs to be mentioned.
They have mentioned that they will be using Rspec framework, but have not given what tests they will be implementing and hence can not comment if tests will be shallow or not. 
They have mentioned that they will be using Rspec framework, but have not given what tests they will be implementing and hence can not comment if tests will be shallow or not. 
They have mentioned that they will be using Rspec framework, but have not given what tests they will be implementing and hence can not comment if tests will be shallow or not. 
They have mentioned that they use "factory", but it hasn't been mentioned clearly how they use factories. It would be great if they can incorporate this in the Wiki.
They have mentioned that they use "factory", but it hasn't been mentioned clearly how they use factories. It would be great if they can incorporate this in the Wiki.
They have mentioned that its UI change and has been discussed that testing isn't required in there documentation. But i think you should still have mentioned something there. Steps to follow to check how your changes work. 
They have listed various possibilities to get the task done. The Use Case and UML diagrams also help here. Suggestion : Please add the places where you want to make/have made the changes. 
They have listed various possibilities to get the task done. The Use Case and UML diagrams also help here. Suggestion : Please add the places where you want to make/have made the changes. 
They have listed various possibilities to get the task done. The Use Case and UML diagrams also help here. Suggestion : Please add the places where you want to make/have made the changes. 
They have listed various possibilities to get the task done. The Use Case and UML diagrams also help here. Suggestion : Please add the places where you want to make/have made the changes. 
They have kept up to the standards of the goof coding practice , like they have given reasonable  variables names and functions name which makes it easy to understand what is the function supposed to do. However, they haven't added the comments
they have just tested signup. controller looks good, but model testing isn't complete.
they have just tested signup. controller looks good, but model testing isn't complete.
They have included the initial design. It's suggested that they include more details about the design.
They have explained their implementation through UI mockups. Well, they are not quite understandable, but for the first submission this could work.
They have explained their implementation through UI mockups. Well, they are not quite understandable, but for the first submission this could work.
They have depicted their working strategy through an ER diagram. However, I would suggest them to include more UML diagrams to enhance understandability. Also, the ER diagram is somewhat incomplete.
They have depicted their working strategy through an ER diagram. However, I would suggest them to include more UML diagrams to enhance understandability. Also, the ER diagram is somewhat incomplete.
They have depicted their working strategy through an ER diagram. However, I would suggest them to include more UML diagrams to enhance understandability. Also, the ER diagram is somewhat incomplete.
They have added test cases but very limited. The code coverage was just 14 percent.
They have added test cases and the coverage did increase but only by a little amount. They should have considered adding more test cases since the task of changing the color of the links was such a minuscule one.
They have added new test cases and hence code is not DRY. 
They have added new test cases and hence code is not DRY. 
They have added a test for the feature implemented. But coverage has decreased by a little.
They have a very detailed Test Plan section where they explain every method and what  they did. They don't talk about pre condition or edge cases or invalid input or things like that 
They have a very detailed Test Plan section where they explain every method and what  they did. They don't talk about pre condition or edge cases or invalid input or things like that 
They have a UML diagram which pretty much does it job. I am not in favor of the UI mockups they have put. They could have used any software for the same, which would have made it legible.
They have a UML diagram which pretty much does it job. I am not in favor of the UI mockups they have put. They could have used any software for the same, which would have made it legible.
They have a paragraph saying what they are going to do, but it could be broken up into parts with images for better understanding
They had 2 diagrams. One for UI and one for the implementation. The implementation can me less words and more simple.
They got pretty much every basic functions in the app. But I am not sure where should I login as an admin. and there are some small bugs. There will display two "logout" button after you login as a hunter. Back does not work well. 
They got pretty much every basic functions in the app. But I am not sure where should I login as an admin. and there are some small bugs. There will display two "logout" button after you login as a hunter. Back does not work well. 
They fix part of the problems showed in round 1. All kinds of user still cannot edit his own profile, even though admin can perform CRUD of hunters and realtors. And the realtor can not replace and create a new company. The hunter can not make inquires and realtor are not able to reply them. Besides, the search filter for the houses are not working. And when a realtor views the house's potential buyers, he/she will see all the hunters registered in the system.
They fix part of the problems showed in round 1. All kinds of user still cannot edit his own profile, even though admin can perform CRUD of hunters and realtors. And the realtor can not replace and create a new company. The hunter can not make inquires and realtor are not able to reply them. Besides, the search filter for the houses are not working. And when a realtor views the house's potential buyers, he/she will see all the hunters registered in the system.
They explained it well, but there were no larger design patterns they seemed to be following. I did think that they used AJAX in the appropriate way, but it could be improved in the future.
They explained it well, but there were no larger design patterns they seemed to be following. I did think that they used AJAX in the appropriate way, but it could be improved in the future.
They explained from their requirements and in their flow, that they only need to plan to edit the View, so there is no need for a UML.
They don't have Test Plan section, but they added some screenshots of the test result, I can see they have pretty good path coverage. But I can not know if they test edge cases or invalid input values without seeing their Test Plan.
They don't have a wiki page link, so I cann't see their OSS writeup.
They don't have a wiki page link, so I cann't see their OSS writeup.
They don't have a wiki page link, so I cann't see their OSS writeup.
They don't have a Test Plan.
They don not have any test plan, So I can not judge it
They don not have any test plan, and some functionality of code is not adequate for the test.
They don not have any test plan, and some functionality of code is not adequate for the test.
They don not have any test plan, and some functionality of code is not adequate for the test.
They don not have a test plan.
They don not have a test plan.
They don not have a test plan
They discussed just 1 test case and did implement it. Some more corner cases can be thought of.
They discussed just 1 test case and did implement it. Some more corner cases can be thought of.
They didn't provide a link for me to test their work.
They didn't add the code change details or the files in which they might work. That's still fine as those details can be filled once the implementation is done.
They didn't add the code change details or the files in which they might work. That's still fine as those details can be filled once the implementation is done.
They didn't add the code change details or the files in which they might work. That's still fine as those details can be filled once the implementation is done.
They did not write test code.
They did not write or add proper visual aids to help readers to understand.
They did not write or add proper visual aids to help readers to understand.
They did not write or add proper visual aids to help readers to understand.
They did not very well dealing with the edge cases. (1).Nothing happens. (2).Nothing happens. (3).Nothing happens.
They did not very well dealing with the edge cases. (1).Nothing happens. (2).Nothing happens. (3).Nothing happens.
They did not provide a link for me to test, but their video shows that their code works well.
They did not post their test cases coverage, so I don't know whether their coverage increase or not.
They did not offer any link to code of their project.
They did not have a Test Plan.
They did not have a Test Plan.
They did not have a Test Plan.
They did not deploy their code on a server so I cannot test it manually. However, they upload a video about their work and all the function seems work well.
They did include a test plan. It would be better if they also test the instructor side.
They did explain what they want to do. It's easy to understand and seems reasonable. They can make it more explicit and clear by making it step by step.
They did add the test-cases but the coverage only increased by .3 %
They did add one test case, but I think it is not enough.
They did a good job and they can make it better by fixing some issues . According to the pull request page, the Travis CI build failed and there are 5 code climate issues to fix
They did a good job and they can make it better by fixing some issues . According to the pull request page, the Travis CI build failed and there are 5 code climate issues to fix
They could have also documented their design approach if any and also use  of mocks and stubs. Their test intentions could have been more detailed
They are trying to fix code climate issues, but there are still many failed, and no code change to improve readability. 
They are trying to fix code climate issues, but there are still many failed, and no code change to improve readability. 
They are done with one of the Test Plan scenarios. Second one is yet to be done.
They are done with one of the Test Plan scenarios. Second one is yet to be done.
They added a few changes, could've listed more on Readme.
They added a few changes, could've listed more on Readme.
They add a lot of tests but they did not mention which test they plan to do in the Test Plan section.
These fixes appear to be acceptable. Code Climate could be better, and debug code could be removed, but if the changes in the document are in the source, than I have no complaints.
These fixes appear to be acceptable. Code Climate could be better, and debug code could be removed, but if the changes in the document are in the source, than I have no complaints.
These fixes appear to be acceptable. Code Climate could be better, and debug code could be removed, but if the changes in the document are in the source, than I have no complaints.
These explanations feel kinda minimalist
These explanations feel kinda minimalist
These changes seem to be appropriate for the objectives they have. Only a small set of files are being changed, and the functionality is isolated well. My only feedback here is that there is likely a place to create helpers or utilities for time tracking.
These changes seem to be appropriate for the objectives they have. Only a small set of files are being changed, and the functionality is isolated well. My only feedback here is that there is likely a place to create helpers or utilities for time tracking.
These are my views on their writeup: 1.  Certain sections are too bold. I find that to be distracting. 2.  I like the way that they highlighted the lines of code that they have edited/modified. It made it easier to understand their work. 3. It was also good that they included references section at the end. It was something that I haven't seen in the other projects I have reviewed so far.
There's still some minor style issues in the code regarding unnecessary parenthesis.
There's only one diagram, from the perspective of the user, in terms of how the functionality should be like. It does clearly describe the changes to be made to the system. It should be better if there's another diagram, which explains the work flow, in terms of which files we need to do at each step, and what we need to do one step after another to implement the project.  
There's not really a rationale for why these particular tests are sufficient.
There's not really a rationale for why these particular tests are sufficient.
There's no way to actually test this, but from the code I don't believe that any of the edge cases would do anything.
There's no visual aids.  I think other than a screenshot of a finalized result possible, a workflow diagram will also be useful the work design.
There's no upload for the local folder. It seems that no new pull requests has been committed during the 2nd round, so I would guess no new code being committed for the 2nd round.
There's no diagrams or any other visual aids available. I would suggest adding at least some workflow diagram.
There's no diagrams or any other visual aids available. I would suggest adding at least some workflow diagram.
There's no diagrams or any other visual aids available. I would suggest adding at least some workflow diagram.
There's basically no documentation outside the source code itself.
There's basically no documentation outside the source code itself.
There's a testing plan. Although the testing plan seems to cover the fuctionalities, it is not clearly stated. The tester should log in as what role? how to select a teams assignment and review it? How to log out and check the instructor's email? which instructor email should the tester check? These questions should have been answered in the test plan.
There's a testing plan. Although the testing plan seems to cover the fuctionalities, it is not clearly stated. The tester should log in as what role? how to select a teams assignment and review it? How to log out and check the instructor's email? which instructor email should the tester check? These questions should have been answered in the test plan.
There's a testing plan. Although the testing plan seems to cover the fuctionalities, it is not clearly stated. The tester should log in as what role? how to select a teams assignment and review it? How to log out and check the instructor's email? which instructor email should the tester check? These questions should have been answered in the test plan.
There's a testing plan. Although the testing plan seems to cover the fuctionalities, it is not clearly stated. The tester should log in as what role? how to select a teams assignment and review it? How to log out and check the instructor's email? which instructor email should the tester check? These questions should have been answered in the test plan.
There's a test  plan. The test plan is deep and indeed tests the functionality. It should be better if the test plan also includes another step between 4 and 5, in terms of how to make the step "student can(or cannot) do the second review without the first one".
There's a flow chart about how the end result look like. But the flow chart only tells a user story. There's no detailed implementation plan in this flow chart. 3):  some diagrams are too high-level design and do not provide enough details. applies here.
There were some issues which I reported regarding comments and Notice messages displayed to User which needs to be improved. But they haven't been incorporated. It is not a blocker but definitely an important change to improve User Experience and better code readability. For example, In submitted_content controller there is a comment which says sending email to users. However it is just a method call which redirects it to delayed_mailer.rb. So this should be properly mentioned as it will be helpful for someone refactoring or understanding the code later.
There were some build issues raised by Travis CI which have not been handled yet. However, there are no merge conflicts with the master branch.
There were not any bad naming in round 1 as well. Comments could have been added for new additions which is still missing. There has been no DRY issues
There were not any bad naming in round 1 as well. Comments could have been added for new additions which is still missing. There has been no DRY issues
There were no testcases and since they provided a screenshot of the desired work. I suppose it fulfills the requirement
There were no testcases and since they provided a screenshot of the desired work. I suppose it fulfills the requirement
There were no test files added in the pull request
There were no test cases in the pull request
There were no test cases in the pull request
There were no test cases in the pull request
There were no such solutions listed on the basis of which I could suggest some better solutions. A couple of test cases or issue resolutions would have been handful for further suggestions.
There were no such solutions listed on the basis of which I could suggest some better solutions. A couple of test cases or issue resolutions would have been handful for further suggestions.
There were no such solutions listed on the basis of which I could suggest some better solutions. A couple of test cases or issue resolutions would have been handful for further suggestions.
There were no such solutions listed on the basis of which I could suggest some better solutions. A couple of test cases or issue resolutions would have been handful for further suggestions.
There were no new commits in the second round. The team did not work on the project during the second round of the submission.
There were no new commits in the 2nd round.
There were no flow or UML diagrams.
There were no flow or UML diagrams.
There were no flow or UML diagrams.
There were mock-ups of the final result of the project however there were no UML diagrams. I think the UML diagrams are not necessary for this project since the flow of how the instructor will change the language is fairly simple and one can understand it by just reading the document. Maybe they could have done a mock-up of how some of the other views would have looked like once the language has changed. Especially the pages with flash messages if any. Currently they have just shown the proposed changes on the page where the instructor will change the language.
There were mock-ups of how the Analyze button would be displayed along side each rubric, however there is no mock-up for how the response would be displayed.Suggestions: I would like to see where and how would that response be displayed because from the flow diagram the response seems to be quite big. I would like to also know if the team is planing to display all the components of the response from the API or just a few.
There were mock-ups of how the Analyze button would be displayed along side each rubric, however there is no mock-up for how the response would be displayed.Suggestions: I would like to see where and how would that response be displayed because from the flow diagram the response seems to be quite big. I would like to also know if the team is planing to display all the components of the response from the API or just a few.
There were mock-ups of how the Analyze button would be displayed along side each rubric, however there is no mock-up for how the response would be displayed.Suggestions: I would like to see where and how would that response be displayed because from the flow diagram the response seems to be quite big. I would like to also know if the team is planing to display all the components of the response from the API or just a few.
There were many missing pieces of functionality. I note them below: I was unable to create a House as an Admin.  I get an error when attempting to search for Houses.  As an Admin,I was unable to update or create a Realtor, though I could delete them. As an Admin, I shouldn't be able to set the password of a Realtor or House Hunter, that is a security vulnerability.  I was unable to create a House Hunter as an Admin. When signing up as a Realtor, I shouldn't be given the list of companies to join before signing up. This is a security vulnerability. As a realtor, I was unable to create a new company.  As a Realtor, I was unable to list a new house. 
There were many missing pieces of functionality. I note them below: I was unable to create a House as an Admin.  I get an error when attempting to search for Houses.  As an Admin,I was unable to update or create a Realtor, though I could delete them. As an Admin, I shouldn't be able to set the password of a Realtor or House Hunter, that is a security vulnerability.  I was unable to create a House Hunter as an Admin. When signing up as a Realtor, I shouldn't be given the list of companies to join before signing up. This is a security vulnerability. As a realtor, I was unable to create a new company.  As a Realtor, I was unable to list a new house. 
There were many missing pieces of functionality. I note them below: I was unable to create a House as an Admin.  I get an error when attempting to search for Houses.  As an Admin,I was unable to update or create a Realtor, though I could delete them. As an Admin, I shouldn't be able to set the password of a Realtor or House Hunter, that is a security vulnerability.  I was unable to create a House Hunter as an Admin. When signing up as a Realtor, I shouldn't be given the list of companies to join before signing up. This is a security vulnerability. As a realtor, I was unable to create a new company.  As a Realtor, I was unable to list a new house. 
There were many lingering code climate issues, and the Danger bot and Travis didn't pass either. A little cleaning could be done.
There were many lingering code climate issues, and the Danger bot and Travis didn't pass either. A little cleaning could be done.
There were few hand-made diagrams posted however I feel used of some other high-level UML diagrams and screenshots would have been better.
There were few hand-made diagrams posted however I feel used of some other high-level UML diagrams and screenshots would have been better.
There were 4 commits on the day it was due, presumably to get the project up and running for submission and 1 today to upload the development database.
There were 4 commits on the day it was due, presumably to get the project up and running for submission and 1 today to upload the development database.
There wasn't any link provided to check if the UI was working fine. This project was majorly focussed on refactor and looking at the code changes in the PR I can guess that the features might be working as they were supposed to.
There wasn't any link provided to check if the UI was working fine. But there was a video showing the project successfully running. And also the tests did seem to cover almost all the scenarios.
There was one new commit during the second round.
There was not an explicit test plan. Your design looks good though
There was not an explicit test plan. Your design looks good though
There was not an explicit test plan. Your design looks good though
There was no working deployment presented.
There was no working deployment presented.
There was no Test Plan
There was no Test Plan
There was no Test Plan
There was no link included to allow a reviewer access to the deployed application. When you are finally able to submit the appropriate working link, I would suggest having a README that contains the suggested Ruby content, along with, the information encouraged by the project write up.  Additionally, I would suggest having a person not participating in the course to take a look at your application. He/She may be able to offer a way to gauge the ease and effectiveness of your site. They may also offer valuable insight into feature placement and page flow.
There was no functionality implemented during 1st review. So there is a drastic improvement. However there are some functionalities which need further improvements. 1)Admin has no option to post or view houses.2)Admin is not able submit inquiry or reply to inquiries.3) Admin has no option currently to edit his profile. He should be able to edit his name. 4)Multiple Realtors and House Hunters can be created with the same email ID. There is no email or role validation. This will allow a lot of duplicate entries and the app will also be suseptible to attacks by robots. Can be improved by a 2 line validation code in model.5) Password should be encrypted. While entering the details too it should not be displayed as plain text. Can be improved by simply using type as password instead of text  in views. and applying encryption in model so that password is encrypted throughout the application6) Search House Functionality does not work when a new house is created. It shows the same old results.7)Also the description specifies Search by Price Range. But it has only one field to input price. This won't work if the user wants to see a house which is between 1000 to 3000 bucks or any house which is less then 3000 bucks. Since the app shows only houses greater then the price entered.8) Realtor is able to create a house even if he is not associated with a company. 9) Realtor is able to view potential buyers and reply to inquiries for all houses without being associated to a company. There should be a check to ensure that realtor is able to post a house only if he is associated with a company. Also the option to view potential buyers and reply to inquiries should only be enabled for houses which are associated with his company. In case of no company association he should be promted to associate himself with a company or create a new company first.
There was consistent commits with a spike in between when probably most development happened
There should be more explanations.
There should be more explanations.
There seems to be no testing done.
There seems to be no testing done.
There seems to be many functionalities missing. I cannot register as hunter or realtor. Hunter, Realtor, Interest of Buying, Inquiries ...These model do not appear to be in the folder app/models/... Seems to be an incomplete project, unless the previous reviewer cracked the system.
There seems to be many functionalities missing. I cannot register as hunter or realtor. Hunter, Realtor, Interest of Buying, Inquiries ...These model do not appear to be in the folder app/models/... Seems to be an incomplete project, unless the previous reviewer cracked the system.
There must be some test cases that should have been covered according to Travis CI. Also the build has failed. However, the team claims that some of the tests are running locally. If some of these points are looked upon, the code would be ready to be deployed on the main server.
There isnt any commit after the first submission.
There is some repetition of code but overall code quality is ok. There are some comments from the professor which should have been addressed.  
There is some explanation about the general idea of what needs to be added to implement the new functionality; however, there are several sections missing that give light to the details of implementation and how this is tested to ensure correctness. Adding a description of where and how this new model will be developed with the existing image would  be beneficial for a thorough understanding of the reader. This could also be achieved by rearranging the logic of the sections as sum sections elude to purpose and intent of implementation.
there is only one relationship in the whole project. Not a good database design. Plus destroying one entity won't delete another as i can see from the code. Rest i am not able to test as i am not able to login other than admin. Not able to register as well.
there is only one relationship in the whole project. Not a good database design. Plus destroying one entity won't delete another as i can see from the code. Rest i am not able to test as i am not able to login other than admin. Not able to register as well.
there is only one commit made during the entire project. there is no new code added during the 2nd round.
There is only a title for test plan, which could be in a great detail.
There is only a title for test plan, which could be in a great detail.
There is only a single test file included with this application, sessions_controller_test. The functionality tested within this file attempts to cover starting a new user session. The test ensures that a new session is returned through an assertion statement equating to true. There are many additional functions of the sessions controller that should be tested including create, destroy, successful log in, etc. Making sure that each of these methods are functional will aid in the development of further successful application flows. I would recommend testing the basic models and their accompanying controllers before you begin implementing things such as house inquires and user responses.
There is only 1 issue stated in the Code climate regarding code refactoring. If that is done, this code can be merged.
There is only 1 issue stated in the Code climate regarding code refactoring. If that is done, this code can be merged.
There is one box for both review controller and assignment controller. A better picture of how they handle each event differently would have been helpful.
There is nothing wrong in current design. Looks good. Suggestion: However Since I have already worked on a similar assignment so I know that similar issue has already been resolved for drop topic deadline. You can reuse the entire code and just change deadline type. Have a look at OSS project topic- 1843.  Check with the Professor once.
There is not a specific Test Plan section in the wiki. There is a Work to be Done section that discusses the work that should be completed for project success. I would suggest rearranging or rename this section and continue to describe your plan of attack for testing.
There is not a specific Test Plan section in the wiki. There is a Work to be Done section that discusses the work that should be completed for project success. I would suggest rearranging or rename this section and continue to describe your plan of attack for testing.
There is no write-up provided as of now. The wiki page is also not done yet.
There is no visual aid.
There is no test plan. The section is left blank.
There is no test plan. The section is left blank.
There is no test plan. For this project it could be difficult to test the exact time returned. However, it would be a good idea to test that the report page in fact shows the statistics.
There is no test plan. For this project it could be difficult to test the exact time returned. However, it would be a good idea to test that the report page in fact shows the statistics.
there is no test plan. 
There is no test plan. 
There is no test plan. 
There is no Test plan.
There is no test plan.
There is no test plan.
There is no Test plan.
There is no test plan.
There is no test plan.
There is no test plan.
There is no test plan.
There is no Test plan.
There is no test plan.
There is no test plan.
There is no Test Plan yet implemented in the wiki documentation. Be sure that when you include this section that you make the inclusions specific and intentional.
There is no Test Plan yet implemented in the wiki documentation. Be sure that when you include this section that you make the inclusions specific and intentional.
There is no test plan section or any information on how or if the feature was tested.
There is no test plan included.
There is no test plan included.
There is no test plan included in the design document. Actually, there should be a lot of tests need to be done for this project. From the UI, controller to model, the project should include test plan cover all these aspects to make sure the function can work as intended.
There is no test plan included in the design document. Actually, there should be a lot of tests need to be done for this project. From the UI, controller to model, the project should include test plan cover all these aspects to make sure the function can work as intended.
There is no test plan
There is no separate test plan section, but the test functionality has been shown in the form of screenshots. Could add it under the Testing header in the document so that the code and test would be separeated.
There is no proper test plan. The authors have just mentioned the required tests that needs to be done. No proper explanation has been given about how these tests will be implemented.
There is no proper test plan. The authors have just mentioned the required tests that needs to be done. No proper explanation has been given about how these tests will be implemented.
There is no need to use the student3 and participant3.
There is no need to use the student3 and participant3.
There is no mention of testing, also code change related details have not been included. Otherwise the document is very good.
There is no mention of testing, also code change related details have not been included. Otherwise the document is very good.
There is no mention of testing, also code change related details have not been included. Otherwise the document is very good.
There is no mention of testing, also code change related details have not been included. Otherwise the document is very good.
There is no mention for the design strategy or design pattern to be used in the implementation.
There is no mention for the design strategy or design pattern to be used in the implementation.
There is no mention about what work they did. The wiki page hasn't been properly formatted and the information is not adequate.
There is no mention about their Test Plan. The section has not been included in the wiki page as well.
There is no link to login as an admin. The site went down, so could not test further - This site cant be reached 18.224.197.227 refused to connect.   Search Google for 224 197 227 8080 house hunters sign   ERR_CONNECTION_REFUSED    
There is no link provided to test the code manually. However from the video provided, I can infer that all the features have been implemented and are working properly. Issue #718 and #926 are working as expected. In issue #971, I could see that the previous version of the 'add new topic' page had a topic description and topic category field which is not seen in the updated version. Suggestion: The team could implement that or if already implemented, add that to the wiki page to reflect the way in which that is handled
There is no link provided to test the code manually. However from the video provided, I can infer that all the features have been implemented and are working properly. Issue #718 and #926 are working as expected. In issue #971, I could see that the previous version of the 'add new topic' page had a topic description and topic category field which is not seen in the updated version. Suggestion: The team could implement that or if already implemented, add that to the wiki page to reflect the way in which that is handled
There is no link provided to test the code manually. However from the video provided, I can infer that all the features have been implemented and are working properly. Issue #718 and #926 are working as expected. In issue #971, I could see that the previous version of the 'add new topic' page had a topic description and topic category field which is not seen in the updated version. Suggestion: The team could implement that or if already implemented, add that to the wiki page to reflect the way in which that is handled
There is no Github link provided. Instead the code was zipped in an archive and posted on Expertizza. The code has no implementation of any functionality whatsoever, however, 'scaffold' code files exist in the zip with nil developer implementation. Code for 'house' is added though.
There is no functionality to edit a realtor's company.
There is no external  link provided to the application.
There is no external  link provided to the application.
There is no external  link provided to the application.
There is no external  link provided to the application.
There is no external  link provided to the application
There is no explicit test plan section, but all the scenarios are covered with appropriate images.
There is no explicit test plan section, but all the scenarios are covered with appropriate images.
There is no explanation.
There is no explanation.
there is no explanation in the writeup.
there is no explanation in the writeup.
There is no edge case.
There is no edge case.
There is no edge case.
There is no detailed documentation provided by the author on changes. Just few DB data points and controller functionality (very generic). So, it hard to visualize a solution
There is no description of what the team plans to implement.
There is no description of what the team plans to implement.
There is no description of what the team plans to implement.
There is no description of what the team plans to implement.
there is no code included in the write-up,but the team had mentioned the changed files in the write.As a reviewer, it is difficult to find out which code has been added by the team. The team should clearly explain what they are doing.
there is no code included in the write-up,but the team had mentioned the changed files in the write.As a reviewer, it is difficult to find out which code has been added by the team. The team should clearly explain what they are doing.
there is no code included in the write-up,but the team had mentioned the changed files in the write.As a reviewer, it is difficult to find out which code has been added by the team. The team should clearly explain what they are doing.
There is no code apart from a basic scaffold generated.  Commit ID Reviewed : 7fe864078b219bebacc0046b8f45c6e25cc1544c
There is no change in the code in this round. The variable names and method names are intuitive. The code is well indented; some useful comments can be included to improve readability. The code is DRY.
There is no change in the code in this round. The variable names and method names are intuitive. The code is well indented; some useful comments can be included to improve readability. The code is DRY.
There is no automated tests about the test plan were found. It seems the tests were all done by themselves.
There is no association between models.
There is no association between models.
There is no admin credentials provided, so could not test the edge cases which involves admin. Could not establish a relationship between a realtor and company. There is no delete and update functionality provided so could not validate the edge cases related to them.
There is less about what they gonna do, but more about "before and after part"
There is less about what they gonna do, but more about "before and after part"
There is just one user role in the current submission. Unable to test the admin functionality
There is just one user role in the current submission. Unable to test the admin functionality
There is just one user role in the current submission. Unable to test the admin functionality
There is just one flow diagram which does explain the activities to happen. There is no use case diagram with actors and all the uses cases expected. Suggestion: The use case diagram would have given better clarity about the system
There is an ER diagram helps the reviewer understand the relationship between different sets. Maybe more screenshot can be provided to show where is the search bar, etc.
There is an ER diagram helps the reviewer understand the relationship between different sets. Maybe more screenshot can be provided to show where is the search bar, etc.
There is an ER diagram helps the reviewer understand the relationship between different sets. Maybe more screenshot can be provided to show where is the search bar, etc.
There is an "Assign grade" link for everyone, but only "Perform review" for certain teams. But why doesn't "Perform review" appear for everyone? Or at least "Update review". (Not if a review has been submitted, at least until the next round starts.)  [This was confusing!  Do something that's clearer.]   Sol : The feature as understood from the past project is that Assign Grade is present for all teams. (Standardize the functionality) Case 1 : No review performed yet -> Perform Review button Case 2 : Review Started -> View Review button, Edit Review button Case 3 : Review Submitted, Deadline not crossed -> View Review button Case 4 : Review Submitted, Deadline crossed -> Update Review button   Lets always have view review button once review has started, + change the update review name to edit (only available for instructors and TAs) itself that should be clear i hope. We will make changes in list_submissions.html.erb   Comments: Case 3 and 4 buttons should be switched. If the deadline has been crossed, you should have the option to view the review. Otherwise, you should be able to edit the review.
There is an "Assign grade" link for everyone, but only "Perform review" for certain teams. But why doesn't "Perform review" appear for everyone? Or at least "Update review". (Not if a review has been submitted, at least until the next round starts.)  [This was confusing!  Do something that's clearer.]   Sol : The feature as understood from the past project is that Assign Grade is present for all teams. (Standardize the functionality) Case 1 : No review performed yet -> Perform Review button Case 2 : Review Started -> View Review button, Edit Review button Case 3 : Review Submitted, Deadline not crossed -> View Review button Case 4 : Review Submitted, Deadline crossed -> Update Review button   Lets always have view review button once review has started, + change the update review name to edit (only available for instructors and TAs) itself that should be clear i hope. We will make changes in list_submissions.html.erb   Comments: Case 3 and 4 buttons should be switched. If the deadline has been crossed, you should have the option to view the review. Otherwise, you should be able to edit the review.
There is a webpage linked which is helpful, but I do not see any other visual aids. It would be better to have some screenshots to help the reader understand your project.
There is a test plan, the tests are deep and detailed. However, the current test plan is not enough to test the functionalities. They are just unit tests. It should be added with a tests that directed tests whether the instructor can do the same kind of review as the students, from the user 's perspective (for example, log in, do the review, etc)
There is a test plan, the tests are deep and detailed. However, the current test plan is not enough to test the functionalities. They are just unit tests. It should be added with a tests that directed tests whether the instructor can do the same kind of review as the students, from the user 's perspective (for example, log in, do the review, etc)
There is a test plan for part one of the problem state, however no implementation plan or test plan for part two.
There is a test plan for part one of the problem state, however no implementation plan or test plan for part two.
There is a test plan for part one of the problem state, however no implementation plan or test plan for part two.
There is a separate testing section in the writeup, but it does not have much explanation. Could have added a couple of test case explanations. Also, a screenshot of a passed test case could work wonders.
There is a section titled Test Plan. However, it does not seem to be a plan or give an outline for the development of the code. Instead it describes what the methods do, but shows the testing code for the method. This is confusing as no explanations are given for the coding design.
There is a section titled Test Plan. However, it does not seem to be a plan or give an outline for the development of the code. Instead it describes what the methods do, but shows the testing code for the method. This is confusing as no explanations are given for the coding design.
There is a search.rb which seems very vague and unused. It has an extensive search logic. It should be a method in the house.rb file instead of a separate file of its own.
There is a scope of improvement by eliminating multiple 'back' links on each page.
There is a scope of improvement by eliminating multiple 'back' links on each page.
There is a relationship established between users and the company. However, a relationship between a house and a realtor or a company has not been established. This has negative impacts on the functionality.  There is no relationship between an inquiry and a house hunter or a realtor, which has impacts on the functionality. For example, if a certain house hunter is deleted from the data base, the inquiry associated with the house hunter will not be destroyed. 
There is a one-to-many relationship between User and Company. A realtor model is not applied.
There is a one-to-many relationship between User and Company. A realtor model is not applied.
There is a minor code climate error as mentioned above, similar code. An easy fix and you will be green with the climate check.
There is a minor code climate error as mentioned above, similar code. An easy fix and you will be green with the climate check.
There is a lot of visual help which is good but project design could have been expanded upon more
There is a hint of visual aid in terms of the section of Application flow for the Instructor and student and thus we can say that it does slightly help get a sense of putting things into perspective.  1. None. Both the diagrams seem important enough for the scope of the project and in conjunction with the intended functionalities. 2. The UML diagram is in line with the conventions and follows suite. 3. The diagram of the instructor can be said to be bordering on one to be too high level and should go a bit more into detail.  
There is a hint of visual aid in terms of the section of Application flow for the Instructor and student and thus we can say that it does slightly help get a sense of putting things into perspective.  1. None. Both the diagrams seem important enough for the scope of the project and in conjunction with the intended functionalities. 2. The UML diagram is in line with the conventions and follows suite. 3. The diagram of the instructor can be said to be bordering on one to be too high level and should go a bit more into detail.  
There is a good amount of Diagrams technicality in terms of the section of Workflow flow  and Models and thus we can say that it does slightly help get a sense of putting things into perspective.  1. None. Both the diagrams seem important enough for the scope of the project and in conjunction with the intended functionalities. 2. The UML diagram is in line with the conventions and follows suite. 3. The diagrams are technically sound enough to define problem scenario. 
There is a change in the colour code required, so there was not much of a naming convention to be followed here. Dint find any instances in the attached code where name could be changed. One instance of is_submitted could be changed to is_submitted?
There have been some screenshots however I feel like some more details and diagram could have been added in this section.
There have been only two commits - one on 30th Oct and second on 31st October. There have been no commits since. It would have been better if you people had given one more commit resolving the issues given by code climate, since most of them are trivial. 
There have been only two commits - one on 30th Oct and second on 31st October. There have been no commits since. It would have been better if you people had given one more commit resolving the issues given by code climate, since most of them are trivial. 
There have been only two commits - one on 30th Oct and second on 31st October. There have been no commits since. It would have been better if you people had given one more commit resolving the issues given by code climate, since most of them are trivial. 
There have been no new commits since the last round of submission. There seems to be some work pending since the last round for integrating the branch.
There have been no additions to test cases, although they have added a test case in last round.  The test coverage has significantly gone down by 39.4% after their code changes.
There has not been any changes after first round in the writeup. So my opinion remains the same as it was in the previous review.
There has been test failures, but not related to the project
There has been some improvement in the content of the write-up, but not all suggestions have been incorporated. Adding more screenshots of the functionality, or a video of the project being explained will always be helpful.
There has been some improvement in the content of the write-up, but not all suggestions have been incorporated. Adding more screenshots of the functionality, or a video of the project being explained will always be helpful.
There has been only one commit for the entire project.
There has been few code climate issues reported, but few of travis tests has failed. mot all changes has been verified successfully
There has been a significant improvement in the level of details provided. The author can further improve the document by providing the details of the design pattern to be used.
There does not seem any issues with the code. The team has properly used the naming convention and has provided comments wherever necessary
There could have been other tests with different inputs tried on the setup, initialize and select methods. the pre-conditions could have been more eloborate.
There could have been certain negative scenarios tested as well. 
There could have been certain negative scenarios tested as well. 
There could be more visual aids to help reviewers get a better understanding of this project.
There could be more test cases included and did not find enough information on test cases in the read me.
There could be more test cases included and did not find enough information on test cases in the read me.
There can be a few changes incorporated to the code- especially the name mismatch of the web IDL and corresponding Rust file needs to be fixed. The unnecessary comments have to be removed. Moreover, the pull request shows that there are a few changes that have been requested and all checks have failed. So, the code can be merged and deployed only after these are incorporated. 
There can be a few changes incorporated to the code- especially the name mismatch of the web IDL and corresponding Rust file needs to be fixed. The unnecessary comments have to be removed. Moreover, the pull request shows that there are a few changes that have been requested and all checks have failed. So, the code can be merged and deployed only after these are incorporated. 
There aren't many visual aids used. It may be a good idea to do some mockups for this project.
There aren't any test cases listed in the writeup. Can explain the test cases a bit in the github commit message.
There are two git links given, not sure which one to review? So reviewing the one which has more commits. Major functionalities are not implemented so cannot comment on this. Namings are properly given as per the rails standard.
There are still session variables and route names being displayed on some of the screens which were suggested to be removed. The functionality is quite good considering there was no implementation during first review. Potential Buyers functionality is not implemented. Enquiry functionality doesn't work . It throws application error check logs error when clicked. Possibly a deployment issue. When  a new house is created , it is not displayed in the listings immediately. Admin login doesn't work. It may be possible that someone might have edited admin login during review or else please paste the latest login details in Readme.
There are still session variables and route names being displayed on some of the screens which were suggested to be removed. The functionality is quite good considering there was no implementation during first review. Potential Buyers functionality is not implemented. Enquiry functionality doesn't work . It throws application error check logs error when clicked. Possibly a deployment issue. When  a new house is created , it is not displayed in the listings immediately. Admin login doesn't work. It may be possible that someone might have edited admin login during review or else please paste the latest login details in Readme.
There are still session variables and route names being displayed on some of the screens which were suggested to be removed. The functionality is quite good considering there was no implementation during first review. Potential Buyers functionality is not implemented. Enquiry functionality doesn't work . It throws application error check logs error when clicked. Possibly a deployment issue. When  a new house is created , it is not displayed in the listings immediately. Admin login doesn't work. It may be possible that someone might have edited admin login during review or else please paste the latest login details in Readme.
There are some test plans in place and others will be done after the bugs are generated. Suggestions: It would have been great to have screenshots of the test plans.
There are some test plans in place and others will be done after the bugs are generated. Suggestions: It would have been great to have screenshots of the test plans.
There are some test plans in place and others will be done after the bugs are generated. Suggestions: It would have been great to have screenshots of the test plans.
There are some style issues related to spacing and unnecessary parenthesis. 
There are some small problems like final newline missing, but overall looks good. 
There are some repetitions in the code which can be avoided by creating a helper function and calling that function from each place. But apart from that code is well thought out and implemented nicely.
There are some really great controller tests included in this application. Most of the functions in each controller are tested to ensure that they are returning and routing to the appropriate pages. Unfortunately, there are no model tests implemented. Model tests should be written to test that the appropriate attributes and relationships of each model are implemented successfully. It will prove extremely helpful in the improved functionality of your application. Make your model tests look like the controller test and you will be doing great!  
There are some instances of variable names that are concatenated with numbers, for example answer2, questionnaire2 etc. While this approach can be justified in some cases, I would suggest using more descriptive names instead or arrays if multiple instances are required. For example team could be used instead of team1 because that is the only Team instance variable in the source code.
There are some instances of variable names that are concatenated with numbers, for example answer2, questionnaire2 etc. While this approach can be justified in some cases, I would suggest using more descriptive names instead or arrays if multiple instances are required. For example team could be used instead of team1 because that is the only Team instance variable in the source code.
There are some indentation issues, but otherwise the code has method names in line with convention over configuration and the spacing and line spacing are reasonable. Also, IDs should not be on the UI. The house hunters and realtors should not have to sign in after signing up.
There are some indentation issues, but otherwise the code has method names in line with convention over configuration and the spacing and line spacing are reasonable. Also, IDs should not be on the UI. The house hunters and realtors should not have to sign in after signing up.
There are some functionalities which needs to be implemented. Areas you should focus on are destroy is not working correctly in some cases,application is getting crashed again and again. admin should not be deleted by user. how is house associated with a company is something which I was not able to understand.  
There are some duplicate codes could substitute with "before" statement. For example, line 100 are exactly the same with line 108, it is better to use "before" even if there is only one line duplicate.  
There are some duplicate codes could substitute with "before" statement. For example, line 100 are exactly the same with line 108, it is better to use "before" even if there is only one line duplicate.  
There are several minor issues to be fixed before the code is deployed.  64 code climate issues Travis Build 1 error and 2 warnings. I guess once these are taken care of, the deployment is likely.
There are several minor issues to be fixed before the code is deployed.  64 code climate issues Travis Build 1 error and 2 warnings. I guess once these are taken care of, the deployment is likely.
There are several improvements over the last review. Dropdowns have been implemented, which make a huge improvement to the ease of use of the system.    While the UI has become a lot better, there are several flaws:  Admin is shown to be registered as a realtor, but cannot be redirected to the pages(househunter link works). Househunter can set another hunter's interest liist by manipulating id.  Househunter can edit companies. Admin cannot destroy users,  Admin can not create/edit/destroy a realtor - error page is shown. Realtor can list houses even if not enrolled in a company Admin can not destroy househunter. Passwords are visible to admin,.   There are a few minor problems which, if dealt with, would make code even better:  Proper error messgaes - while signing up with wrong password length, a heroku error shows up which makes it feel like the functionality isn't working, whereas the problem can be user's fault as they  could have entered only 4 digit pin. Let users know that they need to provide proper input.   Also, please do not ask passwords in a text field. A very simple change can go a long way.
There are quite a lot of commits meaning that the team could have grouped some of the changes together into one commit instead of commiting every small modification to make them more meaningful
There are project purpose and design but no testing plan is included.
There are only ten commits and that too only from one account, which means it has only been done by one individual and not a team.
There are only ten commits and that too only from one account, which means it has only been done by one individual and not a team.
There are only four commits visible and no proper commit messages. Initial commit has 228 file changes.
There are only four commits visible and no proper commit messages. Initial commit has 228 file changes.
There are not enough introductions about what the functionality of the class they will test and what it is used for. The team can introduce more about what expertiza is and what the role of the class will be test and its functions. 
There are not enough information to help me understand what the design looks like.
There are not enough information to help me understand what the design looks like.
There are no visual aids to support the document.I would suggest them to design a flow chart that can show their design planning.
There are no visual aids on that page, but there are some on the previous page. Some more would definitely be welcome, and should be placed on the final project wiki page.
There are no visual aids given. Maybe some flow charts or screenshots can be added to help people understand the project.
There are no UML diagrams. I would suggest them to include a test case diagram that can improve understandability.
There are no UML diagrams. I would suggest them to include a test case diagram that can improve understandability.
There are no UML diagrams or screenshots. Please include the same in the following submissions to make the design document stronger.
There are no UML diagrams as such in the writeup.However, there is a flowchart which somewhat gives a clear view how they plan to do the things.
There are no UML diagrams as such in the writeup.However, there is a flowchart which somewhat gives a clear view how they plan to do the things.
There are no UML diagrams as such in the writeup.However, there is a flowchart which somewhat gives a clear view how they plan to do the things.
There are no tests. Probably you guys will do it in the next phase.
There are no test plans in the documentation
There are no test plans in the documentation
There are no test cases other than those auto generated by the scaffold generator, thus cannot comment more on testing.
There are no test cases
There are no such design explanations on which I can improve or suggest on. It would have been great if there were some more explanations.
There are no solutions proposed. Just the issues are listed and explained. A possible screenshot or a flow diagram would have been better to catch the proposed solution.
There are no solutions proposed. Just the issues are listed and explained. A possible screenshot or a flow diagram would have been better to catch the proposed solution.
There are no solutions proposed. Just the issues are listed and explained. A possible screenshot or a flow diagram would have been better to catch the proposed solution.
There are no solutions proposed. Just the issues are listed and explained. A possible screenshot or a flow diagram would have been better to catch the proposed solution.
There are no sections titled project purpose, project design, or testing plan. However, much of the information required to create those sections is provided.
There are no sections titled project purpose, project design, or testing plan. However, much of the information required to create those sections is provided.
There are no sections titled project purpose, project design, or testing plan. However, much of the information required to create those sections is provided.
There are no sections titled project design or project purpose.
There are no sections titled project design or project purpose.
There are no proper commit messages.
There are no new commits during second round.
There are no issues with code quality or naming. Code is clean and readable and follows Ruby on Rails practices.  Most methods are short and do one specific task. One possible improvement would be moving out authorization functionality from controller methods to separate functions.
There are no diagrams present. It would have been great if a screenshot of a test case or flow diagram was given.
There are no diagrams present. It would have been great if a screenshot of a test case or flow diagram was given.
There are no diagrams present. It would have been great if a screenshot of a test case or flow diagram was given.
There are no diagrams present. It would have been great if a screenshot of a test case or flow diagram was given.
There are no diagrams present. It would have been great if a screenshot of a test case or flow diagram was given.
There are no diagrams present in the document. While the diagrams for apis and class interactions may have been helpful they are not necessary for this project as the authors provide a detailed explanation of the relevant functionalities.
There are no changes to any files in the spec directory so there are no new tests.
There are new commits, however the quality of commit messsages is terrible. Commit message should have a short description of what was changed not just be random words like foo1, foo2 or hasdfsdsd.
There are new commits, however the quality of commit messsages is terrible. Commit message should have a short description of what was changed not just be random words like foo1, foo2 or hasdfsdsd.
There are mock-ups of the end result. But there are no other UML diagrams. There should have been some UML diagrams to help explain their design better as well as the flow of the implementation.
There are mock-ups of the end result. But there are no other UML diagrams. There should have been some UML diagrams to help explain their design better as well as the flow of the implementation.
There are mock-ups of the end result. But there are no other UML diagrams. There should have been some UML diagrams to help explain their design better as well as the flow of the implementation.
There are mock-ups for the final result of the team's changes. However I would like some UML like diagram or some flowchart explaning how a user gets to a particular point. I don't know if it's me or maybe my lack of familiarity with the Bacui interface but I found the navigation part a bit difficult to follow.
There are mock-ups for the final result of the team's changes. However I would like some UML like diagram or some flowchart explaning how a user gets to a particular point. I don't know if it's me or maybe my lack of familiarity with the Bacui interface but I found the navigation part a bit difficult to follow.
There are many places where "puts" statements are used where a logger statement should be used. There is also a set of if/else blocks that check to see if a variable is of a certain type, which could have been abstracted with an appropriate design pattern.
There are many places where "puts" statements are used where a logger statement should be used. There is also a set of if/else blocks that check to see if a variable is of a certain type, which could have been abstracted with an appropriate design pattern.
There are lots of code climate issues to be fixed.
There are lots of code climate issues to be fixed.
There are lines that were tested but commented out, which makes it little tough to read. Other than that the flow of the code, refactoring methodologies are good.
There are lines that were tested but commented out, which makes it little tough to read. Other than that the flow of the code, refactoring methodologies are good.
there are issues in the build
there are issues in the build
There are enough aids such as uml diagrams and screen shots. The authors explicitly mention that there are no db changes so no need of an er diagram. Although I would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
There are enough aids such as uml diagrams and screen shots. The authors explicitly mention that there are no db changes so no need of an er diagram. Although I would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
There are enough aids such as uml diagrams and screen shots. The authors explicitly mention that there are no db changes so no need of an er diagram. Although I would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
There are different diagrams being used: 1. Use case diagram which describes the flow of how different users would navigate to the GitHub metric pages. 2. Mockup of their implementation which details the presence of a separate tab for GitHub metrics integration. They also plan to add some graphs which i think would be very useful to the instructors.
There are commits on a single day, that is yesterday. One suggestion would be to commit regular progress on the git. 
There are commits on a single day, that is yesterday. One suggestion would be to commit regular progress on the git. 
There are build failures mentioned but I don't think the errors are due to this team's code, hence, giving them the benefit of doubt.
There are build failures mentioned but I don't think the errors are due to this team's code, hence, giving them the benefit of doubt.
There are ample screenshots of the UI to help the user understand the flow of the changes made. However, there aren't any UML diagrams that explain the use cases and the design of the newly added functionalities
There are almost no comments.
There are a moderate amount of spelling and grammatical errors.
There are a lot of not-so-important comments in the controllers. And a lot of DRY code
There are a lot of not-so-important comments in the controllers. And a lot of DRY code
There are a lot of functionalities missing. Like ability to add photos for the house being one of them. For the funtionalities which are present, there are quite a few bugs. For example, signing in again after signing up, realtor being able to delete any houses, whether or not listed by him, etc. There are a few functionalities added after the first round, but the implementation is not upto the mark.
There are a lot of functionalities missing. Like ability to add photos for the house being one of them. For the funtionalities which are present, there are quite a few bugs. For example, signing in again after signing up, realtor being able to delete any houses, whether or not listed by him, etc. There are a few functionalities added after the first round, but the implementation is not upto the mark.
There are a lot of functional bugs. Also, lots of required functionalities like listing a house as interested, list of potential buyers etc are missing. Also, there are a lot of navigational bugs. For example, when a user is both, a realtor and a househunter, he gets an option to create a new company when viewing list of enquiries, which should not have been the cae.
There are a lot of diagrams, but the application flow and the UML Diagram doesn't look very clear. We can hardly see the words in the UML Diagram. Also, the diagrams seem to not fit each other. How does the application diagram and the Uml diagram connect to each other? There's no clear instructions. Also, I don't think a screen shot of code in the design doc is a good idea. I think it could be better if the changes expected to be made can be described in a more abstract fashion. 
There are a lot of diagrams, but the application flow and the UML Diagram doesn't look very clear. We can hardly see the words in the UML Diagram. Also, the diagrams seem to not fit each other. How does the application diagram and the Uml diagram connect to each other? There's no clear instructions. Also, I don't think a screen shot of code in the design doc is a good idea. I think it could be better if the changes expected to be made can be described in a more abstract fashion. 
There are a lot of diagrams, but the application flow and the UML Diagram doesn't look very clear. We can hardly see the words in the UML Diagram. Also, the diagrams seem to not fit each other. How does the application diagram and the Uml diagram connect to each other? There's no clear instructions. Also, I don't think a screen shot of code in the design doc is a good idea. I think it could be better if the changes expected to be made can be described in a more abstract fashion. 
There are a lot of diagrams, but the application flow and the UML Diagram doesn't look very clear. We can hardly see the words in the UML Diagram. Also, the diagrams seem to not fit each other. How does the application diagram and the Uml diagram connect to each other? There's no clear instructions. Also, I don't think a screen shot of code in the design doc is a good idea. I think it could be better if the changes expected to be made can be described in a more abstract fashion. 
There are a few warnings thrown by other tests that must be rectified, but otherwise ready to deploy.
There are a few issues regarding code repetition and extra white space (especially in the controller rspec file).
There are a few issues regarding code repetition and extra white space (especially in the controller rspec file).
There are 7 issues pointed by the auto bot which require code to follow coding standard. 
There are 7 issues pointed by the auto bot which require code to follow coding standard. 
There are 16 commits in all. Not a lot changes have been pushed throughout the project period
There are 16 commits in all. Not a lot changes have been pushed throughout the project period
There a large set of variables that do not follow typical ruby naming convention. An example is that "existAssignment" should be "exit_assignment". Additionally, some names are not very helpful. For instance, the variable "frm" is used for a form, but why not just use "form"? There is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non-intuitive variable names
There a large set of variables that do not follow typical ruby naming convention. An example is that "existAssignment" should be "exit_assignment". Additionally, some names are not very helpful. For instance, the variable "frm" is used for a form, but why not just use "form"? There is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non-intuitive variable names
There a large set of variables that do not follow typical ruby naming convention. An example is that "existAssignment" should be "exit_assignment". Additionally, some names are not very helpful. For instance, the variable "frm" is used for a form, but why not just use "form"? There is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non-intuitive variable names
Their writeup is still the same doc file they had uploaded in the first submission. Now, while it was a good progress in resolving some of their errors in their first submission, clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it. 
Their writeup is still the same doc file they had uploaded in the first submission. Now, while it was a good progress in resolving some of their errors in their first submission, clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it. 
Their writeup is still the same doc file they had uploaded in the first submission. Now, while it was a good progress in resolving some of their errors in their first submission, clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it. 
Their test plan includes a test case for successfully displaying the pop-up text message as JSON, and displaying suggestion metrics for the review segment( a block of review, a comment box). Try to include test cases where a review message is absent, i.e. the code should not break for empty review segment. Include a test case where review segment has a suggestion, and test if the output says "Suggestion present". Include a negative test case for the the suggestion, where a suggestion is not given by the reviewer, and test that the output says "suggestion absent".
Their test plan includes a test case for successfully displaying the pop-up text message as JSON, and displaying suggestion metrics for the review segment( a block of review, a comment box). Try to include test cases where a review message is absent, i.e. the code should not break for empty review segment. Include a test case where review segment has a suggestion, and test if the output says "Suggestion present". Include a negative test case for the the suggestion, where a suggestion is not given by the reviewer, and test that the output says "suggestion absent".
Their task introduction is too short. But the background part explain the changes very well.
Their solutions are well explained. The way they have explained, attaching a screenshot of a code snippet and telling, this is where we made this change, and this is how it works, gives a better understanding of their project. It could have been better if they could have compare and contrasted the previous codes, where the features where not there. That way, the background of the why this feature could have been clear.
Their solutions are well explained. The way they have explained, attaching a screenshot of a code snippet and telling, this is where we made this change, and this is how it works, gives a better understanding of their project. It could have been better if they could have compare and contrasted the previous codes, where the features where not there. That way, the background of the why this feature could have been clear.
Their methods name is too long such as "#copy_questionnaire_details and #assign_instructor_id':
Their GitHub Link is unavailable and non functional. They don't seem to have uploaded on Heroku App. 
Their GitHub Link is unavailable and non functional. They don't seem to have uploaded on Heroku App.
Their GitHub Link is unavailable and non functional. They don't seem to have uploaded on Heroku App.
Their explanations are not detailed and sometimes it's not easy to understand.
Their explanations are not detailed and sometimes it's not easy to understand.
Their explanations are not detailed and sometimes it's not easy to understand.
Their explanations are not detailed and sometimes it's not easy to understand.
Their designs are great, but some designs may be complicated.
Their designs are great, but some designs may be complicated.
Their designs are great, but some designs may be complicated.
Their design is pretty well, but some part of that are not very detailed.
Their code is good, but some of them are too long.
Their code is good, but some of them are too long.
Their code changes are little, though they have handled naming conventions in a good way, as illustrated below. def self.handle_duplicate  
Thee writeup page is concise and easy to understand but there is no insight into the code.
Thee writeup page is concise and easy to understand but there is no insight into the code.
Thee writeup page is concise and easy to understand but there is no insight into the code.
The youtube screenshare clearly shows the changes made and works perfectly. Since the edge cases arent defined, not sure about the functionalities of edge cases in this case as it involves UI most of the time
The writup includes the work done. However, there is no explanation about why that 
The written explanation is good. Add few screenshots of the change to be able to understand the changes done visually.
The writeup written well. The team could have included snippets of their code instead of screenshots.
The writeup written well. The team could have included snippets of their code instead of screenshots.
The writeup was written well enough to understand. Screenshots were also attached along with the steps making the documentation better. Can definitely understand what project does and how it is done.
The writeup was well written and easy to understand. However, it would have been better if some steps accompanied the screenshots as to what was happening in each screenshot. That would have made the writeup even easier to understand.
The writeup was still on wikipedia and didn't expand on the reasons why the test cases were the way they are. No justification was provided for why only 34% of the LoC in the model was covered.
The writeup was still on wikipedia and didn't expand on the reasons why the test cases were the way they are. No justification was provided for why only 34% of the LoC in the model was covered.
The writeup was fairly specific on how the solution was implemented, although more qualitative description should have replaced the source code dumps. The writeup barely explained why the improvements were needed, focusing on what was implemented. 
The writeup was fairly specific on how the solution was implemented, although more qualitative description should have replaced the source code dumps. The writeup barely explained why the improvements were needed, focusing on what was implemented. 
The writeup was clear enough to be understood by anyone familiar with developing or contributing on expertiza. It provided a high level view, and then dug deep into implmentation, which is great since it saves time, and also look concise. But for someone outside the domain of expertiza, it feels too sudden of a transition that it takes time and in many cases other resources to figure out why the author did what he did. But the overall flow and structure was very great.
The writeup was clear enough to be understood by anyone familiar with developing or contributing on expertiza. It provided a high level view, and then dug deep into implmentation, which is great since it saves time, and also look concise. But for someone outside the domain of expertiza, it feels too sudden of a transition that it takes time and in many cases other resources to figure out why the author did what he did. But the overall flow and structure was very great.
The writeup thoroughly details the changes written in this project, but the first section seems like informally written reminders for the development team.
The writeup states correctly the changes performed, but fails to provide a reasoning behind every change. Suggestion: You can include reasons behind choosing an approach, for atleast one refactoring code change
The writeup starts off by introducing Servo- Mozilla's experimental high performance browser engine and Rust- which is a systems programming language with memory safety and concurrency used to build Servo. It then moves over to Web Audio API for handling audio operations inside audio context and allow modular routing, and a workflow for implementing Web Audio was clearly listed. It then flows into the scope of the project and the implementation. The graphical and mathematical representation of the sine, square, sawtooth and triangle waveform gave a solid conceptual foundation. The code snippet of the changes done in oscillator_node.rs and the new file oscillator.rs (created by the team) has also been included. The section Build that explains the procedure to install dependencies (Rust), step by step procedure for building and running the build was very useful to explore the project. The team had included the build instructions for Windows and Debian-based Linux. They could have augmented the build instructions for Mac OS X, which might save Mac Users from reading verbose instructions on the official documentation and instead refer to a single source (the wiki). The authors end the wiki by providing the test plan with examples of generated sine, square, sawtooth and triangle waveforms as audio files; pull request and references.
The writeup shows very little since the work has not yet been started. Therefore it does not clearly incorporates what all functionalities will be required. However, there are some mentioned in proposed changes area.
The writeup shows very little since the work has not yet been started. Therefore it does not clearly incorporates what all functionalities will be required. However, there are some mentioned in proposed changes area.
The writeup shows very little since the work has not yet been started. Therefore it does not clearly incorporates what all functionalities will be required. However, there are some mentioned in proposed changes area.
The writeup should be written in a emore elaborative way clearly stating at the minimum - the problem statement; new implementation strategy; design principles; test plan and references.
The writeup seems to be missing.
The writeup seems to be missing.
The writeup seems apt. I had a little problem understanding the solution to problem 1 but otherwise it seems fine
The writeup seems apt. I had a little problem understanding the solution to problem 1 but otherwise it seems fine
The writeup seems apt. I had a little problem understanding the solution to problem 1 but otherwise it seems fine
The writeup s format on how they distinguished the features and explained solutions for each and everything is good. First they give a bird's eye view of the problems and then deep diving into each problem with solution and screenshot is good. The background explanation given could have been more specific towards their problem statement, rather than just about expertiza. The images tend to occupy the entire page and its little difficult while going through it, a little foramatting could have made their page really good.
The writeup s format on how they distinguished the features and explained solutions for each and everything is good. First they give a bird's eye view of the problems and then deep diving into each problem with solution and screenshot is good. The background explanation given could have been more specific towards their problem statement, rather than just about expertiza. The images tend to occupy the entire page and its little difficult while going through it, a little foramatting could have made their page really good.
The writeup s format on how they distinguished the features and explained solutions for each and everything is good. First they give a bird's eye view of the problems and then deep diving into each problem with solution and screenshot is good. The background explanation given could have been more specific towards their problem statement, rather than just about expertiza. The images tend to occupy the entire page and its little difficult while going through it, a little foramatting could have made their page really good.
The writeup provides a gist of the project implementation stages. Though it does specifically include a test plan section, it has the list of tasks performed while testing for various scenarios as a part of the issues to be resolved section.
The writeup provides a gist of the project implementation stages. Though it does specifically include a test plan section, it has the list of tasks performed while testing for various scenarios as a part of the issues to be resolved section.
The writeup only tells what is to be done and how it is done. The rational behind choosing the approach is not mentioned, neither are any of the principles mentioned.
The writeup only tells what is to be done and how it is done. The rational behind choosing the approach is not mentioned, neither are any of the principles mentioned.
The writeup only tells what is to be done and how it is done. The rational behind choosing the approach is not mentioned, neither are any of the principles mentioned.
The writeup needs significant improvement. "No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given." - This review was given by me last time,and no improvement has been made in this regard.
The writeup needs significant improvement. "No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given." - This review was given by me last time,and no improvement has been made in this regard.
the Writeup misses out on elaborating the approach taken, it just lists the problem statement and jumps to test cases and fix. I would like to see more details on the approach taken.  The "why" is missing   
the Writeup misses out on elaborating the approach taken, it just lists the problem statement and jumps to test cases and fix. I would like to see more details on the approach taken.  The "why" is missing   
The writeup mentions what lines of code were changed but it does not clearly specify what each changed portion of code means.
The writeup mentions what lines of code were changed but it does not clearly specify what each changed portion of code means.
The writeup mentions about the changes done in the code but not how and why it was done. Instead, the team could explain each code change more and give a link to the code change(from github)
The writeup lists the task to be performed under the Work to be Done section. It enlists the criteria required to be achieved as part of the project submission. The team can adopt a workflow that can give details about how the team managed to reach the current implementation such as understanding the files involved, steps taken for setting the expertiza environment etc.
The writeup lists the task to be performed under the Work to be Done section. It enlists the criteria required to be achieved as part of the project submission. The team can adopt a workflow that can give details about how the team managed to reach the current implementation such as understanding the files involved, steps taken for setting the expertiza environment etc.
The writeup leaves me unable to really determine what was done to the point where I can examine the work in their application for correctness, especially since, as a refactor, the behavior should not have changed from the base expertiza application.
The writeup leaves me unable to really determine what was done to the point where I can examine the work in their application for correctness, especially since, as a refactor, the behavior should not have changed from the base expertiza application.
the writeup just simply explanin what is expertiza and the requirement for this program.
The writeup is written in a very verbose manner. They still haven't added the test plan which was missing.  Suggestion: I feel that the test plan should have been added explicitly. 
The writeup is well written. But I feel there are some missing details about the project. The team could elaborate on the issues in the project and the solution that they have implemented. This way it would better in understanding how and why the authors did the work that they did.
The writeup is well written. But I feel there are some missing details about the project. The team could elaborate on the issues in the project and the solution that they have implemented. This way it would better in understanding how and why the authors did the work that they did.
The writeup is well written with proper screenshots. I liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project. However, the Test-plan section could be improved by adding the test code
The writeup is well written with proper screenshots. I liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project. However, the Test-plan section could be improved by adding the test code
The writeup is well written with proper screenshots. I liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project. However, the Test-plan section could be improved by adding the test code
The writeup is well written but not as explanatory as required
The writeup is thorough but screenshots could be added. The instructions are missing too. Rest all looks good.
The writeup is sufficient in itself, but not as exhaustive or easy to understand from the perspective if an outsider. The author could have elaborated more on the problem statement, and how it related with expertiza. Also, instead of directly jumping to the implementation, the author could have explained a little bit more about why and what was the approach taken by the author.
The writeup is sufficient in itself, but not as exhaustive or easy to understand from the perspective if an outsider. The author could have elaborated more on the problem statement, and how it related with expertiza. Also, instead of directly jumping to the implementation, the author could have explained a little bit more about why and what was the approach taken by the author.
The writeup is really nicely written. It clearly mentions the work done. However, the problem statement could have been explained a little more.
The writeup is really nicely written. It clearly mentions the work done. However, the problem statement could have been explained a little more.
The writeup is lucid enough to explain the details of the issue and how the system works after fixing it. Suggestion: 1. The authors can add a section on testing, explaining about how the issue fix can be tested. 2. They can improve the readability by mentioning issue numbers (from document issued by the prof.) on the write-up. It will save time of the reader to go through the document and map which issue has been fixed.
the writeup is lacking in terms of explanation of how to test the funcionality thoroughly.
the writeup is lacking in terms of explanation of how to test the funcionality thoroughly.
the writeup is lacking in terms of explanation of how to test the funcionality thoroughly.
The writeup is great. I could get all the info i needed to understand the problem. Could refine the describing issues section a bit as I could see sentences like " Please take a look at the Github issue for suggestions on how to solve this."
The writeup is good overall. But it would have been better if more code snippets were added along with explanation of why certain methods are obsolete.
The writeup is good overall. But it would have been better if more code snippets were added along with explanation of why certain methods are obsolete.
The writeup is good and clearly explains the issues faced. However instead of putting in the code changed, I feel it would be better to have screenshots of git commit history where we can see both the previous code and new code to get a good idea of what actually was changed.
The writeup is excellent. Very carefully written, a lot of detailed explanation. Some more background information about the functions can be more helpful, as well as syntax summation.
The writeup is excellent. Very carefully written, a lot of detailed explanation. Some more background information about the functions can be more helpful, as well as syntax summation.
The writeup is disorganized and does not specify the function carried out by the team during the project.  It does not follow the typical format of the writeup and provides a list of items such as files involved and task expected.
The writeup is detailed, but it doesn't explain why code in the model had to be commented out very well. That was a bit alarming.
The writeup is detailed, but it doesn't explain why code in the model had to be commented out very well. That was a bit alarming.
The writeup is clear. It is easy to understand what the project does. It would be better if you can put in more code details and major pieces that do the important logic.
The writeup is clear and has illustrations to explain the flow. However, none of the code is added to the documentation. The project also only defines the test added but could add more details about the increase in coverage
The writeup is clear and has illustrations to explain the flow. However, none of the code is added to the documentation. The project also only defines the test added but could add more details about the increase in coverage
The writeup is a bunch of codes, there's not enough explanation.  The "allow" function is important for the mock functions. But it is explained in no place.
The writeup is a bunch of codes, there's not enough explanation.  The "allow" function is important for the mock functions. But it is explained in no place.
The writeup includes the code used but it would help if the Wiki also explained how the authors came up with that solution
The writeup includes some of the work done.Although it looks a bit incomplete and does not convey much about the project.
The writeup has proper instructions but needs some improvements: 1. Explain the problem statement  2. Explain 'why' you need the solution 3. Explain the steps you took. The code snippets are added but could be improved by adding explanation of the tests. May be adding 1-2 lines can help.
The writeup has  covered nearly everything we need. all the function details are in the writeup, as welll as each function. However, I think there's too much code and not enough textual explanation.
The writeup has  covered nearly everything we need. all the function details are in the writeup, as welll as each function. However, I think there's too much code and not enough textual explanation.
The writeup gives an easy-understanding introduction of the two classes the team needed to test. Also, there is detailed test plan is provided. The wiki also shows how the test cases are designed and the results. However, for the motivation part, it is a little bit general, which needs to add more things specific for this project.
The writeup gives a high level overview of the work done Suggestion: 1. You can try to make the write-up more illustrative by discussing which refactoring principles were implemented in which files and how does it make a difference. 2. You can take help of code snippets to make it more understandable.
The writeup explains why the tests they write relate to their respective methods, but doesn't justify a 77% LoC coverage, which is below the requirements for the project.
The writeup explains why the tests they write relate to their respective methods, but doesn't justify a 77% LoC coverage, which is below the requirements for the project.
The writeup explains what is intended to be done. However, still the information is somewhat incomplete.
The writeup explains the problem statement well, but fails to explain the approach and just have pasted their code. It also fails to have a reasoning behind the approach they chose. Suggestion: 1. The author can describe how they came up with an approach starting from analyzing the issue. This will remarkably improve the writeup. 2. The author can talk about atleast one more approach to fix the solution and explain why they chose a particular approach for implementation.  
The writeup explains how the changes are made but does not state about design patterns used and the code dose not show any use of patterns
The writeup explains everything regarding why and how the steps were carried out.
The writeup expalins clearly enough what the authors did. Though, the part of "Why" the authors did what they did isn't elaborated with much depth. From the authors perspective, the articles seems exhaustive and comprehensive, but for a person reviewing the article, who doesn't have much background of the problem at hand, the article make it tough to decipher why certain program is written the way it is. 
The writeup expalins clearly enough what the authors did. Though, the part of "Why" the authors did what they did isn't elaborated with much depth. From the authors perspective, the articles seems exhaustive and comprehensive, but for a person reviewing the article, who doesn't have much background of the problem at hand, the article make it tough to decipher why certain program is written the way it is. 
The writeup expalins clearly enough what the authors did. Though, the part of "Why" the authors did what they did isn't elaborated with much depth. From the authors perspective, the articles seems exhaustive and comprehensive, but for a person reviewing the article, who doesn't have much background of the problem at hand, the article make it tough to decipher why certain program is written the way it is. 
The writeup does talk about the changes and why the authors did it that way.   Rather than pasting the code (without any indentation) in the wiki page, the authors could have pasted screenshots of the code! This might have made it easier to comprehend.    
The writeup does not talk about the functionalities . However they include what is missing and what they will include.
The writeup does not talk about the functionalities . However they include what is missing and what they will include.
The writeup does not talk about the functionalities . However they include what is missing and what they will include.
The writeup does not talk about the functionalities . However they include what is missing and what they will include.
The writeup does not include the Test Plan section. It is suggested that the team add the section and include a number of different aspects such as specifying the edge cases and preconditions considered while working on the test cases.
The writeup does not include the Test Plan section. It is suggested that the team add the section and include a number of different aspects such as specifying the edge cases and preconditions considered while working on the test cases.
The writeup does not include the test plan as of now, but that is the only thing which is left for the team to complete. The team could work on this and try to improve the test coverage.
The writeup does not include the test plan as of now, but that is the only thing which is left for the team to complete. The team could work on this and try to improve the test coverage.
The writeup does not include the test plan as of now, but that is the only thing which is left for the team to complete. The team could work on this and try to improve the test coverage.
The writeup does not include any test plan.
The writeup does not have the Test Plan section. They need to include it by specifying the section that describes the pre conditions considered by the team while working on the refactor review on the different question types from the uiz feature. 
The Writeup does not have a test plan. Not able to check if they considered different pre-conditions, edge cases, invalid input values, and other possibilities
The Writeup does not have a test plan. Not able to check if they considered different pre-conditions, edge cases, invalid input values, and other possibilities
The writeup does not have a test plan.
The writeup does not have a test plan or any related info on why it is not covered.
The writeup does not explain the changes. Also the wiki page is not elaborative about the changes made
The writeup does emphasize on how the issues are resolved, however lacks a reasoning as to why did they choose it.  Suggestion: It is hard to follow the code, as there is lack of comments. You can try to include meaningful comments for every function you have introduced. That will increase code readability
the writeup does bot explain how and why the authors did the work the way they did.
The writeup clearly explains the project- a single rejoinder per team for reviews, but does not explicitly say the advantages of having such a system. On the other hand the authors do justify the need to fix navigation issues for giving feedback to reviewers as it results in a user-friendly UI. The modification to summary report to accommodate collective feedback is logical and directly implied if the main problem statement of single rejoinder per team is properly justified.
The writeup clearly explains the implementation details and why those changes were made. It is nicely articulated and leaves no ambiguity.
The writeup clearly explained the need for the off screen canvas API; however, the explanation of how the feature was implemented was too shallow. What is in those .rs files?
The writeup clearly explain why the team did the work that they did. Good job on that. The only thing I may have preffered to have as a reviwer is a detailed step by step instruction on how to view the changes made by the team in the app. This could be added in the wiki, or a short screencast could me made to help follow the steps.
The writeup can be improved to begin with a short description of the project backgound so that anyone reading the writeup can understand what the project is all about.
The writers have explained what they did in the project and how they did it. But, I could not find a 'why'. No reason behind the approach is specified.
The writers have explained what they did in the project and how they did it. But, I could not find a 'why'. No reason behind the approach is specified.
The write-ups been written well. A small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does. Also the team could use code snippets instead of screenshots of the code.
The write-ups been written well. A small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does. Also the team could use code snippets instead of screenshots of the code.
The write-ups been written well. A small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does. Also the team could use code snippets instead of screenshots of the code.
The write-up was very good, in the sense that it mentioned the high level view of the tasks first, and then dug deeper under the hood. But, it only showed what files they changed, and what it produced as a result. They could have also shown what is that they changed, or provided a link in the wiki. Yes, one can deduce that from the pull request too, but having a link or the content itself on the wiki is a big boon.
The write-up was very good, in the sense that it mentioned the high level view of the tasks first, and then dug deeper under the hood. But, it only showed what files they changed, and what it produced as a result. They could have also shown what is that they changed, or provided a link in the wiki. Yes, one can deduce that from the pull request too, but having a link or the content itself on the wiki is a big boon.
The write-up was nicely written in the first round itself. It gives a clear idea of the project.
The write-up was good and clearly explains the issues faced and the code changed. It would have been much more clear if screenshots of git file changed were posted. 
The write-up only tells what is to be done and how it is done. The rational behind choosing the approach is not mentioned, neither are any of the principles mentioned. It has comparisons between the previous and new versions and why they made they made the necessary modifications.
The write-up mentions the function of each section of the relevant code, however it is not clear what the changes made to the code are.
The write-up lacks screenshots/ relevant images/ screencast to explain the workflow of the project. This would increase the readability of the wikipage. Also, the team has added testplan and included description for the code presented in the wiki. These points were mentioned during the previous review which were picked up by the team. The team has done a good work in improving their writeup as compared to the previous version.
The write-up lacks screenshots/ relevant images/ screencast to explain the workflow of the project. This would increase the readability of the wikipage. Also, the team has added testplan and included description for the code presented in the wiki. These points were mentioned during the previous review which were picked up by the team. The team has done a good work in improving their writeup as compared to the previous version.
The write-up is well written. It looks like they have improved the test plan sections, but still no automated tests in the repository.
The write-up is well written. It looks like they have improved the test plan sections, but still no automated tests in the repository.
The write-up is well written. It looks like they have improved the test plan sections, but still no automated tests in the repository.
The write-up is well written but is missing a few things - the original problem description, how will the changes being proposed will be implemented etc.
The write-up is well written but is missing a few things - the original problem description, how will the changes being proposed will be implemented etc.
The write-up is well written but is missing a few things - the original problem description, how will the changes being proposed will be implemented etc.
The write-up is well written and organised. Everything looks fine. The team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand. Also the team could have included few screen shots in the write-up.  
The write-up is well written and organised. Everything looks fine. The team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand. Also the screenshots could be a little better.
The write-up is well written and organised. Everything looks fine. The team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand. Also the screenshots could be a little better.
The write-up is well written and organised. Everything looks fine. The team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand.   
The write-up is well written and looks through. The write-up details what has been accomplished and there are plenty of screenshots to support this. However, there is no mention of what code has been changed/added and why the authors chose this change.  Test plan has also been well written. The parts written are well written, but there's a good scope of improvement.
The write-up is well written and looks through. The write-up details what has been accomplished and there are plenty of screenshots to support this. However, there is no mention of what code has been changed/added and why the authors chose this change.  Test plan has also been well written. The parts written are well written, but there's a good scope of improvement.
The write-up is well written and looks through. The write-up details what has been accomplished and there are plenty of screenshots to support this. However, there is no mention of what code has been changed/added and why the authors chose this change.  Test plan has also been well written. The parts written are well written, but there's a good scope of improvement.
The write-up is well written along with the screenshots attached for the code changes which helps in explaining the issues and changes made to solve those.  Just one suggestion, if you are explaining all the steps and redirection for some issues/changes please keep the content consistent for other issues/changes as well.
The write-up is well written along with the screenshots attached for the code changes which helps in explaining the issues and changes made to solve those.  Just one suggestion, if you are explaining all the steps and redirection for some issues/changes please keep the content consistent for other issues/changes as well.
The write-up is well explained but could have described more on the methods whey implemented and why did it implement in a certain way.
The write-up is well explained but could have described more on the methods whey implemented and why did it implement in a certain way.
The write-up is well explained along with the test plans explained in steps to make it easy for testing but that just have a few cases with cover basic functionalities
The write-up is well explained along with the test plans explained in steps to make it easy for testing but that just have a few cases with cover basic functionalities
The write-up is very well written and documented. It is aided well with the the help of screenshots and proper labelling. The only small thing that I would like to suggest is the steps to reproduce or something similar so that the person not familiar with the expertiza can also reach to the desired place.
The write-up is very self explanatory. It successfully covers each and every aspect of the work done by the team, and also, to an extend, delvers what mindset they had while working o the project, which is very great. Just one sugestion is that, instead of simply dumping the files, they could have made a quick note of what the code in the file does. No one want to go through each and every line of code just to get an idea what it is meant to be.
The write-up is very minimal. I think it should elaborate made 
The write-up is very minimal. I think it should elaborate made 
The write-up is very detailed with comparisons between previous and new versions, as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features.
The write-up is very detailed with comparisons between previous and new versions, as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features.
The write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features.
The write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features.
The write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features and how to test the code or show how they have tested the code.
The write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features and how to test the code or show how they have tested the code.
The write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. It can be improved by adding how the features have been implemented, why they chose this logic to implement the features and how to test the code or show how they have tested the code.
The write-up is pretty ambiguous and feels all cluttered up. Maybe elaborating on few lines and separating the one whole paragraph into bullet points under different headings would have made it more readable and clear.
The write-up is good, but it doesn't feel much refined or improvised after the initial edit. As mentioned above, the image isn't visible clearly, which means that it wasn't reviewed much after posting. But apart frm that, the flow of the write-up is very effective, in fact one of the best that I've reviewed. The concept of giving a higher lvel view, and then diving deeper into the implementation is very subtly applied.
The write-up is difficult to follow, and doesn't provide much insight into how the testing code works. Despite having a test plan section, no test plan is included.
The write-up is difficult to follow, and doesn't provide much insight into how the testing code works. Despite having a test plan section, no test plan is included.
The write-up gave a good introduction to the project by providing the background information about the Servo parallel web-engine project by Mozilla for web page rendering and Rust programming language to execute HTML5 and CSS3 parsers. It then highlighted the OffscreenCanvas API that can be used to generate frames and also return the rendered image using the transferToImageBitmap() method. The writeup covered how web workers can be used to implement OffscreenCanvas API to render images as an independent process isolated from the webpage. The problem statement of of creating OffscreenCanvas and OffscreenCanvasRenderingContext2d interfaces with OffscreenCanvas Constructor, properties (width and height) and getContext() method was defined. The use of Web IDL to describe interfaces for web browsers was briefed and that was followed by the code flow and the code snippet of the two Web IDL files namely- OffScreenCanvas.webidl and OffScreenCanvasRenderingContext2D.webidl While the write-up was cogent and clearly explained the work done, it could have elaborated on the implementation of the methods like transferToImageBitmap() and how the interface is integrated into the system to render images in a webpage using an isolated web worker.
The write-up does not include a test plan section. If a test section had been included then the different scenarios, pre-conditions, edge cases and invalid input values would have been dealt.
The write-up did cover about the efficiency of Servo to render webpages quickly and smoothly when compared to Mozilla's other rendering engines. Servo does this using parallel layout, styling, web-renders and constellation and in turn sandboxes the processes, threads and tasks that allows the browser to fail better, hence making it more robust and secure. It justified the use of Rust to rewrite C++ and effectively the browser as well. 
The write-up contains the information about how the solution was achieved. The details about why the solution was implemented in this way is currently missing from the documentation. The team should include the same in the documentation as well.  
The write-up contains the information about how the solution was achieved. The details about why the solution was implemented in this way is currently missing from the documentation. The team should include the same in the documentation as well.  
The write-up contains the information about how the solution was achieved. The details about why the solution was implemented in this way is currently missing from the documentation. The team should include the same in the documentation as well.  
The write-up contains the information about how the solution was achieved. The details about why the solution was implemented in this way is currently missing from the documentation. The team should include the same in the documentation as well.
The write-up contains the information about how the solution was achieved. The details about why the solution was implemented in this way is currently missing from the documentation. The team should include the same in the documentation as well.
The write up was well explained. Test cases were with images of test cases in the UI. The code could have a github screenshot or the link to the changed file for more clarity.
The write up starts with introduction about Expertiza, Test Driven Development and Unit Testing. It then moves over to describing the problem statement, team members, test plan and implementation that contains detailed documentation on the procedure to set up the Expertiza environment, functionalities of Menu model, sample views , declaration of mock objects as test entries and finally the conditions tested on each of the method of the Node and Menu class. The various methods tested on the Node class include initialize, setup, site_controller, controller_action, content_page and add_child. Similarly the methods tested on the Menu class include initialize, select, get_item, get_menu, selected, selected? and crumbs.  The write up also includes the screenshot of the Rspec tests that were run. The screenshot of the SimpleCov coverage report is blurred and not readable.  The write up ends with concluding remarks, learning outcomes and References. Overall, the documentation was very precise and clear with all the information needed to understand the code on Github. The authors could have included and highlighted how to run the Rspec code since their project specifically deals with unit testing. Another apparent issue that I can point out is the quality of screenshot.
The write up is written adequately. Only thing is to reduce the code shown on the wiki page as I feel that it might be irrelevant to have the whole code increasing the reading page size.
The write up is written adequately. Only thing is to reduce the code shown on the wiki page as I feel that it might be irrelevant to have the whole code increasing the reading page size.
The write up is well documented. There is a clear flow from the code change part to the screenshots of the implementation. It would have been better if there was a screenshot of the code from git or a link to git so that the code changes would have been more defined as per the green and red colour. Also, the code change could be explained more.
The write up is very well detailed with good information and pictures. Two things: 1. Put the write up on the expertiza wiki page instead of in a word document 2. On the wiki use the   tag to insert code snippets into the page instead of a screenshot of the code
The write up is simple and understandable. It starts off by describing about Expertiza, motivation behind the project, the tasks to do, list of classes that are modified and impacted by the change. I like how the authors have screenshots of both the existing code that is removed and the new code that is added in the pull request, which juxtaposes them and highlights the tasks in the problem statement and goals of the project. The write up then ends with the test plan which lists the test cases handled.
The write up is short and to the point, it could have been formatted and arranged in a better way.
The write up is okay but could be a bit more descriptive. Could have provided screen shots of the changes to help reader understand better. No initial instructions on where to get started.
The write up is lacking screenshots, for example, the colour coded views etc and the test plan to verify the issues. Only the test plan for colour coding has been mentioned. The issues and the plan of action have been described properly.
The write up is lacking screenshots, for example, the colour coded views etc and the test plan to verify the issues. Only the test plan for colour coding has been mentioned. The issues and the plan of action have been described properly.
The write up is lacking screenshots, for example, the colour coded views etc and the test plan to verify the issues. Only the test plan for colour coding has been mentioned. The issues and the plan of action have been described properly.
The write up is good, contains lots of pictures to show the added functionality. I found the test steps a bit confusing and it made validation hard.
The write up is good, contains lots of pictures to show the added functionality. I found the test steps a bit confusing and it made validation hard.
The write up is good overall. I believe there could be more explanation or discussion into test cases not included in the design but otherwise a good wiki.
The write up is clear and concise. The details about the functionalities are adequately explained. 
The write up has some great information and snip its of code. It would have been a great addition to have included more discussion on the overall design of your test cases. Overall a nice wiki.
The write up has some great information and snip its of code. It would have been a great addition to have included more discussion on the overall design of your test cases. Overall a nice wiki.
The write up has not been formatted well, most of it consists of what can already be read from the OSS assignment specifications document. I would strongly suggest the team to include screenshots of their commits instead of using wiki code formatting.
The write up has most of the relevant information. The formatting could have been better. I would suggest the team to use a standard dimension for the screenshots they have added.
The write up has most of the relevant information. The formatting could have been better. I would suggest the team to use a standard dimension for the screenshots they have added.
The write up has been written well. There's obviously some additions possible to the write up. The code changes/additions have been shown, I would recommend description of why those changes/additions were made. I would also suggest the team to standardize the size of their screenshots. 
The write up has been written well. There's obviously some additions possible to the write up. The code changes/additions have been shown, I would recommend description of why those changes/additions were made. I would also suggest the team to standardize the size of their screenshots. 
The write up has a lot of code in it, which does not show up what are the changes exactly made. It would have been better to put the links to the git files where the code changes are made for good comparisons. Also, with this the wiki size would have reduce.
The write up has a lot of code in it, which does not show up what are the changes exactly made. It would have been better to put the links to the git files where the code changes are made for good comparisons. Also, with this the wiki size would have reduce.
the write up doesn't has a test plan but looking at the code it seems they have check every edge case. Also since there coverage is coming to to be 100% , everything should work.
The write up does not show any detailed explanation of the project. 
The write up does not mention any patterns if used, and could not identify the pattern from the code as they have made changes using the database and not any function
The write up does not mention any patterns if used, and could not identify the pattern from the code as they have made changes using the database and not any function
The write up does not have a test plan.
The write up could've been organized in a better manner and the authors could've given more attention to detail. For example, I see they mention the project E1791 but without a hyperlink, it was a little difficult to reach the documentation of that project (the search bar didn't help matters too). It could've been stated more clearly what requirement the earlier project implemented, and what improvement this one does. Also, the document does not cover testing - even some basic test cases. (A little formatting inconsistency - the heading "Flowchart" always has a colon attached to it but none of the other headings do!)
The write up could've been organized in a better manner and the authors could've given more attention to detail. For example, I see they mention the project E1791 but without a hyperlink, it was a little difficult to reach the documentation of that project (the search bar didn't help matters too). It could've been stated more clearly what requirement the earlier project implemented, and what improvement this one does. Also, the document does not cover testing - even some basic test cases. (A little formatting inconsistency - the heading "Flowchart" always has a colon attached to it but none of the other headings do!)
The write up could've been organized in a better manner and the authors could've given more attention to detail. For example, I see they mention the project E1791 but without a hyperlink, it was a little difficult to reach the documentation of that project (the search bar didn't help matters too). It could've been stated more clearly what requirement the earlier project implemented, and what improvement this one does. Also, the document does not cover testing - even some basic test cases. (A little formatting inconsistency - the heading "Flowchart" always has a colon attached to it but none of the other headings do!)
The Write Up can be improved by explaining all the Methods which are tested
The Write Up can be improved by explaining all the Methods which are tested
The write up as well done. However, the write-up is missing the test plan. 
The write up addresses details of all the three problem statements along with the code changes done in every file and the files added. The team has also added screenshots of the manual testing.
The write is well-organized and clear in its material. The authors have improved the write-up by explaining what each newly defined functions work. and added code snippets wherever necessary.  However, the test plan is still missing from the write-up.
The write has only details of team members and files changed. Out of the two files mentioned , only one is currently committed in git(vm_question_response.rb) is missing. May be a commit issue.
The wirteup is pretty good. It gives the test plan and all the test cases. Also, there is explanation of the test process and logic. Just one minor problem.  The 29 tests provide 100% coverage of the lines in menu.rb. Before the project the coverage was only It is an incomplete sentence.
The wireframes themselves make the project self-explanatory. That being said, enough explanation about how the team will tackle the problem statement has been given. Things like what API will be used to achieve the objective has been mentioned. No suggestions.
The wiki talk about what they have done throughly, it could be better if they have mention about how they do that. 
The wiki talk about what they have done throughly, it could be better if they have mention about how they do that. 
The Wiki should not include Conclusion and learning outcomes part, it is not a report of the project, but a page to show what the project itself is.
The wiki provides enough introductions for this project. According to the wiki, I can get a clear insight about what the project is, what's the issues include in it, why the team do things as the way they said and the tests they give to make sure the functions work properly. However, the description for the first issue is not very clear and makes me confusing.
The wiki provides enough introductions for this project. According to the wiki, I can get a clear insight about what the project is, what's the issues include in it, why the team do things as the way they said and the tests they give to make sure the functions work properly. However, the description for the first issue is not very clear and makes me confusing.
The wiki page is prepared with a good research on the topic. Just test plans are left to be added.
The wiki page is divided into some nice sections, however the authors have just included the code as it is without any description of the work that they have done.
The wiki page is divided into some nice sections, however the authors have just included the code as it is without any description of the work that they have done.
The wiki page is divided into some great sections that provide details about the project. I appreciate that the team provided actual code snipits along with explanation of the test to afford the reader a deeper understanding. The first paragraph in the design section is a bit hard to follow. It would be helpful to have this explanation accompanied by the tests these stubs were associated with and/or the actual implementation of these stubs for a better grasp of their purpose. I would recommend combining the test and design sections for a easier flow of reading and following test implementations. Thank you for the Results section of the wiki that wraps up the project and is an easy point of reference for the reader to see the outcome of the project. 
The wiki looks too long with a lot of code. It does have all the code and test cases, but its better to have git links to each code and more explanation of the code used above it in the wiki. This will help the readers to compare the changes in the code with the explanation parallelly.
The wiki looks too long with a lot of code. It does have all the code and test cases, but its better to have git links to each code and more explanation of the code used above it in the wiki. This will help the readers to compare the changes in the code with the explanation parallelly.
The Wiki lists a lot of terminology but few with how they do this project.
The wiki is well written and contains all required information regarding the project. The screenshots can be included in the wiki and the code pasted in the documentation could be formatted. The team also need to inlcude the test plan section in the wiki. Apart from this , the team did a great work.   
The wiki is well written and contains all required information regarding the project. The only scenario missing from the documentation is the scenario where the TA is assigned to a instructor , what will happen to the instructors impersonated students when the TA of the constructor login to the application. Apart from this , the team did a great work. 
The wiki is well written and contains all required information for issue 1. The documentation for other issues still needs to be included. Apart from this , the team did a great work.   
The wiki is quite comprehensive and gives the build steps clearly. It could also include a more basic explanation in layman terms about what the OffScreenCanvas API does
The wiki is quite comprehensive and gives the build steps clearly. It could also include a more basic explanation in layman terms about what the OffScreenCanvas API does
The Wiki is great, but I believe it's better to move the Testing framework part to front of the page.
The wiki is detailed enough that it mentions all the functionalities required in the project. The team has made sure to explain all the changes they wish to make to the system. They list all columns that need to be sorted and how they will implement the sorting.
The Wiki is descriptive and covers the essentials of the project. In my opinion, I think the code for every test is not required. It is enough to explain the structure and code for one test, maybe and what each test is supposed to do for the rest of the tests. That should suffice.
The Wiki is descriptive and covers the essentials of the project. In my opinion, I think the code for every test is not required. It is enough to explain the structure and code for one test, maybe and what each test is supposed to do for the rest of the tests. That should suffice.
The Wiki has all the relevant information though I feel it needs to be a bit more organized. The titles and order need to change. The content needs to be placed at proper places. For example, test plan lists all the test cases and code, which according to me should be covered in the implementation.
The Wiki has all the relevant information though I feel it needs to be a bit more organized. The titles and order need to change. The content needs to be placed at proper places. For example, test plan lists all the test cases and code, which according to me should be covered in the implementation.
The wiki give the motivation for this project, but it is general and should be more detailed for this project.
The wiki give the motivation for this project, but it is general and should be more detailed for this project.
The wiki explains the problem statement well and proposes relevant solution . The team has done a great job on stating the design approach and has included diagrams for them. However, the team needs to add the testing plan for the project.
The wiki explains the problem statement very well along with the proposed solution which seems reasonable. But the wiki does not include any test plans as of now. There are a few test cases which can be used to write the test plan, for eg. not adding drop deadline for the assignment itself and assigning each topic a drop deadline and check the behaviour of the system.
The wiki does not include any discussions about design principles or patterns that were used in the project.  One thing that stands out in the code is that every mock object is defined at the start of the file. The team could provide a rationale for this decision and why it is superior to for example using different mocks for each separate test suite.
The wiki does not include any discussions about design principles or patterns that were used in the project.  One thing that stands out in the code is that every mock object is defined at the start of the file. The team could provide a rationale for this decision and why it is superior to for example using different mocks for each separate test suite.
The wiki documentation has been updated. All the information has been documented in a neat and logical manner. The write up adequately provides what functionality the work is related to. They havent updated any part of the wiki documentation but overall their documentation is concise and to the point.
The wiki documentation has been updated. All the information has been documented in a neat and logical manner. The write up adequately provides what functionality the work is related to. They havent updated any part of the wiki documentation but overall their documentation is concise and to the point.
The wiki document for the project does not provide enough details about the project and the task performed by the team. It contains of only a rough overview of the project at this stage. It does not reveal much about the functionality of the program.
The wiki document for the project does not provide enough details about the project and the task performed by the team. It contains of only a rough overview of the project at this stage. It does not reveal much about the functionality of the program.
The wiki defines the primary goal of the project but it does not contain a discussion about the plan or strategy that is utilized to solve the problem. Raw code is copied from review_response_map.rb and review_response_map_spec.rb files, however this does not give the reader any useful information.  I would suggest replacing the review_response_map.rb code with a short description of what the team needed to understand about the given code in order to write the test suite. Furthermore, the team can provide a listing of higher level method descriptions from review_response_map_spec.rb, what are the expectations and which mock objects are being used to achieve the result. One minor improvement would be removing parts like Expertiza description (http://wiki.expertiza.ncsu.edu/index.php/CSC/ECE_517_Fall_2018/E1850._Write_unit_tests_for_review_response_map.rb#Background) because it is redundant in this context.
The wiki defines the primary goal of the project but it does not contain a discussion about the plan or strategy that is utilized to solve the problem. Raw code is copied from review_response_map.rb and review_response_map_spec.rb files, however this does not give the reader any useful information.  I would suggest replacing the review_response_map.rb code with a short description of what the team needed to understand about the given code in order to write the test suite. Furthermore, the team can provide a listing of higher level method descriptions from review_response_map_spec.rb, what are the expectations and which mock objects are being used to achieve the result. One minor improvement would be removing parts like Expertiza description (http://wiki.expertiza.ncsu.edu/index.php/CSC/ECE_517_Fall_2018/E1850._Write_unit_tests_for_review_response_map.rb#Background) because it is redundant in this context.
The wiki could have been organized better. It looks a little messy. Not self explanatory. The Use case does not have any actors in it. Suggestion: Code screenshots could have been placed better
The wiki clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory. The authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings. I would suggest removing parts like high level descriptions of Expertiza and Unit Tests (http://wiki.expertiza.ncsu.edu/index.php/OSS_E1852.rb#Unit_Test_Description) because they are redundant in this context.
The whole wiki page is complete and neat, while it might be easier to understand if they reorder the test plan with other parts of the page.
The website is not up yet. I looked through the code. Looks like there are still some functionalities not implemented.
The website is not up yet. I looked through the code. Looks like there are still some functionalities not implemented.
The way the team plans to loop through each review to calculate a review score seems slightly more complex than necessary, but I agree with them taking this apporach as it will allow them to break down the reason why the scores are different.
The visuals used are excellent but it would have been nice to not overwhelm the reader.
The visuals used are excellent but it would have been nice to not overwhelm the reader.
The visuals used are excellent but it would have been nice to not overwhelm the reader.
The visuals are very helpful. More clear view of how delegation pattern is being used would have been appreciable.
The visualizations help a bit alongside the descriptions, but aren't really useful for conveying information.
The visualization includes a screen mock-up "Analyze"  button which will implement the algorithm and produce the output. However, there is no mock-up of the screen of what will the output be like. The flow diagram is highly redundant according to me, as it does not portray any additional information about the design. I would suggest them to provide a sequence diagram of the algorithm methods, so as to illustrate their changes.
The visualization includes a screen mock-up "Analyze"  button which will implement the algorithm and produce the output. However, there is no mock-up of the screen of what will the output be like. The flow diagram is highly redundant according to me, as it does not portray any additional information about the design. I would suggest them to provide a sequence diagram of the algorithm methods, so as to illustrate their changes.
The visualization includes a screen mock-up "Analyze"  button which will implement the algorithm and produce the output. However, there is no mock-up of the screen of what will the output be like. The flow diagram is highly redundant according to me, as it does not portray any additional information about the design. I would suggest them to provide a sequence diagram of the algorithm methods, so as to illustrate their changes.
The visualization clearly conveys the high-level goals of the project. It does not explain the design in detail, however.
The visualization aids used currently are application flow diagram, and use cases. They are useful to understand the scenario of the problem statement. However, a sequence or a communication diagram will really be beneficial to understand how the method interfaces with the other  methods. This will help identify if the new method impacts other functionalities and will portray the proposed solution efficiently.
The visualization aids used are class diagram for the strategy pattern, use-cases to explain the test plan. The class diagram is very useful to illustrate the approach used by the team, and it succeeds in explaining. They have made changes according to the suggestion provided in the previous review. A sequence diagram will help understand the flow of the methods from one controller to the other, as the design suggests so.
The visualization aids used are class diagram for the strategy pattern, use-cases to explain the test plan. The class diagram is very useful to illustrate the approach used by the team, and it succeeds in explaining. They have made changes according to the suggestion provided in the previous review. A sequence diagram will help understand the flow of the methods from one controller to the other, as the design suggests so.
The View Inquiries link takes you to the wrong page. Users can't view nor edit their profile. There isn't (as far as I can tell) any way to post a house as a realtor.
The view file contain 200 more files so it is quite difficult to figure out the structure of the View. It is better if independent component is introduced to construct the whole task view. And the commits contain the Gemfile, which is considered not secure to deploy for it alters the production environment. 
The view file contain 200 more files so it is quite difficult to figure out the structure of the View. It is better if independent component is introduced to construct the whole task view. And the commits contain the Gemfile, which is considered not secure to deploy for it alters the production environment. 
The view file contain 200 more files so it is quite difficult to figure out the structure of the View. It is better if independent component is introduced to construct the whole task view. And the commits contain the Gemfile, which is considered not secure to deploy for it alters the production environment. 
The video shows all the test cases pass, but I'm skeptical that they got all the corner cases. Looking at the review_response_map.rb model, there are a lot of methods which aren't explicitly tested.
The video shows all the test cases pass, but I'm skeptical that they got all the corner cases. Looking at the review_response_map.rb model, there are a lot of methods which aren't explicitly tested.
The video shows all the test cases pass, but I'm skeptical that they got all the corner cases. Looking at the review_response_map.rb model, there are a lot of methods which aren't explicitly tested.
The variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. In some cases they could have used a liitle more desciptive names for variables for example inside app/helpers/student_task_helper.rb  they could have used background_colour instead of rtn as a variable name in the due_date_color() method. It will become more readable for the reviewers to understand the functionalities.
The variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. In some cases they could have used a liitle more desciptive names for variables for example inside app/helpers/student_task_helper.rb  they could have used background_colour instead of rtn as a variable name in the due_date_color() method. It will become more readable for the reviewers to understand the functionalities.
The variables, methods and classnames are aptly named. I could not find names which are not suggestive of functionaliy.
The variables, methods and class names used do not justify the features performed and do not implement the desired functionality expected. Also, the code added does not improve the coverage of the files. The team should look towards using appropriate names and provide desired code segments to get a high coverage.
The variables, methods and class names are aptly named. I could not find names which are not suggestive of functionality. (i) The writeup is well written and easy to read. (ii) It is adequately descriptive of the work done. (iii) Explanation of reasons for the style of code and problem solving approach is lacking.
The variables, methods and class names are aptly named. I could not find names which are not suggestive of functionality. (i) The writeup is well written and easy to read and well commented (ii) It is adequately descriptive of the work done. (iii) Explanation of reasons for the style of code and problem solving approach is lacking.
The variable and method names look clean and concise. No new class is added.
the users controller has a lot of nested if block in the forgotPassword method and resetPassword method
the users controller has a lot of nested if block in the forgotPassword method and resetPassword method
The user name issue seems to not have been resolved when tested manually. The code may be deployable and would not cause a problem since there are not many complicated changes.
The user name issue does not seem to have been resolved. Although the code added seems adequate, I was able to create a username with spaces in the string.
The user name issue does not seem to have been resolved. Although the code added seems adequate, I was able to create a username with spaces in the string.
the User model has been tested, although I can't say it is thorough at this point, as it only tests the validity that is already required by the model.
the User model has been tested, although I can't say it is thorough at this point, as it only tests the validity that is already required by the model.
The User model and controller has been tested. It does not test whether the system handles the case that a user uses the same email to register twice.  
The User model and controller has been tested. It does not test whether the system handles the case that a user uses the same email to register twice.  
The User Interface was working as described in the README file.  The UI functionality don't have any issues apart from the one noted in additional comments If team would have given some assets/stylesheets config,  The UI would have been great on the looks as well
The user interface looks pretty, is clean and intuitive. But the placement of menu buttons was rather "not-obvious". It took time for me to figure out login / signup buttons, and I also had to actively look for buttons to perform actions after signing-in, which isn't actually much user friendly. Though it may seemed cliche, but I think it is very user-friendly to have action buttons on the content of the web-page, rather than having them at the top inside the header. But apart from that, the simplicity and the look and feel was pretty good.
The user interface lack multiple navigation functionalities such as it does have any cancel or back button. So, if a user tries to move back or cancel while creating a company, he would be stuck and would not be able to move to any other tab.
The user interface is very well designed, and the cleanest and the most user friendly among all that I've reviewed till now. The UI is very intuitive and the alternate shading of the lists improves legibility a lot. The only place where the UI was deficient was that it didn't seem consistent. The login / signup page had a different UI compared to other pages. I suppose improving consistency would increase user friendliness of the application to a lot of extent. 
The user interface is very simple, clear and straightforward. But it lacks depth where it should have been extensive. For example, after signing up for the first time, the user is directed by to the login page to login again. This is not very user friendly, and is rather redundant. One must automatically sign in after creating an account. Also, the application should deduce whether I'm a realtor or a househunter or an admin from the email ID i entered. I should atleast now have to specify for househunter or realtor about my role.
The user interface is very pimitive. The team could have done much more. They have not designed it very well. Although I was not looking for graphics, but the element placement could have been much more improved. 
The User Interface is very intuitive. The idea to add a field for preferred contact is very smart and relevant. Displaying the number of registered users, however, seems irrelevant to the house hunter and realtor. Perhaps this can be a function of the admin account where it would be more relevant.
The user interface is very intuitive. I like the modern look and feel of the UI as well as the icons and images. It's quite professional. Excellent work! The various buttons are in good locations. The button text could be darker, however. The "new user" link could be made into a bigger button, which would make it more prominent. Right now it is hard to see.
The user interface is very confusing. It is difficult to get to the sign up page to begin with, and then the messages Isrealtor and Ishousehunter are cryptic to actual users (anyone other than computer scientists). It is very difficult to follow where the links take you on the website and what exactly you are looking at at any given moment.
The User interface is very appealing. The show view is especially remarkable that makes good use of the attractive classes of CSS and Bootstrap. The navigation links provided in every page are very helpful to explore the website. The switch user capability makes it easy for users to switch between roles without the hassle of logging out and logging in again. One issue that I encountered was that the inquiries controller has not been fully implemented, which lands the website into an error page. 
The user interface is pretty intuitive. Few things like the create house functionality is breaking on heroku and giving an application error.
The user interface is pretty intuitive. Few things like the create house functionality is breaking on heroku and giving an application error.
The user interface is nice. I suggest you move the search button in the houses screen to the left. Also, "yes" and "no" would probably be more user-friendly than "true" and "false" for the basement condition. The new user window was very intuitive and powerful. Note: I found a bug in this window: changing the admin account with "REALTOR" checked causes an error. The error screen was graceful, however. Also, please use radio buttons for "HUNTER" or "REALTOR", not checkboxes. Please also include the type of the user in the users window.
The user interface is done as it would be in a basic ruby application, which is good. There is no login functionality, this is mentioned in the README which was helpful. Some functionalities which could be improved are : 1)     1)  When I try to add a new house hunter from admin, I get a Contact Method is not included in the list error. As a user, I dont know what kind of values your system is expecting in this field, so it might help to probably provide a dropdown selection element and put in your values there. In this way, the user will always select a value which your system is expecting. If there are a finite number of values, you can just hard code them into the html element, else pick it up from the db and populate your dropdown as such. 2)      2) When I click on back from the new househunter url, I am directed to show all house hunters url. You could improve this by updating the link-to for this back button by providing it with the user_url, or you could detect which is the current user logged in (Realtor/House Hunter/ Admin) and accordingly redirect to that roles home page url.
The user interface is average.  The good parts I found about UI are: 1. Error messages (while registering a new admin/house hunter/realtor/house/company) were helpful. 2. Front-end checks like mail and phone number size and type etc have been used properly. 3. Dropdown for companies while registering houses, for houses while submitting inquiruies etc are properly implemented and easy to use. However, several very small changes would make the UI much better: 1. Allow a drop-down when signing up as roles 2. Add inquire a house or add a new house to interest list etc functionalituies at the top. If house list gets a few hundred rows long, user must scroll all the way down to access the functionalities. 3. Add message as to why login failed. Something as simple as "Invalid credentials" would suffice and let user know that the login is working but the password is incorrect.
The user interface is average.  The good parts I found about UI are: 1. Error messages (while registering a new admin/house hunter/realtor/house/company) were helpful. 2. Front-end checks like mail and phone number size and type etc have been used properly. 3. Dropdown for companies while registering houses, for houses while submitting inquiruies etc are properly implemented and easy to use. However, several very small changes would make the UI much better: 1. Allow a drop-down when signing up as roles 2. Add inquire a house or add a new house to interest list etc functionalituies at the top. If house list gets a few hundred rows long, user must scroll all the way down to access the functionalities. 3. Add message as to why login failed. Something as simple as "Invalid credentials" would suffice and let user know that the login is working but the password is incorrect.
The user interface has a very basic look and feel. The sign up links being on every page is not ideal. There should only be a log out link. Also, the company in the realtor page is showing the id, not the company's name. I suggest you use a drop down menu for the preferred contact of the house hunter who is signing up. It would be much more intuitive to have a single sign-in page for all users. There were also missing back buttons.
The user interface has a very basic look and feel. The sign up links being on every page is not ideal. There should only be a log out link. Also, the company in the realtor page is showing the id, not the company's name. I suggest you use a drop down menu for the preferred contact of the house hunter who is signing up. It would be much more intuitive to have a single sign-in page for all users. There were also missing back buttons.
The user interface has a bare bones look and feel but is intuitive overall. The inquiries list is hard to find for the admin, and the links below the tables could be placed at the top of the screen to improve the UX. The inquiry component of the app had awkward navigation, particularly for the realtor. This is also awkward for the house hunter. Only one link is needed up top.
The user interface has a bare bones look and feel but is intuitive overall. The inquiries list is hard to find for the admin, and the links below the tables could be placed at the top of the screen to improve the UX. The inquiry component of the app had awkward navigation, particularly for the realtor. This is also awkward for the house hunter. Only one link is needed up top.
The usecase diagram is helpful but does not help much as it just explains what is provided in the approach section. More in-depth functionality of what each user will do or how will the design flow (flow chart) would be more helpful.
The usecase diagram is helpful but does not help much as it just explains what is provided in the approach section. More in-depth functionality of what each user will do or how will the design flow (flow chart) would be more helpful.
The use of jQuery plugin sounds simple and easy to use.
The use of flowcharts describe the functioning of the project exceptionally. Suggestion: Including screen mockups to your doc will add more weight to it.
The use of active record is missing from the application. There are no foreign key relationships in the schema. Although the relationship are maintained in the model file. A separate database is created for admin/realtor/hunter which will store a lot of redundant data. There is no database for storing the response of inquiries. According to the db design , a house belongs to both a company and a realtor directly which is not correct.  
The use of active record is missing from the application. There are no foreign key relationships in the schema. Although the relationship are maintained in the model file. A separate database is created for admin/realtor/hunter which will store a lot of redundant data. There is no database for storing the response of inquiries. According to the db design , a house belongs to both a company and a realtor directly which is not correct.  
The use of active record is missing from the application. There are no foreign key relationships in the schema. Although the relationship are maintained in the model file. A separate database is created for admin/realtor/hunter which will store a lot of redundant data. There is no database for storing the response of inquiries. According to the db design , a house belongs to both a company and a realtor directly which is not correct.  
The use case diagrams are understandable but I think images of web pages will make things more clear.
The use case diagrams are understandable but I think images of web pages will make things more clear.
The use case diagram appears to be slightly incorrect. The symbol for an should be a stick figure not a rectangle. But that is a minor error. Also, the Use Case Diagram Details mention student as an actor but the diagram shows no instance of student as an actor. I think the Student as an actor shouldn't be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores, thus, requiring no involvement from the students at that point in time.Mention of Primary sequence in the Use Case Diagram Details seems highly unnecessary and potentially unrelated.
The use case diagram appears to be slightly incorrect. The symbol for an should be a stick figure not a rectangle. But that is a minor error. Also, the Use Case Diagram Details mention student as an actor but the diagram shows no instance of student as an actor. I think the Student as an actor shouldn't be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores, thus, requiring no involvement from the students at that point in time.Mention of Primary sequence in the Use Case Diagram Details seems highly unnecessary and potentially unrelated.
The use case diagram appears to be slightly incorrect. The symbol for an should be a stick figure not a rectangle. But that is a minor error. Also, the Use Case Diagram Details mention student as an actor but the diagram shows no instance of student as an actor. I think the Student as an actor shouldn't be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores, thus, requiring no involvement from the students at that point in time.Mention of Primary sequence in the Use Case Diagram Details seems highly unnecessary and potentially unrelated.
The use case diagram appears to be slightly incorrect. The symbol for an should be a stick figure not a rectangle. But that is a minor error. Also, the Use Case Diagram Details mention student as an actor but the diagram shows no instance of student as an actor. I think the Student as an actor shouldn't be included because in the current use case only the instructor is the primary actor and the assignment should have been submitted by the time the instructor views the scores, thus, requiring no involvement from the students at that point in time.Mention of Primary sequence in the Use Case Diagram Details seems highly unnecessary and potentially unrelated.
The Use Case diagram added is drawn well and helps explaining the system. Team could have added, screenshots of the Expertiza pages, that would have helped us understand whoch part of the system is changing well.
The Use Case diagram added is drawn well and helps explaining the system. Team could have added, screenshots of the Expertiza pages, that would have helped us understand whoch part of the system is changing well.
The URL is not working
The URL is not working
The unit tests affording 95% coverage is great, but the code climate and other build problems are a bit concerning. I think this could be pulled in with more attention from the developers.
The unit tests affording 95% coverage is great, but the code climate and other build problems are a bit concerning. I think this could be pulled in with more attention from the developers.
The unit test step section is included, but there is no test plan.
The UML Use Case diagram takes into consideration the system specifications and the manner in which the users interact with each other in the process. It makes it easy to analyze how the implementation can take place in the current scenario. 
The UML diagrams given in the document list the process flow for testing/understanding the changes which will be made in the document. But, unfortunately, no diagram exists which describe the changes to be made.   I would suggest the team to add diagrams for the pseudo-code they may have written.
The UML diagrams given in the document list the process flow for testing/understanding the changes which will be made in the document. But, unfortunately, no diagram exists which describe the changes to be made.   I would suggest the team to add diagrams for the pseudo-code they may have written.
The UML diagrams given in the document list the process flow for testing/understanding the changes which will be made in the document. But, unfortunately, no diagram exists which describe the changes to be made.   I would suggest the team to add diagrams for the pseudo-code they may have written.
The UML diagrams does seems to be a bit at a high level. I couldn't get a clear idea of how it would actually be implemented.
The UML diagrams does seems to be a bit at a high level. I couldn't get a clear idea of how it would actually be implemented.
The UML diagrams are supposedly the best part of the writeup. Gives a very lucid and engaging representation of the underlying architecture if the system. Also, clearly depicts the understanding of the problem by the team.
The UML diagrams are missing, but they are compensated by the sequence of steps, which is easy to follow.
The UML diagrams are missing, but they are compensated by suitable explanations. I could follow it very easily.
The UML diagrams are missing, but they are compensated by suitable explanations. I could follow it very easily.
The UML diagrams are missing, but they are compensated by suitable explanations. I could follow it very easily.
The UML diagrams are detailed and explained well. Suggestion: The application flow could be explained in points so that the reviewer has a clearer view of what is the sequence of events occurring.
The UML diagram shows the various subclasses clearly. It would have been better if it had also explained a few attributes/ methods.
The UML diagram is having the correct contents but needs the rough names of class methods
The UML diagram is good, but the diagram in the test plan is not very helpful; I'd suggest either another UML-ish diagram or just a bulleted list of the features from the Report Controller.
The UML diagram is good, but the diagram in the test plan is not very helpful; I'd suggest either another UML-ish diagram or just a bulleted list of the features from the Report Controller.
The UML and flow Charts used by the teams are good but can be made more clear and appealing
The UI seems to be flexible. It could include trace back to the home page. The README file could include the details to login as email. This would be helpful to use the site to it's full potential.
The UI seems to be flexible. It could include trace back to the home page. The README file could include the details to login as email. This would be helpful to use the site to it's full potential.
The UI mockups uploaded are very unclear as they are just pictures of hand drawn designs. This too could have worked had the diagrams and the text inside them been clear. I can understand the flow however the components are tough to decipher.
The UI mockups uploaded are very unclear as they are just pictures of hand drawn designs. This too could have worked had the diagrams and the text inside them been clear. I can understand the flow however the components are tough to decipher.
The UI mockups are good. I'm not entirely sure that the UML diagram is effective, perhaps a better diagram style would work better.
The UI mockups are good. I'm not entirely sure that the UML diagram is effective, perhaps a better diagram style would work better.
The UI looks appealing and very easy to follow. The choice of layout properly differentiates various class of functionalities possible with the application. Yet the UI lacks the below aspects 1. There is no concept of user role in the signup form. Though there is role field, it always shows empty. 2. Few links in the layout are broken. 3. Few fields like the phone number can be made optional for creating users which eases the process.
The UI looks appealing and very easy to follow. The choice of layout properly differentiates various class of functionalities possible with the application. Yet the UI lacks the below aspects 1. There is no concept of user role in the signup form. Though there is role field, it always shows empty. 2. Few links in the layout are broken. 3. Few fields like the phone number can be made optional for creating users which eases the process.
The UI is straight forward and easy to use. The implementation of the menu bar makes it look better. Though there is a scope for improvement. The admin link in the Readme file is not working.
The UI is straight forward and easy to use. The implementation of the menu bar makes it look better. Though there is a scope for improvement. The admin link in the Readme file is not working.
The UI is simple however, because of the lack of functionality cannot be assessed properly. One suggestion would be to rename the label of 'back' button to 'logout' to make it more intuitive.
The UI is quite good but the design can be improved. The application allows a realtor to add company details while signing up which does not make for great design. Without authentication no user should be allowed to perform any functionality.
The UI is quite good but the design can be improved. The application allows a realtor to add company details while signing up which does not make for great design. Without authentication no user should be allowed to perform any functionality.
The UI is mostly easy to use, but the README is nearly undocumented.
The UI is mostly easy to use, but the README is nearly undocumented.
The UI is intuitive and the README provides basic information to get started. A universal navigation bar at the top would be very helpful
The UI is basic as of now. The 'show profile' link is broken.
The UI for the login page is the only thing that loads, as I'm unable to sign up. A suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work.
The UI for the login page is the only thing that loads, as I'm unable to sign up. A suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work.
The UI for the login page is the only thing that loads, as I'm unable to sign up. A suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work.
The type of user in the view user panel through admin login is unavailable, would it be possible for the team to have two separate views/controllers and CRUD functions on realtors and hunters?
The type of user in the view user panel through admin login is unavailable, would it be possible for the team to have two separate views/controllers and CRUD functions on realtors and hunters?
The type of user in the view user panel through admin login is unavailable, would it be possible for the team to have two separate views/controllers and CRUD functions on realtors and hunters?
The travis tests have failed. There was one main failure in the Travis log which could be addressed.
The travis test has not passed
The travis test has not passed
The Travis test has failed and overall coverage has also decreased. There were many errors in the build log of travis.
The travis test had failed and codeclimate shows indentation and other such minor errors. I think that the team just needs to work on the styling and following some Ruby guidelines and they are good to go.
The travis test had failed and codeclimate shows indentation and other such minor errors. I think that the team just needs to work on the styling and following some Ruby guidelines and they are good to go.
The travis report shows failing case implying no coverage there.
The Travis CI test has been failed.
The Travis CI test did not past.  I did not find any test cases written. Suggestion: Test cases should have been written as a part of the final deliverable.
The travis CI test did not pass. Suggestion: Rectify the Travis CI issue.
The Travis CI is in progress and there are 3 codeclimate issue to fix.  
The Travis CI is in progress and there are 3 codeclimate issue to fix.  
The Travis CI is in progress and there are 3 codeclimate issue to fix.  
The Travis CI has passed.
The Travis CI has failed and also code climate.
The Travis CI has failed and also code climate.
The Travis CI did not pass this time.          
The Travis CI build passed for the test cases. Also, the code passed for Danger bot. However, there were some issues for the code climate that required to be resoled. Overall the pull request satisfies the required criteria. 
The Travis CI build passed for the test cases. Also, the code passed for Danger bot. However, there were some issues for the code climate that required to be resoled. Overall the pull request satisfies the required criteria. 
The Travis CI build passed , the code does not have any conflicts with the master. Initially (stage 1) a lot of changes were made so that the Travis CI build would pass. Kudos for effort!
The Travis CI build has failed.
The Travis CI build has failed.
The Travis CI build has failed.
The Travis CI build has failed however there are no merge conflicts. You could have fixed the Travis CI build errors in phase 2.  Still overall good job.
The travis CI build failed.
The Travis CI build does not pass.  Suggestion: Team should have rectified this. 
The travis CI build did not pass. But the tests on which the build fails has no direct relationship with the code that the team has changed or added.
The travis CI build did not pass. But the tests on which the build fails has no direct relationship with the code that the team has changed or added.
The travis CI build did not pass. But the tests on which the build fails has no direct relationship with the code that the team has changed or added.
The Travis CI build did not fail exactly but it did not pass either. It showed in progress. But when I clicked on the details, it showed that the test failed.  Suggestion: Travis CI issue should have been rectified.
The Travis CI build did not fail exactly but it did not pass either. It showed in progress. But when I clicked on the details, it showed that the test failed.  Suggestion: Travis CI issue should have been rectified.
The Travis CI build did not fail exactly but it did not pass either. It showed in progress. But when I clicked on the details, it showed that the test failed.  Suggestion: Travis CI issue should have been rectified.
The Travis builds have failed but there are no conflicts to be resolved. 
The Travis builds have failed but there are no conflicts to be resolved. 
The Travis build passed but there are a lot of warnings and issues that have not been fixed. MAny of them are trivial and easy to fix. 
The Travis build passed but there are a lot of warnings and issues that have not been fixed. MAny of them are trivial and easy to fix. 
The Travis build passed but there are a lot of warnings and issues that have not been fixed. MAny of them are trivial and easy to fix. 
The Travis Build has passed. The only conflicts remaining to resolve are the Code Climate conflicts.
The Travis Build has passed. The only conflicts remaining to resolve are the Code Climate conflicts.
The Travis Build has passed. The only conflicts remaining to resolve are the Code Climate conflicts.
The topic assigned to this team is Unit testing on menu.rb. So, they had to create Rspec tests for the methods in the model file menu.rb in the new file spec/models/menu_spec.rb. The team has precisely tested the functionalities of every method including all relevant scenarios (as contexts) of both the nested class Node and the enclosing class Menu. The names used for mock objects and literals are intuitive and follow the Ruby's convention. There were a few issues regarding incorrect indentation and the verbosity of the spec code in the previous round. The team has rectified those in this round. In my view, giving additional comments for code in rspec is superfluous as the tests are already embedded with information on what it intends to do through the use of 'describe', 'context' and 'it' methods.  The code is DRY through the use of reusable mock objects like menu, nodes, site controllers, content pages, controller actions, items and roles which span across the entire block where it is defined. Additionally, the use of before(:each) method to initialize and set up these objects further DRY's up the spec for the methods. 
The tests were mentioned in the report but not in the pull request. There was also no coverage information. The approach looks good though.
The tests were mentioned in the report but not in the pull request. There was also no coverage information. The approach looks good though.
The tests scripts are not written for the changes.
The tests scripts are not written for the changes.
The tests look detailed and clear. However no edge cases or failing cases are tried. Simple and straightforward  tests are implemented. They could have tried more corner scenarios more..eg. fields are missing etc
The tests have been added as per the test plan but some of them have not seemed to have passed. The team could have a look at the tests not passing and work on them.
the tests given tests there changes, which is enough.
The tests for the controllers and models were basic scaffold tests with not much meaning.
The tests describe the code they are testing not the behavior/functionality. Like for "In this scenario, the controller_action attribute of the menu item is unavailable. In this case, the expectation is that a customized path is assigned to the URL variable." This just specifies what variable is being updated and I have no idea what workflow it represents. This is at least a brittle description for a test. Suppose tomorrow the variable is removed or some function ends up calculating the value, while the test it self might pass if the change was passive, the description is now stale and will confuse any user trying to update the tests. 
The testing was thorough, although one model and one controller individually did not appear to be tested thoroughly.
The testing was incomplete, the model and controller were not thoroughly tested.
The testing plan is very neat and comprehensive.  they could have handled more edge cases.
The testing plan is very neat and comprehensive.  they could have handled more edge cases.
The testing plan is not proper. Though the document is nicely presented it does not concentrate on all areas. I would suggest to systematically describe each step.
The testing plan is not proper. Though the document is nicely presented it does not concentrate on all areas. I would suggest to systematically describe each step.
The testing of initialize is very well described with descriptions of how and why the tests were written in that particular fashion. However, all other tests are not discussed. When looking at the github it seems that there were many more tests that were not elaborated upon. The test descriptions were included at the bottom of the page but without explanation of implementation or purpose. It would be helpful to include more of the test cases. If anything, it would be a good idea to discuss them without the code inclusion like that of initialize because that section of the wiki is very well presented.
The test works well, but there is no edge case.
The test section looks inadequate as of now, only two test scenarios are mentioned and no details on automation or UI.  More so no mention of tests in the document.
The test section looks inadequate as of now, only two test scenarios are mentioned and no details on automation or UI.  More so no mention of tests in the document.
The test section looks inadequate as of now, only two test scenarios are mentioned and no details on automation or UI.  More so no mention of tests in the document.
The test scripts have been written, however the scripts could have been written in a more elaborate way to include all the test cases and not just the high level tests. For example, the system accepts an Invalid phone number which is less than 10 digits of length. All these test cases could have been written and tested 
The test plan was not present. But the team have done a good job in implementing tests.
The test plan was not present. But the team have done a good job in implementing tests.
The test plan was not present. But the team have done a good job in implementing tests.
The test plan was not present. But the team have done a good job in implementing tests.
The Test Plan was comprehensive. However, in the video they could have explained which screens and which methods they were testing instead of just showing some test cases pass on the screen.
The Test Plan was comprehensive. However, in the video they could have explained which screens and which methods they were testing instead of just showing some test cases pass on the screen.
The Test Plan was comprehensive. However, in the video they could have explained which screens and which methods they were testing instead of just showing some test cases pass on the screen.
The test plan should have come before the implementation details. I gave this suggestion in my previous review as well. Still, the documentation is well written overall. It's just a puzzling choice to put the test plan near the end.
The test plan seems to include examples of tests and the explanation of the same. However, I didn't find any description of edge cases or invalid input values.
The test plan seems to include examples of tests and the explanation of the same. However, I didn't find any description of edge cases or invalid input values.
The test plan seems to be missing
The test plan seems to be fine. It basically outlines all the functionalities that the team will test. The different cases the team will test is also outlined though not many. I guess there will be more test cases to be added once the project is on the roll.
The test plan seems to be fine. It basically outlines all the functionalities that the team will test. The different cases the team will test is also outlined though not many. I guess there will be more test cases to be added once the project is on the roll.
The test plan seems to be fine. It basically outlines all the functionalities that the team will test. The different cases the team will test is also outlined though not many. I guess there will be more test cases to be added once the project is on the roll.
The Test plan seems to be covering most of the positive test cases. However, it doesn't seem to cover any negative test cases. Like if the student decides not to make the review public, its reviews shouldn't be shown to the TA/ Instructor.
The test plan seems overly simplistic. It only tests whether the team's changes work in the most drastic scenario possible. It seems like they should have more boundary value tests and more test cases to account for their new method of looping through the reviews to compare new reviews with previous ones.
The test plan seems overly simplistic. It only tests whether the team's changes work in the most drastic scenario possible. It seems like they should have more boundary value tests and more test cases to account for their new method of looping through the reviews to compare new reviews with previous ones.
The test plan seems overly simplistic. It only tests whether the team's changes work in the most drastic scenario possible. It seems like they should have more boundary value tests and more test cases to account for their new method of looping through the reviews to compare new reviews with previous ones.
The test plan seems adequate at this stage, edge cases may need to be considered at a later stage.
The test plan seems a little vague. Maybe the scenarios can be explained in a better way first and then given in bullets.
The test plan section unfortunately lists no concrete test that the team would write. Checking the functionality manually, and writing rspec tests for the code written are extremely different, and I would suggest the team to have a dedicated test plan section, mentioning the controller/model they wish to test, the objects they would need to mock etc.
The test plan section unfortunately lists no concrete test that the team would write. Checking the functionality manually, and writing rspec tests for the code written are extremely different, and I would suggest the team to have a dedicated test plan section, mentioning the controller/model they wish to test, the objects they would need to mock etc.
The test plan section unfortunately lists no concrete test that the team would write. Checking the functionality manually, and writing rspec tests for the code written are extremely different, and I would suggest the team to have a dedicated test plan section, mentioning the controller/model they wish to test, the objects they would need to mock etc.
The test plan section unfortunately lists no concrete test that the team would write. Checking the functionality manually, and writing rspec tests for the code written are extremely different, and I would suggest the team to have a dedicated test plan section, mentioning the controller/model they wish to test, the objects they would need to mock etc.
The test plan section just states that the existing test cases for feedback per member is fixed to satisfy the new feedback per team implementation. It would have been effective if specific pre-conditions, edge cases, invalid input values etc are handled. For example, in this case the input with missing team id or one member teams can be used as good candidates to test the implementation.
The test plan section is really well written. However, pre-conditions, edge cases are not very well discussed and talked about. I would suggest the team to add these into the wiki as well.
The test plan section is really well written. However, pre-conditions, edge cases are not very well discussed and talked about. I would suggest the team to add these into the wiki as well.
The test plan section is really well written. However, pre conditions , edge cases are not very well discussed and talked about.
The test plan section is really well written. However, pre conditions , edge cases are not very well discussed and talked about.
The test plan section is included, however, only the framework to be used is discussed. I would suggest them to include a little more brief description about what test cases they plan to include and work on.
The test plan section is included, however, only the framework to be used is discussed. I would suggest them to include a little more brief description about what test cases they plan to include and work on.
The test plan section is included, however, only the framework to be used is discussed. I would suggest them to include a little more brief description about what test cases they plan to include and work on.
The test plan section included in the design document does not provide any content. It could specify the various scenarios considered and describe how each functionality could be tested.
The test plan section included in the design document does not provide any content. It could specify the various scenarios considered and describe how each functionality could be tested.
The test plan section in the doc is left blank. The authors have not stated if the project requires any testing or not.
The test plan section in the doc is left blank. The authors have not stated if the project requires any testing or not.
The test plan needs to be significantly improved.
The test plan needs to be significantly improved.
The test plan needs to be significantly improved.
The test plan is very detailed, but doesn't account for what I suspect could be many edge cases.
The test plan is too elaborate and doesn't exactly cover different pre-conditions, edge cases, invalid input values, and other possibilities under the corresponding headers. Please include this as it improves the readablity and understanding.
The test plan is too elaborate and doesn't exactly cover different pre-conditions, edge cases, invalid input values, and other possibilities under the corresponding headers. Please include this as it improves the readablity and understanding.
The test plan is shallow. It only state what features the team will test but how the features will be test, what and how many cases will be included are not clear. The team should expand the plan for each features they aim to test, including specific steps and different cases.
The test plan is shallow. It only state what features the team will test but how the features will be test, what and how many cases will be included are not clear. The team should expand the plan for each features they aim to test, including specific steps and different cases.
The test plan is present. It is broken down into separate sections for each of the five issues. Each section is further broken down into a manual and automated testing parts. While the sections for manual testing are comprehensive, the sections for automated tests are too general and do not provide a clear vision for what types of changes are going to be introduced. I would suggest elaborating more on the technical side of the tests, for example specifying which spec files will be modified or whether or not the project will utilize RSpec.
The test plan is present. It consists of a set of functional tests described for each of the five views. I would suggest elaborating on the technical side of tests, for example specifying which spec files will be modified or whether or not the project will utilize RSpec. Moreover, it would be better if the team provided a rationale for why it is sufficient to use only functional tests.
The test plan is present. It consists of a set of functional tests described for each of the five views. I would suggest elaborating on the technical side of tests, for example specifying which spec files will be modified or whether or not the project will utilize RSpec. Moreover, it would be better if the team provided a rationale for why it is sufficient to use only functional tests.
The test plan is not yet done. Rest, I could see that the document is very much complete.
The test plan is not there.
The test plan is not there.
The test plan is not there.
The test plan is not present.
The test plan is not included in the design document. While the instances of testing are certainly mentioned, e.g. "specific functionalities could be tested by writing a custom html file and then running it the similar way." and "Finally, well test our code by enabling the blob API." the authors do not provide an extensive discussion of specifically what functionality is going to be tested.
The Test Plan is not defined formally in the wiki. Instead the reader has to reason about the provided code itself. Given test suite covers every method of the object under test. ~70% Coverage is achieved. It would be better for the team to define the test plan and decouple it from the actual code. This could be done by firstly stating all the 'describe' constructs, methods that they are testing and secondly, elaborating by listing their descriptions.
The Test Plan is not defined formally in the wiki. Instead the reader has to reason about the provided code itself. Given test suite covers every method of the object under test. ~70% Coverage is achieved. It would be better for the team to define the test plan and decouple it from the actual code. This could be done by firstly stating all the 'describe' constructs, methods that they are testing and secondly, elaborating by listing their descriptions.
The Test Plan is not defined formally in the wiki. Instead the reader has to reason about the provided code itself. All of the tests are passing, but methods like 'review_response_report' and large part of 'import' are not covered.
The Test Plan is not defined formally in the wiki. Instead the reader has to reason about the provided code itself. All of the tests are passing, but methods like 'review_response_report' and large part of 'import' are not covered.
The Test Plan is not complete.
The test plan is not adequate enough and a little bit ambiguous. For the checkbox part, there are many cases not included. For example, the checkbox is unchecked by default, in different cases, the checkbox will show or not. For the student side, 5 for each case is not clear enough and I cannot identify what the anticipated results for these cases should be.
The test plan is not added as the part of writeup
The test plan is not about what they test in the Rspec test.
The test plan is not about what they test in the Rspec test.
The Test plan is not a part of the writeup. The team can improve upon this by following the general guidelines of writing the document. The test cases can be coherently designed following the Better Specs documentation. The team must have the test cases designed that span the required goals.
The test plan is missing in the wiki page. The content in this section could be the one suggested in the above comment, to just include all the test cases added and write a brief description about each.
The test plan is explained in a good manner, but the edge cases and invalid values are not mentioned. What if a space is in front of the username. 
The test plan is explained in a good manner, but the edge cases and invalid values are not mentioned. What if a space is in front of the username. 
The test plan is completed. Just one suggestion that it can be more specific. For example, it may include some real test cases.
The test plan is complete and covers all intended functionalities. They have also provided all necessary steps to test the functionality. Good documentation on test plan. As client-side changes using script is added, a latency test to verify system is not slow in responding to sorting can be included.
The test plan is complete and covers all intended functionalities. They have also provided all necessary steps to test the functionality. Good documentation on test plan. As client-side changes using script is added, a latency test to verify system is not slow in responding to sorting can be included.
The test plan is clear but shallow. Finer grain tests should be described, not simply functional tests.
The test plan is clear and effective but shallow. Manual testing is good, but more description should be provided for the automated testing.
The test plan is clear and effective but shallow. Manual testing is good, but more description should be provided for the automated testing.
The test plan is clear and effective but shallow. Manual testing is good, but more description should be provided for the automated testing.
The test plan gives a black box testing view which is good and easy to understand. But it would be helpful to give more details about what functionalities are tested. Like a new DB table is added. So tests related to that and corner cases such as an old assignment gets removed , foreign key constraint so how will that test be conducted would make it better.
The test plan gives a black box testing view which is good and easy to understand. But it would be helpful to give more details about what functionalities are tested. Like a new DB table is added. So tests related to that and corner cases such as an old assignment gets removed , foreign key constraint so how will that test be conducted would make it better.
The test plan given is not concrete. Just mentions what should be done but no actual steps for them.
The test plan given is not concrete. Just mentions what should be done but no actual steps for them.
The test plan focusses on a particular scenario for the functionality to work and does not handle validations and edge cases
The test plan doesn't seem to explain how the team intends to test their new implementation, it simply gives directions for running tests.
The test plan doesn't seem to explain how the team intends to test their new implementation, it simply gives directions for running tests.
The test plan doesn't seem to explain how the team intends to test their new implementation, it simply gives directions for running tests.
The test plan doesn't seem to explain how the team intends to test their new implementation, it simply gives directions for running tests.
The test plan does not look complete. It just says Fixed the existing test cases for the review feedback by a team instead of a team member. Could have mentioned the edge cases and how they tested it.
The test plan does not include details on preconditions or edge cases. I suggest the team to elaborate on Test Plan. Otherwise a good start.
The test plan does not include details on preconditions or edge cases. I suggest the team to elaborate on Test Plan. Otherwise a good start.
The test plan does include a high level of testing scenarios the team plans to cover. I would suggest the team should add BDD tests so they can test the same after the development phase is over.
The test plan does include a high level of testing scenarios the team plans to cover. I would suggest the team should add BDD tests so they can test the same after the development phase is over.
The test plan does include a high level of testing scenarios the team plans to cover. I would suggest the team should add BDD tests so they can test the same after the development phase is over.
The test plan describes the flow of the tests and what the expected values of the objects should be in certain scenarios however I didn't find any mention of edge cases or invalid input values.
The test plan describes the flow of the tests and what the expected values of the objects should be in certain scenarios however I didn't find any mention of edge cases or invalid input values.
The test plan covers all the reports and their creation, as well as data to be rendered using the new button added. You can try adding edge test cases, i.e. the code should not break if data is empty for a report. They have not yet posted the complete plan of testing, and plan to update as per the progress. I would suggest you to take time to define a testing strategy, as it will help in TDD which speeds up the process highly.
The test plan covers all the reports and their creation, as well as data to be rendered using the new button added. You can try adding edge test cases, i.e. the code should not break if data is empty for a report. They have not yet posted the complete plan of testing, and plan to update as per the progress. I would suggest you to take time to define a testing strategy, as it will help in TDD which speeds up the process highly.
The test plan could have been explained more elaborately. Edge cases could have been covered.
The test plan could be more specific. For example "Writing testing conditions for different functions" doesn't indicate what strategies are being employed or what edge cases are being tested.
The test plan could be more specific. For example "Writing testing conditions for different functions" doesn't indicate what strategies are being employed or what edge cases are being tested.
The test plan column is missing from the documentation
The test plan can be more elaborate and complete. This will help as part of the behaviour driven design process and also help you test whether every change made works correctly.
The test plan can be more elaborate and complete. This will help as part of the behaviour driven design process and also help you test whether every change made works correctly.
The test plan briefly mentions the scenarios the team plans to test. They can add more about the test cases if possible.
The test plan briefly mentions the scenarios the team plans to test. They can add more about the test cases if possible.
The test plan added is just a basic case and as the changes are just some calculations to be made test plan is not much of a requirement for the project.
The test only validates cases with valid attributes
The test only validates cases with valid attributes
The test made the coverage increase, but it still have room to improve its structure to make it more clear and useful.
The test is explained with the file used in the tabular form. It would have been good to attach a screenshot of the test if possible.
The test is explained with the file used in the tabular form. It would have been good to attach a screenshot of the test if possible.
The test is almost ready to be deployed onto the production server. As mentioned above, there are some issues need to be fixed.
The test is almost ready to be deployed onto the production server. As mentioned above, there are some issues need to be fixed.
The test is almost ready to be deployed onto the production server. As mentioned above, there are some issues need to be fixed.
The test is added under the Test Added section and is well explained under the tabular form. Could have produced a screenshot of the test, if it was a possibility to generate. This helps the future teams to know what kind of test result to expect.
The test is added under the Test Added section and is well explained under the tabular form. Could have produced a screenshot of the test, if it was a possibility to generate. This helps the future teams to know what kind of test result to expect.
The test for sort_by_name redundantly checks implementation parts. It needs only to test the result.
The test for sort_by_name redundantly checks implementation parts. It needs only to test the result.
The test for each functionality is written. However,I could find only 2 tests running , that too not with satisfactory results.
the test for controller and model has been done. and all the details have been included into the Readme file.
The test coverage on the diff in this pull request is 100.0% (50% is the threshold). This pull request will bring the total coverage in the repository to 28.7% (-19.0% change). ---- seems like the coverage was reduced. Need to add some test cases to increase the coverage. The above reason is why I have given 4. But I would definitely consider this as well ----  Overall coverage increased (+11.0%) to 47.72%
The test coverage on the diff in this pull request is 100.0% (50% is the threshold). This pull request will bring the total coverage in the repository to 28.7% (-19.0% change). ---- seems like the coverage was reduced. Need to add some test cases to increase the coverage. The above reason is why I have given 4. But I would definitely consider this as well ----  Overall coverage increased (+11.0%) to 47.72%
The test coverage has increased significantly from like one test to 100%. Kudos to the team!! The team's pull request hasn't passed due to inconsistencies in following Ruby styling guidelines.
The test coverage has decreased by 2%.
The test coverage decreased, but I'm not really worried about that because that seems to be a common theme with many of the refactoring projects.
The test cover most cases, but some scenarios like different cases for the if statement for add/team method is not sufficient.
The test code follows standards. Context messages can be shorter and precise. 
The test code follows standards. Context messages can be shorter and precise. 
The test cases were not created.
The test cases seem to have no additional test cases other than those automatically generated during scaffold, some of the potential missing tests include testing the role based access given to a realtor, as he is able to create multiple companies.
the test cases seem appropriate given that the only thing which needs to be tested is if the suggestion detection algorithm is displaying the intended output or not.
The test cases have covered all the scenarios that I can think of including the cases when the objects passed as parameters are nil. For example there are scenarios covering the cases when the objects like controller_action attribute, site_controller variable, content_page, menu items, parent id are nil objects; and also scenarios when URL of controller action is unavailable, when the by_name hash does not contain a given node name and when a menu id is not present in the @selected hash.
The test cases have been developed into automated tests however edge cases or failing cases have not been considered. Only simple and straightforward scenarios have been tested. The video shows the test cases and the document shows the coverage. The document is well made.
The test cases have been developed into automated tests however edge cases or failing cases have not been considered. Only simple and straightforward scenarios have been tested. The video shows the test cases and the document shows the coverage. The document is well made.
The test cases have been developed into automated tests however edge cases or failing cases have not been considered. Only simple and straightforward scenarios have been tested. The video shows the test cases and the document shows the coverage. The document is well made.
The test cases covers the required test scenarios and the system operates as intended. The video file submitted though seems to crash. A link could have helped.
The test cases are working. The coverage also as i can see is 100%.  I could find only one test for which the edge case failed.
The test cases are working. The coverage also as i can see is 100%.  I could find only one test for which the edge case failed.
The test cases are quite illustrative, however they have not been automated.
The test cases are cleanly written following good practices. Some of the indentation needs to be adjusted to contain better readability. Also, within the menu_rpec file, you are essentially testing two classes Node and Menu. I am not sure why that is. Is the node class and inner class of menu? Maybe these two classes should be separated into different rspec files to ensure a better naming setup. Maybe this could be clarified in the wiki so that readers would understand the design choice. Overall great work.
The test cases are cleanly written following good practices. Some of the indentation needs to be adjusted to contain better readability. Also, within the menu_rpec file, you are essentially testing two classes Node and Menu. I am not sure why that is. Is the node class and inner class of menu? Maybe these two classes should be separated into different rspec files to ensure a better naming setup. Maybe this could be clarified in the wiki so that readers would understand the design choice. Overall great work.
The test cases added by the team pass. But overall coverage has decreased. I would suggest the team to have added more test cases for the new lines added in the controllers.
The test case, does not handle the case when the imported csv is corrupted.
The technical changes required are explained in depth but the usecase or the domain knowledge is not provides properly. This makes it difficult to understand the problem statement properly. Some high-level domain knowledge and requirements background will be helpful.
The technical changes required are explained in depth but the usecase or the domain knowledge is not provides properly. This makes it difficult to understand the problem statement properly. Some high-level domain knowledge and requirements background will be helpful.
The technical changes required are explained in depth but the usecase or the domain knowledge is not provides properly. This makes it difficult to understand the problem statement properly. Some high-level domain knowledge and requirements background will be helpful.
The technical changes required are explained in depth but the usecase or the domain knowledge is not provides properly. This makes it difficult to understand the problem statement properly. Some high-level domain knowledge and requirements background will be helpful.
The teams implementation of a UML diagram seems to be a good way of representing the changes planned.The diagram could have been detailed with regards to the classes that are being added and modified. There should be attributes of each class , then the methods that are added or changed with the type of inputs to these methods and return types of these methods. 
The teams implementation of a UML diagram seems to be a good way of representing the changes planned.The diagram could have been detailed with regards to the classes that are being added and modified. There should be attributes of each class , then the methods that are added or changed with the type of inputs to these methods and return types of these methods. 
The team was regular in committing changes. The team continued to work in round 2 and made regular progress. All members contributed significantly. Great job! Could have started the project a bit earlier.
The team vastly improved on the writeup from the first stage by giving a general overview of the tasks taken up and the list of issues present and resolved during the project. 
The team states all the problems included in this project and provide the solutions for them. However, the authors didn't provide enough introduction about what the project is. The problems was not explained clear enough and tough to understand. No test plan provided.
The team states all the problems included in this project and provide the solutions for them. However, the authors didn't provide enough introduction about what the project is. The problems was not explained clear enough and tough to understand. No test plan provided.
The team should give more comments for the review strategy part, especially for the ruby codes part to help viewers understand what is going on.
The team should add more comments for the codes include in the two issues, it is a little bit hard to follow what the author want to do without comments.
The team should add more comments for the codes include in the two issues, it is a little bit hard to follow what the author want to do without comments.
The team seems to have tested the login / signup module pretty well. I could hardly find any bugs there. But the team seemed to have ignored testing other modules extensively. This is because the delete functionality in many modules is not working. For example, the realtor cannot delete houses or company, neither can a house hunter delete houses from his interest list.
The team provides some test cases, but it seems the tests were all done themselves and they didn't write codes for it and make it automatic. The test shows the feature work properly.
The team provided sufficient information on the project purpose and design. The test plan is adequate.     It would be better, to provide a solid reasoning for incorporating different sorting. Few sorting implementations, ie) by name and team are intuitive. But the need to sort the Author feedback report and teammate review report, in the way suggested by the team, the reasoning is not very apparent. Need more problem statement elaboration. 
The team provided sufficient information on the project purpose and design. The test plan is adequate.     It would be better, to provide a solid reasoning for incorporating different sorting. Few sorting implementations, ie) by name and team are intuitive. But the need to sort the Author feedback report and teammate review report, in the way suggested by the team, the reasoning is not very apparent. Need more problem statement elaboration. 
The team provided sufficient information on the project purpose and design. The test plan is adequate.     It would be better, to provide a solid reasoning for incorporating different sorting. Few sorting implementations, ie) by name and team are intuitive. But the need to sort the Author feedback report and teammate review report, in the way suggested by the team, the reasoning is not very apparent. Need more problem statement elaboration. 
The team provided a diagram what feature needs to be added, but it is not adequate.
The team only provides use cases. These cases gave me a brief insight of the flow but more literally explantation may need.
The team only provides use cases. These cases gave me a brief insight of the flow but more literally explantation may need.
The team only provided the flow diagram to state the logic they will use when they make changes but did not provide any details about what changes they will make and how these changes will be made. The design should be more detailed to explain the changes step by step.
The team only provided the flow diagram to state the logic they will use when they make changes but did not provide any details about what changes they will make and how these changes will be made. The design should be more detailed to explain the changes step by step.
The team only implemented 2/3 parts of the project and has not created the tests for the same. The CI build is also failing for the pull request. The functionalities implemented are working as expected. 
The team needs to provide a list of sections including the test plan and unit test cases that would make it easy to refer to the pull request and the github code. They must also work on designing the wiki page making it easy to read and understand it.
The team might has out 2 issues to be resolved.
The team kept on committing on the regular bases but needed team collaboration. Mostly commits are from one person.
The team kept on committing on the regular bases but needed team collaboration. Mostly commits are from one person.
The team kept committing their changes even in round 2.
The team included a test plan section is the documentation which is currently blank. the team should include the automated and manual test scenarios in the document.
The team included a test plan section is the documentation which is currently blank. the team should include the automated and manual test scenarios in the document.
The team have written a test plan. But I feel more test cases could have been written to test the edge cases. Also the team could have explained their test cases in more detail.
The team have written a test plan. But I feel more test cases could have been written to test the edge cases. Also the team could have explained their test cases in more detail.
The team have thoroughly explained the changes that need to be made and how they intend to make those changes.
The team have taken time to explain each functionality properly in the second round. They list all the changes that they wish to make in the views. However, I would suggest the team to also mark out (circle out) the area they wish to change in the screenshot of the view.
The team have suggested reasonable changes to address the problem statement but have not given explanation for each solution they have proposed for the implementation.
The team have suggested reasonable changes to address the problem statement but have not given explanation for each solution they have proposed for the implementation.
The team have included helpful diagrams but I feel the team could have included diagrams that better helped us in understanding what the team are planning to implement. The current diagrams show us what Expertiza looks right now and that's it.
The team have explained why and how they did the work they did. Feel they should elaborate more on the tests that they have implemented.
the team have explained the flow of models using data flow diagram and have explained the use case using the use case diagrams. some more designs regarding the approach of implementation can be added in the documentations such as sequence diagrams/class diagrams for new classes/modified classes.
The team have done a good job explaining their project. But I feel the team should have detailed their explanation of the implementation more. Also the test cases should have been included in more detail.
The team have done a good job explaining their project. But I feel the team should have detailed their explanation of the implementation more. Also the test cases should have been included in more detail.
The team have done a good job explaining their project. But I feel the team should have detailed their explanation of the implementation more. Also the test cases should have been included in more detail.
The team have done a good job explaining their project. But I feel the team should have detailed their explanation of the implementation more. Also more test cases should have been included in more detail.
The team have done a good job explaining their project. But I feel the team should have detailed their explanation of the implementation more. Also more test cases should have been included in more detail.
The team have done a good job explaining their project. But I feel the team should have detailed their explanation of the implementation more. Also more test cases should have been included in more detail.
The team have done a good job explaining their problem statement and implementation. But the documentation does not include the testing plan. The team should write about the tests they plan to implement.
The team have done a good job explaining their problem statement and implementation. But the documentation does not include the testing plan. The team should write about the tests they plan to implement.
The team have an image of what they plan to implement. The team however have-not used any helpful visualizations like UML diagrams that would aid in the understanding.
The team have an image of what they plan to implement. The team however have-not used any helpful visualizations like UML diagrams that would aid in the understanding.
The team have an image of what they plan to implement. The team however have-not used any helpful visualizations like UML diagrams that would aid in the understanding.
The team have added the test cases which covers the range of the project. Coverage increased.
The team have added the test cases which covers the range of the project. Coverage increased.
The team hasn't yet implemented any proper testing
The team hasn't yet implemented any proper testing
The team hasn't put any diagram to explain their design, they've just explained it theoretically.
The team hasn't included any test plans in the design document. I feel testing is really important in this project as there are many 'if's' in the use-case.
The team hasn't included any test plans in the design document. I feel testing is really important in this project as there are many 'if's' in the use-case.
The team hasn't included any test plans in the design document. I feel testing is really important in this project as there are many 'if's' in the use-case.
The team has written steps that are required to test the system. However, they could improve this by adding test code that would test the basic functionality.
The team has written new test cases, but the overall test case coverage has decreased by 0.04%. The tests cover the range of this project.
The team has written new test cases, but the overall test case coverage has decreased by 0.04%. The tests cover the range of this project.
The team has written multiple test cases for the controllers of all the entities, however has not written any for the models.
The team has written multiple test cases for the controllers of all the entities, however has not written any for the models.
The team has written multiple test cases for the controllers of all the entities, however has not written any for the models.
The team has written a well structured write-up, but it lacks depth in certain areas. There is need for more background on what an author feedback is. The project description gives a better idea. Please try to include details from there. The last sentence under the 'Motivation' head, "You should change this to list the teams collective feedback to its reviewers to a particular assignment" is a bit confusing. Please rephrase the sentence so as to add clarity to it.    Instructions on how to manually test the functionality is missing. It was difficult to figure out how to navigate to and test the functionality. It would be really helpful to add this in the wiki.
The team has written a concise and efficient code with proper implementation. However, some additional comments in some parts would improve the readability and make it easier to comprehend
The team has written a concise and efficient code with proper implementation. However, some additional comments in some parts would improve the readability and make it easier to comprehend
The team has written a concise and efficient code with proper implementation. However, some additional comments in some parts would improve the readability and make it easier to comprehend
The team has worked on improving the wiki document. The writeup now includes the Test plan section  that was suggested in the first round specifying the how the team setup an expertiza environment, the model functions used and the mock instance built for testing the model file. 
The team has worked on achieving the path coverage by taking the edge cases into consideration. But, as most of the builds have failed, it may need a working deployment for it to being deployed on the server.
The team has well explained what are they going to change. Though I didn't get how are they going to do the proposed changes. Since they are going to introduce a new feature, they have focussed more on explaining how to use the new feature. 
The team has well explained what are they going to change. Though I didn't get how are they going to do the proposed changes. Since they are going to introduce a new feature, they have focussed more on explaining how to use the new feature. 
The team has well explained what are they going to change. Though I didn't get how are they going to do the proposed changes. Since they are going to introduce a new feature, they have focussed more on explaining how to use the new feature. 
The team has well explained the problem statement along with the application flow which makes it easier to understand about the project. They has also described the method which discusses their proposed implementation. However, it would be helpful to add more details on the design approach they have chosen. The team has also proposed a short test plan on a very high level, which makes senses as this is very early level of the project, but its suggested to add more diverse test cases to it as it would help in handling all the cases during the development of functionality of  self review extension.
The team has well explained the problem statement along with the application flow which makes it easier to understand about the project. They has also described the method which discusses their proposed implementation. However, it would be helpful to add more details on the design approach they have chosen. The team has also proposed a short test plan on a very high level, which makes senses as this is very early level of the project, but its suggested to add more diverse test cases to it as it would help in handling all the cases during the development of functionality of  self review extension.
The team has well documented the problem statement and the details of the fix which is required. However, they have not included any design plan or test plan which could address the approach they have planned.
The team has well documented the problem statement and the details of the fix which is required. However, they have not included any design plan or test plan which could address the approach they have planned.
The team has very well explained the steps they have planned to take for implementation of the functionality. They have stated every change they would be making for the Change request in details. They have also provided flow diagram for every actor involved and for every functionality they are going to implement.  However, the team has not explicitly mentioned the design pattern they are following for this implementation.
The team has very well explained the steps they have planned to take for implementation of the functionality. They have stated every change they would be making for the Change request in details. They have also provided flow diagram for every actor involved and for every functionality they are going to implement.  However, the team has not explicitly mentioned the design pattern they are following for this implementation.
The team has very well explained the steps they have planned to take for implementation of the functionality. They have stated every change they would be making for the Change request in details. They have also provided flow diagram for every actor involved and for every functionality they are going to implement.  However, the team has not explicitly mentioned the design pattern they are following for this implementation.
The team has very well explained the Goals and separation of concerns. The team could have 'proposed' a way to test the implementation.
The team has very well explained the Goals and separation of concerns. The team could have 'proposed' a way to test the implementation.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has very well explained the changes they are making in the project to achieve the functionality. However, they have not included any design explanation explicitly. They have not described the approach they have come with. It might be helpful if they could add the design approach as well in the wiki link so that its easier to understand the code changes by having a glance at the design pattern.
The team has used screenshots to explain their plan, but haven't used any diagrams, like UML, or flowchart to describe their flow.
The team has used screenshots to explain their plan, but haven't used any diagrams, like UML, or flowchart to describe their flow.
The team has used screenshots to explain their plan, but haven't used any diagrams, like UML, or flowchart to describe their flow.
The team has used appropriate principles but no design patterns. They have explained the design plan extensively.
The team has uploaded manual testing screencast to show fixes for 2 out of 3 issues to be fixed, and everything works as expected. The audio in the screencast helps clearly understand the before and after scenarios. However, there are no corresponding test cases to test the fixes. No changes have been done to the spec file.
The team has tried implementing a lot of functionalities as per the code. However, the below ones does not work: >The admin cannot view or delete the inquiries made by house hunter. > While trying to logout as an admin the application breaks. > The realtor cannot edit the information. > While realtor tries to add/view houses the application breaks.   >While trying to view the houses as an admin the application breaks. We're sorry, but something went wrong. If you are the application owner check the logs for more information.
The team has tried implementing a lot of functionalities as per the code. However, the below ones does not work: >The admin cannot view or delete the inquiries made by house hunter. > While trying to logout as an admin the application breaks. > The realtor cannot edit the information. > While realtor tries to add/view houses the application breaks.   >While trying to view the houses as an admin the application breaks. We're sorry, but something went wrong. If you are the application owner check the logs for more information.
The team has tried implementing a lot of functionalities as per the code. However, the below ones does not work: >The admin cannot view or delete the inquiries made by house hunter. > While trying to logout as an admin the application breaks. > The realtor cannot edit the information. > While realtor tries to add/view houses the application breaks.   >While trying to view the houses as an admin the application breaks. We're sorry, but something went wrong. If you are the application owner check the logs for more information.
The team has total 50 commits. However, they have made commits for the code during the end days of round 1 and round 2.
The team has to tested any model or controller.
The team has tested parts of different models, but none of the models is thoroughly tested for functionality verification.
The team has tested parts of different models, but none of the models is thoroughly tested for functional verification.
The team has tested parts of different models, but none of the models is thoroughly tested for functional verification.
The team has tested parts of different models and controllers partially, but none of the models/controllers is thoroughly tested for complete functional verification
The team has tested controller but not model. 
The team has tested both a model and controller. The system can handle the following cases 1)when user uses same email to register twice.  2)should not save user with password less than 6 chars. 3)should not save user with invalid email 4)should not save user without email
The team has suggested reasonable changes to address the problem statement but have not included any details. The team should elaborate on the implementation they plan to do.
The team has suggested 2 methods to test. The first and the recommended method is using the existing automated tests for OffScreenCanvas feature. A new offscreen-canvas directory was added to tests and a new .ini file enables the new preference. The second approach is writing own test cases and a sample HTML file can be used to test if the OffscreenCanvas is rendered.
The team has submitted a partial design and the part they have thought about is complete. The rest has not been thought through. Please consider the design for the logic necessary to show/hide the reviews for the students.
The team has stated all the changes they are planning to make step wise in detail. This really helps to understand the approach they are taking in simple terms. However, the team has not stated which design principle they are following.
The team has separated the existing methods of a class in 2 sub classes. They have used meaningful names for same. The team has not added any new functions as per the wiki description.
The team has represented the workflow through the UML diagrams which is very helpful to understand the flow of the requirement with multiple actors involved in the system. However, it would have been more helpful if they could add the design flow diagrams to explain the database design changes they are suggesting to be done. The new table they are suggesting to make and  the fields they would map to could be shown through a entity relationship diagram which will make it easy for the end user to understand the attributes and the relationship of different entities involved due to the functionality change.
The team has put a lot of efforts in writing the tests. However, the Travis CI tests are not passing.
The team has pushed almost all the commits on 2-3 days of the entire cycle, not regular. Also, the commits are made by one person, which seems strange to me.
The team has provided the application flow diagram which helps to understand the working of the project. It would be helpful to add design details and the diagram for same so that others can understand the implementation as well.
The team has provided the application flow diagram which helps to understand the working of the project. It would be helpful to add design details and the diagram for same so that others can understand the implementation as well.
The team has provided solutions for all the issue but one. For issue#1017, the team has only provided a flow chart(description of the issue graphically) but the code which needs to be changed/added should be looked upon.    Suggestion: The team can mention the way in which they attempt to tackle the issue by mentioning the files and the logic behind the proposed solution.
The team has provided screenshots to help understand the changes in the UI that need to be reflected. Moreover, the team has included proper steps in which every task is achieved.
The team has provided enough explanation about how they are going to work on this project. Overall quality of explanation is good.  Suggestion: Include the purpose of implementing these functions/changes.
The team has provided current system UI, but no expectations on the UI for this project. For an UI intensive project, I believe its essential to have at least a minimal wireframe that serves as the base for good design document so every stake-holder can be on the same page with regard to expectations.
The team has provided an excellent write-up with proper explanation of the problem statement and the solutions they have provided. The team has also included  a video which make things really easy to understand. The team has shown navigation structure of the expertiza menu, which makes the workflow clear.
The team has provided a flowchart to explain the changes that they have made to the system. They have also provided screenshots of the UI that needs to be improved. This makes the design document readable and easy to understand. 
The team has proposed many changes. Although, it is not clear which approach or what exact changes they plan to make.
The team has proposed many changes. Although, it is not clear which approach or what exact changes they plan to make.
The team has proposed many changes. Although, it is not clear which approach or what exact changes they plan to make.
The team has proposed many changes. Although, it is not clear which approach or what exact changes they plan to make.
The team has proposed a prototype where in the code might have some kinds of sorting of data. I hope the code for this does not violate the DRY principle in any case.
The team has only made one significant change to the following file: app/controllers/assignments_controller.rb . It is an if statement which is difficult to follow since the team has not written any comments for the same.   Suggestion: The team could add comments and screenshots for better understand of the workflow in the second submission
The team has only made one significant change to the following file: app/controllers/assignments_controller.rb . It is an if statement which is difficult to follow since the team has not written any comments for the same.
The team has only fixed one issue related to selection of questionnaires according to the video. The other part of the problem statement is missing. The application could not be tested as the application is not deployed. 
The team has not yet started to test their models (unit test) and controller (functional and integration test). Test driven development (TDD) is a good strategy to test the application features before and during the application development phase. By using TDD, it is possible to anticipate the potential pit falls and corner cases, before starting to address the code to tackle those.
The team has not written many test cases to thoroughly tested one model and one controller.
The team has not written any test cases for the entities. There are only the default test cases.
The team has not used many diagrams to explain the changes made in the project. They have just explained using a simplified flowchart. No Use case or ER diagrams have been used to explain the changes made.
The team has not tested model. The code in Github has the default controller tests. The team has not used the rspec gem to perform model/controller tests.
The team has not tested model. The code in Github has the default controller tests. The team has not used the rspec gem to perform model/controller tests.
The team has not tested model. The code in Github has the default controller tests. The team has not used the rspec gem to perform model/controller tests.
The team has not submitted code that should be added/implemented.  Suggestion: the team can add code snippets in the documentation along with the file names in which the changes should be done.
The team has not provided steps for manual testing even though this was requested during round 1 review.
The team has not provided any visual representation of the work they propose to do. Perhaps the pseudocode mentioned above, could instead be shown as a set of diagrams showing an example for how this fucntionality would be handled when one say 1 Review has a score disparity of more than the threshold for existing 2-3 reviews. The idea here is not to add working screenshots, but a Low-Fi diagram would also help in making the documentation visually more representative.
The team has not provided any visual representation of the work they propose to do. Perhaps the pseudocode mentioned above, could instead be shown as a set of diagrams showing an example for how this fucntionality would be handled when one say 1 Review has a score disparity of more than the threshold for existing 2-3 reviews. The idea here is not to add working screenshots, but a Low-Fi diagram would also help in making the documentation visually more representative.
The team has not provided any visual representation of the work they propose to do. Perhaps the pseudocode mentioned above, could instead be shown as a set of diagrams showing an example for how this fucntionality would be handled when one say 1 Review has a score disparity of more than the threshold for existing 2-3 reviews. The idea here is not to add working screenshots, but a Low-Fi diagram would also help in making the documentation visually more representative.
The team has not provided any link for me to manually test the project
The team has not proposed any design for the suggested changes.
The team has not mentioned what method/s they are planning to change inside the controller.
The team has not mentioned about how they are planning to do the changes.
The team has not mentioned about how they are planning to do the changes.
The team has not mentioned about how they are planning to do the changes.
The team has not mentioned about how they are planning to do the changes.
The team has not made any new commits in round 2 because they did the code implementation in round 1.
The team has not included the test plan to explain the end user about the steps for testing the functionality.
The team has not included the test plan to explain the end user about the steps for testing the functionality.
The team has not included any test cases. It would be easy to include the test cases on the  app/controllers/suggestion_controller for the update_feedback method that has been added. Also the team may add some features test cases as most of the changes made are in html files. The team can refer the existing features present in the .spec/features folder.
The team has not included any test cases. It would be easy to include the test cases on the  app/controllers/suggestion_controller for the update_feedback method that has been added. Also the team may add some features test cases as most of the changes made are in html files. The team can refer the existing features present in the .spec/features folder.
The team has not included any test cases. It would be easy to include the test cases on the  app/controllers/suggestion_controller for the update_feedback method that has been added. Also the team may add some features test cases as most of the changes made are in html files. The team can refer the existing features present in the .spec/features folder.
The team has not included any additional diagrams apart from the flow diagram provided in the first stage. The flow diagram effectively describes the sequence of actions that need to be taken so that the instructor can view the bar graph visual representation for the selected criteria set.
The team has not included any additional diagrams apart from the flow diagram provided in the first stage. The flow diagram effectively describes the sequence of actions that need to be taken so that the instructor can view the bar graph visual representation for the selected criteria set.
The team has not included a Test plan that models their tasks for running the test cases. It should list the overall procedure adopted by the team from scratch to getting the tests running. 
The team has not included a Test plan that models their tasks for running the test cases. It should list the overall procedure adopted by the team from scratch to getting the tests running. 
The team has not implemented any test cases for any of the entities.
The team has not implemented any function in the pull request. They have basically defined the ImageBitmap interface that will be implemented in the future by Servo. There can be a few comments to describe their code and about the previous implementation. 
The team has not created any test cases to test the model and controllers of multiple entities.   
The team has not addressed the project design approach and the proposed implementation details in the documentation.
The team has not added any test cases.
The team has not added any test cases.
The team has not added any test cases.
The team has not added any test case for the implementation. The overall test coverage has decreased.
The team has not added any comments nor changed the built test cases to reduce the redundancy in scores method. 
The team has modified the existing test cases to cover the new changes made. But this is not detailed in the Test Plan. 
The team has modified an existing test case, but it didn't increase the test coverage.
The team has modified an existing test case, but it didn't increase the test coverage.
The team has mentioned the problem statement and the methods which they have implemented to solve the problem.  However, there is a difficulty to follow the workflow since there are no screenshots attached or any video link provided. The team could improve this by adding a screenshot of the updated workflow below the changes shown in the writeup
the team has mentioned all the files that will be changed and have also written a paragraph stating what are the proposed changes. The team could also document the changes that are being made to individual code files stating the changes done using code snippets and the reason why the changes are being made. Also they can talk about what design patterns principle are being used to incorporate the functionality that is being proposed. The team could also use CRC cards to depict the proposed code changes. This will not only help readers understand the report better but also help the team in dividing work between the team members and fast tracking the completion of project.
The team has made two commits since the first review. The issues that were covered were '#scores' block and mock instance handling. However, the primary problem that the spec is testing an instance of AssignmentParticipant class instead of Participant was not addressed.
The team has made two commits since the first review. The issues that were covered were '#scores' block and mock instance handling. However, the primary problem that the spec is testing an instance of AssignmentParticipant class instead of Participant was not addressed.
The team has made sure to write the relevant test cases wherever possible. But the overall coverage has decreased. In my opinion the newly added test cases cover more or less the entire range of this project. But I think that they need to focus a bit more on the test casses.
the team has made great improvement as compared to the last submission. The new code added has no bad names, long or complicated functions but there is lack of comments. the heading of the write-up pages explains what the test case is doing but there should be proper commenting done in the code too.
The team has leveraged the existing test cases to align with the changes implemented; they have not created any test plan.
The team has introduced the functions clearly, but it may be better to also include the introduction of expertise itself. Besides, the motivation is general, add some specific details for this project would be better. As far as I am concerned, for the functionality of the menu, the introduction is also a little bit general. Adding more details about what the function of the menu, so we can know clearly what should be tested and if the test is enough.
The team has introduced the functions clearly, but it may be better to also include the introduction of expertise itself. Besides, the motivation is general, add some specific details for this project would be better. As far as I am concerned, for the functionality of the menu, the introduction is also a little bit general. Adding more details about what the function of the menu, so we can know clearly what should be tested and if the test is enough.
the team has included the test plan design in the documentation. The manual and automated test scenarios are currently missing from the document.
The team has included the test plan design but the documentation is missing on the scenarios that will be tested after the implementation, How the team will be testing it , what are the automated test that will be created and also the manual test plan. How an end user can test the end-to- end requirements should also be a part of the design.
The team has included the test plan design but the documentation is missing on the scenarios that will be tested after the implementation, How the team will be testing it , what are the automated test that will be created and also the manual test plan. How an end user can test the end-to- end requirements should also be a part of the design.
The team has included the test plan design but the documentation is missing on the scenarios that will be tested after the implementation, How the team will be testing it , what are the automated test that will be created and also the manual test plan. How an end user can test the end-to- end requirements should also be a part of the design.
The team has included the test plan design but the documentation is missing on the scenarios that will be tested after the implementation, How the team will be testing it , what are the automated test that will be created and also the manual test plan. How an end user can test the end-to- end requirements should also be a part of the design.
the team has included the diagrams related to current system analysis and the workflow.  A workflow explains the current design and its similarity with the existing flow used for topics biding. The team could have included some UI mock ups as well to show the views for better understanding. 
The team has included test plan in Connextra format by including the feature specification and two scenarios- one happy path and one to capture the edge case of response generated with no text. No more test cases can be added to check if the team's part in the project is implemented well. Some test case scenarios that check the efficiency of the suggestion detection algorithm (for example: to detect review responses that generate the generalized suggestion for all the projects) can be included.
The team has included test plan in Connextra format by including the feature specification and two scenarios- one happy path and one to capture the edge case of response generated with no text. No more test cases can be added to check if the team's part in the project is implemented well. Some test case scenarios that check the efficiency of the suggestion detection algorithm (for example: to detect review responses that generate the generalized suggestion for all the projects) can be included.
The team has included all the details required to implement the given requirement. The wiki has complete details related to requirements , analysis of current designs and changes required to achieve the required functionality. overall great job !  The team did a great work in analyzing the issues and designing solutions for the issues. The UI mock ups are included for all the issues which makes the document very easy to understand.  
The team has included all the details required to implement the given requirement. The wiki has complete details related to requirements , analysis of current designs and changes required to achieve the required functionality. overall great job !  The team did a great work in analyzing the issues and designing solutions for the issues. The UI mock ups are included for all the issues which makes the document very easy to understand.  
The team has included all the details required to implement the given requirement. The documents lacks the changes the changes that will be made to the system and also the design of the changes. the document just included the list of files that will be changes to achieve the desired result.
The team has included all the details required to implement the given requirement. The documents lacks the changes the changes that will be made to the system and also the design of the changes. the document just included the list of files that will be changes to achieve the desired result.
The team has included a thorough testing plan but I couldn't find any commits to any of the rspec testing controllers. They could have added as per there test plan. These tests could have been included 1) Login as Instructor4. Add a new assignment Assignment_Instructor4 under the course Course 617, Spring 2016. 2) Make student6400 as the participant of that assignment and logout. using Capybara and Cucumber.
The team has included 2 screenshots of the review UI. The first one depicts the existing look and the 2nd one shows that they plan to include a new button that is responsible for analyzing the segmented text corresponding to each rubric where the student has reviewed and also display a pop-up message showing the results of suggestion metrics like volume, sentiment, suggestion, praise and criticism metrics.  The team has also shown the user story in Connextra format and also described to scenarios- one happy path and one where no text is typed into the segmented text box input.  The team could have made the document even more visually palatable with flow chars / UML diagrams for Use case or Sequence diagram to support the feature and the scenarios they plan to implement.
The team has included 2 screenshots of the review UI. The first one depicts the existing look and the 2nd one shows that they plan to include a new button that is responsible for analyzing the segmented text corresponding to each rubric where the student has reviewed and also display a pop-up message showing the results of suggestion metrics like volume, sentiment, suggestion, praise and criticism metrics.  The team has also shown the user story in Connextra format and also described to scenarios- one happy path and one where no text is typed into the segmented text box input.  The team could have made the document even more visually palatable with flow chars / UML diagrams for Use case or Sequence diagram to support the feature and the scenarios they plan to implement.
The team has included 2 screenshots of the review UI. The first one depicts the existing look and the 2nd one shows that they plan to include a new button that is responsible for analyzing the segmented text corresponding to each rubric where the student has reviewed and also display a pop-up message showing the results of suggestion metrics like volume, sentiment, suggestion, praise and criticism metrics.  The team has also shown the user story in Connextra format and also described to scenarios- one happy path and one where no text is typed into the segmented text box input.  The team could have made the document even more visually palatable with flow chars / UML diagrams for Use case or Sequence diagram to support the feature and the scenarios they plan to implement.
The team has include the use case diagrams for all the scenarios related to the requirement. Some UI mockups would have helped othwewise great work.
The team has include the use case diagrams for all the scenarios related to the requirement. Some UI mockups would have helped othwewise great work.
The team has improved the writeup since the 1st round. The 1st round version consisted of the copied code from review_response_map.rb and review_response_map_spec.rb files. This version clearly defines each test case and in some instances elaborates on the inner workings of the blocks for example ".import" Method discussion. However, design principles and patterns that were used in this project are still missing from the writeup.  One thing that stands out in the code is that every mock object is defined at the start of the file. The team could provide a rationale for this decision and why it is superior to for example using different mocks for each separate test suite.
The team has improved the writeup since the 1st round. The 1st round version consisted of the copied code from review_response_map.rb and review_response_map_spec.rb files. This version clearly defines each test case and in some instances elaborates on the inner workings of the blocks for example ".import" Method discussion. However, design principles and patterns that were used in this project are still missing from the writeup.  One thing that stands out in the code is that every mock object is defined at the start of the file. The team could provide a rationale for this decision and why it is superior to for example using different mocks for each separate test suite.
the team has implemented there testing plan and have been very thorough with there test cases. They seem to have considered a lot of cases and have implemented them in rspec. The only thing that they should do is use different commits for adding test cases.
The team has implemented test for the user model and controller. However, it would make for better design if they used the RSpec Framework to do the test. More comprehensive test cases could be tested such as if the passwords of the user don't match.
The team has implemented proper functions and has used a proper naming convention. However, there is scope to add some comments. For ex: in the new method - get_feedback_assessments_for method which will return a feedback assessment, the team could have added some comments about the logic implemented. Apart from this, the code is concise and good coding and Ruby practices have been followed
The team has implemented proper functions and has used a proper naming convention. However, there is scope to add some comments. For ex: in the new method - get_feedback_assessments_for method which will return a feedback assessment, the team could have added some comments about the logic implemented. Apart from this, the code is concise and good coding and Ruby practices have been followed
The team has implemented modules like: Login, signup, logout, List all companies and List all houses. However, they lack in many functionalities and under each module. So they are not properly implemented. They lack validations, session management and things like multiple same email addresses can be registered with different users.   Hence, no the team has not thoroughly tested at least one model or controller.
The team has implemented modules like: Login, signup, logout, List all companies and List all houses. However, they lack in many functionalities and under each module. So they are not properly implemented. They lack validations, session management and things like multiple same email addresses can be registered with different users.   Hence, no the team has not thoroughly tested at least one model or controller.
The team has implemented automated tests. There could be some addition to the test, which I have suggested above.
The team has heeded to the advice given in the last round and explained their tests in a more detailed manner. I do feel that the write up is well written and covers almost all the important points of the project. But I do feel images showing their tests running successfully could be added to the results part of the writeup.
The team has has listed the 2 files that they propose to change namely - the view- app/views/response/response.html.erb and the partial app/views/submitted_content/_self_review.html.erb. However, they could have described what these files currently do and their purpose in the documentation. The authors have embedded screenshots of how the UI of the review page will look after the Analyze button will be included. They have specified that a pop up showing the suggestion metrics pertaining to a review namely - volume, sentiment, suggestion, praise and criticism metrics will be generated once the button is clicked.
The team has has listed the 2 files that they propose to change namely - the view- app/views/response/response.html.erb and the partial app/views/submitted_content/_self_review.html.erb. However, they could have described what these files currently do and their purpose in the documentation. The authors have embedded screenshots of how the UI of the review page will look after the Analyze button will be included. They have specified that a pop up showing the suggestion metrics pertaining to a review namely - volume, sentiment, suggestion, praise and criticism metrics will be generated once the button is clicked.
The team has given a design flow that underlines the basic way in which they are planning to target the issue at hand. It can make use by giving an example as to how the output might look and the document must also describe the tools that would be used for achieving the task.
The team has followed Ruby coding standard. However, function names could be refactored for example the function "get_time_diff_btw_due_date_and_now" name is just too long and can be modified into "get_time_diff" or any other meaningful name. Also, it is advisable to keep the function name singular or append the name with list; so instead of using "find_participant_emails" the team can use "find_participant_email_list".
The team has followed good ruby coding practices. All the code is neatly written and well indented. However, the code has no comments.
The team has followed good coding practices with sufficient priority on MVC model. Each model/controller/view has a specific role which has not been repeated in other parts of the code.   I am giving 3/5 because 1. The code would have better readability if sufficient amount of comments are included in the code. Also, if the role of each model/controller/view is documented in the code file at the beginning then other contributors may feel easy to follow the code. 2. DRY concept can be used to a better extent.
The team has followed good coding practices with sufficient priority on MVC model. Each model/controller/view has a specific role which has not been repeated in other parts of the code.   I am giving 3/5 because 1. The code would have better readability if sufficient amount of comments are included in the code. Also, if the role of each model/controller/view is documented in the code file at the beginning then other contributors may feel easy to follow the code. 2. DRY concept can be used to a better extent.
The team has explicitly mentioned the classes and the name of the files where they have made changes. However, i would suggest the team to add the filenames above code snippets that they have attached in the write-up. This would make it easier for the reader to follow the workflow.
The team has explained the problem statement well and detailed the implementation they plan to do. Also the appropriate test cases have been included. But I feel the team should have included more explanation in their implementation.
The team has explained the problem statement well  and has done job in explaining the flow for every user with diagrams for them. However, the team needs to add the design approach and the testing plan for the project.
The team has explained the manual testing process. suggestion : include how the "Go" functionality is actually tested in ruby . Include edge cases for the testing functionality.
The team has explained how to fix the issues but not clear enough, it is confusing what is each pre-existing methods they have used done and why these methods were used.
The team has explained how to fix the issues but not clear enough, it is confusing what is each pre-existing methods they have used done and why these methods were used.
The team has effectively worked on multiple commits, yet these suggestions need to be followed   Suggestions:   1. Commit message carries great importance for the first level of code change analysis. So this has to explain the changes to a decent extent. Commit messages in this repository is vague; if they are meaningful, it reduces some effort in analysing the code timeline.
The team has effectively worked on multiple commits, yet these suggestions need to be followed   Suggestions:   1. Commit message carries great importance for the first level of code change analysis. So this has to explain the changes to a decent extent. Commit messages in this repository is vague; if they are meaningful, it reduces some effort in analysing the code timeline.
The team has done well to follow the Ruby Style Guide and has ensured to keep the code DRY. However, my suggesstion is to add comments in the code for the reader to follow the code easily.
The team has done tremendous job in adding visualization aids. They have added application flow diagrams and visualized images. They have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages. This makes the document descriptive and very easy to read and understand.  
The team has done great job by describing the approach and explaining same in detail by adding a pictorial representation of the pattern used. However, it would be more helpful if the team could add details about the names of the classes and the exact code changes done in the wiki page. As it would help anyone in future to understand what are the exact changes implemented. In this way the comparing code with the original code in github can be avoided.
The team has done great job by describing the approach and explaining same in detail by adding a pictorial representation of the pattern used. However, it would be more helpful if the team could add details about the names of the classes and the exact code changes done in the wiki page. As it would help anyone in future to understand what are the exact changes implemented. In this way the comparing code with the original code in github can be avoided.
The team has done good manual testing but it would help to add few test in features to test the impact of the changes done in functionality of the project.
The team has done good manual testing but it would help to add few test in features to test the impact of the changes done in functionality of the project.
The team has done good manual testing but it would help to add few test in features to test the impact of the changes done in functionality of the project.
The team has done a good job with the UML diagram. However, in my opinion, it would be better if they can add details for all the classes in the diagram.
The team has done a good job trying to show with pictures what their changes will look like in the front- end. No UML has been provided.
The team has done a good job trying to show with pictures what their changes will look like in the front- end. No UML has been provided.
The team has done a good job trying to show with pictures what their changes will look like in the front- end. No UML has been provided.
The team has done a good job in submitting changes throughout the project. The team has not committed changes in Round 2.
The team has done a good job in listing down the project requirements and design. However I suggest the testing plan be improved. In place of giving steps on how a reviewer should test the project, the team should instead list how they wish to write tests for the functionality added, for example-: list down a dummy set of data in any one report view, mention how they would like to write a test for this. Say using capybara, and then how to corroborate the result from the view.
The team has done a good job in listing down the project requirements and design. However I suggest the testing plan be improved. In place of giving steps on how a reviewer should test the project, the team should instead list how they wish to write tests for the functionality added, for example-: list down a dummy set of data in any one report view, mention how they would like to write a test for this. Say using capybara, and then how to corroborate the result from the view.
The team has done a good job in listing down the project requirements and design. However I suggest the testing plan be improved. In place of giving steps on how a reviewer should test the project, the team should instead list how they wish to write tests for the functionality added, for example-: list down a dummy set of data in any one report view, mention how they would like to write a test for this. Say using capybara, and then how to corroborate the result from the view.
The team has done a good job in explaining the project and its purpose with the design and files that need to be changed. However,  Test plan is provided.
The team has discussed their plan using flowcharts. But they have not used any class diagram.
The team has discussed their plan using flowcharts. But they have not used any class diagram.
The team has discussed their plan using flowcharts. But they have not used any class diagram.
The team has discussed the solution which is required for fixing the issue but has not proposed any design for their approach. So the team should detail their implementation and design for the reader to know what they plan to implement.
The team has discussed the solution which is required for fixing the issue but has not proposed any design for their approach.
The team has discussed the solution which is required for fixing the issue but has not proposed any design for their approach.
The team has discussed the implementation details of calculating the composite score. However, as stated above the documentation lacks the detailed design that they are planning to implement.
The team has discussed the implementation details of calculating the composite score. However, as stated above the documentation lacks the detailed design that they are planning to implement.
The team has created test cases for unit testing the model file menu.rb. The test cases are meaningful and are getting passed. Once the Capybara error quoted in the 3rd rubric gets fixed, the current code can be merged into the repository. Since the team's project is unit testing and does not concern modification or augmentation of any feature, there is no question of deployment to production server.
The team has covered the implementation of the points given in the problem statement. However, testing of the project is necessary. This is one of the point which cold be worked on by the future team. According to codeclimate, there are 7 issues which need to be fixed as well. The future team could improve on those points.
The team has covered the implementation of the points given in the problem statement. However, testing of the project is necessary. This is one of the point which cold be worked on by the future team. According to codeclimate, there are 7 issues which need to be fixed as well. The future team could improve on those points.
The team has completed the missing code in the file oscillator_node.rs which generates different wave forms like sine, square, sawtooth and triangle. They then created the file oscillator.rs that generates objects and calls methods to run the different oscillator type examples. The code in both these Rust files have good comments that clearly explain what every snippet does and the significance of variables. This made it easy to follow the syntax and semantics of a new programming language like Rust (Rust is a systems programming language that focuses on memory safety and concurrency). The variable names used are intuitive and the code is well indented. One issue that I can point out here is that the code is lengthy and complex with a lot of redundancy; especially those that define the audio context, destination node, oscillator and a few other local variables in the file oscillator.rs are repeated for every oscillator waveform and can certainly be encapsulated in one function that can be called only once in the file. 
The team has completed the missing code in the file oscillator_node.rs which generates different wave forms like sine, square, sawtooth and triangle. They then created the file oscillator.rs that generates objects and calls methods to run the different oscillator type examples. The code in both these Rust files have good comments that clearly explain what every snippet does and the significance of variables. This made it easy to follow the syntax and semantics of a new programming language like Rust (Rust is a systems programming language that focuses on memory safety and concurrency). The variable names used are intuitive and the code is well indented. One issue that I can point out here is that the code is lengthy and complex with a lot of redundancy; especially those that define the audio context, destination node, oscillator and a few other local variables in the file oscillator.rs are repeated for every oscillator waveform and can certainly be encapsulated in one function that can be called only once in the file. 
The team has committed changes during round 2, though the changes haven't been spaced evenly. Most of them are close to the deadline. Also, the changes haven't even spaced evenly. The names of the commits were descriptive.
The team has committed changes after round one. However, there are less number of commits and are not spread throughout the life of the project. A single commit is used for various functionalities which makes it difficult to understand the exact functionality changes. The commit messages are not appropriate which makes it harder to find out what the fix is about. There are commits even after the round 2 deadline.
The team has clearly defined the objective of the project. The have also stated the approach that they are about to use to solve the problem. They have also clearly added the schema for storing the time information that the user will spend on a particular review. The only thing the team could have added was to create a UML diagram defining the classes that are changed or added  and adding what attributes are added and what functions modified/added. The team haven't mentioned any design pattern as such but the proposed  plan explains the idea well.
The team has clearly defined the objective of the project. The have also stated the approach that they are about to use to solve the problem. They have also clearly added the schema for storing the time information that the user will spend on a particular review. The only thing the team could have added was to create a UML diagram defining the classes that are changed or added  and adding what attributes are added and what functions modified/added. The team haven't mentioned any design pattern as such but the proposed  plan explains the idea well.
The team has clearly defined the objective of the project. The have also stated the approach that they are about to use to solve the problem. They have also clearly added the schema for storing the time information that the user will spend on a particular review. The only thing the team could have added was to create a UML diagram defining the classes that are changed or added  and adding what attributes are added and what functions modified/added. The team haven't mentioned any design pattern as such but the proposed  plan explains the idea well.
The team has checked most of the points given in the problem statement. However proper testing should be done before deploying this project on the main server. It must be ensured that the overall coverage increases. Other than the testing part, everything else has been implemented as expected.
The team has checked most of the points given in the problem statement. However proper testing should be done before deploying this project on the main server. It must be ensured that the overall coverage increases. Other than the testing part, everything else has been implemented as expected.
The team has checked most of the points given in the problem statement. However proper testing should be done before deploying this project on the main server. It must be ensured that the overall coverage increases. Other than the testing part, everything else has been implemented as expected.
The team has been using github for almost entire tenure of the project. Yes, the team has made multiple changes during the round 2. The team has been making changes after the code submission as well till today's date.  
The team has been submitting regularly, however they have committed some of the changes quite after the deadline, i.e. 14th Oct, 2018
The team has attached a bar chart for visualization which helps in understanding their purpose. Suggestion : More visual aids could have been added. The stacked bar chart as mentioned earlier . More mockups could have been added.
The team has attached a bar chart for visualization which helps in understanding their purpose. Suggestion : More visual aids could have been added. The stacked bar chart as mentioned earlier . More mockups could have been added.
The team has an outline of the test plan and the test scenarios which they are planning to take care of. It would be suggested that the team takes care of all the exhaustive scenarios which are related to the functionality. They could also add the step wise description of the scenarios they have mentioned or the test cases they are planning to implement. Test driven approach makes sure our code is exhaustive of all scenarios.
The team has an outline of the test plan and the test scenarios which they are planning to take care of. It would be suggested that the team takes care of all the exhaustive scenarios which are related to the functionality. They could also add the step wise description of the scenarios they have mentioned or the test cases they are planning to implement. Test driven approach makes sure our code is exhaustive of all scenarios.
The team has added the test case for issue#1190 which are Rspec tests. The test plan includes how to test issues #391 and #1201 by logging in as an instructor, but test cases do not seem to be present for this part.
The team has added the  mock up screens which helps to understand the proposed look and feel of the project implementation. However, there are no UML diagrams or design diagrams added for the project, due to which its difficult to understand their approach on fixing the issue.
The team has added the  mock up screens which helps to understand the proposed look and feel of the project implementation. However, there are no UML diagrams or design diagrams added for the project, due to which its difficult to understand their approach on fixing the issue.
The team has added tests and the coverage improved by a small percentage. More tests can be added to further improve coverage
The team has added tests and the coverage improved by a small percentage. More tests can be added to further improve coverage
The team has added testcases but lacks coverage. The overall coverage decreased by 10.6% to 37.063%.
The team has added testcases but lacks coverage. The overall coverage decreased by 10.6% to 37.063%.
The team has added test cases. But, they haven't explained it well
The team has added test cases but the overall coverage has reduced by 0.04%
The team has added test cases but the coverage did not increase by much
The team has added test cases but the code coverage has decreased by 0.04%. The newly added tests cover almost all the new functionality implemented. The new test cases are pretty diverse.
The team has added test cases but the code coverage has decreased by 0.04%. The newly added tests cover almost all the new functionality implemented. The new test cases are pretty diverse.
The team has added test cases and they cover all the required functionality. The code coverage has increased by a small amount.
The team has added test cases and the coverage has increased marginally for most files. However, the coverage reduced for one file which might be because a particular corner case was not tested.
The team has added test case for just one scenario. There is no test plan. It is advisable to add more test cases for all the methods in the sub classes to check if the existing functionality is not breaking.
The team has added test case for just one scenario. There is no test plan. It is advisable to add more test cases for all the methods in the sub classes to check if the existing functionality is not breaking.
The team has added some new commits which are about the added comments. The team has picked up the suggestion from the previous review to add comments for better readability, which is commendable.
The team has added screenshots on the submission page, which show that the UI is working as intended.  However, it had been more clear had they made a screencast of the same.
The team has added one test to check if email is sent or not. However, the coverage as I can see on Github log is not increased.
The team has added one spec to check whether a different directory path is generated after generation of a duplicate assignment. The overall coverage decreases by 0.6% The written test covers one of the three issues given to the team. There is scope to add some more tests
The team has added functionality for login through google sign-in, but I couldn't verify it's working.  
The team has added functionality for login through google sign-in, but I couldn't verify it's working.  
The team has added a new test to cover the functionality. But this test is failing. There could be an issue with the notice that is generated, as during run time it is set to nil and this is checked against the string provided in the test. The overall test coverage has decreased by 0.6%.
The team has a well documented history of commits. The team has been regular in updating the github repository. The team has kept on updating the repository through both the periods of the submission. The team also has used proper commit messages to document the commit history. The readme file has also been updated regularly and contains detailed report on the functionalities associated with each user role. Also the testing information has been updated on the repository. The team could have added information on how the tests can be run . The team could have added information on how to setup the environment after cloning the repository and what all dependency information is associated with the application. The readme file could have been more structured with proper titles and paragraphs.
The team has a well documented history of commits. The team has been regular in updating the github repository. The team has kept on updating the repository through both the periods of the submission. The team also has used proper commit messages to document the commit history. The readme file has also been updated regularly and contains detailed report on the functionalities associated with each user role. Also the testing information has been updated on the repository. The team could have added information on how the tests can be run . The team could have added information on how to setup the environment after cloning the repository and what all dependency information is associated with the application. The readme file could have been more structured with proper titles and paragraphs.
The team has a well composed design document. they have structured there design document into well written sub parts like design purpose and visualizations and files to be changed. They could have written there testing plan in a more elaborate manner by mentioning what kind of testing frame works will be used and what functionalities will be tested. The could have also added some use cases.
The team has a well composed design document. they have structured there design document into well written sub parts like design purpose and visualizations and files to be changed. They could have written there testing plan in a more elaborate manner by mentioning what kind of testing frame works will be used and what functionalities will be tested. The could have also added some use cases.
The team has a well composed design document. they have structured there design document into well written sub parts like design purpose and visualizations and files to be changed. They could have written there testing plan in a more elaborate manner by mentioning what kind of testing frame works will be used and what functionalities will be tested. The could have also added some use cases.
The team has a very well documented history of commits.  The commit history seems to be well spaced over the entire period of the project development cycle. The team has commits in each of the submission periods and have kept on adding functionalities and updating documentation. The team could have updated their readme a little bit more and added information regarding all the functionalities being assigned to individual roles and how the user experience is set up. Also the team could have adde information on how to run tests in Readme.md file
The team has a proper concern on MVC model. Each model/controller/view has a specific role which has not been repeated in other parts of the code.   Still, I am giving 3/5 because 1. The project has neglected DRY principle in many of the instances. This has resulted in a bulkier code. 2. As many authors say, a code looks good if it appears like reading a novel. This appearance of a novel like look is missing in many places which can grab other user's attention. 3. The code would have better readability if sufficient amount of comments are included in the code. Also, if the role of each model/controller/view is documented in the code file at the beginning then other contributors may feel easy to follow the code.
The team had not added a link to the wiki during Round 1 of the review.  'Issues to be fixed' section seems incomplete and not the right kind of writing. Please review and try to add more details on the issues that are being addressed. Otherwise the wiki looks good with relevant diagrams and code snippets.
The team had added test cases in the first round of submission itself. The overall coverage has decreased by 1.04%. The test covers the logic implemented by the students.But reduces the overall coverage. The team did a good work in using Capybara and testing the web functionalities too.  
The team gave fixtures for the issues exist, but to make deployment, it is better to add more tests to make sure the function work properly.
The team gave clear explanation of what functions include in this project. Besides, they gave some examples to help us to understand how the functions work and should work in the system , so I can point out the issue easily by following their instruction.
The team followed good practices. No repetition of the code. DRY principles uses. How, there is an empty controller though, which is, the commons_controller.rb. What is its purpose?
The team followed good practices. No repetition of the code. DRY principles uses. How, there is an empty controller though, which is, the commons_controller.rb. What is its purpose?
the team does not show up any design patterms. in the wiki page, the authors did not explain how and why they did, and what I can see is just the final code for some perticular exmples.
the team does not show up any design patterms. in the wiki page, the authors did not explain how and why they did, and what I can see is just the final code for some perticular exmples.
The team didn't no provide the link for the deployment, but according to the video they provided, the features worked well.
The team did not seem to submit their changes throughout the project. The team have made changes only after round 1 and nothing on round 1. There are a total of 19 commits. It would have been better if the commits have been made with messages so that others can know what changes have been made in the project. 
The team did not perform any changes from the first round. No test cases were added and the coverage remained the same. The test cases from the previous round considerably fulfill the range of the project.
The team did not have a writeup in the last submission. In this submission, they do have a writeup with the problem statement, the files modified, approach to solving the problems, and test plan. This seems to be a significant improvement from the last submission. As for the screencast links, I think one link is absent and the other one is a YouTube video of the same project submitted last year. Please check this, I think you have added the wrong link. I would also suggest that a references section needs to be added to the Wiki page so that the deployment, pull request and other project reference links are shown.
The team did not commit their changes throughout the project period. The changes were committed in round 2.
The team did not attach the link for the github repo along with the other files submitted. This makes it difficult to comment upon the commits made. However, from the video link it can be seen that the test cases have improved to give a full path coverage.
The team did not attach the link for the github repo along with the other files submitted. This makes it difficult to comment upon the commits made. However, from the video link it can be seen that the test cases have improved to give a full path coverage.
The team did not add any test cases.  The coverage did not increase as a result of that.  Suggestion: Unit test cases should have been written as a part of the final deliverable.
The team did not add any test cases since they had achieved a 100% coverage in the first round itself. However, certain changes made to the test cases included using proper naming conventions for attributes and following the DRY principle effectively throughout the model file.
The team did change the project as there are 2 new commits. The CI build is still failing .
The team did a good job in explaining the problem statements for each issue and providing their proposed solutions. The purpose of the project is clear from the document as is a composite of several independent issues. The problem is that testing plan is missing from the project. I would suggest starting from the most basic test cases that check the functionality (e.g. one spec per issue) and then elaborating from there. Moreover, while fixing some issues like #1008 and #1065 consists of a small modification to the existing code, there are other cases where the design decisions are not provided and it would be better for the team to include some justifications and possible discussions of design patterns. The document extensively uses diagrams that depict application flows for each use case which is impressive.
The team could have added more test cases as they have mentioned about refactoring the code. The refactored code and the screenshots of the test cases would have been better to display in the wiki for future students.
The team could have added more test cases as they have mentioned about refactoring the code. The refactored code and the screenshots of the test cases would have been better to display in the wiki for future students.
The team could explain the "design"/solution in a more comprehensive way. The team has only pasted the description given in the google doc 
The team continued to make changes in round 2 on a regular basis. However, naming should have been more descriptive. In many cases it is not possible to understand the scope of the commit. One team member's work is not reflected in GitHub's contributors panel. I would suggest fixing this by matching user's credentials of local machine and remote server.
The team continued to make changes in round 2 on a regular basis. However, naming should have been more descriptive. In many cases it is not possible to understand the scope of the commit. One team member's work is not reflected in GitHub's contributors panel. I would suggest fixing this by matching user's credentials of local machine and remote server.
The team continued to make changes in round 2 on a regular basis. However, naming should have been more descriptive. In many cases it is not possible to understand the scope of the commit. One team member's work is not reflected in GitHub's contributors panel. I would suggest fixing this by matching user's credentials of local machine and remote server.
The team continued making commits on a consistent basis throughout the project development after round 1. Commits are named properly, they describe changes that were done in the scope of that commit. One issue is that all contributors are not reflected in statistics. I would suggest matching git credentials stored on local machine to those stored on the server.
The team committed the changes in round 2 but overall the commits were not consistent.
The team committed the changes in round 2 but overall the commits were not consistent.
The team committed changes in round 2. However, the changes were not consistently committed throughout the project period.
The team committed changes in round 2. However, the changes were not consistently committed throughout the project period.
The team added the test plan section but it was too short and did not explain all the test files created and/or modified. The implementation section could do without the many code dumps. Otherwise, the writeup was concise and effective.
The team added the test plan section but it was too short and did not explain all the test files created and/or modified. The implementation section could do without the many code dumps. Otherwise, the writeup was concise and effective.
The team added the test cases but the coverage did not increase. Overall coverage decreased (-1.04%) to 46.605%
The team added test cases in the spec file for both the issues. Further, a detailed explaination is given using screenshots for manual testing if necessary. The coverage increased for 1 issue while it remained the same for the other.
The team added test cases in the spec file for both the issues. Further, a detailed explaination is given using screenshots for manual testing if necessary. The coverage increased for 1 issue while it remained the same for the other.
The team added test cases for menu.rb and the coverage increases but the overall coverage seems decrease due to that.
The team added more information from the last time which aided in a better explanation of the problem. Good job team
The team added many tests. They seem like they would have high coverage, but, with the failing build, this cannot be confirmed easily.
The team added a test case. However coveralls shows the following.  Overall coverage decreased (-17.2%) to 19.566% I interpreted this as as decrease in coverage. 
The system works well. All the functionality has been implemented. I ran the project and it worked as intended. The back button issue in UI has been fixed.
The system works well in most of the cases, except when the realtor creates his company, and then after successfully creating the company, he get's an option to edit his company details, but then when he clicks the edit button, it redirects to the homepage, and is unable to edit his company info unless he choses to belong to the particular company. A minor bug, but still breaks the consistency.
The system works well and performs all the operations correctly. -1 for the aforementioned errors in code.
The system works exactly how it is supposed to work. I could not find any functionalities that are still failing. No bugs or error messages. It would have been better if the realtor could send replies to inquiries directly from the application than opening a separate mail application.
The system works as intended however the flow for system given in the wiki is quite confusing. The test cases were edited to cover all scenarios.
The system works as expected and common functionality is working but still needs to focus on some areas: 1. Not able to sign in as admin with preconfigured account. 2. how to add inquiries or to an interest list.
The system works as expected and common functionality is working but still needs to focus on some areas: 1. Not able to sign in as admin with preconfigured account. 2. how to add inquiries or to an interest list.
The system works as expected and common functionality is working but still needs to focus on some areas: 1. Not able to sign in as admin with preconfigured account. 2. how to add inquiries or to an interest list.
The system properly handles the relationships where a real estate company can have multiple realtors. Also, it supports a realtor to create multiple houses and the house hunters to add multiple houses to their interest list.
The system performs all the desired functionalities. A shoutout to the idea for the auto filled inquiries. I really liked that feature where the inquiry is already filled after which the user gets an option to edit the inquiry. Some parts need improvement. For ex: The link "new houses" in the house list redirects to the  users/edit link. Its a minor issue which could be looked upon. The layout of the homepage for house-hunter can be fixed as links overlap each other. Also, the houses list shows edit/destroy options for the entire house list, that's a bug which needs fixing.
The system performs all the desired functionalities. A shoutout to the idea for the auto filled inquiries. I really liked that feature where the inquiry is already filled after which the user gets an option to edit the inquiry. Some parts need improvement. For ex: The link "new houses" in the house list redirects to the  users/edit link. Its a minor issue which could be looked upon. The layout of the homepage for house-hunter can be fixed as links overlap each other. Also, the houses list shows edit/destroy options for the entire house list, that's a bug which needs fixing.
The system performs all the desired functionalities. A shoutout to the idea for the auto filled inquiries. I really liked that feature where the inquiry is already filled after which the user gets an option to edit the inquiry. Some parts need improvement. For ex: The link "new houses" in the house list redirects to the  users/edit link. Its a minor issue which could be looked upon. The layout of the homepage for house-hunter can be fixed as links overlap each other. Also, the houses list shows edit/destroy options for the entire house list, that's a bug which needs fixing.
The system operation is verified and works as intended as demonstrated from the video. Also, all the test scenarios are covered.
The system operation from UI works as expected by the project. I was able to verify that the rejoinder is given by the team instead of team member. The rejoinder is also made easily available to the user, by providing easy navigation options to give feedback to reviewers, hence making the UI more user friendly. The Author feedback section contains the team's collective feedback to reviewers of particular assignments. Most of the task is to refactor code so that it complies with the new requirement of team rejoinders, and the features work as expected.
The System just works in few functions. Even though authors fix the problem that admin cannot log in in the first round, it still lack many functions that the system supposed to have. From the admin perspetive, admin can edit, show and delete any users; create, show, edit and delete any companies, but it cannot create a new user. Besides, when I click the link of house, the 404 page jump out, which means that there is no way that I can see any houses listed. From realtor's perspertive, a realtor can sign up and log in. Apart from these, there is no other fuction that realized in the system. A realtor cannot switch his/her role or edit his/her profile, cannot list houses, choose company she/he belongs to, and reply any inquiries from hunters. From the perspertive of hunter, authors just realized the function of signup and sign in. Besides those, it doesn't have any other functions that the system is supposed to have. Besides, there are some problems in log in part. When I  log out as admin and log in as a realtor or a hunter, I can still access 
The System just works in few functions. Even though authors fix the problem that admin cannot log in in the first round, it still lack many functions that the system supposed to have. From the admin perspetive, admin can edit, show and delete any users; create, show, edit and delete any companies, but it cannot create a new user. Besides, when I click the link of house, the 404 page jump out, which means that there is no way that I can see any houses listed. From realtor's perspertive, a realtor can sign up and log in. Apart from these, there is no other fuction that realized in the system. A realtor cannot switch his/her role or edit his/her profile, cannot list houses, choose company she/he belongs to, and reply any inquiries from hunters. From the perspertive of hunter, authors just realized the function of signup and sign in. Besides those, it doesn't have any other functions that the system is supposed to have. Besides, there are some problems in log in part. When I  log out as admin and log in as a realtor or a hunter, I can still access 
The System just works in few functions. Even though authors fix the problem that admin cannot log in in the first round, it still lack many functions that the system supposed to have. From the admin perspetive, admin can edit, show and delete any users; create, show, edit and delete any companies, but it cannot create a new user. Besides, when I click the link of house, the 404 page jump out, which means that there is no way that I can see any houses listed. From realtor's perspertive, a realtor can sign up and log in. Apart from these, there is no other fuction that realized in the system. A realtor cannot switch his/her role or edit his/her profile, cannot list houses, choose company she/he belongs to, and reply any inquiries from hunters. From the perspertive of hunter, authors just realized the function of signup and sign in. Besides those, it doesn't have any other functions that the system is supposed to have. Besides, there are some problems in log in part. When I  log out as admin and log in as a realtor or a hunter, I can still access 
The system is in great shape. It is easily one of the best I have seen, and they still didn't implement all of the expected functionality.
The system has all the required functionality. However, it would also be useful if the README file explained where some of the features are incorporated. For instance, the submit inquiry field is located on the show page for the houses. This is not immediately intuitive. It could help if that is mentioned in the README
The system has all the basic functionalities as per the program description. As per the last feedback, validation checks for invalid data has been added to the application. However, the system still does not have the null checks for field.  For example: If a user creates a house without adding most of the details, the application breaks.  https://housefocus.herokuapp.com/houses
The system doesn't check all edge cases. A realtor can see company listings even without choosing a company. The README does not outline exactly how all edge cases are handled
The system does not portray good database design. First of all, there are two separate tables for enquiries and reply to enquiries, which is highly not normalised. Also, the fact that there are 3 separate tables for the three types of users is also very in-efficient and non-scalable. It does make an attempt to map the various relationships, but it seems it is not properly tested, and is prone to many bugs.
The system does not portray good database design. First of all, there are two separate tables for enquiries and reply to enquiries, which is highly not normalised. Also, the fact that there are 3 separate tables for the three types of users is also very in-efficient and non-scalable. It does make an attempt to map the various relationships, but it seems it is not properly tested, and is prone to many bugs.
The suggestions have not been improved. Comments aren't explanatory and does not give an idea about what the author intended to do. It would be good to include meaningful comments. Debug code is still in the commit. Even though we may used debug code like the puts statement, we should not commit these as they could create junk data in the application log. Please consider removing them.
The submission is about adding tests to the project  and authors have done a great job of adding 92% code coverage.  I would have liked to see more -ve test cases for example cases such as user with incorrect names. As of now the test cases only checks of the user name is present or not. How about the case where user name is such that it is not allowed. User class throws an exception or add method can. This could have been documented. 
The structure of codes is not very good, that is, for a "it" statement, there are two many things include in it to be tested. It is better to separate  the test cases clearly. Besides, the objects seem not store in factories properly.
The stated design seems to be appropriate. Following a close representation of the current project bidding structure would prove successful. It would have been beneficial to supply more details on how the design would be implemented and could help in the justification of the choices this team used.
The source code is mostly written in a coherent way and is straightforward to follow.  The 'context' blocks are extensively used which increases the project documentation. The commented chunks of code blocks that were present in the 1st round are mostly removed. There are still a few instances left and I would suggest to remove them because they reduce the overall readability. I would also suggest to decompose the 'it' block inside the '.final_versions_from_reviewer' by moving the common setup to a before(:each) block and spreading the assertions across several 'it' statements.  Another improvement would be to remove the 'xit' code blocks because they only increase the clutter and do not add any value to the code. Adding one comment explaining why the blocks are no longer necessary would do the job.
The source code is mostly written in a coherent way and is straightforward to follow.  The 'context' blocks are extensively used which increases the project documentation. The commented chunks of code blocks that were present in the 1st round are mostly removed. There are still a few instances left and I would suggest to remove them because they reduce the overall readability. I would also suggest to decompose the 'it' block inside the '.final_versions_from_reviewer' by moving the common setup to a before(:each) block and spreading the assertions across several 'it' statements.  Another improvement would be to remove the 'xit' code blocks because they only increase the clutter and do not add any value to the code. Adding one comment explaining why the blocks are no longer necessary would do the job.
The source code is mostly following standard Ruby practices, but there is a room for improvement. Firstly, the source contains large chunks of code blocks that are commented out. I would suggest removing those chunks as they reduce the overall readability. Given chunks can always be retrieved via commit history. Secondly, some application level objects like Answer or Criterion are used to create corresponding instances as opposed to mocks. It would be better if the authors either used mocks or provided the reasoning for this decision.
The source code is mostly following standard Ruby practices, but there is a room for improvement. Firstly, the source contains large chunks of code blocks that are commented out. I would suggest removing those chunks as they reduce the overall readability. Given chunks can always be retrieved via commit history. Secondly, some application level objects like Answer or Criterion are used to create corresponding instances as opposed to mocks. It would be better if the authors either used mocks or provided the reasoning for this decision.
The solutions and implementations have very little explanation. Even though the UML are helpful they should provide more text
The solutions and implementations have very little explanation. Even though the UML are helpful they should provide more text
The solution of problem 1 was not clear from the write up, no explanation has been given.
The solution of problem 1 was not clear from the write up, no explanation has been given.
The solution of problem 1 was not clear from the write up, no explanation has been given.
The sections included for this design document cover the intent of the group to find and solve the bugs required for their project. I am not sure that the Introduction section reads as an introduction but more as a project problem statement. If this is an introduction more should be included as to what is the purpose of the project and what this current introduction content means. 
The section is included by the content is empty. Simply listing steps in how you plan to test for correctness of your model additional would work here.
The search properties and addition of potential buyers needed to be improved and fixed after the first round. The authors fixed all of it for round 2. The system works exactly how it is supposed to work. I could not find any functionalities that are still failing. They have added additional features like signing up with google and sending replies to enquiries via email. 
The search button in not there. No way to add new house. Realtor is given some destroy privileges which are not meant for him. 
The search button in not there. No way to add new house. Realtor is given some destroy privileges which are not meant for him. 
The screenshots of the expected result and the UML diagram are good, But the screenshots can be smaller to make the page more user-friendly. The UML diagram can be better if it's designed as a design plan diagram instead of a user diagram, which simply states how the reader is to approach this. Or it could be better if we have both.
The screenshots of the expected result and the UML diagram are good, But the screenshots can be smaller to make the page more user-friendly. The UML diagram can be better if it's designed as a design plan diagram instead of a user diagram, which simply states how the reader is to approach this. Or it could be better if we have both.
The screenshots for the view are great, they help in understanding the problem statement and the solution. however the design document lacks use case or class diagrams on how extenral entity interacts with the system and gets response.  Since the authors are using external api's it would have been good if they could give more details request and response 
The screenshots for the view are great, they help in understanding the problem statement and the solution. however the design document lacks use case or class diagrams on how extenral entity interacts with the system and gets response.  Since the authors are using external api's it would have been good if they could give more details request and response 
The screenshots for the view are great, they help in understanding the problem statement and the solution. however the design document lacks use case or class diagrams on how extenral entity interacts with the system and gets response.  Since the authors are using external api's it would have been good if they could give more details request and response 
The screen mockups were very nice. Good job! I would like to see a UML diagram for the implementation, i.e. how a reference to a static string in a view eventually maps to the correct yaml file. That would make the design more specific and clear.
The screen mockups were very nice. Good job! I would like to see a UML diagram for the implementation, i.e. how a reference to a static string in a view eventually maps to the correct yaml file. That would make the design more specific and clear.
The schema.rb file should be in the repo. From the models and the migrations, the relationships appeared to be correct.
The role switch option between realtor and househunter is not present. Further the operation cannot be performed manually also as same mail id cannot be used for creating two accounts.
The reuse of the questionaire class is smart to reduce duplication. Otherwise the minimal explanations make it hard to judge
The result of edge cases are : 1. The admin cannot delete real companies with realtors and house hunters. 2. The realtor can change real estate company. They ill be prohibited though from viewing previous company listings. 3. The house hunter account along with their inquiries are removed from the system. 4. The realtor account links to a real estate company with 1-to-n mapping.
The requirement here: https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit#heading=h.654oe3xw5p73  totally appeared in the design document. This is very good because there's a high-level goal being stated. However, the "important files" part which includes the Open github issue, delayed mailer, response controller and response model, only model is mentioned and the other four are not mentioned at all. It should be great if all of these can be mentioned.
The requirement here: https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit#heading=h.654oe3xw5p73  totally appeared in the design document. This is very good because there's a high-level goal being stated. However, the "important files" part which includes the Open github issue, delayed mailer, response controller and response model, only model is mentioned and the other four are not mentioned at all. It should be great if all of these can be mentioned.
The requirement here: https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit#heading=h.654oe3xw5p73  totally appeared in the design document. This is very good because there's a high-level goal being stated. However, the "important files" part which includes the Open github issue, delayed mailer, response controller and response model, only model is mentioned and the other four are not mentioned at all. It should be great if all of these can be mentioned.
The requirement here: https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit#heading=h.654oe3xw5p73  totally appeared in the design document. This is very good because there's a high-level goal being stated. However, the "important files" part which includes the Open github issue, delayed mailer, response controller and response model, only model is mentioned and the other four are not mentioned at all. It should be great if all of these can be mentioned.
The repository name isn't what it is supposed to be. Naming seems inappropriate. plus, there is no read me file explaining the flow of webapp.
The relevant parts in the design doc include the listing of files that will be modified, description of OffscreenCanvasContextRendering2D and apis that need to be implemented for this class. As stated, the team is planning to use the implementation of HTMLCanvasContextRendering2D. I would suggest to elaborate on how OffscreenCanvasContextRendering2D differs from HTMLCanvasContextRendering2D and provide a better feeling for the reader of how significant those differences are.
The relationships have been set up properly in the model files as well as the schema. However, a destroy dependency in the model file would be a great addition;  has_many :enquiries, dependent::destroy
The relationships have been set up properly in the model files as well as the schema. However, a destroy dependency in the model file would be a great addition;  has_many :enquiries, dependent::destroy
the relationships between inquiries and house, house and company, potential users and house are absent. 
The relationships are maintained in the schema but the relationship among company realtor seems to be missing as it shows relationship between users and company so the role isnt clear
The relationship mapping was appropriate and worked as intended. The database unfortunately didn't implement all the necessary features required for the submission. (For example: list of potential buyers)
The reason to give 3 is that there are certain simple code climate issues regarding spaces, indentation and so. These are easy to fix and are related to code quality.
The reason to give 3 is that there are certain simple code climate issues regarding spaces, indentation and so. These are easy to fix and are related to code quality.
The reason to give 3 is that there are certain simple code climate issues regarding spaces, indentation and so. These are easy to fix and are related to code quality.
The Realtor cannot select an existing company and cannot see the list of the companies. House hunter cannot see companies
The Realtor cannot delete the company he/she created. Also, if the house hunter shows interest for one house the interest and inquiry by the potential house hunter is submitted for all the house present. Admin cannot create a house and assign it to a company. Admin cannot delete a company.
The Realtor cannot delete the company he/she created. Also, if the house hunter shows interest for one house the interest and inquiry by the potential house hunter is submitted for all the house present. Admin cannot create a house and assign it to a company. Admin cannot delete a company.
The realtor can exist without belonging to a company, this should be corrected as the realtor must belong to a company.
the realtor and house hunter controllers work as desired in most cases though there are some cases which need to be addressed. There is a need to validate the real estate creation form.
the realtor and house hunter controllers work as desired in most cases though there are some cases which need to be addressed. There is a need to validate the real estate creation form.
The README.md file has not been updated hence it does not provide the instructions regarding this system. It does not mention how the system handles the edge cases. Since there is no heroku link given, I cannot test the system for edge cases and also the README.md file does not specify any details.
The README.md does not cover how the system handles edge cases. What will happen if the admin tries to delete a real estate company which has some realtors and houses?: System deletes the Realestate company but the app crashes when accessing the realtor account. What will happen if a realtor changes his/her real estate company? Will (s)he be prohibited to remove the houses (s)he listed in the previous company? There is no validation at all, and there is no way to have a realtor without a company. If this house hunter is a potential buyer of a house, will (s)he be removed from the corresponding potential buyers list: app crashes 
The README.md does not cover how the system handles edge cases. What will happen if the admin tries to delete a real estate company which has some realtors and houses?: System deletes the Realestate company but the app crashes when accessing the realtor account. What will happen if a realtor changes his/her real estate company? Will (s)he be prohibited to remove the houses (s)he listed in the previous company? There is no validation at all, and there is no way to have a realtor without a company. If this house hunter is a potential buyer of a house, will (s)he be removed from the corresponding potential buyers list: app crashes 
The readme seems incomplete. A lot of information could have been communicated through readme.  As an admin, I couldn't delete any of the listed houses or companies which I think should be allowed for the admin.
The Readme is very helpful in guiding through the application. Most of the cases have not been handled by the application. > There is no functionality to upload picture to the houses.   > A new house hunter is able to see all the inquires made by all the house hunters which is not as per the application design.  
The README is empty and does not contain the admin account information. It's hard to navigate around the interface and determine where all the functionality is.
The README is empty and does not contain the admin account information. It's hard to navigate around the interface and determine where all the functionality is.
The README file isn't as descriptive as it should be. And UI is not very well designed. Printing "Hello World" on the home page seems to be a debugging strategy but it needs to be removed. And proper links needs to be inserted. Example: Link of 'Logout' is not present
The readme file is very helpful and facilitates usage of the application. There are few issues which can still be resolved such as > The navigation issue still persists, for example if a house hunter wants to cancel the inquiry there is no way to do that. The user would be toggling between the inquiry index page and the inquiry submit page. > The validations have still not been addressed for example an inquiry can be created without adding any details at all with all empty fields. > If the house hunter tries to switch to the realtor view the application breaks as below: We're sorry, but something went wrong.   If you are the application owner check the logs for more information.  
The readme file is still the default provided by rails. I don't have access to an admin login and when I try to sign up for a new account(realtor or hunter) I get redirected to a webpage telling me that something went wrong. The small ammount of the UI that does exist(login and create account) seems easy enough to understand but it appears that without logging in I cannot see any other links.
The readme file is still the default provided by rails. I don't have access to an admin login and when I try to sign up for a new account(realtor or hunter) I get redirected to a webpage telling me that something went wrong. The small ammount of the UI that does exist(login and create account) seems easy enough to understand but it appears that without logging in I cannot see any other links.
The readme file is still the default provided by rails. I don't have access to an admin login and when I try to sign up for a new account(realtor or hunter) I get redirected to a webpage telling me that something went wrong. The small ammount of the UI that does exist(login and create account) seems easy enough to understand but it appears that without logging in I cannot see any other links.
The README file is properly illustrated but it does not include how the system handles edge cases. The relationship between realtor and company is not properly implemented.
the README file is not maintained by the developer. The design is not complete. Whatever is done is intuitive but incomplete.
the README file is not maintained by the developer. The design is not complete. Whatever is done is intuitive but incomplete.
The README file is developed to include all the necessary details about the project as a whole. Great work on documenting. The UI is simple with properly designed tabs. Few enhancements could include 1. The back button is missing in a few places which might be useful for easier navigation. 2. While creating a company, if size is modelled as a drop down to take a range of values then UI would be simpler.
The readme file is blank, so I cannot get access to the admin functions. The user interface is clear but not so well-structured. For example, the title appears after the different choices. And all the choices are list in a single line.
The readme file is blank, so I cannot get access to the admin functions. The user interface is clear but not so well-structured. For example, the title appears after the different choices. And all the choices are list in a single line.
The Readme file does not specify any information about how edge cases are handled but the edge cases were properly handled. when the real estate company was deleted all the houses and realtors under it were also deleted. However the role switch option between realtor and househunter is not available, further this operation cannot be performed manually also as the code resticts a mail id from being used for two accounts.
The Readme file does not specify any information about how edge cases are handled but the edge cases were properly handled. when the real estate company was deleted all the houses and realtors under it were also deleted. However the role switch option between realtor and househunter is not available, further this operation cannot be performed manually also as the code resticts a mail id from being used for two accounts.
The query is well mentioned but I would suggest the sql be mentioned in the below manner for code clarity. Select ... From table name where condition;
The query is well mentioned but I would suggest the sql be mentioned in the below manner for code clarity. Select ... From table name where condition;
The quality of the code is reasonably good. Would it be possible for the team to avoid using the little interpretable ruby they use in the html files and instead use the controllers and its helpers for writing all logic?
The quality is of explanation is good and easy to follow. The team might want to add some low-level details for the code changes.
The quality is of explanation is good and easy to follow. The team might want to add some low-level details for the code changes.
The purpose, design are missing in their doc, so it not good.
The purpose, design are missing in their doc, so it not good.
The purpose, design are missing in their doc, so it not good.
The purpose of the project seems quite clear. The team has explicitly mentioned all the requirements that has been expected of them along with the ways to implement said requirements. There is no testing plan however. They should include that and then the document would be good to go.
The purpose of the project is very clear and well outlined. The project design seems to be barely mentioned. There have been mentions of the word 'API' but not which one. So reading the doc I have no clue of how they are going to implement this. However I do know the files that they are going to modify. The test plan has been written in the form of cucumber user stories. I am not entirely sure if it is the correct approach.
The purpose of the project is very clear and well outlined. The project design seems to be barely mentioned. There have been mentions of the word 'API' but not which one. So reading the doc I have no clue of how they are going to implement this. However I do know the files that they are going to modify. The test plan has been written in the form of cucumber user stories. I am not entirely sure if it is the correct approach.
The purpose of the project is very clear and well outlined. The project design seems to be barely mentioned. There have been mentions of the word 'API' but not which one. So reading the doc I have no clue of how they are going to implement this. However I do know the files that they are going to modify. The test plan has been written in the form of cucumber user stories. I am not entirely sure if it is the correct approach.
The pull-bots CodeClimate and TravisCI suggest there are a few issues with style and integration that need to be addressed, respectively.
The pull request was not updated. (In fact, I can't see any of the changes in the linked repo.)
The pull request that the authors have submitted does not pass the Travis Bot builds. But the bot has failed in the tests for which the authors haven't changed any code. So overall the pull request doesn't seem to break any code.
The pull request still shows that the build fails. On observing the logs, there is only one build job which fails due to a ActionNotFound error for view_action method. This needs to be looked at.
The Pull request shows that the code has failed all the checks. Therefore it should not be deployed.  Suggestions: Rectify the code climate, Travis Build and the merge conflict that is being displayed on the Pull request(Gemfile.lock conflict) . Once done, the code could be deployed. Functionality is working fine, no doubt but build must not be deployed unless the above issues are resoled. 
The pull request says the Travis CI build is in progress, but that seems improbable. Upon closer investigation into the Travis CI "details", it looks like the build is failing.
The pull request says the Travis CI build is in progress, but that seems improbable. Upon closer investigation into the Travis CI "details", it looks like the build is failing.
The pull request says the Travis CI build is in progress, but that seems improbable. Upon closer investigation into the Travis CI "details", it looks like the build is failing.
The pull request link is not provided to verify the tests.
The pull request link is not provided to verify the tests.
The pull request link is not provided to verify the tests.
The pull request is the same as the previous one. And as in the case of the previous one it fails.
The pull request is the same as the previous one. And as in the case of the previous one it fails.
The pull request has some failed cases. no conflict. 
The pull request has some failed cases. no conflict. 
The pull request has failed but doesnt look like its related to the team's commit. there is already an existing issue present.
The pull request has failed but doesnt look like its related to the team's commit. there is already an existing issue present.
The pull request does not show any Tests done on the project
The pull request did not pass Travis CI, but there were no conflicts.
The pull request did not pass the Travis CI build. There are no conflicts with the base branch. 
The pull request did not pass the tests and the names assigned seem appropriate to their functionality.
The pull request did not pass the tests and the names assigned seem appropriate to their functionality.
The pull request did not pass the automatic build requirements. It seems as though this team worked very hard to try to fix the build errors.
The proposed solution sounds good. They haven't really mentioned the changes in turn of programmer language. I couldn't visualize how are they going to make changes. They have mentioned few html.erb file but I think they would need put a good amount of work to implement the new feature. I think the team could have been more precise in their approach, for example, they could have included what all new methods they need to add or modify the existing one.
The proposed solution sounds good. They haven't really mentioned the changes in turn of programmer language. I couldn't visualize how are they going to make changes. They have mentioned few html.erb file but I think they would need put a good amount of work to implement the new feature. I think the team could have been more precise in their approach, for example, they could have included what all new methods they need to add or modify the existing one.
The proposed solution sounds good. They haven't really mentioned the changes in turn of programmer language. I couldn't visualize how are they going to make changes. They have mentioned few html.erb file but I think they would need put a good amount of work to implement the new feature. I think the team could have been more precise in their approach, for example, they could have included what all new methods they need to add or modify the existing one.
the proposed refactoring changes seem to follow good ruby principles and also looks DRY.  They haven' t mentioned any pattern as such. But overall the design document looks neat and very well written.
The proposed design seems reasonable. Before proceeding with the project, team should also look at other references to those functions and do it accordingly.
The proposed design looks fine for now, but more details are required in order to make a better judgement. So I think that more effort should be expended.
The proposed changes sounds good to me. But as I mentioned screenshots help in a better understanding of the problem statement. Moreover a more detailed doc would have been better.
The proposed changes section of the wikipedia clearly mentions the column names the team would implement sort on. But, how they want to implement the sort could be explained a little more in detail. They mention they would use tablesorter JQuery, but I would suggest to add some sort of a pseudocode that would explain better how exactly does the sorting work.
The proposed changes section of the wikipedia clearly mentions the column names the team would implement sort on. But, how they want to implement the sort could be explained a little more in detail. They mention they would use tablesorter JQuery, but I would suggest to add some sort of a pseudocode that would explain better how exactly does the sorting work.
The proposed changes section of the wikipedia clearly mentions the column names the team would implement sort on. But, how they want to implement the sort could be explained a little more in detail. They mention they would use tablesorter JQuery, but I would suggest to add some sort of a pseudocode that would explain better how exactly does the sorting work.
The projects works as intended. Some of the issues in the problem statement covers refactoring which has been properly handled by the team.
The project's purpose and issues are well stated. But the project design have not been included.
The project's purpose and issues are well stated. But the project design have not been included.
The project's purpose and issues are well stated. But the project design have not been included.
The project's purpose and issues are well stated. But the project design have not been included.
The project writeup is not complete at this moment, as there are a lot of things missing. Like what the team plan to do, and what concretey are its testing techniques. It only mentions the problem statement, and an overview of testing.
The project writeup is not complete at this moment, as there are a lot of things missing. Like what the team plan to do, and what concretey are its testing techniques. It only mentions the problem statement, and an overview of testing.
The project writeup is not complete at this moment, as there are a lot of things missing. Like what the team plan to do, and what concretey are its testing techniques. It only mentions the problem statement, and an overview of testing.
The project writeup is not complete at this moment, as there are a lot of things missing. Like what the team plan to do, and what concretey are its testing techniques. It only mentions the problem statement, and an overview of testing.
The project writeup explains very well the topics that it has covered. However, it has not covered many of the topics like implementation, and even a test plan.
The project works as mentioned in the file.  
The project was not deployed. The project should have been deployed. However, the video that the team uploaded shows the 2 functionalities that they have implemented. And they work as intended. Suggestion: One feature was not implemented (3rd issue) and should have been done as a part of the deliverable. And the project should have been deployed.
The project seems to be incomplete. The work done is also not properly mentioned in the writeup.
The project purpose seems to be only a user story, that says what's the deficiencies of te corrent issues and a terse solution. I wonder if that's comprehensive enough. I would add some more details in terms of the purpose of each function being changed in a lower level.  There' only a high-level solution , and which files to change  for the project design. They are not detailed enough. I would add some more plans in terms of how to make the change, when to do the change if the changes are inter-dependent. There's no testing plans yet. But I think that should be stated.
The project purpose seems to be only a user story, that says what's the deficiencies of te corrent issues and a terse solution. I wonder if that's comprehensive enough. I would add some more details in terms of the purpose of each function being changed in a lower level.  There' only a high-level solution , and which files to change  for the project design. They are not detailed enough. I would add some more plans in terms of how to make the change, when to do the change if the changes are inter-dependent. There's no testing plans yet. But I think that should be stated.
The project purpose is well defined and clearly explains what this project aims to do. The team also identifies the strategies they wish to adopt to fix the issue. This explanation is clear and concise. However, I would also suggest the team to add a basic test plan, on how they would test the functionality they add. Also I suggest them to list down the list of files they would be changing.
The project purpose is well defined and clearly explains what this project aims to do. The team also identifies the strategies they wish to adopt to fix the issue. This explanation is clear and concise. However, I would also suggest the team to add a basic test plan, on how they would test the functionality they add. Also I suggest them to list down the list of files they would be changing.
The project purpose is stated, but not extremely clearly. It seems that in the "Introduction" part, there's just copy-pasted messages from the question statement. The flowchart in the introduction part is good, but where should this checkbox be implemented? It seems that here it should only be implemented in the instructor/administrator end, instead of students end. But that's not clearly stated in the project purpose part. The project design is also not very detailed. The title " Do Some Changes" doesn't seems to be very serious, but apart from that, the implementation details are also copy pasted from the online project requirements. the two picture of before and after illustration looks nice enough. It's good that the team has found some extra sources that would allow them to get this before and after picture.  The testing plan is not stated at all...
The project purpose is stated in detail, in the Introduction part. Starting from the background and problem statement ( to improve the quality of report views"). The purpose is stated in five different small goals separately: make changes in view submissions, view scores, view review report, author feedback report and teammate review report five different parts. In terms of project purpose, it's comprehensive and detailed. As for project design, it is carefully outlined in the "Solution" and "Modification of files" part. I think the project design might needs a bit more description, in terms of what steps needs to do first, and what steps needs to be done next. It seems that all the changes are for the UI, but is there any UI that can be served as a pattern, for the usage of others? Or is there any implementation of one UI dependent on the implementation of another? Here, I think there needs to be more detailed steps. The testing plan includes detailed steps in terms of how to test the implementation as a  end user. I like it very much because it is both succinct and very intuitive. It will be good to add some sample pictures when the project is over and some pictures that display the functionality becomes available.
The project purpose is stated in detail, in the Introduction part. Starting from the background and problem statement ( to improve the quality of report views"). The purpose is stated in five different small goals separately: make changes in view submissions, view scores, view review report, author feedback report and teammate review report five different parts. In terms of project purpose, it's comprehensive and detailed. As for project design, it is carefully outlined in the "Solution" and "Modification of files" part. I think the project design might needs a bit more description, in terms of what steps needs to do first, and what steps needs to be done next. It seems that all the changes are for the UI, but is there any UI that can be served as a pattern, for the usage of others? Or is there any implementation of one UI dependent on the implementation of another? Here, I think there needs to be more detailed steps. The testing plan includes detailed steps in terms of how to test the implementation as a  end user. I like it very much because it is both succinct and very intuitive. It will be good to add some sample pictures when the project is over and some pictures that display the functionality becomes available.
The project purpose is stated in detail, in the Introduction part. Starting from the background and problem statement ( to improve the quality of report views"). The purpose is stated in five different small goals separately: make changes in view submissions, view scores, view review report, author feedback report and teammate review report five different parts. In terms of project purpose, it's comprehensive and detailed. As for project design, it is carefully outlined in the "Solution" and "Modification of files" part. I think the project design might needs a bit more description, in terms of what steps needs to do first, and what steps needs to be done next. It seems that all the changes are for the UI, but is there any UI that can be served as a pattern, for the usage of others? Or is there any implementation of one UI dependent on the implementation of another? Here, I think there needs to be more detailed steps. The testing plan includes detailed steps in terms of how to test the implementation as a  end user. I like it very much because it is both succinct and very intuitive. It will be good to add some sample pictures when the project is over and some pictures that display the functionality becomes available.
The project purpose is explained with examples but no design or plan to implement is given.  Again under the Test Plan section, a generic method is given but is not specific to the project. 
The project purpose is explained with examples but no design or plan to implement is given.  Again under the Test Plan section, a generic method is given but is not specific to the project. 
The project purpose is explained with examples but no design or plan to implement is given.  Again under the Test Plan section, a generic method is given but is not specific to the project. 
The project purpose is explained with examples but no design or plan to implement is given.  Again under the Test Plan section, a generic method is given but is not specific to the project. 
The project purpose and possible solutions are clearly described in this design doc. However, the author only talked about the solution but no exactly what they need to do to implement the solutions. Also, there is no testing plan.
The project purpose and possible solutions are clearly described in this design doc. However, the author only talked about the solution but no exactly what they need to do to implement the solutions. Also, there is no testing plan.
The project purpose and possible solutions are clearly described in this design doc. However, the author only talked about the solution but no exactly what they need to do to implement the solutions. Also, there is no testing plan.
The project purpose and possible solutions are clearly described in this design doc. However, the author only talked about the solution but no exactly what they need to do to implement the solutions. Also, there is no testing plan.
The project only has 3 commits, all on  a single day. So yes, it can't be said that the project was implemented or developed over a period of time. 
The project needs validations on all fields (I was able to enter random values in email address, mobile number fields). Some of the additional functionalities were missing (filter inquiry, see who has added my house to their inquiry list etc). The project is well connected and navigation is easy. Overall it looks very clean and intuitive! 
The project needs validations on all fields (I was able to enter random values in email address, mobile number fields). Some of the additional functionalities were missing (filter inquiry, see who has added my house to their inquiry list etc). The project is well connected and navigation is easy. Overall it looks very clean and intuitive! 
The project is to refactor the existing functionality and code. The functionality seems to be working fine.
The project is ready to be merged. The source code is clearly structured and can be used for the future team to work on. The project has 100% code coverage.  In order to avoid potential problems of using AssignmentParticipant instance, participantSuper object is defined in factories.rb, which is an instance of Participant class. The possible suggestions are to deconstruct #scores method and introduce 'context' constructs to enhance code documentation.
The project is ready to be merged. The source code is clearly structured and can be used for the future team to work on. The project has 100% code coverage.  In order to avoid potential problems of using AssignmentParticipant instance, participantSuper object is defined in factories.rb, which is an instance of Participant class. The possible suggestions are to deconstruct #scores method and introduce 'context' constructs to enhance code documentation.
The project is ready to be merged. The source code is clearly structured and can be used for the future team to work on. The project has 100% code coverage.  In order to avoid potential problems of using AssignmentParticipant instance, participantSuper object is defined in factories.rb, which is an instance of Participant class. The possible suggestions are to deconstruct #scores method and introduce 'context' constructs to enhance code documentation.
The project is not working at all.  
The project is not deployed on either of mentioned cloud platforms such as Heroku, AWS or VCL. Instead an locally run server's IP link is provided, which doesn't seem to work. As a result, I cannot test the interface at all. No README is provided as well.
The project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application. Even so, in their project they lack two sections of key note, i.e. one is the project design and the solution approach.     
The project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application. Even so, in their project they lack two sections of key note, i.e. one is the project design and the solution approach.     
The project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application. Even so, in their project they lack two sections of key note, i.e. one is the project design and the solution approach.     
The project is almost on the stage that it can be deployed on the production server. However, there are few test cases that are failing as shown on the git. If these minor flaws are fixed then the code is good to go.
The project is about adding tests to the a model. So this is okay but there is not sufficient background on the model itself. More details would be good for the uninitiated.  Also they mention that the number of tests for the model were not sufficient. It would have been better if they would have quoted the code coverage numbers before and after.     
The project includes the problem statement. The team has described the problem statement in detail and has also provided visual aids. However, the team could have also included the way in which they implement these changes. 
The project has successfully named it's varables and function names according to the principle. They are understandable form what the mean. But the project lacks any documentation internally, as well as a proper external readme file. Lack of code documentation makes it tough for the reviewer to make sense of the code. Apart from that, the design of the database schema isn't normalized to much extent, which makes data entries redundant.
The project goals are stated in a simple and precise manner. The design document is readable and easy to understand from. They have provided the reader with the background which states the need to do the refactoring. They can include or add file names which they are about to change.
The project goals are stated in a simple and precise manner. The design document is readable and easy to understand from. They have provided the reader with the background which states the need to do the refactoring. They can include or add file names which they are about to change.
The project does not have any testing involved as such. But the authors have added a testing plan.
The project does not have any testing involved as such. But the authors have added a testing plan.
The project does not have any testing involved
The project document does not fulfill the parameters of completeness. There are missing sections in the document i.e Testing plan, purpose.
The project didn't involve any kind of testing.
The project design is well presented and solves all issues. However, testing plan and project purpose are missing. You could have given at-least a basic high level overview of testing in the end, Overall good effort!
The project design has not really been expanded upon so not able to tell
The project design and the testing plans are well laid out. Solution part does not have any description in it, says it will be given in the detailed design. Could have given some idea on the solution with some flow diagram.
The project design and the testing plans are well laid out. Solution part does not have any description in it, says it will be given in the detailed design. Could have given some idea on the solution with some flow diagram.
The project design and the testing plans are well laid out. Solution part does not have any description in it, says it will be given in the detailed design. Could have given some idea on the solution with some flow diagram.
The project design and project purpose parts are pretty detailed. However, for the test part, the authors only state that they will write tests for the new controller but no detailed test plan.
The project design and project purpose parts are pretty detailed. However, for the test part, the authors only state that they will write tests for the new controller but no detailed test plan.
the project describes the project requirement in detail. the project statement is clear. the team has also included the design/flow which they will be following in order to achieve the desired results. the testing strategy is currently missing from the wiki. the team should inlclude the test plan in the documentation.
the project describes the project requirement in detail. the project statement is clear. the team has also included the design/flow which they will be following in order to achieve the desired results. the testing strategy is currently missing from the wiki. the team should inlclude the test plan in the documentation.
the project describes the project requirement in detail. the project statement is clear. the team has also included the design/flow which they will be following in order to achieve the desired results. the testing strategy is currently missing from the wiki. the team should inlclude the test plan in the documentation.
The project covers a significant part of the functionality for testing the participant. However, the biggest problem is that the #scores method is commented out from the class AssignmentParticipant. Obviously this will break the existing code that relies on that functionality. Furthermore, the future testing will possibly become complicated because the object under test for participant_spec.rb is an instance of AssignmentParticipant as opposed to Participant.
The project covers a significant part of the functionality for testing the participant. However, the biggest problem is that the #scores method is commented out from the class AssignmentParticipant. Obviously this will break the existing code that relies on that functionality. Furthermore, the future testing will possibly become complicated because the object under test for participant_spec.rb is an instance of AssignmentParticipant as opposed to Participant.
The project consists of making a search function to select specific users, assignments etc using some criteria. So they're creating a search functionality for individual models.
The project consists of five independent problems the scope of which is well-defined in the design document. The team provides visual diagrams in the solution descriptions which further improve the explanations of changes. The fix for the Issue #1008 - "Issue related to staggered deadline" is backed up by a discussion about relevant db tables and corresponding part of code. One minor improvement would be for the authors to highlight the specific parts of code that are going to be changed in the updated block of code. Moreover, the solution to the Issue #1072 - "Issue related to instructor's assignment participation" is not specific enough, i.e. it is not clear which structures are going to be affected by the changes. All in all, the document does a great job in explaining what changes are going to be introduced in the system.
The problems are described very nicely. When it comes to changes to be made, files to be modified are given. I feel more explanation needs to be given with respect to changes in these files for each problem stating why this file needs to be changed and what the impact will be.
The problems are described very nicely. When it comes to changes to be made, files to be modified are given. I feel more explanation needs to be given with respect to changes in these files for each problem stating why this file needs to be changed and what the impact will be.
The problems are described very nicely. When it comes to changes to be made, files to be modified are given. I feel more explanation needs to be given with respect to changes in these files for each problem stating why this file needs to be changed and what the impact will be.
The problems are described very nicely. When it comes to changes to be made, files to be modified are given. I feel more explanation needs to be given with respect to changes in these files for each problem stating why this file needs to be changed and what the impact will be.
The problem statements and design have been explained. But the team could have explained how they have planned to carry out the changes. Though this could be a vague idea, it could have been added. Likewise with the test plan too.
The problem statement is not clear
The problem statement is not clear
The problem statement is not clear
The problem statement is nicely explained with the help of flowchart. However some screenshot of the screens where changes need to be made as well a similar flow diagram for solution will be helpful. Test Plan is not stated in details. It just mentions Bullet Points.  In Test Driven Development, adequately defining the test cases is as important as developing a solution as per the problem statement. This should be corrected.
The problem statement is nicely explained with the help of flowchart. However some screenshot of the screens where changes need to be made as well a similar flow diagram for solution will be helpful. Test Plan is not stated in details. It just mentions Bullet Points.  In Test Driven Development, adequately defining the test cases is as important as developing a solution as per the problem statement. This should be corrected.
The problem statement could have been elaborated a bit more. One line doesnt seem enough here.
The problem statement could have been elaborated a bit more. One line doesnt seem enough here.
The problem statement and what needs to be done correctly explained.
The problem statement and implementation approaches are very clearly explained with screenshots.  Missing items: Test plan UML diagrams
The problem statement and implementation approaches are very clearly explained with screenshots.  Missing items: Test plan UML diagrams
The problem being addressed by this project is defined cogently without any ambiguities. Test cases are considered separately starting with description of the given method followed by how the functionality is being tested. I would suggest removing parts like Expertiza description (http://wiki.expertiza.ncsu.edu/index.php/User_talk:Rshakya#Expertiza) and rationale behind using Rspec (http://wiki.expertiza.ncsu.edu/index.php/User_talk:Rshakya#Unit_Testing_with_RSpec) because those parts fall out of the scope of this topic.
The problem being addressed by this project is defined cogently without any ambiguities. Test cases are considered separately starting with description of the given method followed by how the functionality is being tested. I would suggest removing parts like Expertiza description (http://wiki.expertiza.ncsu.edu/index.php/User_talk:Rshakya#Expertiza) and rationale behind using Rspec (http://wiki.expertiza.ncsu.edu/index.php/User_talk:Rshakya#Unit_Testing_with_RSpec) because those parts fall out of the scope of this topic.
The previous builds of this project did not pass Travis CI. The current build status is pending.
The previous builds of this project did not pass Travis CI. The current build status is pending.
The previous builds of this project did not pass Travis CI. The current build status is pending.
The pre-configured admin details are not mentioned on Git . Therefore, I am unable to test admin
The pre-configured admin details are not mentioned on Git . Therefore, I am unable to test admin
The planned design looks complicated as there is a lot of data and variable transfer between classes. This could have been simplified a bit.
The planned design looks complicated as there is a lot of data and variable transfer between classes. This could have been simplified a bit.
The plan is simple and don't list detailed cases for each method, also it does not include various  conditions may include.
The placement of the document could be changed to make it more readable and the flow of the document to be proper for example the objective should be shifted above the database schema. They have also not included the test cases
The placement of the document could be changed to make it more readable and the flow of the document to be proper for example the objective should be shifted above the database schema. They have also not included the test cases
The placement of the document could be changed to make it more readable and the flow of the document to be proper for example the objective should be shifted above the database schema. They have also not included the test cases
The pictures clearly demonstrate the changes being made to the system, although it is apparent where the changes would be visible. it would be nice if a image was posted having the current expertiza deployement to show where the changes would be visible
The pictures clearly demonstrate the changes being made to the system, although it is apparent where the changes would be visible. it would be nice if a image was posted having the current expertiza deployement to show where the changes would be visible
The pictures clearly demonstrate the changes being made to the system, although it is apparent where the changes would be visible. it would be nice if a image was posted having the current expertiza deployement to show where the changes would be visible
The phone number if exceeded 10 digits, the code breaks without giving any user-friendly alert.
The phone number if exceeded 10 digits, the code breaks without giving any user-friendly alert.
The page feel more like a project report instead of wiki page. They should not tell people to "go through the following page", instead they should just tell, "the page" is previous work.
The overall UI is good, but there can be some improvements made on the admin part of the app. We need to change the link manually to end up at the admin dashboard.
The overall UI is good, but there can be some improvements made on the admin part of the app. We need to change the link manually to end up at the admin dashboard.
The overall test has coverage decreased. However, the RSpec tests added to the project seem appropriate. 
The overall test has coverage decreased. However, the RSpec tests added to the project seem appropriate. 
The overall test coverage decreased by 0.6%. You could have added test cases to  response controller.rb and application helper.rb. These files have contributed the most to the decrement in test coverage.                      
The Overall System works as it is supposed to.However,there are few functions which are not implemented. Realtors' Page: Validations for phone number have not been written because a phone number of length less than 10 is getting accepted by the system during sign up of a realtor. Houses does not start from 1 under the "Your Houses" section in the realtors page. Your Houses 2 3  Delete house option is not provided under the realtors page.The functionality to change from realtor to house hunter and vice versa is not provided.Functionality to edit or delete a company under the realtors page is not implemented. House Hunters' page: House hunter should not be able to update and create new houses but these links are provided under the house hunter page. Although the functionality of update and create new house has not been implemented. It gives out the following error messages.  Error messages- ActionController::UrlGenerationError in Houses#show Showing /home/ubuntu/OODD/ooddHMS/app/views/houses/show.html.erb where line #60 raised: No route matches {:action=>"show", :controller=>"realtorprofile", :id=>nil}, missing required keys: [:id] NoMethodError in HousesController#new   undefined method `houses' for nil:NilClass  
The Overall System works as it is supposed to.However,there are few functions which are not implemented. Realtors' Page: Validations for phone number have not been written because a phone number of length less than 10 is getting accepted by the system during sign up of a realtor. Houses does not start from 1 under the "Your Houses" section in the realtors page. Your Houses 2 3  Delete house option is not provided under the realtors page.The functionality to change from realtor to house hunter and vice versa is not provided.Functionality to edit or delete a company under the realtors page is not implemented. House Hunters' page: House hunter should not be able to update and create new houses but these links are provided under the house hunter page. Although the functionality of update and create new house has not been implemented. It gives out the following error messages.  Error messages- ActionController::UrlGenerationError in Houses#show Showing /home/ubuntu/OODD/ooddHMS/app/views/houses/show.html.erb where line #60 raised: No route matches {:action=>"show", :controller=>"realtorprofile", :id=>nil}, missing required keys: [:id] NoMethodError in HousesController#new   undefined method `houses' for nil:NilClass  
The overall structure of the code looks good and all the coding standards have been followed. I feel like there could have been more comments to support the large amounts of changes that have been made.
The overall structure of the code looks good and all the coding standards have been followed.
The overall quality of the explanations are good, but they should include more details about their design, which may not be easy to understand.
The overall quality of the explanations are good, but they should include more details about their design, which may not be easy to understand.
The overall quality of explanations is precise and clear. Isssue 3 and the test plan can be addressed in more detail. How the testing will be performed must be addressed.
The overall quality of explanations is precise and clear. Isssue 3 and the test plan can be addressed in more detail. How the testing will be performed must be addressed.
The overall purpose of the project, the need for mocks/stubs, and the scenarios of each test case are very well presented; however, there is little explanation about why certain tests were implemented in any particular fashion. It would be a nice addition to include a few of your test cases and explain your reasoning behind why/how you implemented that test case. Adding this would further clarify your design/testing plan choices and make for a fantastic read.
The overall purpose of the project, the need for mocks/stubs, and the scenarios of each test case are very well presented; however, there is little explanation about why certain tests were implemented in any particular fashion. It would be a nice addition to include a few of your test cases and explain your reasoning behind why/how you implemented that test case. Adding this would further clarify your design/testing plan choices and make for a fantastic read.
The overall look of the page is well explained. However, I could not understand the back-end design plan, as in how/where the team will be adding such features in the code.
The overall design looks good. The score calculation formula still looks a bit weird. Using the current formula, it is possible to have a higher  composite score than each of the individual scores , which should not be the case. 
The overall design looks good. The score calculation formula still looks a bit weird. Using the current formula, it is possible to have a higher  composite score than each of the individual scores , which should not be the case. 
The overall coverage decreased, but not significantly. It reduced by 0.01%/
The overall coverage decreased, but not significantly. It reduced by 0.01%/
The overall code quality is moderate. I would suggest the team to either use hexadecimal color codes or names, to ensure that the code remains consistent.
The operations work as intended but need to have automated test cases.
The operations work as intended but need to have automated test cases.
The operation works perfectly from UI as shown in the youtube screencast. The App was not deployed anywhere (or the link was not posted), so couldnt test it by myself. Application could have been deployed during the second review for better understanding and trying out how the feature works.
The operation works perfectly from UI as shown in the youtube screencast. The App was not deployed anywhere (or the link was not posted), so couldnt test it by myself. Application could have been deployed during the second review for better understanding and trying out how the feature works.
The operation works perfectly from UI as shown in the youtube screencast. The App was not deployed anywhere (or the link was not posted), so couldnt test it by myself. Application could have been deployed during the second review for better understanding and trying out how the feature works.
The only visual aid provided is the screenshot of the before and after page. More UML based diagrams could increase understandability.
The only visual aid provided is the screenshot of the before and after page. More UML based diagrams could increase understandability.
The only visual aid provided is the screenshot of the before and after page. More UML based diagrams could increase understandability.
The only thing I had trouble with was changing from a house hunter to a realtor and back. It's possible I just missed the option. In my opinion, that is a rather insignificant omission.
The only thing I had trouble with was changing from a house hunter to a realtor and back. It's possible I just missed the option. In my opinion, that is a rather insignificant omission.
The only issue i feel is iapproach to issue 1 is a bit  complex  or not clear which may lead to increasing the response time of the system.
The only issue i feel is iapproach to issue 1 is a bit  complex  or not clear which may lead to increasing the response time of the system.
The only changes stated in the document was copied from the description. It is not enough to explain what exact changes the team will provide and how they will be done. 
The number of commits that are made after the 1st round is impressive. The team has made a significant progress during the 2nd round, however I would suggest using more descriptive names for the commits so that it becomes easier for the reader to refer to them in the future.
The number of commits that are made after the 1st round is impressive. The team has made a significant progress during the 2nd round, however I would suggest using more descriptive names for the commits so that it becomes easier for the reader to refer to them in the future.
The newly added code includes the attribute height, the getContext() and transferToImageBitmap() method in the OffscreenCanvas.webidl file. The name height given for the attribute height for the Canvas makes complete sense. Similarly the name getContext() given for the method that returns the OffscreenRenderingContext is also intuitive. The name transferToImageBitmap is a little long which might be the code less readable if the method is called often. Instead the accessor convention of using getImageBitmap() feels more intuitive and also logical at the same time.
The newly added code has not yet been accepted in the pull request but it does build. The corresponding rust implementation, however, has not been added and so the test coverage hasn't improved by much.
The newly added code does not resolve the previous issues to great extent.
The new design seems to violate the DRY principle. Copying an entire class and then editing it will likely cause problems as you will be using code you did not write and so will not understand as well as your own code. This is probably still a better design decision than writing the offscreen canvas from scratch, however, since it will take less time. Could you use delegation or extension to DRY out the implementation?
The new design loops through all existing reviews to compare new review scores with the original ones, and stores the URL of a specific iteration if its limit is exceeded. By waiting for all reviews to be looped in before sending email, it may increase the response time of the system.
The new design loops through all existing reviews to compare new review scores with the original ones, and stores the URL of a specific iteration if its limit is exceeded. By waiting for all reviews to be looped in before sending email, it may increase the response time of the system.
The new design loops through all existing reviews to compare new review scores with the original ones, and stores the URL of a specific iteration if its limit is exceeded. By waiting for all reviews to be looped in before sending email, it may increase the response time of the system.
The new design does not talk about any methods or class definitions, thus I cannot comment on this. Suggestion: You can add more information on methods or any usage of design patterns in order to make the review effective and useful.
The new design does not talk about any methods or class definitions, thus I cannot comment on this. Suggestion: You can add more information on methods or any usage of design patterns in order to make the review effective and useful.
The new design does not talk about any methods or class definitions, thus I cannot comment on this. Suggestion: You can add more information on methods or any usage of design patterns in order to make the review effective and useful.
The need for two translation APIs was not justified.
The need for two translation APIs was not justified.
The need for two translation APIs was not justified.
The necessary functionalities are implemented. The README file explains how to access some of these functionalities also. However, the company listings appear even before the realtor chooses a company. This shouldn't happen
The naming looks fine in html file. Although your pull request shows changes in schema.rb file which i don't think you have used any where or had to make changes int it. Probably is went through by default when you pushed your changes. You might want to revert that from the pull request. That way I think your build will also pass.
The naming conventions have been followed. The professor had frequently asked the team to improve the naming conventions and it seems that the conventions have been properly folowed.
The names are very intuitive and one can easily understand the reason for each of the variables from their names. In addition the test coverage has increased however it is not very good.
The names are all proper. However, there are lines of code which are commented out. Cleaning up that would reduce the clutter.
The MVC structure is good, but some details should  be improved.
The motivation is not enough. It is a little bit simple and general. The team should add the introduction to the specific motivation for this project.
The most recent Travis build was run 2 days ago and the build log says that it has failed.
The most recent Travis build was run 2 days ago and the build log says that it has failed.
The modifications that are suggested by the team are minimalistic and cover the changes that are necessary for the javascript library to work. While it is possible to infer the majority of changes that will be introduced in this project, it would be better if the authors elaborated on the implementation of all the views as opposed to discussing only the "view submissions" table. 
The modifications that are suggested by the team are minimalistic and cover the changes that are necessary for the javascript library to work. While it is possible to infer the majority of changes that will be introduced in this project, it would be better if the authors elaborated on the implementation of all the views as opposed to discussing only the "view submissions" table. 
The models, views and controllers have been properly designed and implemented.
The models had the correct relationships. The database seemed to have missed some of these. There was not table for potential buyers (n-to-n house-hunter relationship).
The models had the correct relationships. The database seemed to have missed some of these. There was not table for potential buyers (n-to-n house-hunter relationship).
The models , views and controllers are well created. 1)      You can seed data for the admin into your production environment. The command to do this on heroku is heroku run rails db:seed. You need to make changes in the db/seeds.rb file and add your admin credentials in the proper format in this file.
The models , views and controllers are well created. 1)      You can seed data for the admin into your production environment. The command to do this on heroku is heroku run rails db:seed. You need to make changes in the db/seeds.rb file and add your admin credentials in the proper format in this file.
The model test just tested the email attribute of the real estate company and the controller test mainly tested for successful responses and redirects, and not page content and method calls.
The model test just tested the email attribute of the real estate company and the controller test mainly tested for successful responses and redirects, and not page content and method calls.
The mockups do explain where the team intends to add the 'Analyze' button. It however makes no explanation of where the analysis will be shown.
The mockups do explain where the team intends to add the 'Analyze' button. It however makes no explanation of where the analysis will be shown.
The mockups do explain where the team intends to add the 'Analyze' button. It however makes no explanation of where the analysis will be shown.
The mock UIs are well thought of and make navigation easier. A couple of suggestions: - can add another mock UI showing the drop down. - Some types of reports may not exist. If the drop down options are hard-coded, selecting an option might lead to a page with no content (this might be an existing issue I suspect). For every option, you could query for existence of at least one record before putting that option in the drop down.
The mock UIs are well thought of and make navigation easier. A couple of suggestions: - can add another mock UI showing the drop down. - Some types of reports may not exist. If the drop down options are hard-coded, selecting an option might lead to a page with no content (this might be an existing issue I suspect). For every option, you could query for existence of at least one record before putting that option in the drop down.
The methods seem like the ones created by the scaffold command. Even for the views, there isn't any code for eg. to display house delete only to the realtor who has created it.
The method names and variable names are very well defined ! The best I have seen so far ! No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given.
The method names and variable names are very well defined ! The best I have seen so far ! No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given.
The method names and variable names are very well defined ! The best I have seen so far ! No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given.
The method names and variable names are very well defined ! The best I have seen so far ! No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given.
The Menu test case violates the DRY principle. The team can make use of factories to get rid of code redundancy. Overall good work!
The manual tests listed should adequately test the functionality, but information should be provided on automated testing.
The main thread behind the design seems to be reusing the existing code which provides the similar functionality. This is a great idea. It is consistent with the appropriate programming principles e.g. not reinventing the wheel. One suggestion would be for the authors to explain why the instance of the class, from which the relevant parts of code are going to be copied, is not directly used as this would be a more DRY approach. In a case if this is not possible, then providing a proper reasoning and justification would be helpful.
The login page is not made. All the admins information is listed on the first page which should not be allowed. It was difficult to understand if I was under the admin's page, realtor's or hunter's page.
The login opens the user page which has which has 5 "back" links for some reason and they do not do anything. No common home page for all the list views. Have to all the list views go from user pages. List of companies is not in tabulated form, thus very difficult to read
The login and sign up page work as expected. But the following have changes to be implemented - The view is poorly developed. Admin login credentials are not mentioned, so could not test the admin functionality. Validation for phone number and email id has not been done. The system accepts a number which has less than 10 digits and an invalid email id. Creation of a new house is inside inquiries tab under realtors page which is misleading. Not able to associate a realtor with a company, hence not able to validate the update and delete functionality of a company from inside the realtors page.  Not able to switch between realtor and house hunter if an user is both. Delete and update functionalities have not been implemented. Inquiry creation from house hunter page is not implemented. 
The login / signup module seems to be well tested of all the other models and controllers in the program. But this module has a drawback. It deals with three tables, the realtors, the househunters and the admin. Due to this kind of segmentation, there is a repetition of data i the database, if any user would like to signup as both. Also, it would make it difficult to handle complexity as the application grows. According to me, its better to atleast cascade the tables of realtors and house hunters into one.  The other functionalities are not wholly implemented, only the CRUD operations related to those are implemented, hence not much could be reviewed about testing.
The login / signup module seems to be well tested of all the other models and controllers in the program. But this module has a drawback. It deals with three tables, the realtors, the househunters and the admin. Due to this kind of segmentation, there is a repetition of data i the database, if any user would like to signup as both. Also, it would make it difficult to handle complexity as the application grows. According to me, its better to atleast cascade the tables of realtors and house hunters into one.  The other functionalities are not wholly implemented, only the CRUD operations related to those are implemented, hence not much could be reviewed about testing.
The login / signup module has lots of bugs. Like when a user tries to create an account with an already existing username, the application crashes. Also, a user cannot signup as both, a realtor and a househunter. Moreover, there isnt any validtion for the length of phone number, nor the validation for the email address is correct. (for example, it accepts aa@a as a valid email address). So yes, these functionalities in the login signup module could be improved, and these does not seem thoroughly tested. But the search functionality for the houses seemed to work pretty well, and as expected.
The logic showed in the design is clear and easy enough, but the deign lacks essential details for dealing with reviews.
The logic in the code looks proper, still the code itself is hard to follow. Primarily because, a lot of functionality has been added in a method whose name suggests only partial functionality, and no comments have added anywhere. Examples are-: In applicatins_controller.rb, the methods get_realtor_nav_bar and get_hoousehunter_nav_bar make SQL queries and other functionalities. In houses_controller.rb the show method also has a lot code that ideally should not belong in that method. I would suggest to put such code in different methods, or name the method better. Do not shy away from creating 10 different methods if need be, it organises code much better and simpler to understand.
The logic in the code looks proper, still the code itself is hard to follow. Primarily because, a lot of functionality has been added in a method whose name suggests only partial functionality, and no comments have added anywhere. Examples are-: In applicatins_controller.rb, the methods get_realtor_nav_bar and get_hoousehunter_nav_bar make SQL queries and other functionalities. In houses_controller.rb the show method also has a lot code that ideally should not belong in that method. I would suggest to put such code in different methods, or name the method better. Do not shy away from creating 10 different methods if need be, it organises code much better and simpler to understand.
The links provided are only of commits and not the code added.
The link to the writeup is missing.
The link to the writeup is missing.
The link to the deployed application was not posted and README file does not have the required information such as admin login details or how to access various features in the application.
The link to the deployed application was not posted and README file does not have the required information such as admin login details or how to access various features in the application.
The link to the deployed application was not available. So testing could not be performed.
The link to the deployed application was not available.
The link to the deployed application was not available, so the project could not be tested.
the link to git is not provided .
the link to git is not provided .
The link provided is not working. So, no way of finding out
The link provided is not working. So, no way of finding out
The link is not up. Could not test
The link is not up. Could not test
The link for the writeup is missing.
The link for the work can not be accessed, but according to the video they provided, the features works well.
The link for deployed project has not been provided so cannot test any features.Looking at the github codes, very little has been implemented. README file that has been provided is of no help
The link for deployed project has not been provided so cannot test any features.Looking at the github codes, very little has been implemented. README file that has been provided is of no help
The link does not work.
The link does not work.
the latest commit is on 2nd of Nov.
The last commit was listed as 12 days prior to this review. But the code looks to be in great shape so there was no need for new additions.
The last commit was 21 days ago, so I fear that that there are no commits being made in round 2. Could have done a commit in round two just to confirm that there were no changes required in round 2, so that the reviewer may be certain about it.
The last commit I see was 23 days ago, which seems that there wernt many changes done in the seond round. The wiki mentions the suggestions at the end, so it would have been good to have the code changes and tests for the same.
The issues reported are fixed.   Admin account can be deleted from the user listing.
The issues reported are fixed.   Admin account can be deleted from the user listing.
The issues reported are fixed.   Admin account can be deleted from the user listing.
The issues in the code has been resolved. But the wiki only addresses the technical changes done. It does not address the functionality details; which makes it difficult for the end user to test all edge cases. The project deals with the emails which can only be tested in production and not in test environment by any end user.
The issues have been identified and documented clearly. However, a little more of explanation is required for the solutions proposed for issues 2 - 5. They seem to me at a very high level.
The issues have been identified and documented clearly. However, a little more of explanation is required for the solutions proposed for issues 2 - 5. They seem to me at a very high level.
The issues are addressed thoroughly. But probablty the issue on staggered deadline needs to be handled carefully the solution might cause other code effects need to cover all the individuals involved
The issue and the it's implementation has not been explained that well especially the project design and testting
The issue and the it's implementation has not been explained that well especially the project design and testting
The Issue 2 explanation ans Issue 1 solution 2 explanation is a bit hard to follow or seems to be at a high level. It needs to be broken down. All other descriptions are easy to follow. It would have been more helpful if some screenshots of the tables or the screen shots of the screens were included.
The Issue 2 explanation ans Issue 1 solution 2 explanation is a bit hard to follow or seems to be at a high level. It needs to be broken down. All other descriptions are easy to follow. It would have been more helpful if some screenshots of the tables or the screen shots of the screens were included.
The Introduction was a little confusing as to what this team is going to do. Rather the "Objective of the project" section is what clarifies the change the are doing and from that I was able to understand what already exists. The Objective of the project section contains the proposed solutions when the proposed solutions ought to be a separate section.
The Introduction was a little confusing as to what this team is going to do. Rather the "Objective of the project" section is what clarifies the change the are doing and from that I was able to understand what already exists. The Objective of the project section contains the proposed solutions when the proposed solutions ought to be a separate section.
The Introduction was a little confusing as to what this team is going to do. Rather the "Objective of the project" section is what clarifies the change the are doing and from that I was able to understand what already exists. The Objective of the project section contains the proposed solutions when the proposed solutions ought to be a separate section.
The introduction to the scope of the project has been written neatly, but I feel the test plan should have been a little more elaborative, a short description of the tests would be nice to have.
The introduction paragraph contains bullets that are identical to E1791 which is surprising.  The flowchart does not cover "No" or negative cases and is thus incomplete. What is logged in the DB and how exactly is "start" and "end" time is very ambiguous.  Apart from a mention of "merging the data of the details page on the current report page." in the introduction, I cannot see any further discussion of this particular objective. For auto-save, you could think of using the on-unload event of JavaScript (like onload event). Also, setTimeout doesn't seem to be an efficient idea, since that would make too many number of calls from the page (I guess you would be sending an Ajax request, which is asynchronous). A next call might be made before a previous call response is handled. When you say "For each time the reviewer starts a review, it will check whether a previous record for this review already exists in the database. If it does exist then it will update the end time of this record" - what if I open a review that I had done two days back? As soon as I open the page, will it mark end_time as now() .? In that case, does that mean I have done this review for 2 days..?  
The introduction paragraph contains bullets that are identical to E1791 which is surprising.  The flowchart does not cover "No" or negative cases and is thus incomplete. What is logged in the DB and how exactly is "start" and "end" time is very ambiguous.  Apart from a mention of "merging the data of the details page on the current report page." in the introduction, I cannot see any further discussion of this particular objective. For auto-save, you could think of using the on-unload event of JavaScript (like onload event). Also, setTimeout doesn't seem to be an efficient idea, since that would make too many number of calls from the page (I guess you would be sending an Ajax request, which is asynchronous). A next call might be made before a previous call response is handled. When you say "For each time the reviewer starts a review, it will check whether a previous record for this review already exists in the database. If it does exist then it will update the end time of this record" - what if I open a review that I had done two days back? As soon as I open the page, will it mark end_time as now() .? In that case, does that mean I have done this review for 2 days..?  
The introduction paragraph contains bullets that are identical to E1791 which is surprising.  The flowchart does not cover "No" or negative cases and is thus incomplete. What is logged in the DB and how exactly is "start" and "end" time is very ambiguous.  Apart from a mention of "merging the data of the details page on the current report page." in the introduction, I cannot see any further discussion of this particular objective. For auto-save, you could think of using the on-unload event of JavaScript (like onload event). Also, setTimeout doesn't seem to be an efficient idea, since that would make too many number of calls from the page (I guess you would be sending an Ajax request, which is asynchronous). A next call might be made before a previous call response is handled. When you say "For each time the reviewer starts a review, it will check whether a previous record for this review already exists in the database. If it does exist then it will update the end time of this record" - what if I open a review that I had done two days back? As soon as I open the page, will it mark end_time as now() .? In that case, does that mean I have done this review for 2 days..?  
The interface was very easy and simple to use, and was very user friendly, but it lacked intuitiveness on some levels. Also, the readme file didn't state anything about the UI. 
The interface was simple. Some of the fields input were not mentioned like for creating house
The interface was simple. Some of the fields input were not mentioned like for creating house
The interface is well designed and has a good UI but the basic functionalities are breaking. Unable to login as Hunter/Admin and can perform their respective operations. I assume the default user is the realtor.(as after login I can only post/add new house).  
The interface is well designed and has a good UI but the basic functionalities are breaking. Unable to login as Hunter/Admin and can perform their respective operations. I assume the default user is the realtor.(as after login I can only post/add new house).  
The interface is basic and no extra styling is done. But overall the web application is easy and intuitive to use. The Read me  file of the github repo should be updated to make it more   detailed to use.  
The intended changes are not stated clearly. Some solutions are also ambiguous, the team only said that they would change some files or look more codes, but they didn't say how they will change.
The intended changes are not stated clearly. Some solutions are also ambiguous, the team only said that they would change some files or look more codes, but they didn't say how they will change.
the inquiry form is not working
The inquiry controller was thoroughly tested, but none of the models appear to have the same amount of testing.
The inquiries aren't linked to house hunters.
The information provided is good but the page is not organised and the code is confusing. Team should work on improving the format of content(the way they are representing info).
The information provided is good but the page is not organised and the code is confusing. Team should work on improving the format of content(the way they are representing info).
The import fixes appear to function properly.
The implementation plan is not there
The implementation plan is not there
The implementation does not seem to be working, so it would be difficult to test this. Also, I am no Rust programmer, so there's that.
The implementation details have been mentioned in the writeup clearly. Information about what every function does has been explained in an eloquent manner. 
The implementation can only log one type of user on and even though not specified, the user has all controls so it can be assumed its an admin. Admins can signup as well.
The implementation can only log one type of user on and even though not specified, the user has all controls so it can be assumed its an admin. Admins can signup as well.
The implementation can only log one type of user on and even though not specified, the user has all controls so it can be assumed its an admin. Admins can signup as well.
The images of web pages clearly describe the changes to be made to the system however there are no class diagrams or use cases diagrams.
The images of web pages clearly describe the changes to be made to the system however there are no class diagrams or use cases diagrams.
The images of web pages clearly describe the changes to be made to the system however there are no class diagrams or use cases diagrams.
The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
The idea to involve instructors because of a 60 requests/hour limit may complicate the project. Another idea would be to update metrics with a round robin scheduling of GET requests. 
The how part is clear. As to the why part, thought they have clearly mentioned the the problem statement, i think a little bit more of an explanation could go into why is that actually a problem.
The how part is clear. As to the why part, thought they have clearly mentioned the the problem statement, i think a little bit more of an explanation could go into why is that actually a problem.
The househunter can edit the company, which is odd.    
The house hunter page is not working. I logged in as a realtor and then switched to house hunter view. I was not able to see any house list, any interest list, send inquiry form etc. Deducted points for that. no filter function.
The house hunter model seemed to work according to most of the tasks mentioned. Not for the admin and realtor ones. Was unable to login as admin. Was unable t signup as realtor. 
The house hunter model seemed to work according to most of the tasks mentioned. Not for the admin and realtor ones. Was unable to login as admin. Was unable t signup as realtor. 
The high-level design which is needed to start with the work looks prominent. As the project proceeds, few intricacies resulting due to design conflicts, scalability need to be addressed as and when required. But the team has laid out a solid foundation to begin with.
The high level view of the solution appears to be reasonable. The problem with this design is that there is no discussion present about any principles or patterns that are going to be utilized as part of the solution. I would suggest using certain keywords to make the decisions more clear to the reader. For example the authors talk about reusing the code of HTMLCanvasContextRendering2D and WebGLRenderingContext. It would be helpful if the concrete mechanism were specified. For example patterns like Decorator or Adapter would be relevant for this case.
The heroku link to this project has not been submitted. So I am not able to check if the system works as it is supposed to work. But through the github link, the code seems legible. Without the heroku link I am not able to check if there is any functionality is missing or not.
The have included a detailed design flow representation and have also included the visualizations. The could have added Lo-Fi UI cards to depict changes to views which will help them visualize the changes and also help instructors in suggesting improvements at an early stage which will help reduce unnecessary code changes in latter stages of the project.
The have included a detailed design flow representation and have also included the visualizations. The could have added Lo-Fi UI cards to depict changes to views which will help them visualize the changes and also help instructors in suggesting improvements at an early stage which will help reduce unnecessary code changes in latter stages of the project.
The handle_duplicates function has a lot of white space and print statements left in it. It could've been chopped up into tiny sub-functions too, hypothetically.
The hand drawn diagrams are good enough to explain the problem to others , next time they can update it with the actual page once its done.
The group has not shared the link for the test environment. Hence unable to test the edge cases. However, in the screen cast they have covered the functionalities mentioned in the requirement document.
The group has not shared the link for the test environment. Hence unable to test the edge cases. However, in the screen cast they have covered the functionalities mentioned in the requirement document.
The group has not shared the link for the test environment. Hence unable to test the edge cases. However, in the screen cast they have covered the functionalities mentioned in the requirement document.
The given source code is ready for deployment. The object under test is fully covered and all of the test cases are implemented correctly. The build successfully passes Travis CI. The future team will have no problems in picking up from here. However, there is a room for further improvement when it comes to simplifying several test cases, especially the '.final_versions_from_reviewer' block. Moreover, 'xit' blocks need to be removed because the final version should not contain any tests that are in the pending state.
The given source code is ready for deployment. The object under test is fully covered and all of the test cases are implemented correctly. The build successfully passes Travis CI. The future team will have no problems in picking up from here. However, there is a room for further improvement when it comes to simplifying several test cases, especially the '.final_versions_from_reviewer' block. Moreover, 'xit' blocks need to be removed because the final version should not contain any tests that are in the pending state.
The given link does not work and gives the following error: This site cant be reached 18.224.197.227 refused to connect. Hence, cannot comment on the functionalities.
The given link does not work and gives the following error: This site cant be reached 18.224.197.227 refused to connect. Hence, cannot comment on the edge cases.
the github code repository is concise and well maintained. The code base follows goo Ruby and Rails coding practices. The MVC architecture skeleton is implemented in an elegant manner. The desired features need to be implemented and the security issues need to be fixed.
The git Repository was created on Oct 6 after the round 1 was completed. The commits were no regular during the complete course of the project. All the commits happened on the day of final submission.
The git Repository was created on Oct 6 after the round 1 was completed. The commits were no regular during the complete course of the project. All the commits happened on the day of final submission.
The git repository link is not provided. A zip file is provided instead.
The git may very well contain the appropriate testing files; however, I am unable to view the due to the privacy settings of the repository. I would suggest that your try and test those models/controllers that have the most complexity to increase the level of confidence in your product. Make sure to test the validations and boundary cases thoroughly, especially model attributes that have restrictions on things such as length and type.  There are also several instances in the project where various users can accomplish the same tasks but with slight differences. It will be to your benefit to pay close attention in creating tests that can replicate these tasks. 
The git link to the code repository is not provided.
The Git link provided redirected me to a page saying "404 Not found." Since there isn't any links of the deployed project, i could not test it.
The git link is not correct. Also, the project is not deployed.
The functions are not too long so the code doesn't have to be extracted into separate methods. More comments could have been added for easy understanding of the code. The code follows the Ruby style guide and the code looks refactored, statements "unless" keyword are written in a single line.
The functions are not too long so the code doesn't have to be extracted into separate methods. More comments could have been added for easy understanding of the code. The code follows the Ruby style guide and the code looks refactored, statements "unless" keyword are written in a single line.
The functionality scope is restricted because of the topic but the design doc covers everything what all is required to be done in the project.
The functionality provided as a result of each issue is not explained. The way of work or design principle is not mentioned.
The functionality needs to be explained a bit more
The functionality needs to be explained a bit more
The Functionality is working just fine. I noticed one small problem though. As a house hunter, when I added a house to my interest list and then click on more, it says that the page that I was looking for does not exist.
The functionality has been written well. Though I do feel it would have been better if the test cases implemented had been explained in more detail as to what the do.
The functionality added to the pull request is reaonable and makes use of appropriate keywords. It could be improved by giving names according to convention like feed_ back_ review_response_map could just be feed_back as jt is part of the review response map model file.
The functionality added to the pull request is reaonable and makes use of appropriate keywords. It could be improved by giving names according to convention like feed_ back_ review_response_map could just be feed_back as jt is part of the review response map model file.
The functionalities relating to Questionnaire have been moved to Questionnaire from QuizQuestionnaire which is very helpful. Suggestion: 1. You can try to create sub functions for code inside create and view, as they are really long functions
The functionalities of interest list and inquiries are implemented in a crude way, i.e. by creating a drop down for a listings. It becomes very tedious for the user to go and choose a house from hundreds of listings every time to just add it to a interest list. A better way would have been by creating an option of adding to the interest list where user can see all the listings. Adding a user to interest list does not add the buyer a to a house's potential buyer's list. There is no option for viewing potential buyers.
The functionalities have been implemented , but the back button is a major problem
The functionalities are working fine. The describes in the tests could be a little more verbose.
The functionalities are working fine. The describes in the tests could be a little more verbose.
The function process seems to be a bit long. It could have been splitted based on oscillator types rather than having all of them in the same function. Apart from that rest of the code seems great.
The function process seems to be a bit long. It could have been splitted based on oscillator types rather than having all of them in the same function. Apart from that rest of the code seems great.
The function process seems to be a bit long. It could have been splitted based on oscillator types rather than having all of them in the same function. Apart from that rest of the code seems great.
The function process seems to be a bit long. It could have been splitted based on oscillator types rather than having all of them in the same function. Apart from that rest of the code seems great.
The folders/binary files in the drive cannot be played. Can you upload the video on YouTube so that it is easy for everyone?
The folders/binary files in the drive cannot be played. Can you upload the video on YouTube so that it is easy for everyone?
The flowchart included concisely explains the functionality they plan to add. Suggestion: Add UML diagrams for Use case or sequence diagrams to explain their implementation design. This will make the design planned easier to follow.  
The flowchart in the design doc explains their problem purpose clearly. Few improvements could be : The document didnt contain testing plan Project purpose i.e, introduction can be more detailed      
The flowchart added gives a good idea of the final outcome after implementation of the changes proposed. Suggestion: A diagram explaining the plan of changes to be made will make the document easier to read.
The flowchart added gives a good idea of the final outcome after implementation of the changes proposed. Suggestion: A diagram explaining the plan of changes to be made will make the document easier to read.
The flow has been explained through UML diagram. But, the proposed solution has not been given.
The flow has been explained through UML diagram. But, the proposed solution has not been given.
The flow diagram used is basically a pictorial representation of the problem statement and so it does not really add any more value. It would be really helpful if the authors could include a real flow diagram that shows the actual flow of events. The screenshots provided help us to understand what changes the authors are expecting in the UI.
The flow charts are good and help a lot in understanding the work. Again. it would be better to explain the abbreviations.
The flow charts are good and help a lot in understanding the work. Again. it would be better to explain the abbreviations.
The first screenshot helped me understand the design, but the second one does not help a lot. 
The files to be changed have been properly listed. I feel more explanation ought be given as to why these files have been modified and in what way.
The features work properly but still need more tests to test the functions.
The features work correctly, as expected. The instructor login only has one "Student View" tab under the Manage menu. On clicking it the instructor is successfully redirected to the student view page which has the "Close Student View" button to redirect to the default view. 
The features work as per the given instructions. Though there seems to be more scope for extra test cases.
The features work as per the given instructions. Though there seems to be more scope for extra test cases.
The features work as intended however I am having trouble navigating and checking what are the differences between the original system and the improved system. Could have made a demo video showing the improvements or a step guide to follow. They could have also provided some steps or a visual navigation guide to see the changes. For edge cases you could check what happens when assignments have same names, blank or whitespace containing names etc.
The features work as intended however I am having trouble navigating and checking what are the differences between the original system and the improved system. Could have made a demo video showing the improvements or a step guide to follow.
The features work as intended however I am having trouble navigating and checking what are the differences between the original system and the improved system. Could have made a demo video showing the improvements or a step guide to follow.
The features work as intended however I am having trouble navigating and checking what are the differences between the original system and the improved system. Could have made a demo video showing the improvements or a step guide to follow.
The features do work as per the mentioned functionalities. There are some suggestions mentioned and would be good to include test cases for the same in future.
The features do work as per the mentioned functionalities. There are some suggestions mentioned and would be good to include test cases for the same in future.
The features cannot be tested until the final changes are completed
The feature to add a company to a realtor does not work correctly in the application. The app crashes when he chooses the company. The team could try to fix this issue and correspondingly handle the edge cases.
The feature seems ok but it can't be deployed yet with all pending issues.
The feature implementation section is good to go. However the test cases can be improved on a lot. That doesn't mean that the test cases shouldn't be deployed.
The feature implementation section is good to go. However the test cases can be improved on a lot. That doesn't mean that the test cases shouldn't be deployed.
The Facebook signup which wasn't working in the previous sign up works properly. The admin, realtor, customer functionalities are working fine and I can see a lot of improvement from the previous version. The realtor can send a receive queries by the customer. However, a small suggestion would be to ask a realtor for the company name while filling the sign up form. Apart from that, the system fulfills all the requirements of the project
The explanations were inadequate and could have been given more elaborately written. The document just contains the details given in the user story document by professor. More content can be added and the flow of logic can be added.  
The explanations seem very clear. Although, splitting the ER diagram into 1 or 2 more sections would have made the design simple to understand in my opinion.
The explanations seem very clear. Although, splitting the ER diagram into 1 or 2 more sections would have made the design simple to understand in my opinion.
The explanations seem very clear. Although, splitting the ER diagram into 1 or 2 more sections would have made the design simple to understand in my opinion.
The explanations seem very clear. Although, splitting the ER diagram into 1 or 2 more sections would have made the design simple to understand in my opinion.
The explanations given show that they have put thought into their project however in Issue 1 solution 2, they are not clear about the path ahead. They have vaguely stated that the solution might be complex.
The explanations given show that they have put thought into their project however in Issue 1 solution 2, they are not clear about the path ahead. They have vaguely stated that the solution might be complex.
The explanations given are succinct and clear. The flow of implementation seems very clear. However, as mentioned before I would like more details on the API
The explanations can be more detailed. Overall understandable.
The explanations are succinct. However, in the Controllers section, it is unclear which controller in expertiza project the authors are referring to. The authors could mention the name of the controller(s) they intend to change and also possible method(s) that might be added to it. 
The explanations are provided as points which is very easy to follow and understand. Though, the need for the proposed UI change is not very clear to me. Few more details on actually how the strategy pattern is going to be incorporated in current code would have been insightful. The explanation on the test controller is ambiguous.    
The explanations are provided as points which is very easy to follow and understand. Though, the need for the proposed UI change is not very clear to me. Few more details on actually how the strategy pattern is going to be incorporated in current code would have been insightful. The explanation on the test controller is ambiguous.    
The explanations are more than sufficient. Not only have the authors explained the changes to the system, but also explained the reasoning for considering those changes. I like the way that they also explained the other different ways they could've integrated the GitHub metrics but avoided those methods with sufficient reasoning for the same.The team has also given an explanation of their database design modifications would be like which is good.
The explanations are incomplete and do not provide sufficient reasoning.
The explanations are good. Separating cases to cases and discuss them one by one is a good strategy.  However, none of them is explained in detail. They are all a little bit terse. After reading it, I still have the following questions: 1. how to change the list_submissions.html.erb? What are the functions that is already implemented? The four cases in the explanation did not say clearly whether they are already implemented or not. 2. "The feature as understood from the past project is that Assign Grade is present for all teams. (Standardize the functionality)" I did not quite understand this sentence. What's its relation too the four cases proposed here? 3. the problem of " response controllder checks 2 times and should be reduced to 1", there's not a lot of detailed plan in this implementation.    
The explanations are good. Separating cases to cases and discuss them one by one is a good strategy.  However, none of them is explained in detail. They are all a little bit terse. After reading it, I still have the following questions: 1. how to change the list_submissions.html.erb? What are the functions that is already implemented? The four cases in the explanation did not say clearly whether they are already implemented or not. 2. "The feature as understood from the past project is that Assign Grade is present for all teams. (Standardize the functionality)" I did not quite understand this sentence. What's its relation too the four cases proposed here? 3. the problem of " response controllder checks 2 times and should be reduced to 1", there's not a lot of detailed plan in this implementation.    
The explanations are good. But a layout in the issue-solution form listed sequentially would have looked better.
The explanations are good. But a layout in the issue-solution form listed sequentially would have looked better.
The explanations are done well but they could be more thorough. Why is the internationalization API and Google Translate needed? Also, will you use a script to edit the views? How would you do that? It seems like too much work to do manually.
The explanations are done well but they could be more thorough. Why is the internationalization API and Google Translate needed? Also, will you use a script to edit the views? How would you do that? It seems like too much work to do manually.
The explanations are done well but they could be more thorough. Why is the internationalization API and Google Translate needed? Also, will you use a script to edit the views? How would you do that? It seems like too much work to do manually.
The explanation was perfectly organized and flowing. Could not have been any better! A sample request response of GitHub metric API would've made it more amazing!
The explanation of the why they write the test code like that could be more clear.
The explanation of how the received data will be stored/presented is something I would suggest the team to add. The design document also misses out on where the data will be presented in the view.
The explanation of how the received data will be stored/presented is something I would suggest the team to add. The design document also misses out on where the data will be presented in the view.
The explanation of how the received data will be stored/presented is something I would suggest the team to add. The design document also misses out on where the data will be presented in the view.
The explanation of each of the issues in details is done very well but it does seem to be complicated unless files to be modified and solutions are read.
The explanation of each of the issues in details is done very well but it does seem to be complicated unless files to be modified and solutions are read.
The explanation of changes is good enough that it states what all needs to be added/re-implemented, but it does not elaborate on some technical aspects.
The explanation of changes is good enough that it states what all needs to be added/re-implemented, but it does not elaborate on some technical aspects.
The explanation of changes is good enough that it states what all needs to be added/re-implemented, but it does not elaborate on some technical aspects.
The explanation is quite well documented such as including the flow chart , kind of bar graphs they would prefer and the files that they will update. Adding of screenshots of the flow of the website would make it more easy to understand for a leyman.
The explanation is quite well documented such as including the flow chart , kind of bar graphs they would prefer and the files that they will update. Adding of screenshots of the flow of the website would make it more easy to understand for a leyman.
The explanation is quite good to tell what is the current and the required functionality. The screenshots placed are not complete, as in they cut the code at the right end. Instead I would suggest to placed the github link to the code changes, so that the wiki becomes shorter and you can explain each code change better in the wiki. Also, the reviewer can compare the code with your explanation properly if he has the link to the code.
The explanation is inadequate, needs more textual explanation of the problem and approach
The explanation is inadequate, needs more textual explanation of the problem and approach
The explanation is good, The images are very large on the screen and it is hard to spot the changes that you made, consider highlighting the changes to show them better.
The explanation is good, and they have managed to get in a prototype UI as well. My only concern with the design is, if there are a lot of assignments the page might become very wide and will require a horizontal scroll bar to access all the data for the user.
The explanation is descriptive and explains the logic behind the solution which is think should work. However, I believe that team should can add the explanation about the files and classes they tend to make changes in. The team can now focus on implementation of the code.
The explanation is clear. It would be better if the authors explain more about the strategy pattern they will use.
The explanation is clear. It would be better if the authors explain more about the strategy pattern they will use.
The explanation is clear to follow but it could also include some more of the abstract design like UML diagrams, explanation of the use cases etc. 
The explanation is adequate. I would suggest that the design of the doc be more explicit. It may include some sub titles and the font shoule be of different sizes to emphasize some parts.
The explanation is adequate. I would suggest that the design of the doc be more explicit. It may include some sub titles and the font shoule be of different sizes to emphasize some parts.
The explanation given by the authors was pretty straightforward. Looking at the explanations it looks like the authors have thought about different aspects of the problem statement and also of different ways to implement the GitHub metrics integration feature along with the side effects of implementing it in a particular way. e.g one would think that adding the metrics to the database would be a sound solution but given the nature of an open source project and the fact that students would commit beyond the deadline the authors have thought not to add the metrics to the database which is sound and reasonable.
The explanation given by the authors was pretty straightforward. Looking at the explanations it looks like the authors have thought about different aspects of the problem statement and also of different ways to implement the GitHub metrics integration feature along with the side effects of implementing it in a particular way. e.g one would think that adding the metrics to the database would be a sound solution but given the nature of an open source project and the fact that students would commit beyond the deadline the authors have thought not to add the metrics to the database which is sound and reasonable.
The explanation for changes are just an overview of what needs to be done and does not focusses on the changes to be made in the files.
The explanation for changes are just an overview of what needs to be done and does not focusses on the changes to be made in the files.
The explanation for changes are just an overview of what needs to be done and does not focusses on the changes to be made in the files.
The explanation and the diagrams don't match exactly. The explanation says user should be able to see composite and peer review scores only after he completes his own review. That is not captured in the flow diagram. Else it is self explanatory
The explanation and the diagrams don't match exactly. The explanation says user should be able to see composite and peer review scores only after he completes his own review. That is not captured in the flow diagram. Else it is self explanatory
The explaiantions provided by the author are at a very high level view, and needs further drilling down into the implementation.
The explaiantions provided by the author are at a very high level view, and needs further drilling down into the implementation.
The explaiantions provided by the author are at a very high level view, and needs further drilling down into the implementation.
The edge cases lead to following results : 1. It asks for confirmation before destroying the company. After that the company is deleted even for those with some realtors and houses. 2. Unable to test due to failure for realtor signup. 3. It asks for confirmation before destroying the house hunter account. Unable to test for inquiries due to failure for house hunter signup. 4. The system does not allow new realtor or house hunter to sign up for application.
The edge cases lead to following results : 1. It asks for confirmation before destroying the company. After that the company is deleted even for those with some realtors and houses. 2. Unable to test due to failure for realtor signup. 3. It asks for confirmation before destroying the house hunter account. Unable to test for inquiries due to failure for house hunter signup. 4. The system does not allow new realtor or house hunter to sign up for application.
The edge cases have not been handled as these edge cases depend on one or more basic functionalities that have not yet been implemented.
The edge case when a admin deleted the real estate company has  been handled as after the admin  deletes the real estate company the houses listed under that company are all deleted.  The realtor when changes the company cannot see the house listed under previous company so he would not be able to delete the houses under previous company.   No, the readme.md does not contain any details  on the edges cases handling.
The documentation states the purpose of the project as implementing OffScreenCanvas API for the Servo browser engine under the Problem Statement. It also includes the proposed design that specifies the flow of the project and the files that are interlinked. The testing plan has not been included in the current version of documentation. I expect that the team is working on it and will include it for the 2nd round after they start the implementation.
The documentation looks great as a high-level design document. Low-level technical details(code level) should also be covered.
The documentation looks great as a high-level design document. Low-level technical details(code level) should also be covered.
The documentation looks great as a high-level design document. Low-level technical details(code level) should also be covered.
The documentation lacks the detailed design that they are planning to implement so it would be tough to answer the above question.
The documentation is somewhat ambiguous
The documentation is somewhat ambiguous
The documentation is good but is missing the test plan and Instead of a word document write it on wiki.expertiza.ncsu.edu so its easier to search and refer.  
The documentation is good but is missing the test plan and Instead of a word document write it on wiki.expertiza.ncsu.edu so its easier to search and refer.  
The documentation covered almost everything from project purpose, design flow as well as some info on what files will be changed in the project.  Suggestion: I feel that the test plan was a bit vague. Some more details should have been provided. For example- What all features will be tested. Or maybe some info about edge cases and different scenarios that will be covered. 
The documentation covered almost everything from project purpose, design flow as well as some info on what files will be changed in the project.  Suggestion: I feel that the test plan was a bit vague. Some more details should have been provided. For example- What all features will be tested. Or maybe some info about edge cases and different scenarios that will be covered. 
The documentation covered almost everything from project purpose, design flow as well as some info on what files will be changed in the project.  Suggestion: I feel that the test plan was a bit vague. Some more details should have been provided. For example- What all features will be tested. Or maybe some info about edge cases and different scenarios that will be covered. 
The document straight away starts with the explanation of the project specifics without any background as to what was the whole purpose of doing this. Problem statement is very general, it could have been more specific as to what was the drawbacks of the existing implementation and how that can be resolved with the new changes. The doc also lacks a test plan.  It is preferable for the doc to be written in expertiza wiki rather than the normal wiki. 
The document straight away starts with the explanation of the project specifics without any background as to what was the whole purpose of doing this. Problem statement is very general, it could have been more specific as to what was the drawbacks of the existing implementation and how that can be resolved with the new changes. The doc also lacks a test plan.  It is preferable for the doc to be written in expertiza wiki rather than the normal wiki. 
The document states they have a 77% LoC coverage, but the assignment description states they need at least 90%. This is not complete.
The document states they have a 77% LoC coverage, but the assignment description states they need at least 90%. This is not complete.
The document specifies the problem statement and the "analyze" functionality they want to incorporate. However, the design document seems to be incomplete as they have not talked about the exact identified functionality i.e "analyze" and the design document section is empty. Suggestion : You can talk about methods you want to add or existing methods you want to modify and how. I think that you can remove the expertiza introduction section as mentioned by the professor.    
The document specifies the problem statement and the "analyze" functionality they want to incorporate. However, the design document seems to be incomplete as they have not talked about the exact identified functionality i.e "analyze" and the design document section is empty. Suggestion : You can talk about methods you want to add or existing methods you want to modify and how. I think that you can remove the expertiza introduction section as mentioned by the professor.    
The document specifies the problem statement and the "analyze" functionality they want to incorporate. However, the design document seems to be incomplete as they have not talked about the exact identified functionality i.e "analyze" and the design document section is empty. Suggestion : You can talk about methods you want to add or existing methods you want to modify and how. I think that you can remove the expertiza introduction section as mentioned by the professor.    
The document shows the flow of work really well.However, I would like to suggest to put more of test planning and the tools and technologies that will be used. This will enhance the quality of the document to a great extent.
The document shows how they will be using the API. However, since it is initial they have not clearly mentioned the functionality required.
The document shows how they will be using the API. However, since it is initial they have not clearly mentioned the functionality required.
The document shows how they will be using the API. However, since it is initial they have not clearly mentioned the functionality required.
The document should expand on the design and make specific assertions about how the changes will be propagated. So far the idea behind the design is to utilize an existing code of HTMLCanvasContextRendering2D adding new functionality like blob API on top of that. One suggestion would be to elaborate on that and discuss how the new functionality will be merged with existing code, what patterns might be used to increase the efficacy and simplicity of the system.
The document seems to be generally well-designed. However, I believe that they have glossed over how a link is said to be "closed". They properly described the additional functionality and the challenges they will likely face.
The document seems to be generally well-designed. However, I believe that they have glossed over how a link is said to be "closed". They properly described the additional functionality and the challenges they will likely face.
The document seems to be complete except the test plan. It would be better to include a test plan in the document.
The document seems to be complete except the test plan. It would be better to include a test plan in the document.
The document provided by the team is very detailed and includes all the requirements which are suggested by the Change Request. However, the team may change tone of the document as it is instructive  right now which seems like the change request description itself. The team might also add a wiki link for this document so that it could be included in the expertiza links of existing and ongoing changes and would be more reachable to a wider audience.
The document provided by the team is very detailed and includes all the requirements which are suggested by the Change Request. However, the team may change tone of the document as it is instructive  right now which seems like the change request description itself. The team might also add a wiki link for this document so that it could be included in the expertiza links of existing and ongoing changes and would be more reachable to a wider audience.
The document provided by the team is very detailed and includes all the requirements which are suggested by the Change Request. However, the team may change tone of the document as it is instructive  right now which seems like the change request description itself. The team might also add a wiki link for this document so that it could be included in the expertiza links of existing and ongoing changes and would be more reachable to a wider audience.
The document provided by the team is very detailed and includes all the requirements which are suggested by the Change Request. However, the team may change tone of the document as it is instructive  right now which seems like the change request description itself. The team might also add a wiki link for this document so that it could be included in the expertiza links of existing and ongoing changes and would be more reachable to a wider audience.
The document needs more details on the implementation of the OffscreenCanvasContextRendering2D, the support for WebGL contexts, and the Blob API. Also, what is a DOM and a Blob? Those terms should be defined in the design document in case any readers are unfamiliar with them.      
The document mostly copies from the description provided by instructor and lacks the essential parts like design and test plan. Although some instructions provided, it is not clear enough and cannot help readers to figure out what the project is about and what's the purpose.
The document mentions the tools of JQuery sorting table, in fact which API or any sample code that can be referenced to is expected in the document. Also, this project seems to focus on the view part of Expertiza, so the test plan should be more detailed, cover more edge case. 
The document mentions the tools of JQuery sorting table, in fact which API or any sample code that can be referenced to is expected in the document. Also, this project seems to focus on the view part of Expertiza, so the test plan should be more detailed, cover more edge case. 
The Document mentions the problem statement, and the basic solution that team came up with to solve it. There is no reference to code or functions that might need some modification. Some design talk would be nice.
The Document mentions the problem statement, and the basic solution that team came up with to solve it. There is no reference to code or functions that might need some modification. Some design talk would be nice.
The document mentions the detailed test case that needs to be done but not how it will be done.
The document mentions the detailed test case that needs to be done but not how it will be done.
The document mentions the detailed test case that needs to be done but not how it will be done.
The document lists all the problem and possible solutions, which is good. However, there could be more details to explain how to implement the solutions, for example, you can tell more about the changes will be made for the specific solution instead just listing the files need to be changed. Also, the testing plan should be added.
The document lists all the problem and possible solutions, which is good. However, there could be more details to explain how to implement the solutions, for example, you can tell more about the changes will be made for the specific solution instead just listing the files need to be changed. Also, the testing plan should be added.
The document is well-written. They have described the plan of action along with the different routes they would need to explore in order to complete the task at hand. They also gems that can be used and API to query if gems were not allowed. They have a section called the testing plan, however that doesn't look like a traditional testing plan. It just shows the navigation path that different users would take.
The document is well-written. They have described the plan of action along with the different routes they would need to explore in order to complete the task at hand. They also gems that can be used and API to query if gems were not allowed. They have a section called the testing plan, however that doesn't look like a traditional testing plan. It just shows the navigation path that different users would take.
The document is well-written. They have described the plan of action along with the different routes they would need to explore in order to complete the task at hand. They also gems that can be used and API to query if gems were not allowed. They have a section called the testing plan, however that doesn't look like a traditional testing plan. It just shows the navigation path that different users would take.
The document is well-written. They have described the plan of action along with the different routes they would need to explore in order to complete the task at hand. They also gems that can be used and API to query if gems were not allowed. They have a section called the testing plan, however that doesn't look like a traditional testing plan. It just shows the navigation path that different users would take.
The document is well written Just that a UML diagram or something similar could have been included to make it clearer and easier for the reader to understand.
The document is well explained. Thus, it reduces complexity and makes itself appear quite easy for the user to understand. However, more diagrams and flowcharts would have helped even more.
The document is very well-written. Just the test plan is missing.
The document is really simple to understand once you get to understand the flow. However, initially it appears to be difficult.
The document is really simple to understand once you get to understand the flow. However, initially it appears to be difficult.
The document is really descriptive about what work needs to be done. However, I would suggest them to properly structure the document. One finds it really difficult to understand the flow of the document.
The document is really descriptive about what work needs to be done. However, I would suggest them to properly structure the document. One finds it really difficult to understand the flow of the document.
The document is really descriptive about what work needs to be done. However, I would suggest them to properly structure the document. One finds it really difficult to understand the flow of the document.
The document is almost complete. Includes proper planning and demonstration. Only suggestion would be to include more about how the implementation would be done. 
The document is almost complete. Includes proper planning and demonstration. Only suggestion would be to include more about how the implementation would be done. 
The document is a little bit strange, it doesn't show what the design of the project but list the concerns during the design process. It is hard to tell if the team covers all the functions, but from those problems. I can find they design part of the functions.
The document is a little bit strange, it doesn't show what the design of the project but list the concerns during the design process. It is hard to tell if the team covers all the functions, but from those problems. I can find they design part of the functions.
The document explains what the problem statement is. However, the purpose of the project could have been explained. The flowchart for the project is shown visually shown but the project design is not extensively explained. Test plan is not provided in the documentation.
The document does not mention the name of the design pattern used but clearly mentions the steps to be done in order to implement the required functionalities.
The document does not mention the name of the design pattern used but clearly mentions the steps to be done in order to implement the required functionalities.
The document does not mention the name of the design pattern used but clearly mentions the steps to be done in order to implement the required functionalities.
The document does not include any test plan
The document does not go much into the technical details. The limited details provided sounds right. However, more research will generate better understanding.
The document does not go much into the technical details. The limited details provided sounds right. However, more research will generate better understanding.
The document does not explain the reason behind creating the new class ReportStrategy.
The document does not explain the reason behind creating the new class ReportStrategy.
The document does include a test plan section . However, it just includes what framework they plan to use for testing. No solid test planning was described in the test plan section.
The document does include a test plan section . However, it just includes what framework they plan to use for testing. No solid test planning was described in the test plan section.
The document does include a test plan section . However, it just includes what framework they plan to use for testing. No solid test planning was described in the test plan section.
The document does include a flowchart which shows the flow of changes. However, an UML diagram would have made the document more understandable and easy to follow.
The document does include a flowchart which shows the flow of changes. However, an UML diagram would have made the document more understandable and easy to follow.
The document directly dives into issue, they could have provided more information on different scenarios that are currently facing the said issue and its magnitude. This could have been helpful to counteract the problem in the future in other scenarios
The document covers a number of important topics including the description of Servo, apis and concepts that are going to be used by the team in this project, problem statement, project build and proposed design. However, the testing plan is not discussed. While the instances of testing is certainly mentioned in the document, e.g. "specific functionalities could be tested by writing a custom html file and then running it the similar way." and "Finally, well test our code by enabling the blob API." the authors do not provide an extensive discussion of specifically what functionality is going to be tested. I would suggest reducing the overall size of the initial sections which provide an overview of Servo project, Off Screen Canvas, Web workers and Web IDL. They introduce more verbosity to the document than necessary. Two or three descriptive sentences could be used instead. The reader could refer to a more detailed information through references. Furthermore, the focus of the problem statement falls on the description of the OffscreenCanvas API making it somewhat redundant. It would be better to emphasize on flashing out the goal of the project and only later provide the reference to the technical details if necessary. Another suggestion would be for the team to identify and elaborate on the 'changes' that are going to be merged in servo.
The document contains a UML Use Case Diagram that analyze the system's requirements and describes the actors involved and the relationship between them. It helps to understand the overview of the project details. However, it can certainly make use of a flow diagram in the Expected Flow section that gives more clarity about the sequence of actions. The flow diagram can follow from the use case diagram to show the tasks performed by the actors in a serial order.  
The document clearly states what is missing and how they are planning to implement that thing , they state how many new criterion are they going to add to the search feature, However, I would suggest them to include how will they implement it. There is no explanation of how things will be done.
The document clearly states what is missing and how they are planning to implement that thing , they state how many new criterion are they going to add to the search feature, However, I would suggest them to include how will they implement it. There is no explanation of how things will be done.
The document clearly states what is missing and how they are planning to implement that thing , they state how many new criterion are they going to add to the search feature, However, I would suggest them to include how will they implement it. There is no explanation of how things will be done.
The document clearly states what is missing and how they are planning to implement that thing , they state how many new criterion are they going to add to the search feature, However, I would suggest them to include how will they implement it. There is no explanation of how things will be done.
The document clearly specifies the problem statement. It seems good enough. They have mentioned the API they are planning to use as well as the files to be modified. However, I would like more details on this API and how they plan to integrate it into their project.
The document clearly specifies the problem statement. It seems good enough. They have mentioned the API they are planning to use as well as the files to be modified. However, I would like more details on this API and how they plan to integrate it into their project.
The document clearly mentions the requirement of the project with the problem statement.
The document clearly explains what was the problem and what was the solution they proposed.They have also compared and contrasted with the previous solution which is good. They have talked about how different roles come into play with respect to security perspective and what the pros and cons of having/not having those roles. Comparing the code changes gave a clearer view of the code changes. One improvement could be in the 'background' part.  Taking it as it was: The majority of the project was related to solving issues regarding the deletion of Administrator and Instructor accounts. Administrator and Instructor are both account types that inherit behavior from User but are (1)handled and deleted in different codepaths. Furthermore, properties are used on a User that aren't on an Administrator, (2)such as team ids or course associations  (1) The different codepaths could have been shown to get a better view (atleast a screenshot, considering it wasnt within the problem scope) (2) Although, why these properties arent on Administrator is defined in the forthcoming sessions, it was little unclear while reading it. (It could have been quoted that 'as we will see it in the forthcoming sections')
The doc seems complete. All aspects of the problem statement are covered and test plan is also included. A use-case diagram will be useful to add.
The doc says participant.rb model is  changed. However that file is not currently committed. However assignment_participant model file is committed. Seems to be some mismatch at one of the places. Correcting it will help in understanding what work is done and how does it impact the functionality.
The doc says participant.rb model is  changed. However that file is not currently committed. However assignment_participant model file is committed. Seems to be some mismatch at one of the places. Correcting it will help in understanding what work is done and how does it impact the functionality.
The doc is well written with all the necessary explanation. More detailed test plan would suffice the need of the document
The doc is well written with all the necessary explanation. More detailed test plan would suffice the need of the document
The doc is very well written. Its like a blueprint to the project. Really appreciate the team efforts!
The doc is very well outlined but the team must have invested some amount in test cases. It would be really helpful to see how the new controller be tested and how the chosen pattern is able to help in the desired functionality.
The doc is complete except the Test Plan. A test plan would make it complete. 
The doc is complete except the Test Plan. A test plan would make it complete. 
The doc focusses on eliminating the issue and does not shower any light on the design of the system.
The doc focusses on eliminating the issue and does not shower any light on the design of the system.
The doc does not have any UML diagrams. However, the use of mockup screens are helpful to understand what the project is about.
The doc contains almost everything in terms of design except for the test plan. You might want to add a test plan right away to go for a test-driven development.
The doc contains almost everything in terms of design except for the test plan. You might want to add a test plan right away to go for a test-driven development.
The doc clearly explains the agenda of the whole project. Seems like the team still needs time to understand and devise a plan to tackle the issues identified.
The doc clearly explains the agenda of the whole project. Seems like the team still needs time to understand and devise a plan to tackle the issues identified.
The doc clearly explains the agenda of the whole project. Seems like the team still needs time to understand and devise a plan to tackle the issues identified.
The did not use any of visual aids.
The diagrams seems to go out of the boundary of the pae.
The diagrams seems to go out of the boundary of the pae.
The diagrams seems to go out of the boundary of the pae.
The diagrams seems to be good for most of the part. One can understand the project by looking at the diagrams itself. However, in one of the instructor flow diagram, it's given that if the instructor's status is pending the instructor will set the limit to 10. That doesn't make sense. Why would the instructor himself/herself set the limit to 10. Isn't this the responsibility of the system itself to handle this or at the most the admin? Suggestions: Change the 'yes' branch of is pending? to loop 10 times or somehow indicate that pending instructors can add only 10 students to an assignment.
The diagrams seems to be good for most of the part. One can understand the project by looking at the diagrams itself. However, in one of the instructor flow diagram, it's given that if the instructor's status is pending the instructor will set the limit to 10. That doesn't make sense. Why would the instructor himself/herself set the limit to 10. Isn't this the responsibility of the system itself to handle this or at the most the admin? Suggestions: Change the 'yes' branch of is pending? to loop 10 times or somehow indicate that pending instructors can add only 10 students to an assignment.
The diagrams seems to be good for most of the part. One can understand the project by looking at the diagrams itself. However, in one of the instructor flow diagram, it's given that if the instructor's status is pending the instructor will set the limit to 10. That doesn't make sense. Why would the instructor himself/herself set the limit to 10. Isn't this the responsibility of the system itself to handle this or at the most the admin? Suggestions: Change the 'yes' branch of is pending? to loop 10 times or somehow indicate that pending instructors can add only 10 students to an assignment.
The diagrams seems to be good for most of the part. One can understand the project by looking at the diagrams itself. However, in one of the instructor flow diagram, it's given that if the instructor's status is pending the instructor will set the limit to 10. That doesn't make sense. Why would the instructor himself/herself set the limit to 10. Isn't this the responsibility of the system itself to handle this or at the most the admin? Suggestions: Change the 'yes' branch of is pending? to loop 10 times or somehow indicate that pending instructors can add only 10 students to an assignment.
The diagrams is detailed and easy to understand. But it is a bit too long. The team can simplify it.
The diagrams follow the conventions and are detailed and self explanatory. Suggestion : Test Plan is not so clear. Especially the second testcase where it is stated that the dates will be changed accordingly. What dates will be changed and how should be mentioned. A similar flow-chart  will make it very clear as to what you plan to test.
The diagrams follow the conventions and are detailed and self explanatory. Suggestion : Test Plan is not so clear. Especially the second testcase where it is stated that the dates will be changed accordingly. What dates will be changed and how should be mentioned. A similar flow-chart  will make it very clear as to what you plan to test.
The diagrams are very very large on the webpage. Consider making them half the size.
The diagrams are very very large on the webpage. Consider making them half the size.
The diagrams are missing in the document. Although much of it is explained in the screenshots. A possible diagram would make the document stronger.
The diagrams are good but don't necessarily help the reader understand the information - if anything I ended up understanding the writing better than the diagram.
The diagram show relationships between different models involve in the project, helped to give a clear vision of what should be implement. But no implementation design is visible. 
The diagram show relationships between different models involve in the project, helped to give a clear vision of what should be implement. But no implementation design is visible. 
The diagram show relationships between different models involve in the project, helped to give a clear vision of what should be implement. But no implementation design is visible. 
The diagram show relationships between different models involve in the project, helped to give a clear vision of what should be implement. But no implementation design is visible. 
The diagram only stated the current scenario.. There's no final picture, no UML diagram. The figure didn't clearly describe the changes to be made to the system. It should be better if there's a UML diagram from the user practice side, a diagram for the design plan, and also another figure for the final picture: how dows it look like when the plan is implemented.
The diagram only stated the current scenario.. There's no final picture, no UML diagram. The figure didn't clearly describe the changes to be made to the system. It should be better if there's a UML diagram from the user practice side, a diagram for the design plan, and also another figure for the final picture: how dows it look like when the plan is implemented.
The diagram is clear and easy to understand, from the diagram, the design may be easy and clear to implement. More details should be provided to evaluate further about the complexity.
The developers have put in dropdowns for role selection and company selection making the interface more intuitive. The application broke in Heroku when I tried to login though it might be a Heroku specific error. The login/signup buttons on the landing page don't seem to work. In fact, none of the buttons seem to work, and I am not even getting the hand pointer as you have mentioned in the readme.
The details regarding testing are mentioned in the writeup. But I did not find anything about the Test plan as such, in the writeup. The assignment_participant_spec contains a test. One edge case has been considered. I feel that the Test Plan should have been mentioned in the writeup explicitly.
The details are not enough, so it is difficult to tell if the design follows approbate principles. The diagrams covers most of changes they need to make.
The details are not enough, so it is difficult to tell if the design follows approbate principles. The diagrams covers most of changes they need to make.
The designs that the authors have proposed are consistent with the code and do not introduce any obvious problems. However, the design decisions for issues #1017 and #1072 are missing and therefore cannot be assessed. I would suggest including the discussion of the specific parts of the source code that are going to be addressed in this project. Posting the exact solution is not necessary.
The design sounds good, but that's largely due to how vague it is: naturally we want to add the things we need to add, and remove the things we need to remove.
The design seems workable. Maybe they can come up a more sound design. For example, they can try many ways to define the notification limit.
The design seems to follow appropriate principles and pattern. It is simple and clearly explains what needs to be done and where the changes will be made. Suggestion: addition of screen mock-ups to document will help reviewers a lot.
The design seems to follow appropriate principles and pattern. It is simple and clearly explains what needs to be done and where the changes will be made. Suggestion: addition of screen mock-ups to document will help reviewers a lot.
The design seems to be sound. I would like more details on the database of the Bacui projects seeing as most of us don't know what they look like given that most of us have worked on Expertiza projects. So, a short description of the different tables the project is going to interact with along with any and all modifications would really help understand IF there will be any possibility that the design would turn out to be non-DRY or smelly.I think the team is good on what gems are to be used.
The design seems to be good. It is still not very clear of the path for implementation or the files that they plan to add and the methods in said files however that is fine considering that this is just the initial stage and not much can be said since we haven't advanced to the implementation stage yet.  The authors seem to doubt whether they are allowed to use any existing gem. I think they should go ahead and use the gems.
The design seems to be good. It is still not very clear of the path for implementation or the files that they plan to add and the methods in said files however that is fine considering that this is just the initial stage and not much can be said since we haven't advanced to the implementation stage yet.  The authors seem to doubt whether they are allowed to use any existing gem. I think they should go ahead and use the gems.
The design seems to be good. It is still not very clear of the path for implementation or the files that they plan to add and the methods in said files however that is fine considering that this is just the initial stage and not much can be said since we haven't advanced to the implementation stage yet.  The authors seem to doubt whether they are allowed to use any existing gem. I think they should go ahead and use the gems.
The design seems to be good. It is still not very clear of the path for implementation or the files that they plan to add and the methods in said files however that is fine considering that this is just the initial stage and not much can be said since we haven't advanced to the implementation stage yet.  The authors seem to doubt whether they are allowed to use any existing gem. I think they should go ahead and use the gems.
The design seems sound. The team plans to add all translations of the static variables in a separate folder. I think that this could potentially increase the response time of the system. I would like to see this design in action before making a judgement.
The design seems sound. The team plans to add all translations of the static variables in a separate folder. I think that this could potentially increase the response time of the system. I would like to see this design in action before making a judgement.
The design seems simple but it is unclear on the implementation section. The authors can add more on how they plan to add new code or modify existing implementations to achieve their goal.
The design seems simple but it is unclear on the implementation section. The authors can add more on how they plan to add new code or modify existing implementations to achieve their goal.
The design seems pretty good. The only drawback is the test plan is missing.
The design seems pretty good. The only drawback is the test plan is missing.
The design seems pretty good, but the solutions are a little bit unspecific. It would be better if there are more explanations about how to implement the solutions so that the reviews can give you more feedback. 
The design seems pretty good, but the solutions are a little bit unspecific. It would be better if there are more explanations about how to implement the solutions so that the reviews can give you more feedback. 
The design seems good. However, it would be better if the author can mention the design principles and patterns followed in the documentation. 
The design seems good. However, it would be better if the author can mention the design principles and patterns followed in the documentation. 
The design seems appropriate to the issue at hand
The design related information is missing. The team has mentioned the problem statement and application flow. They need to add UML diagrams and in the first stage at least the proposed changes are expected.
The design related information is missing. The team has mentioned the problem statement and application flow. They need to add UML diagrams and in the first stage at least the proposed changes are expected.
The design proposed by the team specifies an addition of a new button to the buttons tray from the existing UI. The button when clicked must bring a menu of additional reports. This functionality should consider the mapping to the review_mapping controller file that will implement the given features.
The design proposed by the team looks complex in terms of the functionalities desired. They must backup these changes by providing a pictorial representation of the task like the one described in the documentation. This can help to understand the project in a better way.
The design proposed by the team looks complex in terms of the functionalities desired. They must backup these changes by providing a pictorial representation of the task like the one described in the documentation. This can help to understand the project in a better way.
The design plan portion feels a bit lacking. I found myself wanting more detail about how and what they were going to copy between each implementation and the next. What's going to be filtered out? What's going to be added? I have no clue...
The design looks solid, but it's hard to tell without sufficient detail. If anything, causing every static string reference to be encapsulated into an object that uses the current language to return the correct string is more DRY and maintainable than what we have now. I wonder if dynamic translation gems are out there or would work. The claim that dynamic translation should not be done in this project should be defended, e.g. it would take too much time.
The design looks solid, but it's hard to tell without sufficient detail. If anything, causing every static string reference to be encapsulated into an object that uses the current language to return the correct string is more DRY and maintainable than what we have now. I wonder if dynamic translation gems are out there or would work. The claim that dynamic translation should not be done in this project should be defended, e.g. it would take too much time.
The design looks simple and clear.
The design looks incomplete. There are no diagrams or screenshots. Could have added test plans as well.
The design looks good. But from the implementation details given and the amount of use cases listed, I feel there could be some more implementation details that are left out.
The design looks good. But from the implementation details given and the amount of use cases listed, I feel there could be some more implementation details that are left out.
The design looks good enough. It mostly deals with html.erb files to accommodate the graph and some database filtering in the controllers.I do not think that the design will increase the responses time of the system. Suggestion: If the details regarding how the graph will be implemented or any gem will be used should have been given. I did not find any details regarding about any methods that will be used to implement the functionality. That too would have been useful. 
The design looks a bit complicated and will increase the response time of the system. It can make the code smelly. Too complicated code handled in issue 1 which could be refactored.
The design lacks dynamic paging for different users. all the links are visible to all the users and upon clicking the links an error comes that you are not authorized to perform the action. Ideally only relevant links should be visible to the user. It confuses the user regaring the actions he/she can perform. The user needs to perform all the actions visible in the UI to know what are the actions relevant for him/her. The readme file also is not well described about the actions that can be performed by the user. The readme file currently lacks any relevant information.
The design lacks diagrams to state what the changes they will do and how it will be like after change. It is difficult to image how the system will be like after change and what will be changed.
The design lacks diagrams to state what the changes they will do and how it will be like after change. It is difficult to image how the system will be like after change and what will be changed.
The design isn't great (as mentioned in the documentation) due to code duplication, but I agree that it may be the easiest way to start - hopefully a better solution can be found in the future to improve DRYness.
The design isn't extremely simple to understand at first glance. But given that the feature to be implemented is slightly complicated, the team has made efforts to make it as clear as possible.
The design isn't extremely simple to understand at first glance. But given that the feature to be implemented is slightly complicated, the team has made efforts to make it as clear as possible.
The design isn't extremely simple to understand at first glance. But given that the feature to be implemented is slightly complicated, the team has made efforts to make it as clear as possible.
The design is well though of however instead of writing the time difference logic, gems could have been used which are well tested and bug free.
The design is well explained. Need clarification on below: 1) How will this GitHub metrics will be used to grade the student. So how will the final marks for a particular be calculated using the data from GitHub.
The design is well explained. Need clarification on below: 1) How will this GitHub metrics will be used to grade the student. So how will the final marks for a particular be calculated using the data from GitHub.
The design is well explained. Need clarification on below: 1) How will this GitHub metrics will be used to grade the student. So how will the final marks for a particular be calculated using the data from GitHub.
The design is well explained. Need clarification on below: 1) How will this GitHub metrics will be used to grade the student. So how will the final marks for a particular be calculated using the data from GitHub.
The design is specified to a certain extent, but does not provide where the changes will take place.
The design is specified to a certain extent but does not provide where the changes will take place or what classes or tables will be affected.
The design is specified to a certain extent but does not provide where the changes will take place or what classes or tables will be affected.
The design is specified to a certain extent but does not provide where the changes will take place or what classes or tables will be affected.
The design is specified to a certain extent but does not provide where the changes will take place or what classes or tables will be affected.
The design is sound because it has plans of file modification, of implemented solution, and very detailed testing plan. The DRY principle might not be well followed, since in each testing, the tester needs to log in as a super_administrator2 again. And there are five testings. 
The design is sound because it has plans of file modification, of implemented solution, and very detailed testing plan. The DRY principle might not be well followed, since in each testing, the tester needs to log in as a super_administrator2 again. And there are five testings. 
The design is sound because it has a well-developed plan for writing the funcationality, and it also has a detailed code level design. It does follow the DRY principle, because it adds on directly from the given files, thus does not repeat itself. It doesn't use observable patterns here. But that's because there's not a lot of implementations to be made. And it does follow the pattern of the original file.
The design is sound because it follows the problem statement and the instructions. I doubt if it follows the DRY principle while looping through each review, because that might be already done in the Expertiza. In terms of patterns, I think here it needs to use the factory pattern, altough it's not stated in the design.
The design is sound because it follows the problem statement and the instructions. I doubt if it follows the DRY principle while looping through each review, because that might be already done in the Expertiza. In terms of patterns, I think here it needs to use the factory pattern, altough it's not stated in the design.
The design is sound because it follows the problem statement and the instructions. I doubt if it follows the DRY principle while looping through each review, because that might be already done in the Expertiza. In terms of patterns, I think here it needs to use the factory pattern, altough it's not stated in the design.
The design is sound because it follows the problem statement and the instructions. I doubt if it follows the DRY principle while looping through each review, because that might be already done in the Expertiza. In terms of patterns, I think here it needs to use the factory pattern, altough it's not stated in the design.
The design is simple, they are adding an external JQuery library to achieve the intended sorting functionality and will be adding custom js to achieve further functionalities. As indicated earlier, not clear as to this custom js will be included in multiple pages.
The design is simple, they are adding an external JQuery library to achieve the intended sorting functionality and will be adding custom js to achieve further functionalities. As indicated earlier, not clear as to this custom js will be included in multiple pages.
The design is simple, they are adding an external JQuery library to achieve the intended sorting functionality and will be adding custom js to achieve further functionalities. As indicated earlier, not clear as to this custom js will be included in multiple pages.
The design is simple, although the ER diagram takes a little time to decipher since it is quite big
The design is simple, although the ER diagram takes a little time to decipher since it is quite big
The design is simple, although it could be better if it has more concrete examples.
The design is simple, although it could be better if it has more concrete examples.
The design is simple- the authors have discussed the changes like allowing instructor to change language of a course and adding multi-language support in the design. One suggestion is that the authors could have described the difference between static and dynamic strings used in this context. Especially since they specify that only static strings will be translated, but dynamic strings will remain in English.
The design is simple- the authors have discussed the changes like allowing instructor to change language of a course and adding multi-language support in the design. One suggestion is that the authors could have described the difference between static and dynamic strings used in this context. Especially since they specify that only static strings will be translated, but dynamic strings will remain in English.
The design is simple and really better than before.
The design is simple and easy to understand. Could be better if implementing some code level design.
The design is quite good. It clearly explains what needs to be done and where the changes will be made. However, the only suggestion would be to include more UML diagrams so that the design becomes more clear and understandable.
The design is quite good. It clearly explains what needs to be done and where the changes will be made. However, the only suggestion would be to include more UML diagrams so that the design becomes more clear and understandable.
The design is not clear enough. More details are needed.
The design is likely to increase the response time since API requests take time. It is essential to implement a system that keeps track of these API responses and disables this functionality when the API is unresponsive beyond and unreasonable time.
The design is likely to increase the response time since API requests take time. It is essential to implement a system that keeps track of these API responses and disables this functionality when the API is unresponsive beyond and unreasonable time.
The design is indeed very simple, because I don't know what it will actually entail to complete the last part.
The design is clear at a high level but lacks detail. The report described what the project is, but how will this feature be implemented?
The design is appreciable. There could be some more explanation and implementation details to it.
The design is ambiguous. The team only said they will make "some" changes to the current system but didn't state clearly what kind of changes they will make and how these changes will be done. For example, for the first step, we need more information about how the team will change the UI, the model and the controller or helper to realize what the team said.
The design is ambiguous. The team only said they will make "some" changes to the current system but didn't state clearly what kind of changes they will make and how these changes will be done. For example, for the first step, we need more information about how the team will change the UI, the model and the controller or helper to realize what the team said.
The design incorporates the basic functionalities required that include refactoring the review_mapping_controller file, to extrapolate it's features to the reports_controller file. It must also mention the procedure that the team would follow to move the reports from response_report method to the controller file.
The design incorporates the basic functionalities required that include refactoring the review_mapping_controller file, to extrapolate it's features to the reports_controller file. It must also mention the procedure that the team would follow to move the reports from response_report method to the controller file.
The design incorporates most of the functionality but it would be better if the actual design is discussed more clearly.
The design incorporates most of the functionality but it would be better if the actual design is discussed more clearly.
The design incorporates most of the functionality but it would be better if the actual design is discussed more clearly.
The design incorporates and clearly explains flow of diagram for class performance, but not much is included for Integration of review performance. suggestion : The topic of Integration of review performance can be talked about in brief .
The design incorporates and clearly explains flow of diagram for class performance, but not much is included for Integration of review performance. suggestion : The topic of Integration of review performance can be talked about in brief .
The design incorporates all the required functionalities. The team could have added Use cases or CRC cards to help convey which parts of code they plan to change and how. Overall the team conveys their objectives.
The design incorporates all the required functionalities. The team could have added Use cases or CRC cards to help convey which parts of code they plan to change and how. Overall the team conveys their objectives.
The design incorporates all the required functionalities. The team could have added Use cases or CRC cards to help convey which parts of code they plan to change and how. Overall the team conveys their objectives.
The design incorporated all of the functionality required.
The design includes test plan.On the testb plan provided it seems like they will test the functionalities. But nothing mentioned on how they will write.
The design includes test plan.On the testb plan provided it seems like they will test the functionalities. But nothing mentioned on how they will write.
the design includes test plan.Manual testing is emphasized more than automation testing. Moreover how automation testing will be done has not been described.
The design includes functionality, but does not explain how the data will flow.
The design includes all the functionalities required in the documentation: https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit# the main goal: to let the TA be able to review any team that has submitted the assignment is well stated. I think some screenshots or other pictures will be more helpful while explaining the functionalities.
The design includes all the functionalities required in the documentation: https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit# the main goal: to let the TA be able to review any team that has submitted the assignment is well stated. I think some screenshots or other pictures will be more helpful while explaining the functionalities.
The design includes adding a checkbox field to the view, and based on whether the box is checked or not, students are allowed to or not to do reviews in the second round. This is the main functionality of the project. However, the authors do not mention how they are planning to implement this.
The design includes a test plan. However the test plan has nothing related to tests or which test cases are going to be considered. It just explains the flow of how an instructor would reach the GitHub metrics data page.The team should at least mention which files are the test cases going to be written on and what functionalities are they going to test.
The design includes a test plan. However the test plan has nothing related to tests or which test cases are going to be considered. It just explains the flow of how an instructor would reach the GitHub metrics data page.The team should at least mention which files are the test cases going to be written on and what functionalities are they going to test.
The design includes a test plan. However the test plan has nothing related to tests or which test cases are going to be considered. It just explains the flow of how an instructor would reach the GitHub metrics data page.The team should at least mention which files are the test cases going to be written on and what functionalities are they going to test.
The design includes a brief test plan that lists three scenarios namely- the regular steps to update Course page to Hindi; checking if Edit Assignment page has also been translated and checking if other pages are translated. Some more test cases like checking if the change in language is reflected from a student login could have been included. The authors specify that Rspec and Capybara is used for testing the new feature.
The design includes a brief test plan that lists three scenarios namely- the regular steps to update Course page to Hindi; checking if Edit Assignment page has also been translated and checking if other pages are translated. Some more test cases like checking if the change in language is reflected from a student login could have been included. The authors specify that Rspec and Capybara is used for testing the new feature.
The design has not been stated explicitly so its difficult to comment only with the flow and UML diagrams whether it is appropriate and the best way to address the issue.
The design has explained the use cases with proper diagrams. Although more information is required to see any of the above-mentioned issues.
The design has explained the use cases with proper diagrams. Although more information is required to see any of the above-mentioned issues.
The design has explained the use cases with proper diagrams but design to implement them is not absent.
The design has explained the use cases with proper diagrams but design to implement them is not absent.
The design has been listed with a few test plans. I feel that there could be more tests included. Suggestion: Test plans need to be explained more and could provide the code if TDD approach is used.
The design has been listed with a few test plans. I feel that there could be more tests included. Suggestion: Test plans need to be explained more and could provide the code if TDD approach is used.
The design follows the basic functionality expected by proposing a bar graph solution for the select criteria. It could incorporate the rubrics that the team are planning to target. The flow in general does help to understand the project.
The design follows appropriate principles, but no design patterns have been used.
The design follows appropriate principles, but no design patterns have been used.
The design follows appropriate principles, but no design patterns have been used.
The design flow seems simple from the use case diagrams but I cannot review the principles part as it is not adequately explained.
The design flow seems simple from the use case diagrams but I cannot review the principles part as it is not adequately explained.
The design feels simple and not much different from the one I saw in Round 1, in my perspective because I have already reviewed the project in the previous round. But, to a new reviewer it might not be that direct at first as they need to understand the base of the project and the first phase of implementation which is covered in the wiki document of the previous project.
The design explains what all is to be implemented.However, there is no way it shows how it is going to be implemented.
The design explains what all is to be implemented.However, there is no way it shows how it is going to be implemented.
The design explains much of the detail about the problem but classes which will be affected or needs changes are not provided.
The design explains much of the detail about the problem but classes which will be affected or needs changes are not provided.
The design explains much of the detail about the problem but classes which will be affected or needs changes are not provided.
The design explains much of the detail about the problem but classes which will be affected or needs changes are not provided.
The design encompasses all the features in the specification. It only indicates supporting one more language, though, whereas the design document specifies any language. It seems out of the scope of the project, but what if you used the Google's Cloud Translation API to translate the static strings at run time? Then you could support almost any language. There might be licensing issues though.
The design does not include any kind of diagram. It would have been better if a flowchart or a class diagram could have been included in the document.
The design does include enough test plans. The team has provided the code screenshots for the same. Suggestion: Could have put links to the git code so that the wiki could have been short and precise.
The design does appear to be sound. The team has put most of the use cases, actors and explained them well. The screenshots of the UI are also present. Suggestion: Could have explained the implementation a bit more in bullet points.
The design does appear to be sound. The team has put most of the use cases, actors and explained them well. The screenshots of the UI are also present. Suggestion: Could have explained the implementation a bit more in bullet points.
The design does appear to be sound, which involves the Rust implementation of the Web IDL files namely- OffScreenCanvas and OffScreenCanvasContext2D Web IDL file. I look forward to the complete implementation of the project.
The design does appear to be simple, as they have not planned to modify any of the existing methods. Their new method will interact with Response, AssignmentQuestionnaire model, and then link the assignment to the review in the email. However, they have not mentioned if they have planned any data structure/variable to store the assignment link and pass it on to the method where email notification will be sent. But, i suppose that storing it in a variable will suffice. 
The design does appear to be simple, as they have not planned to modify any of the existing methods. Their new method will interact with Response, AssignmentQuestionnaire model, and then link the assignment to the review in the email. However, they have not mentioned if they have planned any data structure/variable to store the assignment link and pass it on to the method where email notification will be sent. But, i suppose that storing it in a variable will suffice. 
The design documents looks very crisp and clear. The work flow, proposed solutions and test plans are all listed. Good work. A screenshot or two of the test cases would have made it even better.
The design documents looks very crisp and clear. The work flow, proposed solutions and test plans are all listed. Good work. A screenshot or two of the test cases would have made it even better.
The design documents is well explained. the authors haven't mentioned any design pattern as such. The authors have clearly stated the proposed changes though. they could have added uml and crc cards.
The design documents is well explained. the authors haven't mentioned any design pattern as such. The authors have clearly stated the proposed changes though. they could have added uml and crc cards.
The design document was clear and concise; however, I would like to see more details on how routes.rb and the views will be edited to pull static strings from the en.yml file. The test plan section is not detailed enough.
The design document was clear and concise; however, I would like to see more details on how routes.rb and the views will be edited to pull static strings from the en.yml file. The test plan section is not detailed enough.
The design document was clear and concise; however, I would like to see more details on how routes.rb and the views will be edited to pull static strings from the en.yml file. The test plan section is not detailed enough.
The Design document states all the required things right from project design to test plan. The doc also specifies what all files will be changes along with how the functionality will look like once the project is deployed.  Suggestion: I feel like the test plan should have been a bit more elaborate. The team did mention one scenario. I feel like there could have been many more. But, as all the required things are present, I am giving this post full stars. 
The Design document states all the required things right from project design to test plan. The doc also specifies what all files will be changes along with how the functionality will look like once the project is deployed.  Suggestion: I feel like the test plan should have been a bit more elaborate. The team did mention one scenario. I feel like there could have been many more. But, as all the required things are present, I am giving this post full stars. 
the design document seems to be well written and detailed with respect to the objectives that need to be achieved. The team explains well the purpose and project design. they have included the database tables which will be modified. the team could add a testing plan to make the design document look complete.
The design document seems to be incomplete. The team have done a good job explaining their problem statement and have included their implementation in brief. If the team could build up on this and explain their implementation in more detail while adding a few diagrams to explain the work they plan to do would be great. Also the team have not mentioned any test cases they plan to implement.
The design document mentions nothing about evaluation of how long the API takes to return with a JSON.
The design document mentions nothing about evaluation of how long the API takes to return with a JSON.
The design document mentions nothing about evaluation of how long the API takes to return with a JSON.
The design document looks incomplete with only the introduction and project purpose sections that are mostly copy pasted from the problem statement provided. The proposed design seems to be limited to just an image. Also please consider changing the title 'Do Some Changes' to 'Problem Statement' or something more appropriate.
The design document is very simple and easy to read. Detailed explanation about the objective, the proposed plan for each objective, database schema and the user flow chart is defined clearly. The team could have added CRC cards to improve detailing about the code changes.
The design document is good which covers every aspects from project purpose to the test cases . However, there are some things which I found incomplete. In the problem statement they should first of mention a proper definition  of what is meant by self review as the term is a bit ambiguous and in the flow diagram they have mentioned the flow which represents the UI aspect of the the project and not the flow of how the task would be implemented and thus the flow diagram must be changed 
The design document is good which covers every aspects from project purpose to the test cases . However, there are some things which I found incomplete. In the problem statement they should first of mention a proper definition  of what is meant by self review as the term is a bit ambiguous and in the flow diagram they have mentioned the flow which represents the UI aspect of the the project and not the flow of how the task would be implemented and thus the flow diagram must be changed 
The design document is extremely well written. The project purpose is mentioned, although it looks similar to what is already mentioned in the Google design document. I would suggest the team to add their own understanding of the project, how this project is helpful to the system ? Why are these changes/project necessary ? Additionally I would also suggest the team to add a test plan section to their documentation. Any bugs fixed need to be tested thoroughly for edge cases as well as core fucntionality. 
The design document is easy to comprehend.Have explained in detail about the problem but not about the solution.
The design document is easy to comprehend.Have explained in detail about the problem but not about the solution.
The design document is easy to comprehend.Have explained in detail about the problem but not about the solution.
The design document is easy to comprehend.Have explained in detail about the problem but not about the solution.
The design document is comprehensive and detailed. However there are several parts where the team is not yet sure of what exactly they want to. The document misses out on mention which model/controller they will be making changes to.
The design document is comprehensive and detailed. However there are several parts where the team is not yet sure of what exactly they want to. The document misses out on mention which model/controller they will be making changes to.
The design document is comprehensive and detailed. However there are several parts where the team is not yet sure of what exactly they want to. The document misses out on mention which model/controller they will be making changes to.
The design document is comprehensive and detailed. However there are several parts where the team is not yet sure of what exactly they want to. The document misses out on mention which model/controller they will be making changes to.
The design document is comprehensive and covers most of the relevant topics. General problem statement is defined clearly and then divided into multiple specific subtasks which will be addressed by the project. The solution to the problem specifies the library that will be utilized in the implementation and classifies several types of sorting that needs to be done. This is followed by the files that will be modified in the scope of this project. The primary problem is that the document does not provide any extensive discussion about the possible design decisions and implementation strategies. It is stated that scripts have been added at the top of the file to sort the contents of table. I would suggest elaborating on the specifics, what functions are called and how will the javascript function be tied to the html table contents.
The design document is comprehensive and covers most of the relevant topics. General problem statement is defined clearly and then divided into multiple specific subtasks which will be addressed by the project. The solution to the problem specifies the library that will be utilized in the implementation and classifies several types of sorting that needs to be done. This is followed by the files that will be modified in the scope of this project. The primary problem is that the document does not provide any extensive discussion about the possible design decisions and implementation strategies. It is stated that scripts have been added at the top of the file to sort the contents of table. I would suggest elaborating on the specifics, what functions are called and how will the javascript function be tied to the html table contents.
The design document is comprehensive and covers most of the relevant topics. General problem statement is defined clearly and then divided into multiple specific subtasks which will be addressed by the project. The solution to the problem specifies the library that will be utilized in the implementation and classifies several types of sorting that needs to be done. This is followed by the files that will be modified in the scope of this project. The primary problem is that the document does not provide any extensive discussion about the possible design decisions and implementation strategies. It is stated that scripts have been added at the top of the file to sort the contents of table. I would suggest elaborating on the specifics, what functions are called and how will the javascript function be tied to the html table contents.
The design document has the required design and implementation plan. However, it isn't uploaded as a Wiki but as a PDF. This can be inconvenient for grading and is also a lot harder to modify for the team.
The design document has the required design and implementation plan. However, it isn't uploaded as a Wiki but as a PDF. This can be inconvenient for grading and is also a lot harder to modify for the team.
The design document has mentioned the issues which need to be fixed but why these issues are occurring and what will the solution be is missing.
The design document has mentioned the issues which need to be fixed but why these issues are occurring and what will the solution be is missing.
The design document has mentioned the issues which need to be fixed but why these issues are occurring and what will the solution be is missing.
The design document has mentioned the issues which need to be fixed but why these issues are occurring and what will the solution be is missing.
The design document has incorporated test plans, but they haven't been explained neatly. Only the skeleton for the tests has been provided, they've should have at least added one actual test code for the reviewer to verify.
The design document has incorporated test plans, but they haven't been explained neatly. Only the skeleton for the tests has been provided, they've should have at least added one actual test code for the reviewer to verify.
The design document has incorporated test plans, but they haven't been explained neatly. Only the skeleton for the tests has been provided, they've should have at least added one actual test code for the reviewer to verify.
The design document has clearly mentioned the problem statement and the subtasks that need to be performed. However, it looks a bit incomplete to me. Suggestions: Try adding what were your proposed approaches and a clear reasoning as to why did you choose a particular approach. You can simply remove the statement on Expertiza, as the professor has clearly advised us to avoid doing it.  
The design document has clearly mentioned the problem statement and the subtasks that need to be performed. However, it looks a bit incomplete to me. Suggestions: Try adding what were your proposed approaches and a clear reasoning as to why did you choose a particular approach. You can simply remove the statement on Expertiza, as the professor has clearly advised us to avoid doing it.  
The design document has clearly mentioned the problem statement and the subtasks that need to be performed. However, it looks a bit incomplete to me. Suggestions: Try adding what were your proposed approaches and a clear reasoning as to why did you choose a particular approach. You can simply remove the statement on Expertiza, as the professor has clearly advised us to avoid doing it.  
The design document gives details about the problem statement and the expected outcome of the project. The project design for enforcing the deadlines is missing from the wiki.
The design document gives a clear picture of the intended functionality of the project but it should have included test cases or what would be tested.
The design document gives a clear picture of the intended functionality of the project but it should have included test cases or what would be tested.
The design document gives a clear picture of the intended functionality of the project but it should have included test cases or what would be tested.
The design document does not include a test plan as testing requirement is very minimal since most changes are in view.
The design document describes the project's purpose and scope very well as well as the high-level design, but the details are lacking and the test plan section is missing.  
The design document describes the problem statement, the approach towards the goal and the flow expected for the given issue. Certain improvements can be made to the introduction by providing a brief overview of the project details instead of introducing the Expertiza environment. The team plans on updating the test plan after implementation.
The design document describes the problem statement and the expected flow. But the approach section doesn't have any technical implementation details. It just explains the flow that is going to be implemented. Test plan is missing.
The design document describes the problem statement and the expected flow. But the approach section doesn't have any technical implementation details. It just explains the flow that is going to be implemented. Test plan is missing.
The design document describes the problem statement and the expected flow. But the approach section doesn't have any technical implementation details. It just explains the flow that is going to be implemented. Test plan is missing.
The design document describes the problem statement and the expected flow. But the approach section doesn't have any technical implementation details. It just explains the flow that is going to be implemented. Test plan is missing.
The design document covers a high level view of the required functionality. The concepts and motivations behind OffScreenCanvasContext2D are extensively discussed. Moreover, the document provides the files that are going to be changed by the team. The main problem of this design is that there is no detailed explanation or examples of what the final expectations are. I would suggest giving more specific examples of how the proposed API should work and what may be the main challenges of the implementation.
The design document contains the project purpose and the changes proposed by the team. The design flow gives an overview of the bar graphs that the team plan to generate for selected criterias. The introduction section however should largely focus on the project description. 
The design document contains the project purpose and the changes proposed by the team. The design flow gives an overview of the bar graphs that the team plan to generate for selected criterias. The introduction section however should largely focus on the project description. 
The design document contains the project purpose and the changes proposed by the team. The design flow gives an overview of the bar graphs that the team plan to generate for selected criterias. The introduction section however should largely focus on the project description. 
The design document contains some extra information, such as a whole paragraph about expertiza, which I think can be skipped and more importance should be put on the design part.
The design document contains some extra information, such as a whole paragraph about expertiza, which I think can be skipped and more importance should be put on the design part.
The design document contains all the necessary sections but fails to provide adequate explanation of the changes to be made. The authors have done a good job at explaining the current scenario, also identified the code where the changes are to be made. They have identified the need of a new function and its purpose, but fail to provide a design of the intended changes, i.e. new functions or modifications in the functions, any need to use different variables etc. The authors have not added any changes relevant to the previous suggestions.
The design document contains all the necessary sections but fails to provide adequate explanation of the changes to be made. The authors have done a good job at explaining the current scenario, also identified the code where the changes are to be made. They have identified the need of a new function and its purpose, but fail to provide a design of the intended changes, i.e. new functions or modifications in the functions, any need to use different variables etc. The authors have not added any changes relevant to the previous suggestions.
The design document contains all the necessary sections but fails to provide adequate explanation of the changes to be made. The authors have done a good job at explaining the current scenario, also identified the code where the changes are to be made. They have identified the need of a new function and its purpose, but fail to provide a design of the intended changes, i.e. new functions or modifications in the functions, any need to use different variables etc. The authors have not added any changes relevant to the previous suggestions.
The design document contains all the necessary sections but fails to provide adequate explanation of the changes to be made. The authors have done a good job at explaining the current scenario, also identified the code where the changes are to be made. They have identified the need of a new function and its purpose, but fail to provide a design of the intended changes, i.e. new functions or modifications in the functions, any need to use different variables etc. The authors have not added any changes relevant to the previous suggestions.
The design document coherently describes the project details including it's purpose and design. This helps to perceive implementation being carried out by the team to achieve the project goals. However, it could be improved by providing the test cases that have been carried out to get to the present state. 
The design document coherently describes the project details including it's purpose and design. This helps to perceive implementation being carried out by the team to achieve the project goals. However, it could be improved by providing the test cases that have been carried out to get to the present state. 
The design document clearly specifies all the issues that are going to be addressed by this project. UI views are provided which help the reader to better understand the scope of the requirements. Moreover, the authors list the files that are going to be modified and the authors comprehensively describe how the jQuery tablesorter 2.0 library will be used for three types of sorting. One minor improvement would be to highlight the parts associated with introduced changes that link html table with the library for better readability.
The design document clearly specifies all the issues that are going to be addressed by this project. UI views are provided which help the reader to better understand the scope of the requirements. Moreover, the authors list the files that are going to be modified and the authors comprehensively describe how the jQuery tablesorter 2.0 library will be used for three types of sorting. One minor improvement would be to highlight the parts associated with introduced changes that link html table with the library for better readability.
The design document appears really easy to follow. A person who is new to the project can get the summary of what is happening just by reading and going through the design document.
The design doc outlines each step that needs to be implemented and a simple implementation plan
The design doc looks more or less complete given that it is just phase one of the project. I feel that some screenshots and a more detailed explanation would have been better.
The design doc is well written , but they haven't specified any test plans. They've explained the steps well, but haven't written anything about tests.
The design doc is well written , but they haven't specified any test plans. They've explained the steps well, but haven't written anything about tests.
The design doc is well written , but they haven't specified any test plans. They've explained the steps well, but haven't written anything about tests.
The design doc is well written , but they haven't specified any test plans. They've explained the steps well, but haven't written anything about tests.
The design doc is good and provides a clear picture about the objective of the project. However,It would also be nice to know what features would be tested in the test plan.
The design doc is disorganized and difficult to follow. There are no sections for project purpose, project design, or project testing. Consider adding these sections to give order to the document. Also, red front against a white background can be an eye strain for some.
The design doc is disorganized and difficult to follow. There are no sections for project purpose, project design, or project testing. Consider adding these sections to give order to the document. Also, red front against a white background can be an eye strain for some.
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions.
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions.
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions.
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions.
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions  
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions  
The design doc for now, specifies only the issues. No approach has been given yet on prospective solutions  
The design doc explains the project in detail. I would suggest that the description could be modified by removing redundancy to make the doc more succinct. Also what MVC files are being touched could have been mentioned.
The design doc explains the project in detail. I would suggest that the description could be modified by removing redundancy to make the doc more succinct. Also what MVC files are being touched could have been mentioned.
The design doc contains project purpose, project design and testing plan in the wiki. The wiki contains mock visualizations which make it easy to understand the project proposal and how are they planning to do. The design flow as a flow chart adds to the ease of understanding. The test plan explains about the technologies that they are planning to use for testing. Suggestion:  The test plan could say what should be done in testing than just the technologies to be used for a particular part of code. For ed, we plan to have a dummy small data and see if the graphs output the visualizations correctly, if the sum id being counted to 100% of the class participation etc... the stacked version could also have been represented for better understanding.
The design diagram is good and it would also be helpful to have a few screenshots of the current expertiza view.
the design design dicument seems to be written well and organised into nice categories so as to be easily readable. Though the team hasn't  made any changes since the last update. The team could have added a UML diagram and test plan in order to better explain the project.
the design design dicument seems to be written well and organised into nice categories so as to be easily readable. Though the team hasn't  made any changes since the last update. The team could have added a UML diagram and test plan in order to better explain the project.
the design design dicument seems to be written well and organised into nice categories so as to be easily readable. Though the team hasn't  made any changes since the last update. The team could have added a UML diagram and test plan in order to better explain the project.
The design covers the functionalities but there seem to be no concrete solutions for the same. Some more explanations was expected.
The design covers the functionalities but there seem to be no concrete solutions for the same. Some more explanations is expected.
The design covers the functionalities but there seem to be no concrete solutions for the same. Some more explanations is expected.
The design covers the functionalities but there seem to be no concrete solutions for the same. Some more explanations is expected.
the design covers all tthe major aspects well. I feel that the testing plan could be explained and elaborated in a much better way.
the design covers all tthe major aspects well. I feel that the testing plan could be explained and elaborated in a much better way.
The design changes appear simple and clear. Only suggestion to the team would be to explain the design choices a little more. As mentioned above, give an example of how, where to use Bootstrap and Jumbotron.
The design appears to be specific to the requirements. For this, they have used a UML design which basically explains the flow of the use-case. They have not used any principles or design patterns. However, there does not seem a need to use any, as their changes are limited to the html view and making a call to the tablesorter using JQuery. As per the document, the design does not make any redundant changes or unnecessary changes to the code. Thus, they have done a good job by optimizing the changes.
The design appears to be sound for most part of it. The linking between the different sections seems appropriate. The only issue I have is with the mock-up in the Design Details -> Second Change mock-up number 2. I think that the bar chart is being displayed for each and every day. I feel that is not only highly unnecessary but also would be very overwhelming for the instructor to process all this information because:-i) It is common knowledge that many students do not begin projects until a few days/weeks would have passed since the assignment is posted. So that would leave the initial few days of the bar chart empty with nothing valuable to show.ii) The duration of each project varies from project to project. Assignment 2 had a duration of about 20 -30 days. This would mean that there would be about 20 bar charts for each day which would be quite difficult for the TA/instructor to process for just one team let alone for so many other teams they need to evaluate. Suggestions: Instead of providing bar chart for each day aggregate it to a bar chart for each week or one in 5 days. And then maybe towards the deadline or like a week before the deadline you could switch to 1 barchart per day. OR Provide an option to switch between the scaling of time periods like a week, 5 days, 1 day etc.
The design appears to be sound for most part of it. The linking between the different sections seems appropriate. The only issue I have is with the mock-up in the Design Details -> Second Change mock-up number 2. I think that the bar chart is being displayed for each and every day. I feel that is not only highly unnecessary but also would be very overwhelming for the instructor to process all this information because:-i) It is common knowledge that many students do not begin projects until a few days/weeks would have passed since the assignment is posted. So that would leave the initial few days of the bar chart empty with nothing valuable to show.ii) The duration of each project varies from project to project. Assignment 2 had a duration of about 20 -30 days. This would mean that there would be about 20 bar charts for each day which would be quite difficult for the TA/instructor to process for just one team let alone for so many other teams they need to evaluate. Suggestions: Instead of providing bar chart for each day aggregate it to a bar chart for each week or one in 5 days. And then maybe towards the deadline or like a week before the deadline you could switch to 1 barchart per day. OR Provide an option to switch between the scaling of time periods like a week, 5 days, 1 day etc.
The design appears to be sound for most part of it. The linking between the different sections seems appropriate. The only issue I have is with the mock-up in the Design Details -> Second Change mock-up number 2. I think that the bar chart is being displayed for each and every day. I feel that is not only highly unnecessary but also would be very overwhelming for the instructor to process all this information because:-i) It is common knowledge that many students do not begin projects until a few days/weeks would have passed since the assignment is posted. So that would leave the initial few days of the bar chart empty with nothing valuable to show.ii) The duration of each project varies from project to project. Assignment 2 had a duration of about 20 -30 days. This would mean that there would be about 20 bar charts for each day which would be quite difficult for the TA/instructor to process for just one team let alone for so many other teams they need to evaluate. Suggestions: Instead of providing bar chart for each day aggregate it to a bar chart for each week or one in 5 days. And then maybe towards the deadline or like a week before the deadline you could switch to 1 barchart per day. OR Provide an option to switch between the scaling of time periods like a week, 5 days, 1 day etc.
The design appears to be sound for most part of it. The linking between the different sections seems appropriate. The only issue I have is with the mock-up in the Design Details -> Second Change mock-up number 2. I think that the bar chart is being displayed for each and every day. I feel that is not only highly unnecessary but also would be very overwhelming for the instructor to process all this information because:-i) It is common knowledge that many students do not begin projects until a few days/weeks would have passed since the assignment is posted. So that would leave the initial few days of the bar chart empty with nothing valuable to show.ii) The duration of each project varies from project to project. Assignment 2 had a duration of about 20 -30 days. This would mean that there would be about 20 bar charts for each day which would be quite difficult for the TA/instructor to process for just one team let alone for so many other teams they need to evaluate. Suggestions: Instead of providing bar chart for each day aggregate it to a bar chart for each week or one in 5 days. And then maybe towards the deadline or like a week before the deadline you could switch to 1 barchart per day. OR Provide an option to switch between the scaling of time periods like a week, 5 days, 1 day etc.
The design appears to be simple. However any code modifications is not mentioned yet as work project might not have started so far. it would be nice if a list of files to be modified were added.
The design appears to be simple. However any code modifications is not mentioned yet as work project might not have started so far. it would be nice if a list of files to be modified were added.
The design appears to be simple. However any code modifications is not mentioned yet as work project might not have started so far. it would be nice if a list of files to be modified were added.
The design appears to be perfect for now  except for the flow diagram
The design appears to be fairly simple. I think however there will be difficulty in implementing the GitHub metrics for latest data vs data before the submission deadlines.
The design appears to be fairly simple. I think however there will be difficulty in implementing the GitHub metrics for latest data vs data before the submission deadlines.
The design appears to be fairly simple. I think however there will be difficulty in implementing the GitHub metrics for latest data vs data before the submission deadlines.
The design appears to be fairly simple. I think however there will be difficulty in implementing the GitHub metrics for latest data vs data before the submission deadlines.
The design appears to be clear. The inclusion of a visual aid that shows how the control transfers from the view to controller to model and back to controller and view whenever the language is changed could have been shown to help readers better understand the design.  
The design appears to be clear. The inclusion of a visual aid that shows how the control transfers from the view to controller to model and back to controller and view whenever the language is changed could have been shown to help readers better understand the design.  
The design appears to be a bit complex, as it involves interactions with two controllers, viz. review_mapping_controller and report_controller. The changes should be checked thoroughly to not impact the existing methods of these controllers. Nevertheless, the design is complete in itself, and the authors have tried to keep it as modular and clear as possible. A very good job here!
The design appears to be a bit complex, as it involves interactions with two controllers, viz. review_mapping_controller and report_controller. The changes should be checked thoroughly to not impact the existing methods of these controllers. Nevertheless, the design is complete in itself, and the authors have tried to keep it as modular and clear as possible. A very good job here!
The design appears appropriate, but since it is shallow, it is hard to tell how sound it is. How will a user be prevented from requesting another review? Also, the naming seems to assume either one or two rounds. What about more than two rounds?
The description for the first issue is confusing, I am not very sure about what the function of the old version looks like. I am not sure what mean by the instructor under the instructor.
The description for the first issue is confusing, I am not very sure about what the function of the old version looks like. I am not sure what mean by the instructor under the instructor.
The description for the background, motivation and the deign is not very clear. The team can give more detailed introduction specific to this project.
The deployed setup cant be reached. The site is not up.
The deployed link is not accessible. The readme file describes the process for just admin login but not for the consequent steps. 
The deployed link is not accessible. The readme file describes the process for just admin login but not for the consequent steps. 
The deployed link application again goes to video only, if deployment isn't done they could've removed the link.
The deployed application was not available, so it cannot be accurately predicted if the code functions as intended. However the vedio links in the google drive show that the issues have been resolved through existing code. 
The deployed app on VCL doesnt work. Their testing plan on wiki is clear, although their app is not deployed / screencase is available, so not sure how to test the functionality.
The dependencies are not handled properly. It errors out when we try to delete parent record like company or house . Use of Dependent destroy and proper mentioning on belongs to and has many relationship in all models should solve this issue
The dependencies are not handled properly. It errors out when we try to delete parent record like company or house . Use of Dependent destroy and proper mentioning on belongs to and has many relationship in all models should solve this issue
The dependencies are not handled properly. It errors out when we try to delete parent record like company or house . Use of Dependent destroy and proper mentioning on belongs to and has many relationship in all models should solve this issue
The deign gives some use cases for this project, but compared to all the functionality required for this project, it is not enough. More detailed description about the design of other things need to be added, such as model, view.
The deign gives some use cases for this project, but compared to all the functionality required for this project, it is not enough. More detailed description about the design of other things need to be added, such as model, view.
The Debug statements have not been removed.  Code Climate suggested Changes still are incomplete in the PR
The Debug statements have not been removed.  Code Climate suggested Changes still are incomplete in the PR
The DB design is incomplete. Although it has the correct 1-to-n or n-to -n relationship, it doesn't have any kings of validation. 
The database schema, especially for the login / signup functionality is very well implemented, and includes lots of features that weren't asked for at the first place. So the extra hard-work is very well appreciated. The db design is very cohesive and seems fool-proof. The rest of the programs and the functionalities follow most of the principles for good ruby on rails coding practices. But, the one thing I find missing was the lack of proper documentation within the code. Given the short time frame, not having extensive documentation and comments within the code is excusable, but there were certain points where I had to go through the whole code to realize what;s happening, which could have been avoided if there was proper commenting inside the code. 
The database schema only consisted of the users table, and the CRUD functionalities on the MVC related to it. Due to the less amount of content to review, a proper justification for this question is a bit tough. Even though the amount of code was less, but it followed many of the good coding practices of ruby on rails, except a few. For example, he code lacked any sort of documentation or comments. It makes it tough for the reviewer or any other programmer to make sense of the code. But apart from that, the practices seemed fine. The variables were named appropriately, functions were named effectively, and the classes were defined definitely. 
The database handles all the relationships very well. On the downside, there is a flaw in database design - keeping a single user table and single role type means the same email address can not be used for both realtor and house hunter profiles. You can either create separate tables or more than one columns to determine if the same email has more than one role. 
The current tests written are good but it would be good if the team had pointed out the corner cases as wel such as - what happens if the deadline for self-review is exceeded? Does that mean the peer-review scores cannot be seen? Or is a default score of 0 is set?
The current tests written are good but it would be good if the team had pointed out the corner cases as wel such as - what happens if the deadline for self-review is exceeded? Does that mean the peer-review scores cannot be seen? Or is a default score of 0 is set?
The current explanation talks only about changes in the view. It would be better if the solution is explained at greater depth.
The current explanation talks only about changes in the view. It would be better if the solution is explained at greater depth.
The current explanation talks only about changes in the view. It would be better if the solution is explained at greater depth.
The current document does not include a visualization tool- inclusion of such a tool would have made the document more readable.  Nevertheless the link to the Wiki of the previous document includes a flow diagram that clearly outlines the code flow of how the control flows from the incorporation of OffScreenCanvas web IDL file to its Rust implementation in OffScreenCanvas.rs, to the DOM implementation and finally to the renderer. 
The coverage is actually decreased.
The coverage is actually decreased.
The coverage has increased from ~77% to ~94% which is impressive. However, the previous issue was that #scores method of Participant was not called because the object that is being tested in this project is an instance of AssignmentParticipant class. This problem was handled by commenting out the #scores method of AssignmentParticipant so that Participant #scores method will be called instead. This breaks other parts of the code which depend on AssignmentParticipant's #scores implementation. The solution to this problem is to either define a new Participant class instance in the factory or to define it in the test code itself.
The coverage has increased from ~77% to ~94% which is impressive. However, the previous issue was that #scores method of Participant was not called because the object that is being tested in this project is an instance of AssignmentParticipant class. This problem was handled by commenting out the #scores method of AssignmentParticipant so that Participant #scores method will be called instead. This breaks other parts of the code which depend on AssignmentParticipant's #scores implementation. The solution to this problem is to either define a new Participant class instance in the factory or to define it in the test code itself.
The coverage has increased by 6.3%. The team has added new tests that check whether Assignments is absent in the menu in default view and there is an option to Open Student View. The tests also check whether there is a close button present when the instructor is in the students view, also it checks whether the Assignment is present by default in the student view or not. 
The coverage has decreased by 0.04%. The team has added some tests which were not present in the initial submission. 44.9% of the changed lines are covered
The coverage has decreased as per the tools that run by default on raising pull request by 13.6 %
The coverage has decreased as per the tools that run by default on raising pull request by 13.6 %
The coverage has actually decreased.
The coverage could be increased to %100, but this is a great start.
The coverage could be higher.
The coverage could be higher.
The controller and model tests were not updated.
The controller and model tests were not updated.
The content is good and explanatory but the writing styles needs to be improved as there is inconsistency in the font size and font type.
The complexity is again a big unknown to me, as they have kept the algorithm as a black box. It is unclear where the algorithm changes are to be implemented, if it is in a controller, and if yes, in which controller. I suggest the authors to provide internal details of the algorithm in order to understand their proposed solution better. As of now, I am clear about their input and output formats, however I would like to know which functions do they interface with.
The complexity is again a big unknown to me, as they have kept the algorithm as a black box. It is unclear where the algorithm changes are to be implemented, if it is in a controller, and if yes, in which controller. I suggest the authors to provide internal details of the algorithm in order to understand their proposed solution better. As of now, I am clear about their input and output formats, however I would like to know which functions do they interface with.
The complexity is again a big unknown to me, as they have kept the algorithm as a black box. It is unclear where the algorithm changes are to be implemented, if it is in a controller, and if yes, in which controller. I suggest the authors to provide internal details of the algorithm in order to understand their proposed solution better. As of now, I am clear about their input and output formats, however I would like to know which functions do they interface with.
The commits were spread throughout the project duration, however the commit messages could have been more descriptive. The team still made commit changes in round 2 which shows they have proceeded with development. 
The commits were not scattered throughout the development cycle, rather they were concentrated on a particular couple of days, which indicate that the project was a last minute rush, rather than a pre-planned and well executed one. 
The commits were not regular. The development cycle seems to be a rushed one, since the commits are too concentrated near the deadline, and too sparse in between them.
The commits were not regular. The development cycle seems to be a rushed one, since the commits are too concentrated near the deadline, and too sparse in between them.
The commits were done before the first deadline but unfortunately I don't see any commits during the second round or the pull request might not have been updated.
The commits show contribution by only 1 author. The code does not smell DRY.
The commits are many and have been done in round 2 as well. The commits weren't evenly spaced through the development cycle.  
The commits are many and have been done in round 2 as well. The commits weren't evenly spaced through the development cycle.  
The comments were sparse. Maybe, coming up with a few words before every method would make the project more understandable.
The command to run the test cases is given in the wiki. Better thing would have been to provide the screenshots of the test cases and git links to the code to make the wiki more concise and well explained.
The command to run the test cases is given in the wiki. Better thing would have been to provide the screenshots of the test cases and git links to the code to make the wiki more concise and well explained.
The code you have added in the write up isn't indented, its hard to understand this way. You need to make the write up more readable.
The code you have added in the write up isn't indented, its hard to understand this way. You need to make the write up more readable.
The code written is following the Ruby on rails guidelines. The variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. In some cases they could have used a little more descriptive names for variables for example inside app/helpers/student_task_helper.rb  they could have used background_colour instead of rtn as a variable name in the due_date_color() method. It will become more readable for the reviewers to understand the functionalities. Also they have added to few commits for the amount of code change that they have done. The commit messages  are not descriptive enough about what changes have the authors committed. 
The code written is following the Ruby on rails guidelines. The variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. In some cases they could have used a little more descriptive names for variables for example inside app/helpers/student_task_helper.rb  they could have used background_colour instead of rtn as a variable name in the due_date_color() method. It will become more readable for the reviewers to understand the functionalities. Also they have added to few commits for the amount of code change that they have done. The commit messages  are not descriptive enough about what changes have the authors committed. 
The code written is following the Ruby on rails guidelines. The variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. In some cases they could have used a little more descriptive names for variables for example inside app/helpers/student_task_helper.rb  they could have used background_colour instead of rtn as a variable name in the due_date_color() method. It will become more readable for the reviewers to understand the functionalities. Also they have added to few commits for the amount of code change that they have done. The commit messages  are not descriptive enough about what changes have the authors committed. 
The code written by the team includes the basic functionality needed to run the test cases. Some improvements might include keeping a function short like diving the import function into multiple contexts or reducing reduntant code by using the mock built.
The code written by the team includes the basic functionality needed to run the test cases. Some improvements might include keeping a function short like diving the import function into multiple contexts or reducing reduntant code by using the mock built.
The code works well for edge cases as well. As they mentioned in the wiki sometimes the app throws an error (in English or SQL). It would be nice to know if they could debug a little and find out in which case the SQLException is thrown and in which case the English (handled) error is thrown.
The code was written good enough. THere were problems with indentation. I have seen some improvement compared to the last round.
The code was written good enough. THere were problems with indentation. I have seen some improvement compared to the last round.
The code was well-written and no problem with long or bad names. But, no comments were present. Commenting would have made the code easier to understand. Also, refactoring was not done.
The code was well written. Although there were some problems with codeclimate identations. The team have made changes to fix those issues.
The code was well written. Although there were some problems with codeclimate identations. The team have made changes to fix those issues.
The code was well written. Although there were some problems with codeclimate identations. The team have made changes to fix those issues.
The code was well written during the last review too, it only missed comments. A few comments have been added but still a major portion of code remains uncommented.  Other than that, the code is nicely written, follows guidelines and variable names are appropriate.
The code was well written during the last review too, it only missed comments. A few comments have been added but still a major portion of code remains uncommented.  Other than that, the code is nicely written, follows guidelines and variable names are appropriate.
The code was well written during the last review too, it only missed comments. A few comments have been added but still a major portion of code remains uncommented.  Other than that, the code is nicely written, follows guidelines and variable names are appropriate.
The code was well written and there was no issue with the naming or functions used. However, a few comments could be added to the current_team,new_team and team to make the code more readable.
The code was well written and there was no issue with the naming or functions used. However, a few comments could be added to the current_team,new_team and team to make the code more readable.
The code was well written and looks dry. However, a few comments could be added to make the code more understandable. 
The code was not much changed after the first round. They added a few more sanitation check and rspec. Functions are not long enough and understandable.
The code was committed throughout the project. The code was committed in the second round too.
The code was already well-written . The team did a great work in following coding best practices. The team should have include code comments to make the code easier to understand.
The code was already very well written. But the author did not made any changes after the first round. The lack of proper commenting still remains. 
The code was already very well written. But the author did not made any changes after the first round. The lack of proper commenting still remains. 
The code us good as mentioned in the previous rounds, except the lack of proper commenting. The authors did not improve the code from the previous rounds in this aspect.
The code us good as mentioned in the previous rounds, except the lack of proper commenting. The authors did not improve the code from the previous rounds in this aspect.
The code there seems to be well organized. But the problem is that many functionalities are missing and there aren't too much code in models and controllers.
The code there seems to be well organized. But the problem is that many functionalities are missing and there aren't too much code in models and controllers.
The code there seems to be well organized. But the problem is that many functionalities are missing and there aren't too much code in models and controllers.
The code that is written has long functions. Few names do not really provide the gist of what the function is intending to perform
The code that is written has long functions. Few names do not really provide the gist of what the function is intending to perform
The code segments in the report seem fine. The pull request and linked fork do not show the changes though, so I can't verify in the source code.
The code segments in the report seem fine. The pull request and linked fork do not show the changes though, so I can't verify in the source code.
The code segments in the report seem fine. The pull request and linked fork do not show the changes though, so I can't verify in the source code.
The code seems to work for basic required functionality. Need to add more number of edge cases with test results where there is a possibility of a failure and a look into the work around is required.
The code seems to set up a large list of factories only to then in many cases make these redundant by creating mocks for each test case. It is unclear what the code is trying to do and many of the test cases are large with many mocks with stubbed methods. It would be helpful if explanation for the code was given. When using factories it is generally unnecessary to stub the all the methods of these factories as they are in fact actual instances of the class. The code not very DRY. In many the cases the mocks and stubbed methods could be moved to a before_all or before_each block. 
The code seems to set up a large list of factories only to then in many cases make these redundant by creating mocks for each test case. It is unclear what the code is trying to do and many of the test cases are large with many mocks with stubbed methods. It would be helpful if explanation for the code was given. When using factories it is generally unnecessary to stub the all the methods of these factories as they are in fact actual instances of the class. The code not very DRY. In many the cases the mocks and stubbed methods could be moved to a before_all or before_each block. 
The code seems to same as before. nothing new has been added.
The code seems to have followed standard practices. But there is not a lot of code to begin with
The code seems to have followed standard practices. But there is not a lot of code to begin with
The code seems to follow good Ruby on Rails Coding practices. The implemented code is DRY. They could have increased commenting  by making comments more descriptive.  The comments for say a particular function could have included  the input arguments, their data types and the return value and its data type if any. For the second round they haven't added any new commits and haven't changed their implementation.
The code seems to follow good Ruby on Rails Coding practices. The implemented code is DRY. they could have increased commenting  by making comments more descriptive.  The comments for say a particular function could have included  the input arguments, their data types and the return value and its data type if any. But overall it looks to be good commenting coverage.
The code seems to be working good from the screencast. My biggest concern was, if the link to deployment was given, it would have been easier to try the features. Other than that, capybara test cases could have made it strong to go to the production server. If they feature did work the way as it was shown in the screencast, it can be deployed to production.
The code seems to be working good from the screencast. My biggest concern was, if the link to deployment was given, it would have been easier to try the features. Other than that, capybara test cases could have made it strong to go to the production server. If they feature did work the way as it was shown in the screencast, it can be deployed to production.
The code seems to be fine but due to lack of comments a little hard to understand. It would have been better if there were some comments in get_due_date_data and addQuestionnaireTableRow.
The code seems to be fine but due to lack of comments a little hard to understand. It would have been better if there were some comments in get_due_date_data and addQuestionnaireTableRow.
The code seems ready to be deployed as the features are working as intended but it would have been better if the code was refactored.
The code seems good enough to proceed, but with few more test runs as I can see alot of code added.
The code seems good enough to proceed, but with few more test runs as I can see alot of code added.
The code seems clear and dry. However, a few comments would have made the code more readable.
The code seemed to be well written in the first round. But I dont see changes done in round 2. The github link provided shows last commit for Oct 21. Though I see that there are change made in the wiki which were required and are done well.
The code quality is well written. Many of the functions are doing only one thing at a time. The only limitation I could observe is lack of comments in controller as well model. 
The code quality is well written. Many of the functions are doing only one thing at a time. The only limitation I could observe is lack of comments in controller as well model. 
The code quality is good however, it can be improved significantly. The code lacks proper comments and contains many if else statements. They could have been refactored and avoided.
The code quality is good however, it can be improved significantly. The code lacks proper comments and contains many if else statements. They could have been refactored and avoided.
The code quality is good however, it can be improved significantly. The code lacks proper comments and contains many if else statements. They could have been refactored and avoided.
The code quality is generally good. There are several places with large blocks of commented out code that should be removed. Functions are small however, and models are used properly where they should be.
The code quality is generally good. There are several places with large blocks of commented out code that should be removed. Functions are small however, and models are used properly where they should be.
The code quality is fairly standard, the code practices DRY principles fairly well. I would suggest creating new controllers for managing house hunters and realtors from admin profile since, on creating a new realtor/house hunter the admin logs out and this seems like stop gap fix. 
The code quality is fairly standard, the code practices DRY principles fairly well. I would suggest creating new controllers for managing house hunters and realtors from admin profile since, on creating a new realtor/house hunter the admin logs out and this seems like stop gap fix. 
The code quality is fairly standard, the code practices DRY principles fairly well. I would suggest creating new controllers for managing house hunters and realtors from admin profile since, on creating a new realtor/house hunter the admin logs out and this seems like stop gap fix. 
The code quality in this application looks good. I didn't see any extremely large methods, views were clean and simple, and controllers had one-to-one mappings with application-level functions.  I do think I would encourage this team to consider using scopes in their models next time as I did not see many here.
The code passes for the Travis build as well as Danger Bot. However, it fails for code climate with 3 issues yet to be fixed. In totality, the pull request does satisfy the need to pass the required builds.
The code passes almost all Travis CI . However, there are really few which fail.
The code passes almost all Travis CI . However, there are really few which fail.
The code on Github is clean and readable. The controller actions are specific and do only the tasks that are required. The naming convention used is also intuitive. The interest list functionality has not been implemented.
The code on Github is clean and readable. The controller actions are specific and do only the tasks that are required. The naming convention used is also intuitive. The interest list functionality has not been implemented.
The code on Github is clean and readable. The controller actions are specific and do only the tasks that are required. The naming convention used is also intuitive. The interest list functionality has not been implemented.
The code on Github has 1-to-n relationship between real estate company and realtor. It also facilitates realtors to create real estate companies of their own. My doubt is whether the realtor can view, update and delete the real estate company created by him, because I could not find such a functionality implemented in the application as well as the code.
The code on Github has 1-to-n relationship between real estate company and realtor. It also facilitates realtors to create real estate companies of their own. My doubt is whether the realtor can view, update and delete the real estate company created by him, because I could not find such a functionality implemented in the application as well as the code.
The code looks very clean. I am a big fan of the set up of the describe/context/it nesting that clearly defines the test cases' purpose. I am confused why there are two classes being tested in this spec. Is the purpose of this class to test Node or to test Menu? If two classes are being tested they should perhaps have separate rspec files to make clear the point. However, the actual syntax and implementation of your tests is beautiful.
The code looks to be ready to be deployed on production, but would appreciate to have a few more tests run prior to it.
The code looks great. It's all scaffolding and really lean view modifications.
The code looks great. It's all scaffolding and really lean view modifications.
The code looks good with the standards followed. The changes are explained in the wiki for the same. Also, the video has been uploaded but doesnt seem to have the audio with it.
The code looks good but it has slightly long methods. The naming used also appears appropriate.
The code looks good but it has slightly long methods. The naming used also appears appropriate.
The code looks good and it could be deployed onto the production server. However, there could be a situation where even though a random num(0-1000) is assigned to each team there might be a chance that two teams get the same name.
The code looks good and it could be deployed onto the production server. However, there could be a situation where even though a random num(0-1000) is assigned to each team there might be a chance that two teams get the same name.
the code looks fine. The only concern is related to the CI build which is failing at the moment. Some of the tests are failing because of the change.   
the code looks fine. The only concern is related to the CI build which is failing at the moment. Some of the tests are failing because of the change. 
the code looks fine. The only concern is related to the CI build which is failing at the moment. Some of the tests are failing because of the change. 
the code looks fine. The only concern is related to the CI build which is failing at the moment. Some of the tests are failing because of the change.
The code looks comprehensive to a good extent with the usage of comments and clear naming. 1. Adding the not interested feature is a plus point. 2. The naming is done well with attention to the singular and plural nouns for models and controllers. 3. No problem with respect to the coding clarity. 
The code looks clean. Though I don't understand why you have used this line in the test for responses " puts participant.response_maps". I feel some of the code that isnt needed is commented out. Please remove this code as it was mentioned in the details. Naming and cnventions seem to be fine.
The code looks clean. Though I don't understand why you have used this line in the test for responses " puts participant.response_maps". I feel some of the code that isnt needed is commented out. Please remove this code as it was mentioned in the details. Naming and cnventions seem to be fine.
the code looks clean . However, some of the comments are not provided for the test cases. apart from this the naming and the conventions seem to be fine
the code looks clean . However, some of the comments are not provided for the test cases. apart from this the naming and the conventions seem to be fine
The code itself is fairly clean and readable. The class ListOfPotentialBuyers is poorly named, and I'm not sure you need a separate class for it.
The code itself appears to be very clean. The lack of scaffolding (or the stripped down scaffolding that it presents) means there's a lot less dead code in the files. All the indentation and variable names appear to follow convention as well. This cleanliness, on further inspection, appear to stem from the fact that the application frequently does not support needed functionality. The code that's there is clean though.
The code itself appears to be very clean. The lack of scaffolding (or the stripped down scaffolding that it presents) means there's a lot less dead code in the files. All the indentation and variable names appear to follow convention as well. This cleanliness, on further inspection, appear to stem from the fact that the application frequently does not support needed functionality. The code that's there is clean though.
The code is written very well. There's some minor issues (sometimes there's duplicate "allow"s. But actually in the same "describe"  just one "allow is enough. On the other hand, there's no bad name, no hard-to-understand functions. Comments can be added just a little bit more to help people understand. Some comments are not supposed to be there (such as discarded codes)
The code is written very well. There's some minor issues (sometimes there's duplicate "allow"s. But actually in the same "describe"  just one "allow is enough. On the other hand, there's no bad name, no hard-to-understand functions. Comments can be added just a little bit more to help people understand. Some comments are not supposed to be there (such as discarded codes)
The code is written very cleanly. The only slight problem I found was the "search" method in Houses_controller is too long as it has a lot of nested if statements.
The code is written very cleanly. The only slight problem I found was the "search" method in Houses_controller is too long as it has a lot of nested if statements.
The code is written in a modular way but there are some errors as shown by the CI. If these are fixed, it can be merged with the main project
The code is written in a modular way but there are some errors as shown by the CI. If these are fixed, it can be merged with the main project
The code is written in a good manner, but as I see it from this submission no updates have been implemented. Including the absence of attaching a wiki page an unresolved error even from last time. So, its unclear to see what changes have been made from that date to this. 
The code is written in a good manner, but as I see it from this submission no updates have been implemented. Including the absence of attaching a wiki page an unresolved error even from last time. So, its unclear to see what changes have been made from that date to this. 
The code is written in a good manner, but as I see it from this submission no updates have been implemented. Including the absence of attaching a wiki page an unresolved error even from last time. So, its unclear to see what changes have been made from that date to this. 
The code is written in a clean and readable way.
The code is written aptly and it does what it is supposed to do. However, code comments are missing.
The code is written aptly and it does what it is supposed to do. However, code comments are missing.
The code is well-written, follows code standards. The naming conventions are followed. However, in some parts code is not formatted. 
The code is well-written, follows code standards. The naming conventions are followed. However, in some parts code is not formatted. 
The code is well-written, follows code standards. The naming conventions are followed. However, in some parts code is not formatted. 
The code is well-written with proper comments. But none of the suggestions from the previous review has been implemented. Teams are provided reviews so that they can further improve upon the code.
The code is well-written with proper comments. But none of the suggestions from the previous review has been implemented. Teams are provided reviews so that they can further improve upon the code.
The code is well-written and there are no bad names or long functions. The coding style is also pertaining to the Ruby standards. Although it would be good if they could work in making the code more 'DRY' by making suggested changes to the code.  
The code is well-written and follows good programming style, has good naming and is DRY. The team has not implemented any suggested changes since there has been no commit after first round.
The code is well-structured, the team uses context and it properly to separate different cases and using each to make the code DRY. However, it seems the object used to test are not all stored in the factories file properly.
The code is well-structured, the team uses context and it properly to separate different cases and using each to make the code DRY. However, it seems the object used to test are not all stored in the factories file properly.
The code is well written. The dummies created are given proper and relevant names. However, I can not see much comments. I would suggest that inclusion of more comments would have enhanced the readability and efficiency of the project. 
The code is well written. It follows DRY principle. It would have been better if more comments were added.
The code is well written. I noticed the controller for inquiries is well written but it is unclear how to access all those functionalities from the front-end.
The code is well written. I noticed the controller for inquiries is well written but it is unclear how to access all those functionalities from the front-end.
The code is well written. I noticed the controller for inquiries is well written but it is unclear how to access all those functionalities from the front-end.
The code is well written. Although as suggested earlier, the team has not added comments to the code. In the wiki page, the team displays of how the code was before and after. But, I still feel this is not adequate information for a layman to be able to follow line by line what the code does. Adding comments in the code for future projects would be my best suggestion. Or, as an alternative, briefly explain in a line or 2 as to what the code does.
The code is well written, tested and documented and hence I think it should be ready to be deployed. 
The code is well written, follows ruby guidelines and variables are aptly named. However, the changes are extensive and there are virtually no comments. The code can do with significantly more comments to explain what is being done.
The code is well written, follows ruby guidelines and variables are aptly named. However, the changes are extensive and there are virtually no comments. The code can do with significantly more comments to explain what is being done.
The code is well written, follows ruby guidelines and variables are aptly named. However, the changes are extensive and there are virtually no comments. The code can do with significantly more comments to explain what is being done.
The code is well written with proper naming conventions and proper size of functions. However, i would only suggest that they should include proper comments so that it increases the readability of the code.
The code is well written but it can use comments to help explain what the code is doing. For e.g. the code below is hard to understand: if quesparams[:assignment][:directory_path] == "" and quesparams[:check_validate] == "on" quesparams[:assignment][:directory_path] = "#{quesparams[:assignment][:name]}_#{quesparams[ :assignment][:id]}_#{quesparams[:assignment][:course_id]}" end
the code is well written but few more comments before every function could have made it easier to understand the code.
the code is well written but few more comments before every function could have made it easier to understand the code.
The code is well written and very understandable Newly defined function parameter name is self-explanatory Suggestion: 1. Rubric Array can be declared outside the function, so as to follow DRY principle.  2. Meaningful comments can be included for the function definition in tree_display.jsx, explaining what does the tree_display represent
The code is well written and follows all the DRY problems.  The team has changed the files based on previous reviews and to make it more DRY comments before the methods that they created gave a better understanding what each code does. // function for showing warning when number of slots is set as zero   Changing the names that suited the functionality more, is appreciated. addCreateTopicSection() appendCreateTopicSection()  
The code is well written according to the video. Since there's no github submission, I went to the sumitter in the pull request to check his work. It seems that the code is relatively good. There's some minor indentation and alignment issue. And not much explaining comments. But other than that, no bad name, no long function.
The code is well written according to the video. Since there's no github submission, I went to the sumitter in the pull request to check his work. It seems that the code is relatively good. There's some minor indentation and alignment issue. And not much explaining comments. But other than that, no bad name, no long function.
The code is well structured. Could have added more comments for easy understanding of the code. The functions are not long.
The code is well structured. Could have added more comments for easy understanding of the code. The functions are not long.
The code is well formatted and follows good Ruby and Rails practice. Except for a few missing functionalities, I found the logic very neat.
The code is well formatted and follows good Ruby and Rails practice. Except for a few missing functionalities, I found the logic very neat.
The code is visually stunning. I am a great fan of the readibility. There are some instances of redundancy in the #controller_action / #site controller tests. Also in the #get_item/#get_menu. Would be easy to pull those out into a begin block. Otherwise, very lovely.
The code is very well written, there are no bad names or long and complicated functions. However, there are no proper comments that have been provided for the viewers understanding. One suggestion would be to include some comments for better understanding.
The code is very well written, there are no bad names or long and complicated functions. However, there are no proper comments that have been provided for the viewers understanding. One suggestion would be to include some comments for better understanding.
The code is very well written, properly organised and good architecture. No repetition. Cons Application logic written in controllers, for example, house_controller, which can be ported to the respective models.
The code is very well written, properly organised and good architecture. No repetition. Cons Application logic written in controllers, for example, house_controller, which can be ported to the respective models.
The code is very well written as previously said. However, some test cases are still not passing and that may be troublesome if deployed onto production server. It would be a really nice opportunity for students in further classes take this up and improve the work so that they can complete the work which was left incomplete due to time constraints.
The code is very neat and easy to read, but i can tell it is the auto generated code from scaffold. 
The code is very modular and clean. There is no bad naming in the project, naming conventions are followed. All the methods are concise. There are not many nested blocks and the code is clear and easy to understand. However the functionality of creating a house is written under inquiry which makes it difficult for the user to comprehend the flow of the website.
The code is structured well and is straightforward to follow. Test blocks are succinct and contain one assertion per block. The project has been greatly improved since the 1st round. Naming and indentation issues have been fixed. Furthermore, significant work has been done for the code to be consistent with Code Climate. One suggestion would be to elaborate on the #score method. Decomposition could be used to extract the common set up into a separate before(:each) block and test expectations using multiple 'it' statements as opposed to having everything asserted in one 'it' block.
The code is structured well and is straightforward to follow. Test blocks are succinct and contain one assertion per block. The project has been greatly improved since the 1st round. Naming and indentation issues have been fixed. Furthermore, significant work has been done for the code to be consistent with Code Climate. One suggestion would be to elaborate on the #score method. Decomposition could be used to extract the common set up into a separate before(:each) block and test expectations using multiple 'it' statements as opposed to having everything asserted in one 'it' block.
The Code is structured as per basic rails norms. The CRUD operations operations actions could have followed the usual norms than custom actions defined. The routes config could have been more efficiently defined using match than defining each routes separately.
The code is simple and easy to understand. There are a lot of code climate suggested changes which needs to be completed before the code will be ready to merge  
The code is running. However, few functionalities are not there.
The code is really well written and follows Ruby Style Guide, except some areas.
The code is really well written , there are no bad names. The functions are also easy to understand. However, I would suggest them to include more comments in the code so that it becomes clear for the person reading the code that what the function and changes are all bout.
The code is ready to be deployed on production server with few caveats. At some places values and logic is hardcoded. This project would be a really good starting point for further work.
The code is ready to be deployed on production server with few caveats. At some places values and logic is hardcoded. This project would be a really good starting point for further work.
The code is readable and no function is too long. Suggestion: The impersonating_as_admin? and impersonating_as_ta? function uses the same session variable, so you can try to declare it above these functions and reuse it to follow DRY principle
The code is readable and easy to understand, but at the same time it is not effectively modularized.There are seveal methods which perform the functions of other methods too, which could have better been modularised Apart from that, 
The code is properly written with good Ruby practices, however, no comments are mentioned.
The code is properly written with good Ruby practices, however, no comments are mentioned.
The code is not commented which they can for future developers to understand better. 
The code is nicely written overall. It follows Ruby guidelines and DRY principle. It would be better if more comments are written.
The code is nicely written overall. It follows Ruby guidelines and DRY principle. It would be better if more comments are written.
The code is nicely written 3 More comments needed 5 Not DRY in one place (rubric array definition)   Suggestion:   1. Simply define a getRubricArray function to return the rubric array wherever required.
The code is much clean and readable. All the functions are short and crisp with proper indentation . However, mostly they have tried to embed the functionalities which could have been separate to be in the basic crud functions provided by rails. for eg. here , they haven't maintained a different function for the potential buyer , instead they have used a hash for it which is embedded in the show functionality of the house controller
The code is much clean and readable. All the functions are short and crisp with proper indentation . However, mostly they have tried to embed the functionalities which could have been separate to be in the basic crud functions provided by rails. for eg. here , they haven't maintained a different function for the potential buyer , instead they have used a hash for it which is embedded in the show functionality of the house controller
The code is mostly clear and easy to follow. Test blocks are succinct and contain one assertion per block. One exception is the #score method. It could be improved by decomposition. The code for set up could be extracted into a separate before(:each) block and multiple 'it' statements could be used for testing expectations.
The code is mostly clear and easy to follow. Test blocks are succinct and contain one assertion per block. One exception is the #score method. It could be improved by decomposition. The code for set up could be extracted into a separate before(:each) block and multiple 'it' statements could be used for testing expectations.
The code is more about refactoring which is mentioned in the wiki, but I do not see any of the code in which changes are made. Could have mentioned them in the wiki for better clarity. 
The code is more about refactoring which is mentioned in the wiki, but I do not see any of the code in which changes are made. Could have mentioned them in the wiki for better clarity. 
The code is good because it covers the scenarios. But one thing that prevents the 5-star is that they do not have enough  commenting and seems to be not that detailed and careful in terms of the explanation.
The code is good because it covers the scenarios. But one thing that prevents the 5-star is that they do not have enough  commenting and seems to be not that detailed and careful in terms of the explanation.
The code is functionally ready to be deployed in the production server, because it is sound and even passes the build of Travis CI. There are a few minor issues due to Cognitive Complexity of names of methods, lines of code and a few indentation errors. If they are fixed, the code is complete and will pass the build of codeclimate as well. The team has proceeded in the correct approach and there is no need for the project to be redone from scratch using a different approach.
The code is functionally ready to be deployed in the production server, because it is sound and even passes the build of Travis CI. There are a few minor issues due to Cognitive Complexity of names of methods, lines of code and a few indentation errors. If they are fixed, the code is complete and will pass the build of codeclimate as well. The team has proceeded in the correct approach and there is no need for the project to be redone from scratch using a different approach.
The code is DRY however, certain sections of the code could be shortened further.
The code is difficult to understand. There are cases where factories are used and then later replaced by mocks in the individual test cases. The code also does not appear to be DRY, as several of the mocks appear redundant in the context of the plethora of factories built. 
The code is difficult to understand. There are cases where factories are used and then later replaced by mocks in the individual test cases. The code also does not appear to be DRY, as several of the mocks appear redundant in the context of the plethora of factories built. 
The code is concise and readable. It consists of mostly small methods that test one thing. One exception is #.sort_by_name method where several assertions are made in one method. It would be better to use several 'it' statements and DRY out the code by utilizing before(:each) statement. One further suggestion would be to shorten the code by using one array statements instead of individual expressions. For example replace: stu1 = build(:student, name: "Student1") stu2 = build(:student, name: "Student2")   stu3 = build(:student, name: "Student3") with: students = (0..2).map { |i| build(:student, name: "Student#{i}") }  
The code is concise and readable. It consists of mostly small methods that test one thing. One exception is #.sort_by_name method where several assertions are made in one method. It would be better to use several 'it' statements and DRY out the code by utilizing before(:each) statement. One further suggestion would be to shorten the code by using one array statements instead of individual expressions. For example replace: stu1 = build(:student, name: "Student1") stu2 = build(:student, name: "Student2")   stu3 = build(:student, name: "Student3") with: students = (0..2).map { |i| build(:student, name: "Student#{i}") }  
The code is clear and concise. The variable, method and class name choice is correct.  One variable i feel can be changed is  top_max_choosers can be renamed to topic_max_slots, as slots has been used in the function name as well and it will be more consisted  
The code is clear and concise. The variable, method and class name choice is correct.  One variable i feel can be changed is  top_max_choosers can be renamed to topic_max_slots, as slots has been used in the function name as well and it will be more consisted  
The code is clear and concise. The variable, method and class name choice is correct.  One variable i feel can be changed is  top_max_choosers can be renamed to topic_max_slots, as slots has been used in the function name as well and it will be more consisted  
The code is clean and readable. The README file is not updated, hence it is not reviewer-friendly. 1. Most methods are short and do a specific task  2. None 3. Questionable redirection
The code is clean and readable. The README file is not updated, hence it is not reviewer-friendly. 1. Most methods are short and do a specific task  2. None 3. Questionable redirection
The code is clean and readable. Every method handles only one task. However there are two controllers for house hunters and realtors which I felt was redundant. These could have been merged and written in a single controller. There is no bad naming in the project, they have followed the naming conventions. There are no long methods. Methods have been written concisely and in a readable way.
The code is clean and readable. Every method handles only one task. However there are two controllers for house hunters and realtors which I felt was redundant. These could have been merged and written in a single controller. There is no bad naming in the project, they have followed the naming conventions. There are no long methods. Methods have been written concisely and in a readable way.
The code is clean and readable, but there's only one suggestion. The page which lists houses (index) and search houses are handled by different controllers, whereas, they could have been easily integrated into one, without compromising code readability. It would have lead to a more integrated and a cohesive web app. In one or two instances, there were several functions performed within a function, which could have been better modularised too.
The code is clean and easy to follow and each method handles one task. I could not understand the reason for some of the code, like the home action in the hunters_controller - the current user's role is set to 3 without any checks. So if the url is visited directly and user's role is something else, it will be set to 3 and saved, which can result in wrong behaviours. Overall code is well written/
The code is clean and easy to follow and each method handles one task. I could not understand the reason for some of the code, like the home action in the hunters_controller - the current user's role is set to 3 without any checks. So if the url is visited directly and user's role is something else, it will be set to 3 and saved, which can result in wrong behaviours. Overall code is well written/
The code is appropriate but additional comments would make the code much more readable
The code is almost perfect, apart from the code complexity issues, which in my view isn't very tough to fix. The project need not be done from scratch, and it is certainly a good starting place for future teams to pick up.
The code is almost perfect except for the lack of proper commenting. The author has not improved or updated the ocde since the last review, as the last commit was about 11 days back.
The code is almost completed. Only a few final touches will make it ready to be deployed onto the production server. Maybe the future team can also work on it to achieve some more enhanced features.
The code in this project generally appears to be readable. Home controller should probably have a different name, just because controllers are generally supposed to be plural, but there is only one home in their website. Their house search controller appears to be in the model section of the project though.
The code in this project generally appears to be readable. Home controller should probably have a different name, just because controllers are generally supposed to be plural, but there is only one home in their website. Their house search controller appears to be in the model section of the project though.
The code in the project (not auto generated by Ruby) appears to follow the guidelines presented in class and by the style guidelines. The user model contains appropriate validations/syntax, while additional files contain appropriate usage of parenthesis, symbols, and pluralization of file names. Be careful about long lines. In the repo I can't necessarily see the column number; however, but don't be afraid to break parameters up for readability. I believe the guidelines suggest not going out past col 80. I appreciate your indentation. A simple thing can make all the difference in the readability of a file.
The code in controller.rb files are still incomplete for CRUD operations so I am not aware if this was tested properly.
The code in controller.rb files are still incomplete for CRUD operations so I am not aware if this was tested properly.
The code hasnt been changed from the first round. New definitions that were added follow naming conventions properly. remove_administrator remove_instructor Viewing their pull request and code climate bot, there were few places where identical blocks of code can be found.But they are in the spec files.They could have refactored those areas alone.
The code has passed the travis test and has addressed  all the issues of the Change Request. The code should be production ready after adding few more edge test case scenarios.  
The code has passed the travis test and has addressed  all the issues of the Change Request. The code should be production ready after adding few more edge test case scenarios.  
The code has passed the Travis CI build has passed. The danger build has also passed with one warning because of more that 500 Lines of Code. On the other hand the codeclimate build has failed with 7 issues to fix.  1. There is a method get_feedback_assessments_for which has a Cognitive Complexity of 9 (which exceeds 5) and must be refactored. 2. The model class Team contains 21 methods (which is more than the 20 allowed) and hence has to be refactored. 3. The method view_heatgrid has 28 Lines of code that exceeds the allowed 20 and hence has to be refactored. 4. The method set_content has a Cognitive Complexity of 6 (which exceeds the allowed 5) and hence has to be refactored 5. Presence of an unescaped model attribute in the file app/views/response/view.html.erb 6. Assignment Branch condition size for get_feedback_assessments_for is too high 7. Indentation issues in app/models/assignment_participant.rb There are no conflicts with the base branch.
The code has not been deployed. But according to the video, the workflow has been demonstrated properly. Out of the 3 issues, 2 have been resolved. One is not done. 
The code has mast elements ready but there can be more test cases generated with better test coverage. The code need not be rewritten from scratch, it just needs to include some more of the expected functionality
The code has good style and recognizable convention over configuration. There are some line spacing issues however.
The code has good style and recognizable convention over configuration. There are some line spacing issues however.
The code has comments at the beginning of the functionality. Could have added some more comments where the functions are larger for followup. Can add why a certain change in the fetching process was made, so that next time it can be referred while coding further.
The code has been written as per the coding standard. The code written by the team adheres to dry principle. However, as per my first review comments it is advisable to follow better naming conventions. The team could rename their function names such as the below one to something smaller such as get_time_diff. The code needs refactoring in names and addition of comments.  def get_time_diff_btw_due_date_and_now(due_date)
The code has been written as per the coding standard. The code written by the team adheres to dry principle. However, as per my first review comments it is advisable to follow better naming conventions. The team could rename their function names such as the below one to something smaller such as get_time_diff. The code needs refactoring in names and addition of comments.  def get_time_diff_btw_due_date_and_now(due_date)
The code has been written as per the coding standard. The code written by the team adheres to dry principle.
The code has been very well written and it follows all the coding practices. There could have been few more comments but other than that I don't see any other problem.
The code has been modified to include the modifications requested (test cases added for failing scenarios and edge cases - two assignments with same name) in my previous review. Appreciated! Overall the code quality is good. Only some variable names are ambiguous for example: check_validate.  What does it validate? Name it like validate_same_name or validate_common_directory etc
The code has been merged in a good way and there have been no merge conflicts. The build did pass the Travis CI. The code climate test failed but those were small issues which can easily fixed by just revisiting the code.
The code has been merged in a good way and there have been no merge conflicts. However, the Travis CI was failing and the code climate check was failing too. This is something that the team must look into and make sure that the changes that they have made are consistent with the existing expertiza code. 
The code has been merged in a good way and there have been no merge conflicts. However, the Travis CI was failing and the code climate check was failing too. This is something that the team must look into and make sure that the changes that they have made are consistent with the existing expertiza code. 
The code has been merged in a good way and there have been no merge conflicts. However, the Travis CI was failing and the code climate check was failing too. This is something that the team must look into and make sure that the changes that they have made are consistent with the existing expertiza code. 
The code has been merged in a good way and there have been no merge conflicts so far which is commendable. However, the Travis CI was failing and the code climate check was failing too. This is something that the team must look into and make sure that the changes that they have made are consistent with the existing expertiza code.
The code has been implemented in a modular way. However, there are few functions where Ruby naming conventions has not been followed for example : "authenticateAdmin" in UsersController class.
The code has been implemented in a modular fashion. However, the team can improve the readability of the code in mail_worker  and assignment_form. Currently it lacks readability because of too long comments between every line of code and poor alignment, which makes it difficult for user to understand.
The code has been implemented as per the Ruby standards of coding. However, there are few instances of code could be better handled such as the index function in admin controller.  
The code has been implemented as per the Ruby standards of coding. However, there are few instances of code could be better handled such as the index function in admin controller.  
The code has been implemented as per the Ruby standards of coding. However, the author has used numeric ids for role comparison which is difficult to map with the code. It would have been more meaningful if the author could use the names of role so that it could be easily understood. Also, it could be more easier for the reader if the author could avoid lot of commented code. Specially in main classes such as "UsersController". Instance from code for point 1: if user.id == 19   current_user.role = 1   current_user.save   else   current_user.role = 0 
The code has been implemented as per the Ruby standards of coding. However, the author has used numeric ids for role comparison which is difficult to map with the code. It would have been more meaningful if the author could use the names of role so that it could be easily understood. Also, it could be more easier for the reader if the author could avoid lot of commented code. Specially in main classes such as "UsersController". Instance from code for point 1: if user.id == 19   current_user.role = 1   current_user.save   else   current_user.role = 0 
The code has almost no comments. I found some lint, particularly some commented-out blocks of code. 
The code has almost no comments. I found some lint, particularly some commented-out blocks of code. 
The code generally is simple and understandable. Blocks are simple but maybe its because few features are missing.
The code generally is simple and understandable. Blocks are simple but maybe its because few features are missing.
The code follows the good coding practices. However, there are some instances where I found commented lines of code in the controller. Ex. house_hunters_controller.rb lines 23-25 and users_controller.rb function switch_role
The code follows the DRY principle and the Ruby style guide for writing the test cases. The code could be improved by providing comments. The code contains optimum length methods and the variables and functions have been properly named.
The code follows the common "Ruby on rails" application structure: Hence, it was easy for me to navigate through other files to see portion of the code. It follows the common MVC structure. However, In some parts of the code, comments were missing which was confusing as I didn't understand the logic for that code. README file was not properly described for other users navigating through app. 
The code follows ruby and rails convention, but there are multiple commented files in the project such as logins.coffee and many more which have not been used in the application. 
The code follows on the lines of good ruby on rails practices. However, I can see no migrations in the db folder. The readme file contains sql statements for table completion which look to be correct.
The code follows on the lines of good ruby on rails practices. However, I can see no migrations in the db folder. The readme file contains sql statements for table completion which look to be correct.
The code follows most of the standard practices except the 3rd one. It does falls short of comments. It took a very long time to make sense of what the changes made by the author in a particular file does. This scenario could be improved in the future iterations.
The code follows most of the standard practices except the 3rd one. It does falls short of comments. It took a very long time to make sense of what the changes made by the author in a particular file does. This scenario could be improved in the future iterations.
The code follows most of the standard practices except the 3rd one. It does falls short of comments. It took a very long time to make sense of what the changes made by the author in a particular file does. This scenario could be improved in the future iterations.
The code follows good coding style, adheres to naming standards and is DRY. However, the suggested changes since last round have not been implemented which emphasized on shortening the length of long functions create and view.
The code enables properly testing the various features and describes the system working as desired. However, since the Travis build did not pass, the code could be deployed but with careful intervention by the developer. It could be taken up from here and does not require to be redone from scratch.
The code employed good naming and seemed to be DRY and follow standard Ruby on Rails practices. The methods were kept short. HouseInterestList would make more sense as HouseInterest. Each row in the table is one wish list entry, not a list of wish list entries.
The code does its functionality, but it's not tested.  My biggest concern would be to have the test cases written for it before the production version.  It is a good starting place for a future team to pick up and just cover the test cases.
The code does its functionality, but it's not tested.  My biggest concern would be to have the test cases written for it before the production version.  It is a good starting place for a future team to pick up and just cover the test cases.
the code does follow the ruby style guide.
The code does follow all the standards and steps to cover all the test cases. Could include some more comments to make the code self explanatory. 
The code does follow all the standards and steps to cover all the test cases. Could include some more comments to make the code self explanatory. 
The code coverage is 100%. Every test case passes after a manual check.
The code contributed does not follow the test rule in that the tests are made using create instead of build. The code functions do not implement much function and does not follow the Ruby style guide. The team should focus on getting the tests running by following the DRY principle. 
The code contributed by the author contains long functions which are adequate and consistent considering the amount of task that is carried by each function. The team could improve upon the comments to enable high understanding of the flow of code written. The code does follow the Ruby style guide and supports the DRY principle.
The code contributed by the author contains long functions which are adequate and consistent considering the amount of task that is carried by each function. The team could improve upon the comments to enable high understanding of the flow of code written. The code does follow the Ruby style guide and supports the DRY principle.
The code contains comments which makes it little hard to read through.Other than that the organisational way, refactoring methods are handled good
The code contains comments which makes it little hard to read through.Other than that the organisational way, refactoring methods are handled good
The code contains comments which makes it little hard to read through.Other than that the organisational way, refactoring methods are handled good
The code consists of small methods that mostly test one thing. This results in high readability. The team has made an extensive use of 'context' constructs which further enhance the code documentation. Moreover, the team has improved the .sort_by_name method making it cleaner and easier to follow. This was complemented by the fix of bad names that were present in the first round (e.g. stu1, p1 etc.). One suggestion pertaining to the '#scores' block would be to use specific assertions of fields instead of testing the object via inspect method and comparing it to the string value.
The code changes in "app/controllers/submitted_content_controller.rb" line 60-78, could have been in a separate method, such as send "email to reviewers". That would make the controller code clean and clear.     Code changes does not follow the DRY principle in atleast two places. 1.  In app/mailers/delayed_mailer.rb, there is no need to duplicate the code. The code in the new method, review_reminder_email  has been copied from email_reminder. The email_reminder method can be used instead of creating a separate method altogether.   2. app/models/assignment_participant.rb and app/models/course_participant.rb uses a same code to send the emails via MailerHelper.send_mail_to_user , that can be put in one place, so that it can be reused in both the places.      
The code changes are very less, so not much to say about refactoring, DRY problems etc. The code has "put" statements which are also pointed out by the code climate bot.Having put conditions is not a good coding style, the authors could have considered to remove the statements. puts "hi, im in import" puts name.to_s The authors could have debugged to see the flow of code, or remove them before committing.
The code changes are very less, so not much to say about refactoring, DRY problems etc. The code has "put" statements which are also pointed out by the code climate bot.Having put conditions is not a good coding style, the authors could have considered to remove the statements. puts "hi, im in import" puts name.to_s The authors could have debugged to see the flow of code, or remove them before committing.
The code changes are very less, so not much to say about refactoring, DRY problems etc. The code has "put" statements which are also pointed out by the code climate bot.Having put conditions is not a good coding style, the authors could have considered to remove the statements. puts "hi, im in import" puts name.to_s The authors could have debugged to see the flow of code, or remove them before committing.
The code changes are accepted but build does not pass travis CI. The problem statement is simple and team has implemented a clean solution for the same.
The code can definitely be deployed but once the 3 pending code climate issues(I believe the 3 are to be resolved by he mentor) and the Travis CI build have been rectified. Suggestion: Rectify the Travis CI issues.
The code can definitely be deployed but once the 3 pending code climate issues(I believe the 3 are to be resolved by he mentor) and the Travis CI build have been rectified. Suggestion: Rectify the Travis CI issues.
The code can be readily merged into production. 1) I felt code climate failing not an issue, because their similar blocks of code were on spec files and deleting 2 different roles is the same functionality in the end. Few places has indentation errors which can be fixed before merging. As suggested earlier, removing the error for SQL and replacing with some form of alert box could be helpful for a future work.
The code can be deployed once the Travis CI passes and there are some 6 minor warnings to be fixed in code climate. There are 4 failing and 1 successful checks, the team needs to make sure these checks pass in order to be able deploy the code onto the production server.
The code build passes the travis CI test and it has not  conflicts with the base branch. However, the team should resolve warnings.
The code build passes the travis CI test and it has not  conflicts with the base branch. However, the team should resolve warnings.
The code base is very well written and commented. The code has been done with good coding practices. The only point to note would be to update the Readme to be more informative.
The code base is very minimum. Many functionalities are not implemented.
The code base is very minimum. Many functionalities are not implemented.
The classes where the changes have been done are mentioned. However, it is unclear as to why those classes have been changed and the real pattern behind picking those classes or methods.
The class diagram is very useful, and the mock UI with indication on it make it more useful. 
The CI build was failing in the previous submission as well in the new submission. The team should have corrected the same.  
The CI build was failing in the previous submission as well in the new submission. The team should have corrected the same.
The CI build was failing in the previous submission as well in the new submission. The team should have corrected the same.
The CI build was failing in the previous submission as well in the new submission. The team should have corrected the same.
The changes works as per the changes. Test does not cover entire scope
The changes to be made to improve the existing system have been adequately explained in the design document. The filters by which the data needs to be curated have also been stated. However, it would be better if they started by giving a short description of the problem statement and then going into specifics.
The changes to be made to improve the existing system have been adequately explained in the design document. The filters by which the data needs to be curated have also been stated. However, it would be better if they started by giving a short description of the problem statement and then going into specifics.
The changes to be made to improve the existing system have been adequately explained in the design document. The filters by which the data needs to be curated have also been stated. However, it would be better if they started by giving a short description of the problem statement and then going into specifics.
The changes proposed by the team have been specified in detail providing general requirements about each goal. But it does not make any specifics of the code that could help to infer the proposals with the functionalities. 
The changes proposed by the team have been specified in detail providing general requirements about each goal. But it does not make any specifics of the code that could help to infer the proposals with the functionalities. 
The changes proposed by the authors are reasonable, they do not introduce any clutter or inconsistencies to the code. However, issues #1017 and #1072 do not have a clear solution. In one case changes to the assignment controller are proposed but it cannot be inferred how adequate those changes will be.
The changes proposed by the authors are elaborate overall. They have defined the changes extensively. However, the "Search for Reviews" section could have elaborated more about the search functionality. The authors could have explained what could be searched and how the search functionality can be used a little more elaborately. 
The changes proposed by the authors are elaborate overall. They have defined the changes extensively. However, the "Search for Reviews" section could have elaborated more about the search functionality. The authors could have explained what could be searched and how the search functionality can be used a little more elaborately. 
The changes proposed by the authors are elaborate overall. They have defined the changes extensively. However, the "Search for Reviews" section could have elaborated more about the search functionality. The authors could have explained what could be searched and how the search functionality can be used a little more elaborately. 
The changes proposed are quite understandable. However, I would suggest them to clearly provide a clear path how they are going to reach their result. The initial planning is quite appreciable though.
The changes proposed are quite understandable. However, I would suggest them to clearly provide a clear path how they are going to reach their result. The initial planning is quite appreciable though.
The changes necessary are explicitly outlined. though more description as to why certain files need to be modified would be nice to have.
The changes being proposed is not comprehensive. The changes in the controller is not mentioned at all. The current issue and end picture are also very hard to follow. I have the following questions: 1. How will the UI look like when the conflict- mentioning implementation is resolved? Or only email notification and no changes in the UI? 2. I cannot understand clearly the meaning of this sentence: "loop through each review not for calculating the average but to compare the new review score with each review score".
The changes being proposed is not comprehensive. The changes in the controller is not mentioned at all. The current issue and end picture are also very hard to follow. I have the following questions: 1. How will the UI look like when the conflict- mentioning implementation is resolved? Or only email notification and no changes in the UI? 2. I cannot understand clearly the meaning of this sentence: "loop through each review not for calculating the average but to compare the new review score with each review score".
The changes being proposed is not comprehensive. The changes in the controller is not mentioned at all. The current issue and end picture are also very hard to follow. I have the following questions: 1. How will the UI look like when the conflict- mentioning implementation is resolved? Or only email notification and no changes in the UI? 2. I cannot understand clearly the meaning of this sentence: "loop through each review not for calculating the average but to compare the new review score with each review score".
The changes being proposed is not comprehensive. The changes in the controller is not mentioned at all. The current issue and end picture are also very hard to follow. I have the following questions: 1. How will the UI look like when the conflict- mentioning implementation is resolved? Or only email notification and no changes in the UI? 2. I cannot understand clearly the meaning of this sentence: "loop through each review not for calculating the average but to compare the new review score with each review score".
The changes being proposed including the modification of 6 files: submission, team title, view, review-report, feedback report, and teammate review report. I think the lists of modifications are comprehensive. But more details needs to be stated: How should we change this list_submissions.html.erb file? Should we only change some lines or should we change the entire pattern? In which file will the sorting be implemented? there does have information on how to sort by JQuery, but there's not yet information, in terms of which file, which part needs to be changed.  
The changes being proposed including the modification of 6 files: submission, team title, view, review-report, feedback report, and teammate review report. I think the lists of modifications are comprehensive. But more details needs to be stated: How should we change this list_submissions.html.erb file? Should we only change some lines or should we change the entire pattern? In which file will the sorting be implemented? there does have information on how to sort by JQuery, but there's not yet information, in terms of which file, which part needs to be changed.  
The changes being proposed including the modification of 6 files: submission, team title, view, review-report, feedback report, and teammate review report. I think the lists of modifications are comprehensive. But more details needs to be stated: How should we change this list_submissions.html.erb file? Should we only change some lines or should we change the entire pattern? In which file will the sorting be implemented? there does have information on how to sort by JQuery, but there's not yet information, in terms of which file, which part needs to be changed.  
The changes being proposed here are not comprehensive. It just talks about adding an option "allow students to join review later" but it doesn't say how. It also doesn't say whether it's a change in the administrator end or where. Also, as being stated in the above question, is the underlying functionality already implemented, and there's just an UI change that remains to be done? If yes, where is the underlying functionality? In which file? How is it implemented? If not,  then the corresponding implementation is missing in this design document.
The changes are not yet suggested in the documentation. Only the files that will be changed are mentioned.
The changes are not yet suggested in the documentation. Only the files that will be changed are mentioned.
The changes are not yet proposed.
The changes are not yet proposed.
The changes are not yet proposed.
The changes are explained by the authors. The quality of the explanation can be improved. Authors could have explained the changes a little more elaborately. The explanation is a little high level.
The changes are clearly mentioned , they are very clear what and where to make changes. Only suggestion would be to include more about how these changes are going to be done. 
The change is little and consists of only one html file. Shouldnt make the code smelly
The bulk of the code I deciphered was auto-generated via scaffold but the code that is changed follows good practices.
The build was failing last time as well but not fixes were made.
The build test failed in Travis CI. However there were no conflicts with the base branch.
The build seems to pass, but it would have been great if the test cases were explained better. Maybe some screenshots or a video would have been easier to test.
The build seems to pass, but it would have been great if the test cases were explained better. Maybe some screenshots or a video would have been easier to test.
The build seems to have passed, but there are not many test cases listed to check the same. There is more scope of test cases in the same.
The build seems to have passed, but there are not many test cases listed to check the same. There is more scope of test cases in the same.
The build seems to have failed due to some unknown reasons. Travis CI states something unrelated to tests or something about dependencies that I can't quite comprehend. The names are quite comprehensible and the code was written well.
The build passes and there are only minor warnings and issues which can safely be ignored.
The build passes and there are only minor warnings and issues which can safely be ignored.
The build passed, but the danger checks and CodeClimate checks did not
The build passed, but the danger checks and CodeClimate checks did not
The build passed in Travis CI and there were no conflicts. But, some issues are not fixed like refactoring is not done and block has too many lines. These issues should be considered for a well written code.
The build isn't passing one of the added tests, but it looks to be a simple fix. 
The build isn't passing one of the added tests, but it looks to be a simple fix. 
The build isn't passing one of the added tests, but it looks to be a simple fix. 
the build is still failing and there are issues which needs the team's attention. there is one warning and 1 error which needs to be fixed by the issue. according to the error, team should remove the debug code from the pull request.
The build is failing, but it seems the team has it working locally. I think they can get it working with this approach.
The build is failing, but it seems the team has it working locally. I think they can get it working with this approach.
The build in Travis CI failed. 3 out of the 4 build jobs had passed. The build job failed in the features folder. The branch did not have any conflicts with the main branch
The build in Travis CI failed. 3 out of the 4 build jobs had passed. The build job failed in the features folder. The branch did not have any conflicts with the main branch
The build hasn't passed in the travis CI
The build has successfully passed the Travis CI test and there are no merge conflicts present in the pull request. However, there were a few code climate issues which I think can be easily fixed.
The build has passed. The are only 2 syntactical issues due to version difference.
The build has passed. The are only 2 syntactical issues due to version difference.
The build has passed and there have not been any conflicts.
The build has failed in Travis CI.
The build for the Travis CI fails and also the code climate shows 79 issues to be resolved. However, it does pass the Danger Bot with considerable warnings. 
The build for the pull request has not passed and has the same issues from round 1.  Build logs suggest that out of 4 build jobs, 3 jobs pass and 1 job still needs work.  According to the build job 4 log, there is a json parser error which needs to be fixed.
The build fails. there are 3 warnings which needs team's attention. there are no conflicts with the base branch.
The build fails. there are 3 warnings which needs team's attention. there are no conflicts with the base branch.
The build fails. there are 3 warnings which needs team's attention. there are no conflicts with the base branch.
The build fails so this project will not work in its current state. There were instructions however on how to set up the project and show that it is working.
The build fails so this project will not work in its current state. There were instructions however on how to set up the project and show that it is working.
the build fails and there is one warning and one error which needs to be fixed.
The build fails and there are several issues and warnings that need to be fixed. 
The build does not pass. It looks like some failing new tests are the issue.
The build does not pass. It looks like some failing new tests are the issue.
The build does not pass, but only because of codeclimate issues. The code written by the team, in terms of logic is absolutely perfect. But certain conventions were not followed, such as "proper indentation was not followed", "DRY principle violated". Although these have no impact on the functionality, these coding practices are industry convention and maybe the team would want to consider giving them equal importance for the next projects.
The build does not pass the travis CI.
The build does not pass the travis CI.
The build does not pass in Travis CI check.   They build job for TESTFOLDER = controllers is failing currently. I would suggest them to investigate the cause of this.  
The build didn't pass in Travis CI. There is still an error.
The build didn't pass in Travis CI. There is still an error.
The build did not pass, their test failed. It seems that their grades_controller_spec.rb has some problems.
The build did not pass, their test failed. It seems that their grades_controller_spec.rb has some problems.
The build did not pass, their test failed. It seems that their grades_controller_spec.rb has some problems.
The build did not pass Travis CI. The reason is because #scores method is commented out from the AssignmentParticipant class.
The build did not pass Travis CI. The reason is because #scores method is commented out from the AssignmentParticipant class.
The build did not pass travis CI. I did a demo of their project and it seems to work given the credentials provided. THe encountered some minor indentation errors but otherwise the feature addition/fixing part seems good. The test cases written for the controller was very little though. The code coverage was just 14% approximately.
The build did not pass travis CI. I did a demo of their project and it seems to work given the credentials provided. THe encountered some minor indentation errors but otherwise the feature addition/fixing part seems good. The test cases written for the controller was very little though. The code coverage was just 14% approximately.
The build did not pass Travis CI.
The build did not pass in Travis CI. There were no conflicts that needed to be resolved.
The build did not pass in Travis CI. There were no conflicts that needed to be resolved.
The build did not pass in Travis CI. There was one failure which needs to be fixed.
The build did not pass in Travis CI. There was one failure which needs to be fixed.
The build did not pass due to some minor inconsistencies.
The build #6205 of this project failed in Travis CI. I checked the conflicts and the failures that caused the build to fail, and they are: 1) assignment function creation page is able show tab due deadlines Failure/Error: JSON.parse(child_nodes) JSON::ParserError: A JSON text must at least contain two octets! # ./app/controllers/tree_display_controller.rb:96:in `child_nodes_from_params' # ./app/controllers/tree_display_controller.rb:207:in `children_node_ng' # ./config/diagnostic.rb:11:in `call' # ------------------ # --- Caused by: --- # Capybara::CapybaraError: # Your application server raised an error - It has been raised in your test code because Capybara.raise_server_errors == true # /home/travis/build/expertiza/expertiza/vendor/bundle/ruby/2.2.0/gems/capybara-2.17.0/lib/capybara/session.rb:145:in `raise_server_error!' Finished in 3 minutes 27.2 seconds (files took 7.04 seconds to load) 55 examples, 1 failure, 11 pending Failed examples: rspec ./spec/features/assignment_creation_spec.rb:233 # assignment function creation page is able show tab due deadlines I also noticed that there were many features that are pending to be implemented (which do not affect the suite's status) They are: 1) team invitation when current assignment is a team-based assignment with topics advertisement feature when team owner declining the invitation makes team members remain the same as before # Not yet implemented # ./spec/features/team_invitation_spec.rb:29 2) team invitation when current assignment is a team-based assignment with topics advertisement feature when team owner accepting the invitation when the team is not full makes requester joins the team # Not yet implemented # ./spec/features/team_invitation_spec.rb:34 3) team invitation when current assignment is a team-based assignment with topics advertisement feature when team owner accepting the invitation when the team is already full makes team members remain the same as before # Not yet implemented # ./spec/features/team_invitation_spec.rb:38 4) team invitation when current assignment is a team-based assignment with topics on teams#list page (instructor end) shows a list of students who do not have a team # Not yet implemented # ./spec/features/team_invitation_spec.rb:62 5) team invitation when current assignment is a team-based assignment with topics when a student access studet_task#list page of this assignment contains 'Your team' link on the page # Not yet implemented # ./spec/features/team_invitation_spec.rb:14 6) team invitation when current assignment is a team-based assignment with topics on student_teams#view page (student end) shows a list of students who do not have a team and team owner can invite these students by clicking the 'invite' buttons # Not yet implemented # ./spec/features/team_invitation_spec.rb:44 7) team invitation when current assignment is a team-based assignment with topics on student_teams#view page (student end) when invitee declining the invitation makes team members remain the same as before # Not yet implemented # ./spec/features/team_invitation_spec.rb:47 8) team invitation when current assignment is a team-based assignment with topics on student_teams#view page (student end) when invitee accepting the invitation when the team is not full makes invitee joins the team # Not yet implemented # ./spec/features/team_invitation_spec.rb:52 9) team invitation when current assignment is a team-based assignment with topics on student_teams#view page (student end) when invitee accepting the invitation when the team is already full makes team members remain the same as before # Not yet implemented # ./spec/features/team_invitation_spec.rb:56 10) team invitation when current assignment is not a team-based assignment when a student access studet_task#list page of this assignment does not contain 'Your team' link on the page # Not yet implemented # ./spec/features/team_invitation_spec.rb:68 11) assignment function Due dates tab Able to create a new penalty policy # Temporarily skipped with xit # ./spec/features/assignment_creation_spec.rb:682 1) timestamps for student's submissions when current assignment is in submission stage when current participant does not submit anything yet displays due dates of current assignment in student_task#list page # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:14 2) timestamps for student's submissions when current assignment is in submission stage after current participant has uploaded a file displays file names with its timestamps # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:23 3) timestamps for student's submissions when current assignment is in submission stage after current participant has submitted a hyperlink displays hyperlinks with its timestamps # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:18 4) timestamps for student's submissions when current assignment (with single review round) is in review stage after current participant finishes an author feedback displays a link named 'feedback' with its timestamps (you could redirect to that feedback by clicking the link) # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:36 5) timestamps for student's submissions when current assignment (with single review round) is in review stage after current participant reviews other's work displays a link named 'review' with its timestamps (you could redirect to that review by clicking the link) # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:30 6) timestamps for student's submissions when current assignment (with multiple review round) is in review stage after current participant finishes an author feedback displays a link named 'feedback' with its timestamps (you could redirect to that feedback by clicking the link) # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:58 7) timestamps for student's submissions when current assignment (with multiple review round) is in review stage after current participant reviews other's work in round 1 displays a link named 'review' with its round number (1) and timestamps (you could redirect to that review by clicking the link) # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:45 8) timestamps for student's submissions when current assignment (with multiple review round) is in review stage after current participant reviews other's work in round 2 displays a link named 'review' with its round number (2) and timestamps (you could redirect to that review by clicking the link) # Not yet implemented # ./spec/features/timestamps_for_students_submissions_spec.rb:51 9) badge system when a student receives a very high review grades assigned by teaching staff (higher than 95 by default) assigns the 'Good reviewer' badge to this student on student_task#list page # Not yet implemented # ./spec/features/badge_system_spec.rb:25 10) badge system in assignments#edit page has a tab named 'Badges' # Not yet implemented # ./spec/features/badge_system_spec.rb:13 11) badge system in assignments#edit page when switching to 'Badges' tab allows instructor to change the thresholds of two badges (by default is 95) and save thresholds to DB # Not yet implemented # ./spec/features/badge_system_spec.rb:16 12) badge system on participants#list page allows instructor to view badges assignment statuses of all participants # Not yet implemented # ./spec/features/badge_system_spec.rb:29 13) badge system when a student receives a very high average teammate review grade (higher than 95 by default) assigns the 'Good teammate' badge to this student on student_task#list page # Not yet implemented # ./spec/features/badge_system_spec.rb:21 14) expert review when current assignment with vary-rubric-by-round supports expert peer-review expert review feature works correctly # Not yet implemented # ./spec/features/expert_review_spec.rb:28 15) expert review when current assignment with single review round supports expert peer-review expert review feature works correctly # Not yet implemented # ./spec/features/expert_review_spec.rb:14 16) review mapping show error when assign both 2 # skip test on automated review mapping, too time consuming # ./spec/features/review_mapping_spec.rb:83 17) review mapping calculate reviewmapping from given review number per submission # skip test on automated review mapping, too time consuming # ./spec/features/review_mapping_spec.rb:102 18) review mapping calculate review mapping from given review number per student # skip test on automated review mapping, too time consuming # ./spec/features/review_mapping_spec.rb:95 19) review mapping show error when assign both 0 # skip test on automated review mapping, too time consuming # ./spec/features/review_mapping_spec.rb:89    
The bug fixing does work according to the screenshots provided by the authors. They have provided a step by step screenshot of the issue that they have fixed. The authors haven't hosted their version of the expertiza so it is very difficult to actually check the functionality. They could have hosted expertiza on VCL or they could have put a screen cast of the working functionality to help in reviewing.
The bug fixing does work according to the screenshots provided by the authors. They have provided a step by step screenshot of the issue that they have fixed. The authors haven't hosted their version of the expertiza so it is very difficult to actually check the functionality. They could have hosted expertiza on VCL or they could have put a screen cast of the working functionality to help in reviewing.
The bug fixing does work according to the screenshots provided by the authors. They have provided a step by step screenshot of the issue that they have fixed. The authors haven't hosted their version of the expertiza so it is very difficult to actually check the functionality. They could have hosted expertiza on VCL or they could have put a screen cast of the working functionality to help in reviewing.
The bug fixing does work according to the screenshots provided by the authors. They have provided a step by step screenshot of the issue that they have fixed. The authors haven't hosted their version of the expertiza so it is very difficult to actually check the functionality. They could have hosted expertiza on VCL or they could have put a screen cast of the working functionality to help in reviewing.
The biggest concern are the simple code climate issues.
The biggest concern are the simple code climate issues.
The belongs_to and has_many conditions have been set by the team on the model.rb files. But there are no foreign indexes on schema.db file. I would advise using; Model foreignModel_id:dataType:index with scaffold generate to add a foreign key and in case of devise generated tables I suggest creating a foreign key with a new migration. Here's a stackoverflow link that shows how to do that, https://stackoverflow.com/questions/16257116/adding-foreign-key-to-a-rails-model
The belongs_to and has_many conditions have been set by the team on the model.rb files. But there are no foreign indexes on schema.db file. I would advise using; Model foreignModel_id:dataType:index with scaffold generate to add a foreign key and in case of devise generated tables I suggest creating a foreign key with a new migration. Here's a stackoverflow link that shows how to do that, https://stackoverflow.com/questions/16257116/adding-foreign-key-to-a-rails-model
The basics test are written. Some application specific tests can be written.
The basic test cases mentioned in the read me work fine. It does not cover the edge cases as mentioned above, but some of the validations I tried seem to have worked.
The basic functionalities work nicely. Creating houses, signup and signin, house search, inquiry and reply etc work correctly. All the validations are present. However a few functionalities are not working:  1. A house without a photo can not be seen (Error in showing the house) 2. Houses information (index) is shown incorrectly - Forgot to add table headings?  3. Potential buyer functionality not implemented correctly - Can not see any details, just show, edit,delete options 4. Admin can not delete companies, houses or realtors if they are referenced elsewhere - see next answer below for details. 5. Realtor cannot reply to inquiry and cannot destroy his house. 7. Admin can not see inquiries even when some are there.  
The basic functionalities are working as mentioned in the write-up. Refactoring the code would hamper a few functionalities as there are multiple instances where a single function is performing different actions
The bar charts have been added to the design report. The visualizations have been added to views also and the screen shots have been added too. The only thing that I would like to add is that the bar charts could have been more descriptive. As in they could have added details for  x label and y label and also put legend. this will aid the user in quickly understanding what the chart is conveying. 
The bar charts have been added to the design report. The visualizations have been added to views also and the screen shots have been added too. The only thing that I would like to add is that the bar charts could have been more descriptive. As in they could have added details for  x label and y label and also put legend. this will aid the user in quickly understanding what the chart is conveying. 
The background sections were fairly clear, but the details could have been fleshed out more. Some description of the code would be better than a dump of the code.
The background is clear and thorough but the explanation of the changes to be made to the system lack detail. Terms such as DOM, the Blob APi, and ECMAScript were not explained.
The background and the implementation plan is provided with detail. The files to be modified for each objective of the project is also stated. Testing plan is not stated.
The background and the implementation plan is provided with detail. The files to be modified for each objective of the project is also stated. Testing plan is not stated.
The background and problem statement are clear and concise. The description of the implementation is thorough but a little too detailed. It relies too much on the source code and not enough on figures and written explanation.
The background and problem statement are clear and concise. The description of the implementation is thorough but a little too detailed. It relies too much on the source code and not enough on figures and written explanation.
The back button is a loop. I can never traverse back to Dashboard
The AWS deployment attempted by the team does not work. I attempted to clone the repository and run it locally but was unable to. Looking at the code itself, I was able to determine that the wishlist, replying to an inquiry functionalities are missing.  I am unsure why the team opted use the devise model generator for the companies model. The companies aren't a type of user on this project from my understanding and rather a resource. Would it be possible for the team to use a scaffold generate instead?
The AWS deployment attempted by the team does not work. I attempted to clone the repository and run it locally but was unable to. Looking at the code itself, I was able to determine that the wishlist, replying to an inquiry functionalities are missing.  I am unsure why the team opted use the devise model generator for the companies model. The companies aren't a type of user on this project from my understanding and rather a resource. Would it be possible for the team to use a scaffold generate instead?
The autosave feature is a pain right now and it is buggy(not sure if it is in the scope of this project) so an option can be given to choose autosave the data after a set of intervals like 5/10/15 mins
The autosave feature is a pain right now and it is buggy(not sure if it is in the scope of this project) so an option can be given to choose autosave the data after a set of intervals like 5/10/15 mins
The autosave feature is a pain right now and it is buggy(not sure if it is in the scope of this project) so an option can be given to choose autosave the data after a set of intervals like 5/10/15 mins
The automated tests were not created for the scenarios. 
The authors work seems to work fine in theory. But unfortunately, the link provided by the author does not work, and hence there was no way to manually test it. But the demonstration video provided was a big thumbs up.
The authors work seems to work fine in theory. But unfortunately, the link provided by the author does not work, and hence there was no way to manually test it. But the demonstration video provided was a big thumbs up.
The authors work functions well but the code uses redundant/bad logic in some places. Code could have been put into methods and reused. The code functions as expected in almost all cases
The authors view of the final result is clear, but it is not yet clear on how the project is going to be implemented. i.e what files are going to be changed.
The authors used a lot of charts for use cases, this is great, but they only explained a little for implementation, which could be explained in a great detail.
The authors used a lot of charts for use cases, this is great, but they only explained a little for implementation, which could be explained in a great detail.
The authors talk about adding the tablesorter class to the html table and using javascript scripts for further action. There are no apparent problems with this strategy, however I would suggest for the team to elaborate and provide more details on the implementation. For example, it is not possible to understand what the javascript part will look like, how many functions will be used or how they will interact with html.
The authors talk about adding the tablesorter class to the html table and using javascript scripts for further action. There are no apparent problems with this strategy, however I would suggest for the team to elaborate and provide more details on the implementation. For example, it is not possible to understand what the javascript part will look like, how many functions will be used or how they will interact with html.
The authors should have added screenshots for the changes made in the code. Otherwise, the purpose and work done has been explained well.
The authors seem to have understood the project and know what changes need to be made to what files. The changes seem to be targeted to the correct classes and preliminary investigation reveals that it does seem to follow DRY principles. They might want to make their design diagram more simplified which will not only help in making it look readable and also help in implementing the code effectively. This will help in reducing convoluted code.
The authors seem to have understood the project and know what changes need to be made to what files. The changes seem to be targeted to the correct classes and preliminary investigation reveals that it does seem to follow DRY principles. They might want to make their design diagram more simplified which will not only help in making it look readable and also help in implementing the code effectively. This will help in reducing convoluted code.
The authors provide some screenshots which make their project more clear. It would be better if they provide more diagrams to explain their solutions.
The authors provide some screenshot of the pages they need to change. It would be better if they provide more diagrams to explain their design, for example, a UML diagram about the relationship of all the class they need to change.
The authors provide a list of files that will be modified in the scope of this project and a high level overview of what needs to be done. The rationale behind using a tablesorter jQuery library and defining the code in the script seems reasonable but the team needs to discuss more details to further clarity the solution. 
The authors provide a list of files that will be modified in the scope of this project and a high level overview of what needs to be done. The rationale behind using a tablesorter jQuery library and defining the code in the script seems reasonable but the team needs to discuss more details to further clarity the solution. 
The authors propose two changes and have mentioned in detail about the flow in which they will make changes. They could benefit from drawing simple LoFi UI cards to illustrate how the new review page might look like which will benefit them in improving their UI design and proper representation of data before they actually spend the man hours in coding it. Overall the have explained the process in detail  and clean fashion.
The authors propose two changes and have mentioned in detail about the flow in which they will make changes. They could benefit from drawing simple LoFi UI cards to illustrate how the new review page might look like which will benefit them in improving their UI design and proper representation of data before they actually spend the man hours in coding it. Overall the have explained the process in detail  and clean fashion.
The authors propose changes in an extremely concise manner. The idea that the team proposes to follow seems logical, but I would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well. Such as this-: 1) Review X is submitted 2) Loop through Review 1......n If abs(Review n score - Review X score) >= (some value) store Review n URL in list  
The authors propose a sound logic to improve the functionality required. However, I would suggest the team to think about looping over each and every review. This may increase the response time of the system. Perhaps more interaction with the instructors could help the team come up with a less complex solution.
The authors propose a sound logic to improve the functionality required. However, I would suggest the team to think about looping over each and every review. This may increase the response time of the system. Perhaps more interaction with the instructors could help the team come up with a less complex solution.
The authors only provided diagrams to state what the UI likes now but not provide any diagrams to explain how the system will be like after changes. Especially, they didn't explain the components they will use, it is more difficult for me to understand what kind of results they intended to get after changes.
The authors only explain what needs to be changed but no specific steps. If would be better if they can provide more details about how will they implement the functions they mention in the document.
The authors need to provide more detailed procedures about how they going to implement their solutions, instead of the results after they done it.
The authors need to provide more detailed procedures about how they going to implement their solutions, instead of the results after they done it.
The authors need to provide more detailed procedures about how they going to implement their solutions, instead of the results after they done it.
The authors need to provide more detailed procedures about how they going to implement their solutions, instead of the results after they done it.
The authors mostly focus on how they did what they did, i.e. inner workings of each test suite. Little to no discussion is provided on the overall decisions pertaining to design principles and patterns that have been utilized in this project. For example, there are no instances of before(:each) blocks in the source code. This decision could be discussed and clarified in the wiki page.
The authors mostly focus on how they did what they did, i.e. inner workings of each test suite. Little to no discussion is provided on the overall decisions pertaining to design principles and patterns that have been utilized in this project. For example, there are no instances of before(:each) blocks in the source code. This decision could be discussed and clarified in the wiki page.
The authors mention within their UML diagrams section that they are making only HTML changes, however, they have still not explained how the requests will be sent, no explanation has been given yet on how the team intends to implement timing the response of the API.
The authors mention within their UML diagrams section that they are making only HTML changes, however, they have still not explained how the requests will be sent, no explanation has been given yet on how the team intends to implement timing the response of the API.
The authors mention within their UML diagrams section that they are making only HTML changes, however, they have still not explained how the requests will be sent, no explanation has been given yet on how the team intends to implement timing the response of the API.
The authors mention that they have followed DRY Testing practices but there are few test cases where they have not  implemented it. For example scores(questions) method. I would recommend to make the use of factories. Overall well written test cases.  
The authors mention that they have followed DRY Testing practices but there are few test cases where they have not  implemented it. For example scores(questions) method. I would recommend to make the use of factories. Overall well written test cases.  
The authors mention gems that they could potentially use. but they do not mention where they'd be adding the associated code.
The authors mention gems that they could potentially use. but they do not mention where they'd be adding the associated code.
The authors mention gems that they could potentially use. but they do not mention where they'd be adding the associated code.
The authors mention gems that they could potentially use. but they do not mention where they'd be adding the associated code.
The authors made a solid attempt at improving the writeup. However, there are still some issues. DOM was left undefined and the code was separated from the descriptions.
The authors haven;t given the files to be modified or the changes they are going to do to the system.
The authors haven;t given the files to be modified or the changes they are going to do to the system.
The authors have worked well since the last review and incorporated some of the suggestions. They have now finalized the input and output formats. However, I still am unsure about the algorithm implementation they have proposed. They have kept it as a black box, which makes the design quite inadequate. It becomes difficult to review if their methods, classes are in the right direction or need any modification. They should have at least given a high level overview of the algorithm. Also, I have observed that the additional comments box also contains valuable suggestions many of the times. Please mention if you have considered the additional comments box in your analyze functionality.
The authors have worked well since the last review and incorporated some of the suggestions. They have now finalized the input and output formats. However, I still am unsure about the algorithm implementation they have proposed. They have kept it as a black box, which makes the design quite inadequate. It becomes difficult to review if their methods, classes are in the right direction or need any modification. They should have at least given a high level overview of the algorithm. Also, I have observed that the additional comments box also contains valuable suggestions many of the times. Please mention if you have considered the additional comments box in your analyze functionality.
The authors have worked well since the last review and incorporated some of the suggestions. They have now finalized the input and output formats. However, I still am unsure about the algorithm implementation they have proposed. They have kept it as a black box, which makes the design quite inadequate. It becomes difficult to review if their methods, classes are in the right direction or need any modification. They should have at least given a high level overview of the algorithm. Also, I have observed that the additional comments box also contains valuable suggestions many of the times. Please mention if you have considered the additional comments box in your analyze functionality.
The authors have visually represented the system by depicting the method through an ER diagram. However, the diagram is a little high level and does not completely explain the flow of the system.
The authors have visually represented the system by depicting the method through an ER diagram. However, the diagram is a little high level and does not completely explain the flow of the system.
The authors have visually represented the system by depicting the method through an ER diagram. However, the diagram is a little high level and does not completely explain the flow of the system.
The authors have visually represented the system by depicting the method through an ER diagram. However, the diagram is a little high level and does not completely explain the flow of the system.
The authors have talked about only the UI and not the underlying code. So it is difficult to assess the quality of the change. As far as the UI is concerned the authors have taken a right direction to place the checkbox. Providing further details about the proposed solution including the changes  needed in the controller code to support the UI change will help explain it.
The authors have taken efforts to identify the right places for making the identified changes. It seems that they have already done some changes. Suggestions: I feel that the proposed changes on a high level. You might want to go a level deeper to explain what will your changes be like. You might also consider adding use case for your changes. 
The authors have taken efforts to identify the right places for making the identified changes. It seems that they have already done some changes. Suggestions: I feel that the proposed changes on a high level. You might want to go a level deeper to explain what will your changes be like. You might also consider adding use case for your changes. 
The authors have taken efforts to identify the right places for making the identified changes. It seems that they have already done some changes. Suggestions: I feel that the proposed changes on a high level. You might want to go a level deeper to explain what will your changes be like. You might also consider adding use case for your changes. 
The authors have still only mentioned the UI side changes, i.e. adding a checkbox to control the functionality. They have not thought about the actual logic to limit the students from seeing the reviews. Please include this in the design as this completes the entire functionality. 
The authors have shown screenshots of example output as a part of visualization. This shows the original page, the updated page with the facility to change language and the translated page to Hindi. Though this visualization displays the final output, there is no visualization that shows the design and implementation of this new feature. 
The authors have shown screenshots of example output as a part of visualization. This shows the original page, the updated page with the facility to change language and the translated page to Hindi. Though this visualization displays the final output, there is no visualization that shows the design and implementation of this new feature. 
The authors have shown screenshots of example output as a part of visualization. This shows the original page, the updated page with the facility to change language and the translated page to Hindi. Though this visualization displays the final output, there is no visualization that shows the design and implementation of this new feature. 
The authors have put in a good amount of effort in creating LowFI sketch (table) of the Grade Summary view with mock data. They have included a rough prototype of the intended view with all student and assignment information. The documentation also shows the Manage Courses view which contains the 360 Assessment icon that links to the Grade Summary page. One suggestion is that the team could have touched upon some implementation detail like showing the code flow as a flowchart or even useful UML diagrams for usecases.
The authors have provided use cases for creating new subclass of Questionnaire, SupplementaryReviewQuestionnaire. However, more details can be added to the implementation section such as what new methods will be doing and test plans.
The authors have provided use cases for creating new subclass of Questionnaire, SupplementaryReviewQuestionnaire. However, more details can be added to the implementation section such as what new methods will be doing and test plans.
The authors have provided a nice pictorial description of different strategies using a UML diagram. The could add CRC cards or use cases or the application flow diagrams which will aide in the report presentation.
The authors have provided a nice pictorial description of different strategies using a UML diagram. The could add CRC cards or use cases or the application flow diagrams which will aide in the report presentation.
The authors have provided a mock-up of their final design which seems pretty good. However what's missing is UML diagrams. Something that would help understand the flow of functionality would be useful.
The authors have provided a mock-up of their final design which seems pretty good. However what's missing is UML diagrams. Something that would help understand the flow of functionality would be useful.
The authors have provided a mock up screen of the proposed solution. which clarifies how their solution will look like. However, the use of visual aids seems to be inadequate since, they have not added any class diagram, use-case or sequence diagram to elaborate their solution in depth. Suggestion: You might want to add a diagram for your proposed design pattern as suggested above to improvise your write-up
The authors have provided a mock up screen of the proposed solution. which clarifies how their solution will look like. However, the use of visual aids seems to be inadequate since, they have not added any class diagram, use-case or sequence diagram to elaborate their solution in depth. Suggestion: You might want to add a diagram for your proposed design pattern as suggested above to improvise your write-up
The authors have provided a mock up screen of the proposed solution. which clarifies how their solution will look like. However, the use of visual aids seems to be inadequate since, they have not added any class diagram, use-case or sequence diagram to elaborate their solution in depth. Suggestion: You might want to add a diagram for your proposed design pattern as suggested above to improvise your write-up
The authors have provided a minimal explanation of the changes to be made. They have mentioned about the UI changes and not discussed further. It would be good to include the underlying changes. The team has identified a view file under the potentially modified files. They have not explored the controller and other files that need to be modified in order to support this. A design document needs to holistically portray your design and so it will be great if such details could be included.
The authors have provided a high level view of the changes which are suposed to be made to the system. But since the author hasn't implemented anything until now, it is tough to justify the changes proposed by the author.
The authors have provided a high level solution to the problem statement.  They have mentioned that they are going to use an API for suggestion detection, but have not yet identified one. Suggestion: You can survey on the existing APIs and discuss about at least two of them in depth and specify which one you feel is more compatible with expertiza. This will improve your write-up significantly.
The authors have provided a high level solution to the problem statement.  They have mentioned that they are going to use an API for suggestion detection, but have not yet identified one. Suggestion: You can survey on the existing APIs and discuss about at least two of them in depth and specify which one you feel is more compatible with expertiza. This will improve your write-up significantly.
The authors have provided a high level solution to the problem statement.  They have mentioned that they are going to use an API for suggestion detection, but have not yet identified one. Suggestion: You can survey on the existing APIs and discuss about at least two of them in depth and specify which one you feel is more compatible with expertiza. This will improve your write-up significantly.
The authors have provided a brief design approach of storing the URL and looping it into an email notification, so that instructor would be able to identify which review has been mapped to it. Improvisation: You can try adding information about new functions you wish to add, and if yes, which of the files identified by the mentor do you want to add the function to. This will increase the depth of your design document.
The authors have provided a brief design approach of storing the URL and looping it into an email notification, so that instructor would be able to identify which review has been mapped to it. Improvisation: You can try adding information about new functions you wish to add, and if yes, which of the files identified by the mentor do you want to add the function to. This will increase the depth of your design document.
The authors have proposed to create a view for Grade Summary with the details pertaining to the assignment grades, topics, review scores and total scores for each student which gets rendered when a 360 Assessment tab icon is clicked. This change seems logical. They have also depicted a LowFI sketch of the projected page and screenshot of a rough prototype. These changes seem logical to me. I wonder if they are going to reuse any existing code that they cited as prior work in the background. The documentation could have added specifics of the files that they wish to modify or create.
The authors have proposed changes that they are planning to implement. However, they have not included how they will go on to implement these changes. 
The authors have proposed changes that they are planning to implement. However, they have not included how they will go on to implement these changes. 
The authors have proposed changes that they are planning to implement. However, they have not included how they will go on to implement these changes. 
The authors have proposed changes that they are planning to implement. However, they have not included how they will go on to implement these changes. 
The authors have portrayed their work by adding many code snippets. It is cumbersome to go through the entire code in the write-up. A general approach towards refactoring principles used would have been impressive.
The authors have only mentioned about adding a checkbox field to the view. More changes will be required in order to enforce the deadlines on the students. Suggestion: Add a section called Design Plan to the wiki and mention a rough idea of how you are going to approach the project.
The authors have not specified any implementation specific detail pertaining to the specific controller classes that they propose to modify. So I am not in a position to comment if they are making changes in the wrong class or if it will make the code smelly. The design looks precise and there is no need of any additional gems.  The response time of the system should typically not take so long unless the view is rendering extraordinarily many student and assignment information. The team could implement an effective searching algorithm or use of an efficient data structure to store the student grade information. Or, they could possibly use filters to generate only relevant students (say under a specific course, year at a given University ) The authors have put in good effort in the design documentation except for minor additions (like code modifications, file changes and UML diagrams) which can be easily incorporated by the next review.
The authors have not specified any code changes as of now so I can't comment on it. Suggestion: You might want to add any API Adapter class you plan to implement to generalize the solution for any future API implementations.  
The authors have not specified any code changes as of now so I can't comment on it. Suggestion: You might want to add any API Adapter class you plan to implement to generalize the solution for any future API implementations.  
The authors have not provided any explanation of the tests that they wrote.
The authors have not provided any explanation of the tests that they wrote.
The authors have not mentioned the name of the design pattern used but have mentioned the steps for implementation.
The authors have not mentioned any design pattern that they will be using. They have mentioned the files that need to be modified.
The authors have not mentioned any design pattern that they will be using. They have mentioned the files that need to be modified.
The authors have not mentioned any design pattern that they will be using. They have mentioned the files that need to be modified.
The authors have not included any visual aid in this document. The wiki page of their previous project documentation has a flow chart that has the code flow that shows how the control flows from higher level interface- the specifications in the WebIDL to lower level physical renderer through the intermediate implementation of OffScreenCanvas on Rust and DOM.
The authors have not included any diagrams. Though the purpose and proposed changes are understood, the team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality.
The authors have not included any diagrams. Though the purpose and proposed changes are understood, the team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality.
The authors have not included any diagrams. Though the purpose and proposed changes are understood, the team could have mentioned use case diagrams or a flow chart explaining the flow of the functionality.
The authors have not explained properly the modifications that needs to be made. They have just written the objective.
The authors have not explained properly the modifications that needs to be made. They have just written the objective.
The authors have not explained properly the modifications that needs to be made. They have just written the objective.
The authors have not converted test cases into automated tests. However manual testing has been shown in the vedio link attached
The authors have mentioned the test they have performed but no specific plan is presented. However they have adequate details about what is done and what is tested and how will the corresponding changes look like. edge case descriptions could have been included
The authors have made no changes since it was last reviewed.
The authors have made no changes since it was last reviewed.
the authors have made it clear by including mock-up screen of the proposed solution.  They have used class uml diagram for the newly identified sub-classes and hence, I think that they have made adequate use of visual aids. Suggestion: They can add use cases for the new feature.
the authors have made it clear by including mock-up screen of the proposed solution.  They have used class uml diagram for the newly identified sub-classes and hence, I think that they have made adequate use of visual aids. Suggestion: They can add use cases for the new feature.
The authors have made a really good attempt at explaining the changes to be made, however, I feel like few details could have been added to the previously done work and how they are going to improve it. 
The authors have lucidly explained the changes that are to be made to the system. They show the current state of the system and the expected state which includes a new button to Analyze the review content in the segmented text box. The authors have specified 2 files that they plan to modify namely the view file response.html.erb and a partial _self_review.html.erb. The team clearly show the format of the response popup with suggestion metrics that capture sentiment score, sentiment tone, whether suggestions are present or not, chance of suggestions, volume of text and the volume of text without stop words. They also propose to improve the response time of extracting the output from the API.One suggestion is that the team could have touched upon the working of the suggestion detection algorithm though it is not part of their current implementation. They do mention that it is a black box and have included a link to the deployed NLP project for suggestion algorithm, where users can test the suggestion metrics generated for custom text.
The authors have just mentioned that they are going to do some testing since it is mostly ui based. I would have liked if they could at least give details of steps in each test scenario that could be performed to execute the case, even that is missing. This section is incomplete and would have liked if the authors could put in more effort and details on how to do this
The authors have just mentioned that the test cases were updated. It would be good if the code diff for the test case modification were also provided so that we get an idea about the kind of changes made.
The authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.
The authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.
The authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.
The authors have included all the necessary sections of the design document. However, the document seems to be a very high-level explanation of the problem statement and proposed solutions. Suggestion: You can try elaborating more on the problem statement and the current scenario of the project. e.g. Try explaining what is the threshold for sending an email notification to the users.
The authors have included all the necessary sections of the design document. However, the document seems to be a very high-level explanation of the problem statement and proposed solutions. Suggestion: You can try elaborating more on the problem statement and the current scenario of the project. e.g. Try explaining what is the threshold for sending an email notification to the users.
The authors have included a UML diagram which explains a flow of the diagram The document does not strike a balance in the use of visualization. It lacks at illustrating the changes using appropriate use-cases, mock-up screens to show the expected changes as opposed to the current scenario. The mock-up screen can include sorted values of the field whose headers you clicked upon. Also, there is no need of other visualization aids such as class diagrams, as the modifications are limited to views. 
The authors have included a UML diagram which explains a flow of the diagram The document does not strike a balance in the use of visualization. It lacks at illustrating the changes using appropriate use-cases, mock-up screens to show the expected changes as opposed to the current scenario. The mock-up screen can include sorted values of the field whose headers you clicked upon. Also, there is no need of other visualization aids such as class diagrams, as the modifications are limited to views. 
The authors have included a UML diagram which explains a flow of the diagram The document does not strike a balance in the use of visualization. It lacks at illustrating the changes using appropriate use-cases, mock-up screens to show the expected changes as opposed to the current scenario. The mock-up screen can include sorted values of the field whose headers you clicked upon. Also, there is no need of other visualization aids such as class diagrams, as the modifications are limited to views. 
The authors have included a series of steps to perform the test and have provided screenshots, but do not cover other possibilities.
The authors have included a flowchart which concisely explains the functionality that the authors are going to add. They have also included 2 screenshots of the UI, showing the end result in the 'after' image. UML diagrams are not included. Please add, will give an understanding of how the implementation will be done.
The authors have improved the part of the document that describes the interactions between html and javascript parts since the 1st round. While this assignment does not require an extensive discussion about the design principles or patterns, it would be better if the document explicitly addressed this topic.
The authors have improved the part of the document that describes the interactions between html and javascript parts since the 1st round. While this assignment does not require an extensive discussion about the design principles or patterns, it would be better if the document explicitly addressed this topic.
The authors have given sufficiently good explanation for the changes to be made to the system. They have explained which files they will change as well as the flow of the project.One thing that they have failed to mention is what API are they planning to use. I would like to know that as that would be a key piece of information for this document's completeness.
The authors have given sufficiently good explanation for the changes to be made to the system. They have explained which files they will change as well as the flow of the project.One thing that they have failed to mention is what API are they planning to use. I would like to know that as that would be a key piece of information for this document's completeness.
The authors have given sufficiently good explanation for the changes to be made to the system. They have explained which files they will change as well as the flow of the project.One thing that they have failed to mention is what API are they planning to use. I would like to know that as that would be a key piece of information for this document's completeness.
The authors have explained well what changes they wish to make and how they plan to implement those changes. I would suggest them to add more details like, "where do they store the list of responses more than the notification threshold". Overall good job.
The authors have explained well regarding their design approach to support Hindi language but it has not mentioned if their design is flexible enough to add another languages in the future. I think they can mention if their design can accomodate other languages easily or not.
The authors have explained well regarding their design approach to support Hindi language but it has not mentioned if their design is flexible enough to add another languages in the future. I think they can mention if their design can accomodate other languages easily or not.
The authors have explained well regarding their design approach to support Hindi language but it has not mentioned if their design is flexible enough to add another languages in the future. I think they can mention if their design can accomodate other languages easily or not.
The authors have explained well on what changes they want to make but it is unclear how it will be implemented. As I had suggested in my previous review, they can mention the expertiza files (controllers, views) involved. 
The authors have explained the scope of the project pretty well. But as I mentioned in the earlier review, a whole paragraph on the background of expertiza is not required, one or two sentences would have sufficed.
The authors have explained the scope of the project pretty well. But as I mentioned in the earlier review, a whole paragraph on the background of expertiza is not required, one or two sentences would have sufficed.
The authors have explained the scope of the project pretty well. But as I mentioned in the earlier review, a whole paragraph on the background of expertiza is not required, one or two sentences would have sufficed.
The authors have explained the changes to be made to the system, including screenshots of the tables, UML diagrams as well as all the files that will be modified. Suggestion: Although all the details are explained well in the document, by writing the changes proposed to the files in bullet points or by using a diagram the document will be easier to read.
The authors have explained about their changes neatly, including previous suggestions. They have added detailed description about tablesorter which they plan to implement. The tablesorter is used to sort data for multiple fields for a table, using multi-tbody sorting. They plan to use it in the grades and review_mapping views. They do not plan to implement in their drop-down, but display the sorted data itself on loading the page.  The changes look more clear to me, as they have been able to implement the changes in the table view using multi-tbody sorting for submissions table. I think that introduction to Expertiza is highly unnecessary and should be removed,
The authors have explained about their changes neatly, including previous suggestions. They have added detailed description about tablesorter which they plan to implement. The tablesorter is used to sort data for multiple fields for a table, using multi-tbody sorting. They plan to use it in the grades and review_mapping views. They do not plan to implement in their drop-down, but display the sorted data itself on loading the page.  The changes look more clear to me, as they have been able to implement the changes in the table view using multi-tbody sorting for submissions table. I think that introduction to Expertiza is highly unnecessary and should be removed,
The authors have explained about their changes neatly, including previous suggestions. They have added detailed description about tablesorter which they plan to implement. The tablesorter is used to sort data for multiple fields for a table, using multi-tbody sorting. They plan to use it in the grades and review_mapping views. They do not plan to implement in their drop-down, but display the sorted data itself on loading the page.  The changes look more clear to me, as they have been able to implement the changes in the table view using multi-tbody sorting for submissions table. I think that introduction to Expertiza is highly unnecessary and should be removed,
The authors have done a great job at analyzing the problem statement and explaining clearly their proposed solution. I could easily understand the problem statement from the write-up. Well written. However, the test plan is missing from the design document.  Suggestion :  You might want to add few success test cases and few edge test cases for removing reports.  
The authors have done a great job at analyzing the problem statement and explaining clearly their proposed solution. I could easily understand the problem statement from the write-up. Well written. However, the test plan is missing from the design document.  Suggestion :  You might want to add few success test cases and few edge test cases for removing reports.  
The authors have done a good job listing the changes they plan to implement. But the team have not explained the changes they proposed.
The authors have documented the steps they did to solve the issues. Although they haven't mentioned any particular design principles or design thinking that went on in solving the issues. They should have  explained all the functionalities of each file they have modified and stated why they have modified the particular file. One thing they could have added were class diagrams and dependency maps. Or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea.
The authors have documented the steps they did to solve the issues. Although they haven't mentioned any particular design principles or design thinking that went on in solving the issues. They should have  explained all the functionalities of each file they have modified and stated why they have modified the particular file. One thing they could have added were class diagrams and dependency maps. Or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea.
The authors have documented the steps they did to solve the issues. Although they haven't mentioned any particular design principles or design thinking that went on in solving the issues. They should have  explained all the functionalities of each file they have modified and stated why they have modified the particular file. One thing they could have added were class diagrams and dependency maps. Or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea.
The authors have documented the steps they did to solve the issues in a clean manner. Although they haven't mentioned any particular design principles or design thinking that went on in solving the issues. They have explained all the functionalities of each file they have modified and stated why they have modified the particular file. One thing they could have added were class diagrams and dependency maps. Or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea.
The authors have divided the design into sub-tasks which shows that they are very clear about their approach. As per the problem statement, the added functionality seems complete to me. Suggestion:   You could include an application flow diagram to elaborate more on how your solution will work.
The authors have divided the design into sub-tasks which shows that they are very clear about their approach. As per the problem statement, the added functionality seems complete to me. Suggestion:   You could include an application flow diagram to elaborate more on how your solution will work.
The authors have dine a good job of detailing the issues at hand and their proposed solution. UML diagrams like a flowchart could have been used to further clarify the working of the proposed design.
The authors have described the changes to be made. However these are very abstract and require some technical depth
The authors have described the changes to be made. However these are very abstract and require some technical depth
The authors have described 1-2 solutions of the problem. However, I would suggest them to include more about how these changes will be done and where are these changes going to occur, what files will be affected etc.
The authors have considered various preconditions but edge cases are not tested. No test plan has been provided. Some tests have been edited to meet the new requirements. Many conditions have been checked using 'if else' cases which could have been more elegant.
The authors have considered the requirements and accordingly designed their solutions. The proposed UI design looks very intuitive and the abstract understanding of the code seems to good. However, the implementation is required to say definitely if it makes the code smelly
The authors have adequately explained the changes made to the system. Ot would have been better if some visual modes are added.
The authors have added the screenshots from github which clearly shows the code change. But since there are many changes, the explanation in the wiki is small. A better way would have been to put the links to the git files where the changes are made and there could be more explanations instead. This would also reduce the size of the wiki.
The authors have added the screenshots from github which clearly shows the code change. But since there are many changes, the explanation in the wiki is small. A better way would have been to put the links to the git files where the changes are made and there could be more explanations instead. This would also reduce the size of the wiki.
The authors have added the methods in the right classes. The new design is properly refactored and the gems are relevantly used. The new design might potentially increase the response time of the system because of advanced search option.
The authors have added the methods in the right classes. The new design is properly refactored and the gems are relevantly used. The new design might potentially increase the response time of the system because of advanced search option.
The authors have added the methods in the right class. The code is refactored properly. Appropriate gems have been used. The new system does not increase the response time and is efficient. More effort could have been put in the documentation by providing more UML diagrams and also by designing a test plan.
the authors has worked on write-up.they have worked on the issue which I mentioned in the previous review. The code doesn't seems to be confusing now. the content on the page is in proper format earlier which was not. Test plan still need the team's attention. 
the authors has worked on write-up.they have worked on the issue which I mentioned in the previous review. The code doesn't seems to be confusing now. the content on the page is in proper format earlier which was not. Test plan still need the team's attention. 
The authors gave enough explanations about the design for the UI parts. That is,  how will they design the UI and handle the problems related to UI, but they didn't give the design for how will they deal with the reviews differently when instructors check or uncheck the box. I cannot identify how can they check if the box is checked in the code, and how can they according to the status of the box to make sure the students can only update the previous reviews when the box is unchecked and students can require new reviews when the box is checked.
The authors explain the project pretty well, they also provide a diagram to show the relationship between different sets. However, the solution can be more detailed and maybe cover some edge cases.
The authors explain the project pretty well, they also provide a diagram to show the relationship between different sets. However, the solution can be more detailed and maybe cover some edge cases.
The authors explain the project pretty well, they also provide a diagram to show the relationship between different sets. However, the solution can be more detailed and maybe cover some edge cases.
The authors do not talk much about the technical aspects of how they are going to implement their work. The new design they proposed however seem to go on the right track. However, not much research is done till now.
The authors do not talk much about the technical aspects of how they are going to implement their work. The new design they proposed however seem to go on the right track. However, not much research is done till now.
The authors do not talk much about the technical aspects of how they are going to implement their work. The new design they proposed however seem to go on the right track. However, not much research is done till now.
The authors do not mention the model they will be making additions to. I would suggest the team to consider a new controller, since adding new code to an existing controller may not be OO design.
The authors do not mention the model they will be making additions to. I would suggest the team to consider a new controller, since adding new code to an existing controller may not be OO design.
The authors do not mention the model they will be making additions to. I would suggest the team to consider a new controller, since adding new code to an existing controller may not be OO design.
The authors do not mention the model they will be making additions to. I would suggest the team to consider a new controller, since adding new code to an existing controller may not be OO design.
The authors do not have a section for proposed changes. Hence, it is not completely clear which changes they are proposing and which changes are already existing. 
The authors do not have a section for proposed changes. Hence, it is not completely clear which changes they are proposing and which changes are already existing. 
The authors do not explain why they did the word the way they did. Entirely new pages have been created with no indication as to why those pages were needed . Old redundant code has been commented but not deleted. Naming and code pattern wise, very good job.
The authors do not explain why they did the word the way they did. Entirely new pages have been created with no indication as to why those pages were needed . Old redundant code has been commented but not deleted. Naming and code pattern wise, very good job.
The authors do not explain why they did the word the way they did. Entirely new pages have been created with no indication as to why those pages were needed . Old redundant code has been commented but not deleted. Naming and code pattern wise, very good job.
The authors do a great job of explaining the technical details and the api functionality of the requirements. Furthermore, they provide a list of files that are going to be changed in the scope of this project. However, the document would be more complete if the authors provided more details about specifics of changes. For example the description of high level changes pertaining to the OffscreenCanvasContextRendering2D is adequate, but it would be better if the authors elaborated on the code that is going to be filtered out.
The authors do a great job of explaining how they did their work, and but the why is sometimes not explained. That could be because it's largely self-explanatory.
The authors didn't provide enough information about the components they will use and how they will use. It is difficult to evaluate the complexity of the deign without these information.
The authors did not provide any design for the project.
The authors could have listed out the issues followed by solutions with a diagram and some supporting screenshots. This makes the review easier.
The authors clearly explain about the issues and possible solutions. However, there is no description about the technical aspect and what all tools will be used.
The authors clearly explain about the issues and possible solutions. However, there is no description about the technical aspect and what all tools will be used.
The authors can add the project's purpose (why this feature is important/helpful). The authors have mentioned the plan to use tablesorter jQuery to sort the table but No design plan is included. I suggest the team to remove the introduction to expertiza since it was clearly mentioned in the requirements to not include it.
The authors can add the project's purpose (why this feature is important/helpful). The authors have mentioned the plan to use tablesorter jQuery to sort the table but No design plan is included. I suggest the team to remove the introduction to expertiza since it was clearly mentioned in the requirements to not include it.
The author's work runs smoothly. It could have been better had they provided a short demo video. I could not figure out where were the changes made in the system. They could have written the navigation steps. Directly giving the flow without any context is tough to understand.
The author's work is implemented well and is implemented as expected. Few edge cases can be written to test the code completely.
The author's work is implemented well and is implemented as expected. Few edge cases can be written to test the code completely.
The author seems not sure about exactly what solution they need to use (problem 5). Except that, everything is clear.
The author seems not sure about exactly what solution they need to use (problem 5). Except that, everything is clear.
The author is clear with the intended output for the project but what actual changes are to be made is not yet clear as work on the project might not have started yet.
The author is clear with the intended output for the project but what actual changes are to be made is not yet clear as work on the project might not have started yet.
The author improved the application but still did not fix all the problems. For an instance, the inquiry option is created but it does not work properly. After creating an inquiry the user gets logged out immediately. Also, the created inquiry is not visible under "my inquiries" options. The interest in a particular house option is still not given.
The author hasn't mentioned any prospective changes. So, this couldn't be looked in to.
The author hasn't mentioned any prospective changes. So, this couldn't be looked in to.
The author hasn't mentioned any prospective changes. So, this couldn't be looked in to.
The author hasn't mentioned any prospective changes. So, this couldn't be looked in to.
The author has very well given a background of the system and the problem, which forms a lucid idea of the changes intended by the author in the system. However, the author has only given a very high level view of the changes to be incorporated in the system. There is not much of an explanation, nor an implementation.
The author has very well given a background of the system and the problem, which forms a lucid idea of the changes intended by the author in the system. However, the author has only given a very high level view of the changes to be incorporated in the system. There is not much of an explanation, nor an implementation.
The author has very well given a background of the system and the problem, which forms a lucid idea of the changes intended by the author in the system. However, the author has only given a very high level view of the changes to be incorporated in the system. There is not much of an explanation, nor an implementation.
The author has very well given a background of the system and the problem, which forms a lucid idea of the changes intended by the author in the system. However, the author has only given a very high level view of the changes to be incorporated in the system. There is not much of an explanation, nor an implementation.
The author has not yet presented how the work is going to be done, as work on the project might not have started yet.
The author has not yet presented how the work is going to be done, as work on the project might not have started yet.
The author has not yet presented how the work is going to be done, as work on the project might not have started yet.
The author has not written any plans about the implementation. It only states the problem statement. The author needs to do more work in the writeup.
The author has not written any plans about the implementation. It only states the problem statement. The author needs to do more work in the writeup.
The author has not written any plans about the implementation. It only states the problem statement. The author needs to do more work in the writeup.
The author has not written any plans about the implementation. It only states the problem statement. The author needs to do more work in the writeup.
The author has not used any UML diagram, nor any other forms of pictorial representation. 
The author has not used any UML diagram, nor any other forms of pictorial representation. 
The author has not suggested any changes as of now.
The author has not suggested any changes as of now.
The author has not suggested any changes as of now.
The author has not suggested any changes as of now.
The author has mentioned which files have to be changed but no mention has been made of how they are going to be changed. Could have expanded a bit more on that aspect
The author has mentioned which files have to be changed but no mention has been made of how they are going to be changed. Could have expanded a bit more on that aspect
The author has made a test plan, but it is "reactive" instead of "proactive". The test plan for the changes to be incorporated could be improved a bit further by further consideration about the usage scenario.
The author has made a test plan, but it is "reactive" instead of "proactive". The test plan for the changes to be incorporated could be improved a bit further by further consideration about the usage scenario.
The author has made a test plan, but it is "reactive" instead of "proactive". The test plan for the changes to be incorporated could be improved a bit further by further consideration about the usage scenario.
The author has made a test plan, but it is "reactive" instead of "proactive". The test plan for the changes to be incorporated could be improved a bit further by further consideration about the usage scenario.
The author has given a proper explanation of how the things will be implemented by specifying the files that needs to be modified along with how they are going to merge the grades
the author did not add methods to wrong class.
The aspect of re-producing the issues are very clearly mentioned and hence tests are written briefly which can be easily understood.
The approach taken by the team to increase the code coverage has not been clearly stated. Also there is no mention about what was the existing code coverage and how much did the team increase it to?
The approach taken by the team to increase the code coverage has not been clearly stated. Also there is no mention about what was the existing code coverage and how much did the team increase it to?
The approach taken by the team to increase the code coverage has not been clearly stated. Also there is no mention about what was the existing code coverage and how much did the team increase it to?
The approach looks fine to me. It should be easy to test it based on the test plan given. Any design patterns used??
The approach is clear, but is not clear as to what changes will be needed in the system.
The approach is clear, but is not clear as to what changes will be needed in the system.
The application seems to have been developed, but not tested enough, as apart from just naviagtional bugs, there are also functional bugs. Many of the required things are also not implemented, hence there was not much stuff to rate for.
The application portal is same for all the 3 users. Therefore all users have been given same permissions.   ReadMe does not contain admin credentials . Hence, can't test admin functionalities
The application portal is same for all the 3 users. Therefore all users have been given same permissions.   ReadMe does not contain admin credentials . Hence, can't test admin functionalities
The application portal is same for all the 3 users. Therefore all users have been given same permissions.   ReadMe does not contain admin credentials . Hence, can't test admin functionalities
The application is modled according to the ruby practices but lacks the use of ruby features such as validations , associations and active record. 
The application is modled according to the ruby practices but lacks the use of ruby features such as validations , associations and active record. 
The application is breaking on clicking on the basic functionalities such as show or edit. NoMethodError in Users#show Showing /home/henry/OODesign/ooddprogram2/app/views/users/show.html.erb where line #29 raised: undefined method `realtor' for nil:NilClass Extracted source (around line #29): 27 28 29 30 31 32     <% if !current_user.realtor.nil? %> You are registered as a realtor, please visit your realtor home page here: <%= link_to "Realtor's Home Page", home_realtor_path(current_user.realtor.id) %> <% end %>   
The application is breaking on clicking on the basic functionalities such as show or edit. NoMethodError in Users#show Showing /home/henry/OODesign/ooddprogram2/app/views/users/show.html.erb where line #29 raised: undefined method `realtor' for nil:NilClass Extracted source (around line #29): 27 28 29 30 31 32     <% if !current_user.realtor.nil? %> You are registered as a realtor, please visit your realtor home page here: <%= link_to "Realtor's Home Page", home_realtor_path(current_user.realtor.id) %> <% end %>   
The application hasn't been deployed (or they forgot to submit the deployed link).  
The application hasn't been deployed (or they forgot to submit the deployed link).  
The application has really come a long way from the previous submission. I believe most of the page routes follow an appropriate application flow. There are several of the dependencies that are evidently not implemented do to the following observations: (1) Users are able to assign him/herself a Real Estate Company that doesn't exist in the system. This assignment should only be made with existing companies to fulfill the requirement of mapping a realtor to a single company. This missing dependency also reflects in the creation of houses. Realtors are able to create houses that are not listed with the company that the realtor is associated with. This association should be automatically made according to the company assigned to the realtor. (2) Users can be both a hunter and a realtor at the same time and can switch back and forth. How do you differentiate between a users abilities? Probably the best option would be to only allow users to be either a house hunter or a realtor. That would eliminate some of the ambiguities is associations and some unnecessary profile fields like house hunters having a real estate company. (3) Inquiries are not associated with houses. This posses an issue with knowing what property the house hunter is requesting information about. Overall, there have been great advances in your application since the first submit. Continue implementing those dependencies so that the required associations can hold.  
The application has bare minimum functionalities of what was required. A user signup and login has been implemented, but no information about what type of user has signed up/ logged in is available. ReadMe file is the default and no changes have been made to it.
The application has bare minimum functionalities of what was required. A user signup and login has been implemented, but no information about what type of user has signed up/ logged in is available. ReadMe file is the default and no changes have been made to it.
The application has bare minimum functionalities of what was required. A user signup and login has been implemented, but no information about what type of user has signed up/ logged in is available. ReadMe file is the default and no changes have been made to it.
The application has almost all of the basic functionalities including pictures uploading functionality, however the below fails:  > A House hunter is able to see the companies and edit them as well. > A realtor can  create houses without adding any details at all.
The application flow help understands how your design work, but maybe you can add more visual aids to help understand your design more easily. 
The application flow help understands how your design work, but maybe you can add more visual aids to help understand your design more easily. 
The application code is properly divided into modules. the controller have defined functions for various tasks. The functionalities of interest list , potential buyers , replies to inquires are missing from the application. Class Reg1 is not a proper name for the class . Also the class is included in the houses controller which is not a good programming practice. The developers should have created a new controller for the Reg1 class. The validations are missing for Company details. Also separate sessions are created for different user types.
The application code is properly divided into modules. the controller have defined functions for various tasks. The functionalities of interest list , potential buyers , replies to inquires are missing from the application. Class Reg1 is not a proper name for the class . Also the class is included in the houses controller which is not a good programming practice. The developers should have created a new controller for the Reg1 class. The validations are missing for Company details. Also separate sessions are created for different user types.
The application code is properly divided into modules. the controller have defined functions for various tasks. The functionalities of interest list , potential buyers , replies to inquires are missing from the application. Class Reg1 is not a proper name for the class . Also the class is included in the houses controller which is not a good programming practice. The developers should have created a new controller for the Reg1 class. The validations are missing for Company details. Also separate sessions are created for different user types.
The app was designed according to the ruby conventions and coding practices. The necessary authorizations are used along with gems to handle user session. Some models do not have the complete validations but the validations in place are using the ruby practices. The active record and association between models is also used in the project. 
The APP URL provided didn't work
The APP URL provided didn't work
The app has the functionalities but the user display is available to all users even though that functionality has to be exclusive to the admin of the app. The realtor also has no means to add a new company and there is no way to edit the user's profile
The app has the functionalities but the user display is available to all users even though that functionality has to be exclusive to the admin of the app. The realtor also has no means to add a new company and there is no way to edit the user's profile
The admin login ID and password provided in the Readme won't let me log in to the admin's account. Hence, couldn't test the admin profile information.    
The admin login ID and password provided in the Readme won't let me log in to the admin's account. Hence, couldn't test the admin profile information.    
The admin is unable to destroy a real estate company due to the above mentioned dependency bug on the model files. Since all users are listed in a common view without information about who is a realtor and who is a house hunter, the admin would be unable to specifically test removing a type of user unless he/she creates one themselves. On changing real estate company through update for a realtor, the real estate company change was reflected else where, updation has been implemented well. The realtor is also unable to see the inquires or reply to them.
The admin is unable to destroy a real estate company due to the above mentioned dependency bug on the model files. Since all users are listed in a common view without information about who is a realtor and who is a house hunter, the admin would be unable to specifically test removing a type of user unless he/she creates one themselves. On changing real estate company through update for a realtor, the real estate company change was reflected else where, updation has been implemented well. The realtor is also unable to see the inquires or reply to them.
The admin is unable to destroy a real estate company due to the above mentioned dependency bug on the model files. Since all users are listed in a common view without information about who is a realtor and who is a house hunter, the admin would be unable to specifically test removing a type of user unless he/she creates one themselves. On changing real estate company through update for a realtor, the real estate company change was reflected else where, updation has been implemented well. The realtor is also unable to see the inquires or reply to them.
The admin is tested. The user model is not completely tested. Only the admin functionality is implemented
The admin functionality is tested well, however there are some fields like validations of phone number which are yet to be tested or improved upon
The admin credentials provided don't work and hence no admin functionality can be tested.
The admin account is created in the user model instead of the database seeds file. Other than that, the project looks pretty good code wise.
The added features work as expected, though the login info on the write-up didn't work for me.
The actual project work might not have been started yet so the code modifications have not been mentioned. But the files to be modified seem appropriate.
The "Test Plan" section is missing in the writeup. But, they have included a separate section for explaining Rspec based automated test cases.
The 'why' part is missing for the code changes. What does each code line of change do? Maybe you'll can incorporate that.
The 'why' part is missing for the code changes. What does each code line of change do? Maybe you'll can incorporate that.
The 'View Listings' page for a realtor errors out and does not render when the admin deletes a house hunter who is also a potential buyer for various houses. The inquiries get deleted though, but the application breaks when it comes to handling potential buyers.
The 'View Listings' page for a realtor errors out and does not render when the admin deletes a house hunter who is also a potential buyer for various houses. The inquiries get deleted though, but the application breaks when it comes to handling potential buyers.
Text Plan is Missing
Text Plan is Missing
Text Plan is Missing
Tests in the file pass, according to the video, but less than 100% coverage implies that corner cases aren't being handled.
Tests in the file pass, according to the video, but less than 100% coverage implies that corner cases aren't being handled.
Tests have been implemented for a model and a controller. However, I believe that they are not exhaustive. Only one test case which will succeed has been implemented. You should try to implement more test cases, like what happens when one of the things which is mandatory is absent. Further, I am afraid that the tests are not testing the correct thing. For eg, should create real_estate_company tests  assert_redirected_to "/real_estate_companies/#{r.id}" while it should be testing if the company can be saved.
Tests have been implemented for a model and a controller. However, I believe that they are not exhaustive. Only one test case which will succeed has been implemented. You should try to implement more test cases, like what happens when one of the things which is mandatory is absent. Further, I am afraid that the tests are not testing the correct thing. For eg, should create real_estate_company tests  assert_redirected_to "/real_estate_companies/#{r.id}" while it should be testing if the company can be saved.
Tests for controllers look good. Need to include more tests for models.
Tests exist for the controller but not models.
Tests exist for the controller but not models.
Tests can be made more exhaustive. For now it looks like only the view will be tested but controller should be tested as well.
Tests can be made more exhaustive. For now it looks like only the view will be tested but controller should be tested as well.
Tests can be made more exhaustive. For now it looks like only the view will be tested but controller should be tested as well.
Tests are well covered. However, I don't see how the nicely constructed use case diagram is appropriate to be placed in the "Test Plan" section.
Tests are well covered. However, I don't see how the nicely constructed use case diagram is appropriate to be placed in the "Test Plan" section.
Tests are good, but RSpec wasn't used for any of them.
Tests are given at a very high level and need to be described properly.
Tests are given at a very high level and need to be described properly.
Tests are given at a very high level and need to be described properly.
Testing was not part of the requirements. Team did manual testing.
Testing plan not included.  
Testing plan is still missing. The author has given a very high level view of the changes to be incorporated in the system. There is not much of an implementation.
Testing Plan is stated and project design is not explained in depth.
Testing plan is not included. However, somewhat of an idea can be obtained from the steps to reproduce.
Testing plan is not included. However, somewhat of an idea can be obtained from the steps to reproduce.
Testing plan is not included. However, somewhat of an idea can be obtained from the steps to reproduce.
Testing plan is not included. However, somewhat of an idea can be obtained from the steps to reproduce.
Testing plan is missing. Overall looks good. Can add snapshots. Lists out all the functionalities The project is complete and sound enough in its approach and the implementations.
Testing plan is empty.
Testing plan is empty.
Testing plan didn't outline what the automated tests were or how it is done. The video showed the features being fixed. Also the hosted expertiza site was not working.
Testing plan didn't outline what the automated tests were or how it is done. The video showed the features being fixed. Also the hosted expertiza site was not working.
Testing is not covered.
Testing is not covered.
Testing is not covered.
Testing is not covered.
Testing is done manually and there is mention of automated tests in the wiki but no files are seen. It's better to provide all links like github code, testing videos and wiki while submitting on expertiza.  
Testing is absent in the project. This could have been because (by the looks of it) the issues were too small (only 20-30 lines code). Refer RSpec documentation to write tests. It is easy to follow.
Testing has not been performed appropriately. Handling only one case isnt called testing
Testing has not been done. Models and controllers are well designed hence the 2 points. You could have used basic RSpec tests to validate the flow of control.
Testing has not been done. Models and controllers are well designed hence the 2 points. You could have used basic RSpec tests to validate the flow of control.
Testing has not been done yet.
Testing has not been done yet.
Testing has not been done for any modle or controller yet
Testing has not been done for any modle or controller yet
Testing has been done well. Testing could have been more extensive. Currently the system only tests if the responses are correct for proper input. Blank or no input or failing cases should also have been tested.
Testing for the UI changes has not been done. Maybe they were not supposed to, but if they were, more documentation in the wiki would be helpful.
Testing for controllers has been completed. Unfortunately test cases for models were not worked on. A suggestion could be to test validation of inquiry if corresponding realtor or house hunter gets deleted.
Tested but not thoroughly.
Tested but not thoroughly.
Test skeleton present. However, tests can be made in depth.
Test skeleton present. However, tests can be made in depth.
Test plans are present but have not explained in detail. A brief description  of the use case with the test plan and RSpec would be perfect 
Test plans are present but have not explained in detail. A brief description  of the use case with the test plan and RSpec would be perfect 
Test plans are present but have not explained in detail. A brief description  of the use case with the test plan and RSpec would be perfect 
Test plans are present but have not explained in detail. A brief description  of the use case with the test plan and RSpec would be perfect 
Test Plans are missing
Test Plan too brief. Could add scenarios and description. 
Test Plan too brief. Could add scenarios and description. 
Test Plan section is not maintained in the documentation
Test Plan section is not maintained in the documentation
Test plan section is missing.
Test plan not included.
Test plan not included
Test plan not included
Test plan needs to be expanded to describe each unit/functional test team plans to write for each of the reports. 
Test plan needs to be expanded to describe each unit/functional test team plans to write for each of the reports. 
Test plan missing. Links section empty(placeholder could have been provided or don't mention it at all). No design proposed.
Test plan missing. Links section empty(placeholder could have been provided or don't mention it at all). No design proposed.
Test plan missing.
Test plan missing.
test plan missing.
Test plan looks very generic.
Test plan looks very generic.
Test plan looks good
Test plan is very shallow. Only the headings are mentioned. A proper description of what is the test for and what to expect from each test will be helpful in understanding.
Test plan is very shallow. Only the headings are mentioned. A proper description of what is the test for and what to expect from each test will be helpful in understanding.
test plan is specified, but UML is missing. They have added the ER diagram though, which i don't think is required here.
test plan is specified, but UML is missing. They have added the ER diagram though, which i don't think is required here.
test plan is specified, but UML is missing. They have added the ER diagram though, which i don't think is required here.
test plan is specified, but UML is missing. They have added the ER diagram though, which i don't think is required here.
Test Plan is not present.
Test Plan is not present.
Test Plan is not present.
Test plan is not mentioned. Currently test cases are not running because of model file missing. Youtube video with description will be useful to show how the tests are running and if any of them fail
Test plan is not included however they have included the diffeedif test cases implemented and the exolaexplan is good.
Test plan is not included however they have included the diffeedif test cases implemented and the exolaexplan is good.
Test Plan is missing
Test Plan is missing
Test plan is missing
Test plan is missing
Test plan is manual. No RSPEC files included. 
Test plan is manual. No RSPEC files included. 
Test plan is manual. 
Test plan is included in the Writeup section. They have explained about the basic test cases and how it is implemented. Edge cases, invalid inout values arent explained in the writeup.
Test plan is given a appreciable thought and team has also implemented test scenarios mainly in student_task_controller_spec.rb Would suggest team to try and increase test coverage.
Test Plan is explained in detail. It covers Integration Testing and Functional checks. However some unit testing of the new models should also be covered.
Test plan is discussed in the write up. It could have been supported with some use-cases.
Test plan is discussed in the write up. It could have been supported with some use-cases.
Test plan is clear but doesn't have any test cases.
Test plan is clear but doesn't have any test cases.
Test plan is blank... The diagrams are good but a little more writing on what you are planning to do would have been nice
Test plan is blank... The diagrams are good but a little more writing on what you are planning to do would have been nice
Test Plan hasn't been defined because the testing is carried out by Mozilla
Test plan has been well implemented for one of the issues. The test plan does not show what happens if a user tries to create a new account with a space in the username. 
Test plan has been well implemented for one of the issues. The test plan does not show what happens if a user tries to create a new account with a space in the username. 
Test plan does not contain edge cases or the step by step procedure for performing test.
Test plan does not contain edge cases or the step by step procedure for performing test.
Test Plan could be described better.
Test Plan could be described better.
Test is implemented only for model. No test is implemented for controllers.
Test for user model is done.  One test for static pages controller is done.
Test for model are missing. Basic test cases for controllers are present but the testing is not through.
Test for model are missing. Basic test cases for controllers are present but the testing is not through.
Test coverage has increased by a very small margin. More tests would have been better. There are only 2 tests. There are various other scenarios that could have been tested like missing or wrong attributes in request,email.
Test cases written and system is checked and positive testing is done properly. Team could perform one round of testing and solve minute errors still present.
test cases were not part of the requirement doc. Test plan added in the wiki. Could have added more negative test cases.
test cases were not part of the requirement doc. Test plan added in the wiki. Could have added more negative test cases.
Test cases were not mentioned. Can't test as the link to the deployed application is not working(Unable to login with correct user credentials. Even after giving forgot password, did not receive password reset email) nor the screencast video link is provided. Please include check either of them.
Test cases were not mentioned. Can't test as the link to the deployed application is not working(Unable to login with correct user credentials. Even after giving forgot password, did not receive password reset email) nor the screencast video link is provided. Please include check either of them.
Test cases seem to be written neatly. It seems team has spent most of the time on coding, I would request team to perform rounds of negative test cases that might help them avoid functionalities fail and system credentials. System allows to provide same email id to  realtor as well has house-hunter, but they have also provided ROLE while signing in, that distinguishes a user who is house hunter and realtor both. 
Test cases seem to be written neatly. It seems team has spent most of the time on coding, I would request team to perform rounds of negative test cases that might help them avoid functionalities fail and system credentials. System allows to provide same email id to  realtor as well has house-hunter, but they have also provided ROLE while signing in, that distinguishes a user who is house hunter and realtor both. 
Test cases seem to be written neatly. It seems team has spent most of the time on coding, I would request team to perform rounds of negative test cases that might help them avoid functionalities fail and system credentials. System allows to provide same email id to  realtor as well has house-hunter, but they have also provided ROLE while signing in, that distinguishes a user who is house hunter and realtor both. 
Test cases not passed
Test cases for the user have not been implemented.
Test cases for the user have not been implemented.
Test cases for 'house controller' have been implemented in the code. No test cases for model exist.
Test cases are yet to be added
Test Cases are written very well and system is tested well till some extend but many small cases needs to still handled.
Test Cases are written very well and system is tested well till some extend but many small cases needs to still handled.
Test Cases are written very well and system is tested well till some extend but many small cases needs to still handled.
Test cases are not part of requirement spec.
Test cases are not part of requirement spec.
Test cases are not being taken cared.
Test cases are not being taken cared.
Test cases are not being taken cared.
Test cases are failing
Test cases are failed
Test cases added but the video is not very explanatory in itself to understand the test plan.
Test cases added but the video is not very explanatory in itself to understand the test plan.
Test case has been added, however no way to test it.
Test case has been added, however no way to test it.
Test case has been added, but Since i cannot run it locally, i am not sure if it is passing or not.
Test case 1 could have been handled better.
Test case 1 could have been handled better.
Teams looks fairly active but the project progress does not correspond to the number of commits made in the git repository
Team needs to work upon adding more content in the document. Project design needs to be explained more with text and bullets. Team should add Test Plan.
Team needs to work upon adding more content in the document. Project design needs to be explained more with text and bullets. Team should add Test Plan.
Team have explained the Problem/Steps to Reproduce are really very clear. Solution part could have been explained better. Overall its a good work
Team have explained the Problem/Steps to Reproduce are really very clear. Solution part could have been explained better. Overall its a good work
Team have explained the Problem/Steps to Reproduce are really very clear. Solution part could have been explained better. Overall its a good work
Team have decided to give all details after final submission. A Design Doc should be available before starting the Project. I would recommend to provide few details on Project Design (classes involved in the project or application flow etc)
Team have decided to give all details after final submission. A Design Doc should be available before starting the Project. I would recommend to provide few details on Project Design (classes involved in the project or application flow etc)
Team have decided to give all details after final submission. A Design Doc should be available before starting the Project. I would recommend to provide few details on Project Design (classes involved in the project or application flow etc)
Team have decided to give all details after final submission. A Design Doc should be available before starting the Project. I would recommend to provide few details on Project Design (classes involved in the project or application flow etc)
Team have decided to give all details after final submission. A Design Doc should be available before starting the Project. I would recommend to provide few details on Project Design (classes involved in the project or application flow etc)
Team have decided to give all details after final submission. A Design Doc should be available before starting the Project. I would recommend to provide few details on Project Design (classes involved in the project or application flow etc)
Team has written test cases , but they need to few more rounds of testing, including positive test cases as well as negative test cases.
Team has written test cases , but they need to few more rounds of testing, including positive test cases as well as negative test cases.
Team has used screenshots to show the current scenario but any flowcharts/UML to describe how they are solving the problem is missing. Adding these will make the document easier for anyone not familiar the project understand it better
Team has used screenshots to show the current scenario but any flowcharts/UML to describe how they are solving the problem is missing. Adding these will make the document easier for anyone not familiar the project understand it better
Team has used in-style tags to add CSS styling in HTML pages. They instead need to create an external CSS, define the styling there and use the class names in HTML tags. This provides styling maintainability throughout application.
Team has tried well to cover up edge functionalities but still can work on below measures: 1. if we try to delete an entity associated with other entity, system crashes. 2. I can not see company field associated with realtor while creating a realtor. 3. Inquiry functionality is difficult to understand. As mentioned in Readme it does go into error, but i did not receive any mail for it. Also I can not see inquiry associated with house. 4. We can upload image but image is visible as activerecord id and not as image when viewing the house.     Potential buyer functionality not working.     Search house functionality not working.  
Team has tried well to cover up edge functionalities but still can work on below measures: 1. if we try to delete an entity associated with other entity, system crashes. 2. I can not see company field associated with realtor while creating a realtor. 3. Inquiry functionality is difficult to understand. As mentioned in Readme it does go into error, but i did not receive any mail for it. Also I can not see inquiry associated with house. 4. We can upload image but image is visible as activerecord id and not as image when viewing the house.     Potential buyer functionality not working.     Search house functionality not working.  
Team has tried well to cover up edge functionalities but still can work on below measures: 1. if we try to delete an entity associated with other entity, system crashes. 2. I can not see company field associated with realtor while creating a realtor. 3. Inquiry functionality is difficult to understand. As mentioned in Readme it does go into error, but i did not receive any mail for it. Also I can not see inquiry associated with house. 4. We can upload image but image is visible as activerecord id and not as image when viewing the house.     Potential buyer functionality not working.     Search house functionality not working.  
Team has tried very well to fix the problems from first release and succeeded partially. Errors and form validations are still not specific. Below are few basic functionalities team could work upon. 1. House hunter is able to create and edit company as well as houses. 2. Admin can create users but no passwords.  
Team has tried very well to fix the problems from first release and succeeded partially. Errors and form validations are still not specific. Below are few basic functionalities team could work upon. 1. House hunter is able to create and edit company as well as houses. 2. Admin can create users but no passwords.  
Team has tried very well to fix the problems from first release and succeeded partially. Errors and form validations are still not specific. Below are few basic functionalities team could work upon. 1. House hunter is able to create and edit company as well as houses. 2. Admin can create users but no passwords.  
Team has tried very well to associate relationship between models. It can be seen implemented, But thats also causing system crash when conditions not met. 
Team has tried very well to associate relationship between models. It can be seen implemented, But thats also causing system crash when conditions not met. 
Team has tried very well to associate relationship between models. It can be seen implemented, But thats also causing system crash when conditions not met. 
Team has tried implementing relation between model, but they does not seem to work well. deleting one branch of relation does not affect other branch though they are associated. 
Team has tried implementing relation between model, but they does not seem to work well. deleting one branch of relation does not affect other branch though they are associated. 
Team has tested hounse hunter functionalities but not admin and realtor functionalities. Register page asks us to put credentials twice. We are able to register for house hunter only irrespective of choosing any field (house hunter or realtor). Hence I am not able to login into realtor account. Also could not find any credentials for admin, realtor or house hunter in readme file.  Hence not able to login into admin account also.   New link provided in document is not working. If would be great it team could check the link and come back.
Team has tested hounse hunter functionalities but not admin and realtor functionalities. Register page asks us to put credentials twice. We are able to register for house hunter only irrespective of choosing any field (house hunter or realtor). Hence I am not able to login into realtor account. Also could not find any credentials for admin, realtor or house hunter in readme file.  Hence not able to login into admin account also.   New link provided in document is not working. If would be great it team could check the link and come back.
Team has not proposed any solution for fixing the issue. They should add their approach in the documentation.
Team has not mentioned test cases that they are going to write. Manual testing steps are mentioned. Team should work on adding test cases, as manual test does not help to check  all the corners of the complex system well.
Team has majorly include diagrams for the code change and algorithm flows. Team should add UML diagrams to explain flow of the application change, sequence of actions, actors involved. 
Team has majorly include diagrams for the code change and algorithm flows. Team should add UML diagrams to explain flow of the application change, sequence of actions, actors involved. 
Team has given information on how it will work after the the project is done. Could have given more detail on Design using UML diagrams and Files invovled in the Project
Team has given information on how it will work after the the project is done. Could have given more detail on Design using UML diagrams and Files invovled in the Project
Team has given information on how it will work after the the project is done. Could have given more detail on Design using UML diagrams and Files invovled in the Project
Team has added most of the missing screenshots. There will be no design patterns involved in bootstrap so i'd say the document is now complete. Only thing i would suggest is, since bacui may not have a wiki, this document can be moved to a wiki page of github repository. 
Team has added manual testing under test plan. Team should also add automated test cases or brief plan on how they are going forward with automated testing of the changes.
Team has added capybara test. but team could have worked upon improving test coverage. Team can explain test description in test plan in wiki, step by step so as to understand what all test scenarios were covered.
Team has added a flow diagram and system screenshots. Team could added UML diagrams, so as to understand sequence of events or actors involved.
Team has added a diagram that explains the problem statement and its effects, very well. Team could add UML diagrams to explain the application, changes, sequence of actions, state , actors involved.
Team did not explained project well with the description. Diagrams do explain the approach, but for a reader to get the overview but text description is also important. Team can work on adding text description. Same had been suggested in the last review.  
Team did not explained project well with the description. Diagrams do explain the approach, but for a reader to get the overview but text description is also important. Team can work on adding text description. Same had been suggested in the last review.  
Team could have given more description on what is the Participant.rb is doing
Team could have given more description on what is the Participant.rb is doing
Team could have added test plan in wiki along with test covered and test description. Also could have worked upon increasing test coverage.
Team could have added test plan in wiki along with test covered and test description. Also could have worked upon increasing test coverage.
Team continuously pushing changes into github. I could not see distribution of work done equally. I could see 46 commits with a neat and easy to understand README file.
Team can explain the algorithm they are going to follow or mention part of files they are going to make changes in. As changes do not seem heavy , it should not increase system response time. Team needs to put more efforts expended on the design and explain the efforts.
System works well except for the sign up feature.
Suggested changes related to naming convention are not included in the 2nd round.  variable names : rop_topic_deadline1 , topic_id1 Puts statements are not removed : p topic_id1   Other than this the code is properly written following coding best practices.  
Success in edge case testing is determined by the association of the module, to self or with other modules. Many edge cases in this application are dependent on relationships between modules. For example, because houses are not properly associated with realtors or companies, reassigning a realtor's company appears to have no affect. Administrators are not able to delete users or companies, but  I would image it would not throw an error. There are cases that I tested that dealt specifically around the models. Example: user accounts can be created with the same email accounts as long as they are of different user types. This and other edge cases of it type proved successful. It would be great to have edge case information listed in the ReadMe to clarify how these cases were dealt with. Again, implementing the necessary dependencies between models will help to eliminate many of these edge case issues. 
Student dashboard   Please see the dashboard. The UI elements are not properly aligned. The title "Current Assignments" is not where it should be. 
Student dashboard   Please see the dashboard. The UI elements are not properly aligned. The title "Current Assignments" is not where it should be. 
Student dashboard   Please see the dashboard. The UI elements are not properly aligned. The title "Current Assignments" is not where it should be. 
Stress is given to MVC architecture. But proper comments in the code section can simplify the code understanding for other users.
Stress is given to MVC architecture. But proper comments in the code section can simplify the code understanding for other users.
Still no visualizations of any kind
Still missing the details.
Still missing the details.
Still have lots of tests across all of the models and controllers but nothing super extensive that attempts to cover all possible cases.
Still did not pass the Travis CI
Still did not pass the Travis CI
Still a lot of code on the writeup page.
Still a lot of code on the writeup page.
Still 25 issues, checked by codeclimate, to fix
Still 25 issues, checked by codeclimate, to fix
Started committing after round 1
Spec needs to be fixed before merge.
Spec folder is not there. There are some tests in the test folder.
Spec folder is not there. There are some tests in the test folder.
Spec folder is not there. There are just some automatically generated tests in the test folder. Model/controller testing has not been done.
Spec folder is not there. There are just some automatically generated tests in the test folder. Model/controller testing has not been done.
Source code is good in all spots, except the last unit test. I was unable to figure out why it did not work.
Source code is good in all spots, except the last unit test. I was unable to figure out why it did not work.
Source code is good in all spots, except the last unit test. I was unable to figure out why it did not work.
Some very basic testing is done for controllers, nothing in models
Some very basic testing is done for controllers, nothing in models
Some travis ci tests have failed and some code climate issues are still pending, though the commit comments say that the issues aren't related to the project files. But they have tried to fix the issues though so good work.
Some travis ci tests have failed and some code climate issues are still pending, though the commit comments say that the issues aren't related to the project files. But they have tried to fix the issues though so good work.
Some travis ci tests have failed and some code climate issues are still pending, though the commit comments say that the issues aren't related to the project files. But they have tried to fix the issues though so good work.
Some tests present only for houses controller.
Some test cases are written but not complete for one model and controller.
Some test cases are missing for complicated flows like Real Estate Company should only be deleted when there are no realtors assigned.
Some small coding guideline related problems are there which can be addressed.
Some screenshots of actual emails sent and proposed format of the new email would be helpful
Some screenshots of actual emails sent and proposed format of the new email would be helpful
Some parts of the writeup are not includeed, such as test plan. 
Some parts of the writeup are not includeed, such as test plan. 
Some parts of the code are still left to be implemented
Some parts of the code are still left to be implemented
Some of the tests passed but there are still some unresolved build errors on Travis CI. There are pending issues which need to be rectified
Some of the relationships are handled in the project.  I can't find the other important association like: 1. company has many houses(why it is commented?) 2. house belongs to a user or a company    
Some of the missing relationships I identified: 1. Company has_many houses 2. House has_many inquiries 3. Realtor has_one company
Some of the missing relationships I identified: 1. Company has_many houses 2. House has_many inquiries 3. Realtor has_one company
Some of the functions are too long such as #delete function.
Some of the functions are too long such as #delete function.
Some of the functionalities have been implemented but the pull request is yet to be merged with the master branch
Some of the functionalities are not fully implemented. Admin login functionality is failing. The credentials given in the Readme file are probably wrong. Houses listed by realtors are not being displayed in the index page.  The edit, delete houses by realtor is not functional Realtors are unable to view inquiries and submit replies House hunters are unable to create interest lists and hence both interest list and potential buyers functionality is missing from the application. 
Some of the functionalities are not fully implemented. Admin login functionality is failing. The credentials given in the Readme file are probably wrong. Houses listed by realtors are not being displayed in the index page.  The edit, delete houses by realtor is not functional Realtors are unable to view inquiries and submit replies House hunters are unable to create interest lists and hence both interest list and potential buyers functionality is missing from the application. 
Some of the functionalities are not fully implemented. Admin login functionality is failing. The credentials given in the Readme file are probably wrong. Houses listed by realtors are not being displayed in the index page.  The edit, delete houses by realtor is not functional Realtors are unable to view inquiries and submit replies House hunters are unable to create interest lists and hence both interest list and potential buyers functionality is missing from the application. 
Some of the diagrams are quite complex to understand.
Some of the controllers have tests
Some names are ambiguous, like pptn, I cannot know clearly what this name is for.  
Some more visual aids would better help the reviewers understand how the Offscreen canvas context would be different to the existing environment.
some more test cases would be useful
some mock UI where this is going to be implemented would be helpful
Some methods were long and there was a lot of commented-out code. There was at least one instance of bad indentation. Otherwise, the methods were overall fairly short and the naming was sensible.
Some methods were long and there was a lot of commented-out code. There was at least one instance of bad indentation. Otherwise, the methods were overall fairly short and the naming was sensible.
Some methods are a bit long and nest quite deep.
Some methods are a bit long and nest quite deep.
Some indentation issues in the project.For example in index.html.erb indentation is not proper. Splelling mistakes.For example in hunters view in index .html.erb  prefered spelling is wrong.
Some indentation issues in the project.For example in index.html.erb indentation is not proper. Splelling mistakes.For example in hunters view in index .html.erb  prefered spelling is wrong.
some improvements are required to deployed the code onto the production server. The code should included proper commenting so that if the future team picks up from this project, they could know what exactly the code is doing.
Some improvements are required before deploying it to the main server. There are changes suggested by codeclimate which need to be looked upon. The future team must ensure to pass the build. There is scope for the new tests to be written and code that would improve the overall coverage. Overall, the team has done a commendable effort with respect to the difference in the first and second submission
Some functions have the same code deleted and added again which could've been avoided, like  schema.rb line 105 & 110, lines 741-743 & 745-747 and more lines similarly in that file
Some functions have the same code deleted and added again which could've been avoided, like  schema.rb line 105 & 110, lines 741-743 & 745-747 and more lines similarly in that file
Some files like comment.rb don't suggest what they are used for
Some files like comment.rb don't suggest what they are used for
Some edge cases are missing, so I assume most of them work. 
Some edge cases are missing, so I assume most of them work. 
some edg cases are working.
some direction code is ambiguous
Some controllers are tested. Models are not tested thoroughly.
Some cases haven't been implemented yet.
some branches are skipped by the "allow" statement. If a method would raise an exception, then test whether it would raise it. 
some branches are skipped by the "allow" statement. If a method would raise an exception, then test whether it would raise it. 
some branches are skipped by the "allow" statement. If a method would raise an exception, then test whether it would raise it. 
Some aspects of the designs are not clearly mentioned: eg: After the author adds new questions for the second review, how will the instructor validate if the right questions that satisfy the requirements of the project are being asked. 
Some aspects of the designs are not clearly mentioned: eg: After the author adds new questions for the second review, how will the instructor validate if the right questions that satisfy the requirements of the project are being asked. 
Some "let" methods, like participant2, student2, response_map2, are repetitive.
Some "let" methods, like participant2, student2, response_map2, are repetitive.
Some "let" methods, like participant2, student2, response_map2, are repetitive.
Solutions have been proposed. How they are going to do that is not mentioned.
Solutions have been proposed. How they are going to do that is not mentioned.
Solution and class level details are missing.
Solution and class level details are missing.
Solution and class level details are missing.
Solution and class level details are missing.
So far whatever is discussed seems to go in the right direction.However, not much research is done so far. I would suggest them to quickly start researching about how they are going to work and how will the technologies they plan to use work.
So far whatever is discussed seems to go in the right direction.However, not much research is done so far. I would suggest them to quickly start researching about how they are going to work and how will the technologies they plan to use work.
So far whatever is discussed seems to go in the right direction.However, not much research is done so far. I would suggest them to quickly start researching about how they are going to work and how will the technologies they plan to use work.
So far the idea is clearly articulated. Few things which are not defined are explicitly stated in the doc.
So far the best write up 
Since, they have not come up with a perfect solution, it seems they have been working on that.
Since, there is no readme file, admin access is not clear or how to navigate to those features. So most of the cases could not be checked due to ambiguity in the flow.
Since, the git repo link of their hasn't been given it can't be certainly said how well the code has been written. But going by their video in which they have meticulously explained step by step what they have done, I would day It is reasonably well executed and follows the Ruby style conventions. 
Since, the  project was not deployed hence manual testing could not be performed. But, the screencasts show that the system works as intended.
Since the Travis test has failed, merging the code would not be a good idea. The project doesn't need to be redone from scratch, some modifications to the existing work could make the project ready for deployment.
Since the Travis test has failed, merging the code would not be a good idea. The project doesn't need to be redone from scratch, some modifications to the existing work could make the project ready for deployment.
Since the Travis test has failed and the test coverage has also decreased, merging the code would not be a good idea. The project doesn't need to be redone from scratch, some modifications to the existing work could make the project ready for deployment.
Since the test plan is not included, i am unable to do the manual testing.
Since the project was deployed hence manual testing could not be done but the screenshots show that the project works as intended.
Since the project involved deletion of obsolete methods and SQL, it would be good to explicitly state in the test plan if there were any tests previously that used these methods/SQL. Also, if they are present they need to be modified. 
Since the project involved deletion of obsolete methods and SQL, it would be good to explicitly state in the test plan if there were any tests previously that used these methods/SQL. Also, if they are present they need to be modified. 
Since the graphs will be constructed dynamically for the entire class as whole, the impact on response time needs to be considered in case there are a large number of entries to process as this could involve database calls.
Since the graphs will be constructed dynamically for the entire class as whole, the impact on response time needs to be considered in case there are a large number of entries to process as this could involve database calls.
Since the first round, authors seem to have progressed a lot, and added most of the missing functionalities. However, following are some of them I found missing: 1.There is no potential buyer's list for a house that can be viewed by a realtor., however there is a link to the house inquiries. 2. I am not able to associate a company to my profile as a realtor. The realtor should be able to work for only one company, however, here I am able to add multiple companies, which should be restricted to admin only. 3. preconfigured admin - unable to login to the system as admin
Since the document is mostly copy pasted from the problem statement, it covers what needs to be done. But it has not discussed about how it needs to be done. Adding the exact changes to be made makes it easier to understand the solution proposed.
Since the code is not deployed, manually testing cannot be performed. But, the screencast shows that all the manual testing is passed.
Since the code coverage has decreased and the video demonstrates a proper working
Since the app threw an exception on the homepage and was unusable, this score reflects what was achieved in round 1. 27/35 basic functionalities passing corresponds to 77% or four stars. The screenshots in the README.md only demonstrated definitively features that were working in the last version.
Since no solution has been proposed yet, this couldn't be reviewed.
Since no solution has been proposed yet, this couldn't be reviewed.
Since no solution has been proposed yet, this couldn't be reviewed.
Since no solution has been proposed yet, this couldn't be reviewed.
Since it's unit test, it seems there's hardly a way to veirify with UI
Since it's a test project, there are not much design patterns to follow, but they should list what tech they used to test the rb file.
Since it's a test project, there are not much design patterns to follow, but they should list what tech they used to test the rb file.
Since it is a unit test project with well-written tests, I don't see any issues why it can't be deployed to production
Since it is a test rb file, there are not many variable need to be named.  The "it " part at line 362 in the assignment_team_spec.rb file, "get max num" could be better if substitute with "get maximum value" or something like this, max num seems little bit wired.
Since I was unable to run the code on my local device, I am unable to test for edge cases. However I would suggest adding a destroy dependency in model files, for example for house hunters, has_many :inquiries, dependent: :destroy The README file fails to provide an information about edge cases.
Since I was unable to run the code on my local device, I am unable to test for edge cases. However I would suggest adding a destroy dependency in model files, for example for house hunters, has_many :inquiries, dependent: :destroy The README file fails to provide an information about edge cases.
Since I couldn't view the test plan,  i am unable to comment on it.
Similar to my earlier comment, I found this document lacking on details. I also don't think their explanation for deriving the "score" to be sufficient. Their explanation is expressed as code, not as a mathematical equation.
Similar to my earlier comment, I found this document lacking on details. I also don't think their explanation for deriving the "score" to be sufficient. Their explanation is expressed as code, not as a mathematical equation.
Signup functionality was not working. I could not log in from the admin role and house hunter role provided. After logging in from realtor's account, the link to inquiries failed(was broken).  
Signup functionality was not working. I could not log in from the admin role and house hunter role provided. After logging in from realtor's account, the link to inquiries failed(was broken).  
Signup functionality was not working. I could not log in from the admin role and house hunter role provided. After logging in from realtor's account, the link to inquiries failed(was broken).  
Sign-up for realtors and admin gives application error. 
Sign-up for realtors and admin gives application error. 
Sign up for roles not available Admin credentials not provided Can not sign up as realtor/hunter from UI. Hence can not verify any of the functionalities Can not find search feature. README file is not informative. Too short.
Sign up for roles not available Admin credentials not provided Can not sign up as realtor/hunter from UI. Hence can not verify any of the functionalities Can not find search feature. README file is not informative. Too short.
Short methods - Good. project structure - good. I feel you haven't committed everything to GIT. Please check that.
Short methods - Good. project structure - good. I feel you haven't committed everything to GIT. Please check that.
Several tests are listed and described. I would suggest adding more details for each test as there is some vagueness as to what each described action entails. 
Several tests are listed and described. I would suggest adding more details for each test as there is some vagueness as to what each described action entails. 
Several of the required functionalities are available, though many links are not working.
several methods are missing in the document and the rspec file like review_response_report, import. 
several methods are missing in the document and the rspec file like review_response_report, import. 
Several functionalities are working, however a few of them are still not.  The list is provided below:   A realtor can not see houses which do not have images attached. A realtor can not reply to a specific inquiry, and should not be able to edit inquiries. Realtor and househunter cannot register by same email Id. Admin cannot view all houses or inquiries. A realtor is able to post houses of any companies, not just the company he belongs to.  A realtor can not choose the company he belongs to. Realtor can not see buyers even when the buyer has put the house in interest list.
set_proposer is a setter but appears to be used as a getter.
set_proposer is a setter but appears to be used as a getter.
sessions.rb create method has 3 large code blocks for the three role types. It would have been better to create separate methods for each type
Self explanatory visual changes have been added. All the changes are described via the visual aids.
Seems to be working as intended. But all the features have not been implemented. The documentation mentions future work but no new code has been added.
Seems there is something wrong with the interest list. I added house 1 in user1's interest list, but it appears in user2's list for some reason. Everybody can see the previous user's information. 
Seems there is something wrong with the interest list. I added house 1 in user1's interest list, but it appears in user2's list for some reason. Everybody can see the previous user's information. 
Seems like all parts of the design document need more details.
Seems like all parts of the design document need more details.
Seems like all parts of the design document need more details.
Seems like all parts of the design document need more details.
Seems at par with the coding standards
Seeing from the schema file the logic seems fine but unable to test it out.
search questionnaire and search reviews don't have detailed explanation of what should be done.
search questionnaire and search reviews don't have detailed explanation of what should be done.
search questionnaire and search reviews don't have detailed explanation of what should be done.
search questionnaire and search reviews don't have detailed explanation of what should be done.
Search is not working. Anyone can login as admin. no house picture is displayed if it is saved.
search is not working  in realtor. I did not see any Rspec in spec folder. while signing up it takes password less than length 6. when realtor adds the property it does not appear in property list.
search is not working  in realtor. I did not see any Rspec in spec folder. while signing up it takes password less than length 6. when realtor adds the property it does not appear in property list.
Search functionality for houses not found. Asking for company id and realtor id which is difficult for the user to remember. A better would be to associate house based on a company name or add the house to the company associated with the realtor. Admin not able to add realtors. Admin not able add inquiries or reply to inquiries or add himself as a potential buyer. Unable to sign up as a hunter or realtor. Only admin is able to create the users.  
Search functionality for houses not found. Asking for company id and realtor id which is difficult for the user to remember. A better would be to associate house based on a company name or add the house to the company associated with the realtor. Admin not able to add realtors. Admin not able add inquiries or reply to inquiries or add himself as a potential buyer. Unable to sign up as a hunter or realtor. Only admin is able to create the users.  
Search for houses is missing  While submitting inquiry, the system errors out but that has been documented. This was also pointed out in earlier review  
Search for houses is missing  While submitting inquiry, the system errors out but that has been documented. This was also pointed out in earlier review  
Search for houses is missing  While submitting inquiry, the system errors out but that has been documented. This was also pointed out in earlier review  
search feature is not working. Also, I didn't find any way to add pictures of the new houses.
search feature is not working. Also, I didn't find any way to add pictures of the new houses.
Screenshots are missing under Test Plan section.
Screenshots are missing under Test Plan section.
Screenshots are missing under Test Plan section.
screenshots are added, which are enough to tell what they will be doing in the front end. a bit more can be explained on backend part by giving code snippets.
screenshots are added, which are enough to tell what they will be doing in the front end. a bit more can be explained on backend part by giving code snippets.
Screenshot explains the functionality of project very well.It is really easier to understand how the end product will look like. Suggestion: the team should include a flowchart depicting the flow of the functionality. 
Scenarios that are discussed in the wiki have comprehensive descriptions and justifications. However, clearly a number of edge cases are not considered as the test coverage is ~77%.   I would suggest using mock objects which will both decouple tests from database and increase the overall coverage.  For example mocking find_by method of TeamsUser would allow covering participant#team case: allow(TeamsUser).to receive(:find_by).with(user: student).and_return(team)   Another minor issue is that wiki is missing some cases that are implemented in the code (#team, #fullname, #scores).
Scenarios that are discussed in the wiki have comprehensive descriptions and justifications. However, clearly a number of edge cases are not considered as the test coverage is ~77%.   I would suggest using mock objects which will both decouple tests from database and increase the overall coverage.  For example mocking find_by method of TeamsUser would allow covering participant#team case: allow(TeamsUser).to receive(:find_by).with(user: student).and_return(team)   Another minor issue is that wiki is missing some cases that are implemented in the code (#team, #fullname, #scores).
Same test plan as previous phase is present , no new cases added
Same issues as of first review. Cannot delete company. Reason cited is 'dependent realtor exist'. I suggest that when a company is removed, realtor shouldn't have a company too. Because a realtor can exist without a company in his profile too! Admin cannot edit his/her details
Same issues as of first review. Cannot delete company. Reason cited is 'dependent realtor exist'. I suggest that when a company is removed, realtor shouldn't have a company too. Because a realtor can exist without a company in his profile too! Admin cannot edit his/her details
Same comments as earlier. A flow chart diagram is provided, but it provides little benefit and the presentation for the score algorithm is vague and simple. I would like to see more details about the process in an actor diagram.
Same comments as earlier. A flow chart diagram is provided, but it provides little benefit and the presentation for the score algorithm is vague and simple. I would like to see more details about the process in an actor diagram.
Same comment as above. I could not test this application.
Same comment as above. I could not test this application.
Sadly, the author has still not made any test plans for the project. The writeup has indeed improvised on the UML part from the previous submission, but the testing and implementation part of the writeup is still missing.
Running the code manually resulted in 69.61% coverage. However, there are four methods that are in a pending state.
Running the code manually resulted in 69.61% coverage. However, there are four methods that are in a pending state.
Ruby way of writing "if !some_condition" is "unless condition" Couple of large if else structures that could be broken down.
Ruby guidelines are followed to good extent. Clean and legible code. A few things can be written in a more "ruby like" manner, like the index method of house controller. E.g. min_price = something if ... would be a better and more concise alternative. Models can have more validations. Other than that, code is well written. 
Ruby guidelines are followed to good extent. Clean and legible code. A few things can be written in a more "ruby like" manner, like the index method of house controller. E.g. min_price = something if ... would be a better and more concise alternative. Models can have more validations. Other than that, code is well written. 
Ruby coding standard has been followed. Only one function has been added in controller as per requirement. Code follows DRY principle. The team can add comments for the code added which would be useful to understand the code.
Ruby coding standard has been followed. Only one function has been added in controller as per requirement. Code follows DRY principle. The team can add comments for the code added which would be useful to understand the code.
Ruby coding standard has been followed. Only one function has been added in controller as per requirement. Code follows DRY principle. The team can add comments for the code added which would be useful to understand the code.
Rspec files are missing from the github
rpsec file found but is empty.
Rpec file seems to be missing
Rpec file seems to be missing
Rpec file seems to be missing
Right the project is in its initial phase. The overall changes proposed by the authors are now very unclear about how they are going to work.
Right the project is in its initial phase. The overall changes proposed by the authors are now very unclear about how they are going to work.
Right the project is in its initial phase. The overall changes proposed by the authors are now very unclear about how they are going to work.
review_response_map - can be modularize. Extract the various finction and write new methods for each.
review_response_map - can be modularize. Extract the various finction and write new methods for each.
Review 1 comments weren't addressed. Better name could have been used than ca_testx. Also scenarios test the code and not the behavior- instead of- "when x happens, this method does this" we have - "x happens so y contains this". This isn't maintainable as changes to implementation will break/stale out these tests.
Requesting to GIT Link to verify the same. But i downloaded the Zipped file to see if there is admin credentials in README file and it was not there.
Requesting to GIT Link to verify the same. But i downloaded the Zipped file to see if there is admin credentials in README file and it was not there.
Requesting to GIT Link to verify the same
Requesting to GIT Link to verify the same
Requesting to GIT Link to verify the same
Requesting to GIT Link to verify the same
Requesting to GIT Link to verify the same
Relationships have not been properly defined in the models. For example, in the company.rb file, the relationships have been commented out. Also, in the case of house model, it had only been related to a realtor and not to a real estate company.
Relationships have not been properly defined in the models. For example, in the company.rb file, the relationships have been commented out. Also, in the case of house model, it had only been related to a realtor and not to a real estate company.
Relationships have not been defined in the models.
Relationships are missing  for eg relation between inquiry and sender , receiver missing.    
Relationship between user and company is vague. There is a separate realtor_accounts table. So users seems to be house_hunters. And house hunter does not need to have a relationship with company.
Relationship between user and company is vague. There is a separate realtor_accounts table. So users seems to be house_hunters. And house hunter does not need to have a relationship with company.
Relationship between user and company is vague. There is a separate realtor_accounts table. So users seems to be house_hunters. And house hunter does not need to have a relationship with company.
Regarding the writeup,  I told the changes which I felt needed above. The code looks comparatively neat. A clear video showing the test cases running will be appreciated.
Reference section missing.
Reference section missing.
redundant description.
Realtors can sign up without specifying a company. This means if there are no companies in the system, realtors can't sign up. While creating a new company, address field is given as a drop down, with only two options - Raleigh and Cary. Can't specify any other address. Also, in the create company page, size of the company is again given as a drop down, with limited options. Can't give any other value. Admin can't create new houses.    
Realtor- house- inquiry relationship deleting realtors shouldn't delete houses and inquires. Interests shouldn't have been defined on the User model. Company has_many users-> Hunter doesn't belong to company. With such a relationship was, hunters could be associated to a company by editing request params before post request to create users.
Realtor- house- inquiry relationship deleting realtors shouldn't delete houses and inquires. Interests shouldn't have been defined on the User model. Company has_many users-> Hunter doesn't belong to company. With such a relationship was, hunters could be associated to a company by editing request params before post request to create users.
Realtor- house- inquiry relationship deleting realtors shouldn't delete houses and inquires. Interests shouldn't have been defined on the User model. Company has_many users-> Hunter doesn't belong to company. With such a relationship was, hunters could be associated to a company by editing request params before post request to create users.
Realtor not able to remove their own company from profile Back button missing from some realtor workflows Realtor was able to updated query content
Realtor is unable to create his own company. I tried creating one, it dodn't give me an error but didn't even show the company in this list.
Realtor is not able to reply. There is no text field for the reply. Only subject and content is visible while editing and inquiry when logged in as a realtor. Not able to delete user after logging in as admin. Error page got displayed.
Realtor is not able to reply. There is no text field for the reply. Only subject and content is visible while editing and inquiry when logged in as a realtor. Not able to delete user after logging in as admin. Error page got displayed.
realtor can view all houses posted. realtor can create house post without join any company. add picture button is under company instead of house, and it is not working. a house can have negative floor numbers. house search function only shows the first match result instead of all. as a househunter you can edit any company, which is not allow.
Realtor can not have no company, realtor is forced to join one of the real estate companies. As a realtor I can not destroy the company I create, and only first real estate company on the index page has navigation buttons. And any realtor can edit the first real estate company which is not own by them. floor number can be negative. house image can only read local images, those houses created by other can not be seen. you can not create an account that has both realtor and househunter role. Househunter can not send inquiry in a house, it shows up an error said house must be exist.   
Really nice-code with implementation of strategy pattern. Code follows DRY principle However, render_report method is long.
Really nice-code with implementation of strategy pattern. Code follows DRY principle However, render_report method is long.
real estate company-realtor relationship should be 1-to-n -  missing
Ready to be deploy but must resolve the build issues.
Readme.md file has no details on how to login and the signup pages for house hunter and realtors are not working. So no way of navigating the application fully.
Readme.md file has no details on how to login and the signup pages for house hunter and realtors are not working. So no way of navigating the application fully.
Readme.md file has no details on how to login and the signup pages for house hunter and realtors are not working. So no way of navigating the application fully.
README.md file doesn't expalin anything
README.md file doesn't expalin anything
README.md file doesn't expalin anything
Readme.md does not mention anything with respect to edge cases. The linking is not intuitive. You have provided back buttons in quite a few places which redirect to that entities index.html.erb page instead of redirecting to the actual page I came from. Suggestion is put in a button for menu and link the menu to the starting page of the currently logged in entity. This will make things simpler.
Readme not well defined
Readme not well defined
Readme needs to be updated. UI looks good but UX can be worked upon.   
Readme needs to be updated. UI looks good but UX can be worked upon.   
Readme file is not updated. Couldn't find admin credentials. The UI looked promising on the login page but the signup fails, i am not able to sign up either as a house hunter or as a realtor. Tried so many times in all possible ways. Without these I couldn't test any of the functionalities. The error message was "Sign Up failed, Please retry"
Readme file is not updated. Couldn't find admin credentials. The UI looked promising on the login page but the signup fails, i am not able to sign up either as a house hunter or as a realtor. Tried so many times in all possible ways. Without these I couldn't test any of the functionalities. The error message was "Sign Up failed, Please retry"
Readme file is not updated and there are no instructions on how an admin or a house hunter can log in. The UI, though it didn't have any styling, is intuitive and self explanatory.  
Readme file is not updated and there are no instructions on how an admin or a house hunter can log in. The UI, though it didn't have any styling, is intuitive and self explanatory.  
README FILE IS EMPTY!!!
README FILE IS EMPTY!!!
Readme file is absent.
Readme file is absent.
Readme file doesn't have any information. Not able to login with admin credentials.
Readme file doesn't have any information. Not able to login with admin credentials.
Readme file doesn't have any information. Not able to login with admin credentials.
Readme file doesn't details on setting up account for admin.  I tried signing up new user for realtor and house hunter , whenever I try to sign up it is throwing error. it could be an issue with heroku .   however login prompt is designed very well. 
Readme file doesn't details on setting up account for admin.  I tried signing up new user for realtor and house hunter , whenever I try to sign up it is throwing error. it could be an issue with heroku .   however login prompt is designed very well. 
Readme file doesn't details on setting up account for admin.  I tried signing up new user for realtor and house hunter , whenever I try to sign up it is throwing error. it could be an issue with heroku .   however login prompt is designed very well. 
Readme doesnt cover the edge cases.
Readme does not talk about edge cases but it covers how to to access the website. Good thing is that most of the errors pointed out in the prior review have been taken care of.  Search is missing     
Readme does not talk about edge cases but it covers how to to access the website. Good thing is that most of the errors pointed out in the prior review have been taken care of.  Search is missing     
Readme does not cover edge cases.
Readme does not cover edge cases.
radme doesn't have admin details.
radme doesn't have admin details.
radme doesn't have admin details.
Pull request not created / link to pull request is not found in this submission.
Pull request not created / link to pull request is not found in this submission.
Pull request not created / link to pull request is not found in this submission.
Pull request not created / link to pull request is not found in this submission.
Pull request not created / link to pull request is not found in this submission.
Pull request is not passed as well as Travis CI is also failed.  
Pull request is not passed as well as Travis CI is also failed.  
Pull request is not accepted, also build did not pass Travis CI. But the functionalities improved and accepted and working fine. 
Pull request has not been submitted or uploaded at all which makes it hard to decipher any of the above data hence make it a problematic scenario to certain what all changes have been made in the first in the terms of number of commits or pull request. 
Pull request failed the tests, so that must be fixed before merging.
Pull request failed the tests, so that must be fixed before merging.
Provided link is not the wiki link. Not a good documentation
Provided link is not the wiki link. Not a good documentation
Proposed solution is correct, but as i have said in other comments, there should be a design present.
proposed changes needs more explanation at the files and system specifically what files needs to be changed and how
proposed changes needs more explanation at the files and system specifically what files needs to be changed and how
proposed changes are well explanatory but every function change is in sign_up_sheet controller whereas there are many references present in a few models and other controllers as well
proposed changes are well explanatory but every function change is in sign_up_sheet controller whereas there are many references present in a few models and other controllers as well
Proper use case diagram have been added. For next submission team can add UML diagrams.
Proper use case diagram have been added. For next submission team can add UML diagrams.
Proper use case diagram have been added. For next submission team can add UML diagrams.
Proper naming conventions are followed for variables and methods and classes. The only thing I think can be improved is dummy names for files and hyperlinks.
Proper naming conventions are followed for variables and methods and classes. The only thing I think can be improved is dummy names for files and hyperlinks.
Project purpose is write test cases for participant model and increase the test coverage. This seems to be easily understandable but plan of work should nainly concentrate on how we test this functionality rather than just mentioning that test cases need to be written.
Project purpose is write test cases for participant model and increase the test coverage. This seems to be easily understandable but plan of work should nainly concentrate on how we test this functionality rather than just mentioning that test cases need to be written.
Project purpose and the proposed solution is defined in the documentation. However, the test plan is not stated in the documentation.
Project purpose and the proposed solution is defined in the documentation. However, the test plan is not stated in the documentation.
Project purpose and the proposed solution is defined in the documentation. However, the test plan is not stated in the documentation.
Project purpose and the proposed solution is defined in the documentation. However, the test plan is not stated in the documentation.
Project purpose and testing plan are nicely explained in the design doc. It would be better if the project design is more elaborateive.
Project purpose and testing plan are nicely explained in the design doc. It would be better if the project design is more elaborateive.
Project purpose and project design are present and really detailed! Test plan was absent though...
Project name could have been better. Methods were kept small. Comments were left out in some controllers/views. If-else blocks weren't properly indented in some cases. Hard-coded numbers were used for comparisons. A better way is to create enums representing different values(such as roles) and using those enums in code. This way, something like if role == 2 becomes if role == REALTOR and thus is more clear.  
Project name could have been better. Methods were kept small. Comments were left out in some controllers/views. If-else blocks weren't properly indented in some cases. Hard-coded numbers were used for comparisons. A better way is to create enums representing different values(such as roles) and using those enums in code. This way, something like if role == 2 becomes if role == REALTOR and thus is more clear.  
Project name could have been better. Methods were kept small. Comments were left out in some controllers/views. If-else blocks weren't properly indented in some cases. Hard-coded numbers were used for comparisons. A better way is to create enums representing different values(such as roles) and using those enums in code. This way, something like if role == 2 becomes if role == REALTOR and thus is more clear.  
Project name could have been better  
Project does not have test cases included, hence can not check further functionalities. If team is not able to add test cases for exact change, team could add/mention test cases surrounding the change that lead to checking the changes in this merge.
Problem statement is too brief. Design should 'talk' about proposed solution. Too short.
Problem statement is too brief. Design should 'talk' about proposed solution. Too short.
Problem statement and the expected flow are clearly explained. I somehow feel that the name of this project and the requirements(problem statement) are not matching.   Other missing items: Test plans UML diagrams(except flow diagram). Low-level design details.
Problem is well defined but the authors have listed 3 issues that need to be fixed but they have only provided 2 links in the problem statement. It will be nice if they can give the link to the third as well.   
Potential buyers section is missing
Potential buyers section is missing
Poor validation checks
Poor validation checks
Poor validation checks
Please submit your design plan and add some visual aids.
Please submit the with pre-configured users. As I am unable to test anything.
Please submit the with pre-configured users. As I am unable to test anything.
Please provide the link to the deployed website.
Please provide the link to the deployed website.
Please provide the deployment link
Please make sure code like puts X is avoided. Remove them and commit the code again. Builds are failing. See the Travis CI build details and code climate errors and fix them
Please make sure code like puts X is avoided. Remove them and commit the code again. Builds are failing. See the Travis CI build details and code climate errors and fix them
Please include the code snippet that was changed and also a screenshot of the view before and after the change.  Also, Please provide the link to the pull request and not the repo created. Good written explanation of the changes done in WIKI.
Please include the code snippet that was changed and also a screenshot of the view before and after the change.  Also, Please provide the link to the pull request and not the repo created. Good written explanation of the changes done in WIKI.
Please extract all "let" to avoid the repeat code. 
Please explain your test work rather than just paste your code.
Please directly tall users where to sign up.
Please add the test plan to the write-up.
Please add more details about the solution. How to code for that functionality is yet to be thought of.
Please add more details about the solution. How to code for that functionality is yet to be thought of.
Please add more details about the solution.
Please add more details about the solution.
Please add a test plan to the documentation in order to make sure that the test plan is covering the code changes.
Please add a test plan to the documentation in order to make sure that the test plan is covering the code changes.
Peak work on few days, nothing on the other.
Passed Travis but had many lingering CodeClimate failures.
Passed Travis but had many lingering CodeClimate failures.
Parts of the code is tested partially, none of the models are tested thoroughly
Parts of the code is tested partially, none of the models are tested thoroughly
Overall, the writeup was pretty good. Everything is explained in a good way with the help of code snippets and screenshots. There is definitely lack of explanation on how to check the work. THis is the only thing that I found where the writeup could've focussed more. Other than that it looks good.
Overall, the report was concise and fairly clear about what changes were being made to the system. However, the need for the Rails Internationalization API in addition to the Google's Cloud Translation API was not explained. Also, the report mentioned that strings in the actual code were not changing, which should have been explained in more detail.
Overall, the report was concise and fairly clear about what changes were being made to the system. However, the need for the Rails Internationalization API in addition to the Google's Cloud Translation API was not explained. Also, the report mentioned that strings in the actual code were not changing, which should have been explained in more detail.
Overall, the code looks fine. Good code is self-documenting - So, your code could be improved by adding comments in all required places. Make use of different logging options provided by ROR and avoid using "puts" in code.
Overall, the code is very well-written and follows all the best coding practices. But what I feel is a few more comments could help in improving the readability of the code. Also, there were few console debug statements which were causing the code-climate checks to fails. These could be removed or logged into Rails log.
Overall, the code is very well-written and follows all the best coding practices. But what I feel is a few more comments could help in improving the readability of the code. Also, there were few console debug statements which were causing the code-climate checks to fails. These could be removed or logged into Rails log.
Overall, it's good. Also in houses_controller.rb, the logic in the find_houses method should have been moved to the corresponding model. Application logic should be moved to the model. The admins_controller found in app/controllers is empty. What's it for? Also, when it comes to naming, house_controller and home_controller seems confusing.
Overall, it's good. Also in houses_controller.rb, the logic in the find_houses method should have been moved to the corresponding model. Application logic should be moved to the model. The admins_controller found in app/controllers is empty. What's it for? Also, when it comes to naming, house_controller and home_controller seems confusing.
Overall, it's good. Also in houses_controller.rb, the logic in the find_houses method should have been moved to the corresponding model. Application logic should be moved to the model. The admins_controller found in app/controllers is empty. What's it for? Also, when it comes to naming, house_controller and home_controller seems confusing.
Overall, I think it could be deployed. There are no tests however written for this functionality, and there are some UI patterns that should be re-considered before deploying that do not match each other. When saving feedback, the ability to save feedback is automatically present and there is a button per row, while in the other location, you must first make a row "editable".
Overall, I think it could be deployed. There are no tests however written for this functionality, and there are some UI patterns that should be re-considered before deploying that do not match each other. When saving feedback, the ability to save feedback is automatically present and there is a button per row, while in the other location, you must first make a row "editable".
Overall, I think it could be deployed. There are no tests however written for this functionality, and there are some UI patterns that should be re-considered before deploying that do not match each other. When saving feedback, the ability to save feedback is automatically present and there is a button per row, while in the other location, you must first make a row "editable".
Overall, code is clean and readable. Naming and project structure is consistent with good practices. One issue that stood throughout the code is that authorization is done directly in controller methods. It would be better if this common functionality was moved to a separate function call (e.g. validating user's role in houses_controller#create method)
Overall, code is clean and readable. Naming and project structure is consistent with good practices. One issue that stood throughout the code is that authorization is done directly in controller methods. It would be better if this common functionality was moved to a separate function call (e.g. validating user's role in houses_controller#create method)
Overall, code is clean and readable. Naming and project structure is consistent with good practices. One issue that stood throughout the code is that authorization is done directly in controller methods. It would be better if this common functionality was moved to a separate function call (e.g. validating user's role in houses_controller#create method)
Overall work is done good. But Explanations are bit lengthy and somewhat hard to follow. Ther is no need to mention the existing code.Which simplymmakes the documentation lengthier.
Overall well written code. Use of factory bot reduces code redundancy in building test cases. The team could have reduced the code redundancy inthe menu method test example.
Overall this was a usable system. However, This app did not do a good job of keeping track of my session. Once I edited that admin account, I could not navigate via links to the home page and was also asked to sign-in again if I clicked "admin sign-in". Even if I signed up as a different user, my admin account was still signed into. I also was not logged-in upon signing-up as a Realtor or House-Hunter.   Some other comments are: An Admin should be able to set the password for realtor or house-hunter. That is a security vulnerability.  When I tried to use the "Reset password link", I get an error. When creating a house as an Admin, I shouldn't have to know the ID of the company, I should be provided a drop-down of existing companies - the same way for how a realtor chooses a company to join. Asking a realtor to choose or create a company before signing up is another security vulnerability - you leak the existing companies and allow someone who isn't a user of your system to create a company. The Inquiry and Interest flow in this application is really well done.   
Overall this was a usable system. However, This app did not do a good job of keeping track of my session. Once I edited that admin account, I could not navigate via links to the home page and was also asked to sign-in again if I clicked "admin sign-in". Even if I signed up as a different user, my admin account was still signed into. I also was not logged-in upon signing-up as a Realtor or House-Hunter.   Some other comments are: An Admin should be able to set the password for realtor or house-hunter. That is a security vulnerability.  When I tried to use the "Reset password link", I get an error. When creating a house as an Admin, I shouldn't have to know the ID of the company, I should be provided a drop-down of existing companies - the same way for how a realtor chooses a company to join. Asking a realtor to choose or create a company before signing up is another security vulnerability - you leak the existing companies and allow someone who isn't a user of your system to create a company. The Inquiry and Interest flow in this application is really well done.   
Overall the write up was not bad. Here were some of the things I believe that could be improved: Problem Statement;Seems to be wrong. I believe it should be included in the background as it merely describes the files that they are supposed to work on.
Overall the team has done good job in maintaining Ruby Style guide. The team could add more comments and reduce code redundancy in scores() method.
Overall the team has done good job in maintaining Ruby Style guide. The team could add more comments and reduce code redundancy in scores() method.
Overall the quality of code is great. There some variable which does not follow naming convection.
Overall the quality of code is great. There some variable which does not follow naming convection.
Overall the code looks good with most of the coding standards being followed. However I think it lacks proper commenting and also there were few stray pieces of commented out code lying around. Adding few more comments and deleting unused code would be better.
Overall the code looks good with most of the coding standards being followed. However I think it lacks proper commenting and also there were few stray pieces of commented out code lying around. Adding few more comments and deleting unused code would be better.
Overall the code is written in an extremely clean and readable way. Having said that I would like to propose one suggestion which may help in future. There's 2 instances where code has been added in the index function of controllers (namely houses_controller.rb & list_of_pot_buyers_controller.rb). After the if else condition if search exists or not, the main search logic in houses_controller.rb could be added to a new function by passing the search params to that function. Similarly in list_of_pot_buyers_controller.rb, the SQL queries should be put in other functions say "def generate_list_of_potential_buyers"
Overall test coverage  was decreased by 35%.
overall only 3 commits are made during the entire project. no new code was committed during the second round
overall only 3 commits are made during the entire project. no new code was committed during the second round
Overall coverage increased (+0.3%) to 37.074% Good work on including test cases. The app works fine after testing. The newly added tests cover the scope of this project very well.
Overall coverage decreased (-28.6%) to 8.18%. The team did not add test cases that covers the scope of this project. Could have thoroughly tested with test cases. Also could have worked upon increasing test coverage.
Organization of the document is missing. It quotes a problem statement, presents a flowchart, and states a pair of objective-solutions yet again. From this write up, I could understand that they're trying to do 3 things: log the time that each review takes (by improving an earlier project), auto-save reviews, and merge data of details page on report page. I cannot find these clearly separated.
Organization of the document is missing. It quotes a problem statement, presents a flowchart, and states a pair of objective-solutions yet again. From this write up, I could understand that they're trying to do 3 things: log the time that each review takes (by improving an earlier project), auto-save reviews, and merge data of details page on report page. I cannot find these clearly separated.
Organization of the document is missing. It quotes a problem statement, presents a flowchart, and states a pair of objective-solutions yet again. From this write up, I could understand that they're trying to do 3 things: log the time that each review takes (by improving an earlier project), auto-save reviews, and merge data of details page on report page. I cannot find these clearly separated.
Only user/realtor login has been implemented yet. Other functionality is missing. README stated that admin has not been configured. 
Only user model in app/models, rest of the models such as house, realtor, real estate company are missing Same with controllers.   In user model, could add validation for email format    I would suggest user gem 'devise' for user management and 'rails_admin' for admin functionality.  This helps as the gems taking control of implementation and the developers can concentrate on business logic  If back is clicks on user edit , the user is logged out instead of going to profile page 
Only the skeleton of the project is implemented all major features are absent. 
Only the registration page is working and the interface is quite confusing as it has sign-up for both realtor and hunter on the same page which is bit confusing.
Only the registration page is working and the interface is quite confusing as it has sign-up for both realtor and hunter on the same page which is bit confusing.
Only the problem statement and proposed solution are present, it would be helpful to add the test plan asap.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No use of visual aids/ diagrams as of now.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No use of visual aids/ diagrams as of now.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No use of visual aids/ diagrams as of now.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No use of visual aids/ diagrams as of now.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No design were added in the documentation.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No design were added in the documentation.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No design were added in the documentation.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions. No design were added in the documentation.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
only the issues/problem statement is included in the documentation as of now. The tea did mention that they will be adding the detailed design in the upcoming submissions.
Only the default tests are present. No Custom tests to test model admin as mentioned in Readme file. It might me that the code is not yet committed.
only the default testcases created by the command are present in the repository.
Only the controller part is covered.
Only the controller part is covered.
Only test skeleton present, no actual tests implemented.
Only test skeleton present, no actual tests implemented.
only screenshots of current web page, may need some diagram to show the design in the future. 
Only problem statement is explained and nothing about how the team will design the solution. Please add design and UML diagrams.
Only problem statement is explained and nothing about how the team will design the solution. Please add design and UML diagrams.
Only problem statement is explained and nothing about how the team will design the solution. Please add design and UML diagrams.
Only problem statement is explained and nothing about how the team will design the solution. Please add design and UML diagrams.
Only one test is implemented and validated for .
Only one person has committed throughout the project, which looks strange to me. However, there have been regular commits by the person.
Only default tests are present
Only basic validations have been implemented. Tests generated through scaffold are available.
Only basic scaffold tests could be found in the test folder and the spec folder did not have any tests. The README.md did not indicate where the tests were or if there were any.
Only basic operation is available. Need to add lots of functionality. 
Only basic controller tests have been provided
Only basic controller tests have been provided
Only auto-generated test cases present.
Only admin is in the system, rest all tables are empty. No dummy data is provided as of to test on multiple edge cases. There is no time to add on users, companies, houses, inquiries to perform testing.
Only admin is in the system, rest all tables are empty. No dummy data is provided as of to test on multiple edge cases. There is no time to add on users, companies, houses, inquiries to perform testing.
Only a single UML diagram is present, but I'd have appreciated a couple of flow charts to accompany the expected flows.
Only 8 commits were found. The first commit was dated around Oct 6. No changes were committed in round 2.
Only 8 commits were found. The first commit was dated around Oct 6. No changes were committed in round 2.
Only 4 commits, No Github link. Hard to review. Please update the Submission with a github link so other reviewers can maybe give some proepr feedback after testing the app.    
Only 34% of the lines of code in review_response_map.rb were covered, according to their video. This is much lower than the 90% required by the project descriptions.
Only 34% of the lines of code in review_response_map.rb were covered, according to their video. This is much lower than the 90% required by the project descriptions.
Only 34% of the lines of code in review_response_map.rb were covered, according to their video. This is much lower than the 90% required by the project descriptions.
One thing is that once the company that a realtor belongs to was destroyed, he or she can also list houses, and that should be reconsidered.
One test failing for assignmentTeam failing.
One test case failing on travis. Once that is fixed, code can be merged.
One of the videos linked in the wiki has a broken link. The other link shows the functionality is working correctly.  Even though the wiki has given instructions to test the functionality, the team has not deployed there code. This has blocked manual testing.
One of the Travis CI tests is failing, https://travis-ci.org/expertiza/expertiza/builds/449165455?utm_source=github_status&utm_medium=notification  Found many "code climate" issues.
One of the Travis CI tests is failing, https://travis-ci.org/expertiza/expertiza/builds/449165455?utm_source=github_status&utm_medium=notification  Found many "code climate" issues.
One of the Travis CI tests is failing, https://travis-ci.org/expertiza/expertiza/builds/449165455?utm_source=github_status&utm_medium=notification  Found many "code climate" issues.
One new commit after first review.
One major problem is that I am getting an error after adding a house as a realtor which prevents access to realtor-house related features, like edit/destroy etc. Admin credentials are not specified in the README! I managed to find them in the seeds.rb file. Most of the admin functionality is implemented, however, I am getting an error when accessing new house page ( https://rocky-sands-72044.herokuapp.com/houses/new ) and so house cannot be added through admin(same case with Realtor). Houses data is missing in the system. Search functionality is present in the code however I was not able to locate the proper view for that.
One major problem is that I am getting an error after adding a house as a realtor which prevents access to realtor-house related features, like edit/destroy etc. Admin credentials are not specified in the README! I managed to find them in the seeds.rb file. Most of the admin functionality is implemented, however, I am getting an error when accessing new house page ( https://rocky-sands-72044.herokuapp.com/houses/new ) and so house cannot be added through admin(same case with Realtor). Houses data is missing in the system. Search functionality is present in the code however I was not able to locate the proper view for that.
One major problem is that I am getting an error after adding a house as a realtor which prevents access to realtor-house related features, like edit/destroy etc. Admin credentials are not specified in the README! I managed to find them in the seeds.rb file. Most of the admin functionality is implemented, however, I am getting an error when accessing new house page ( https://rocky-sands-72044.herokuapp.com/houses/new ) and so house cannot be added through admin(same case with Realtor). Houses data is missing in the system. Search functionality is present in the code however I was not able to locate the proper view for that.
One flow chart and one chart graph are included. I find the chart incomplete and confusing too. I wasn't able to relate how this is going to help real scenario. The better way would be to use a use case diagram or take example of our current class programs.
One flow chart and one chart graph are included. I find the chart incomplete and confusing too. I wasn't able to relate how this is going to help real scenario. The better way would be to use a use case diagram or take example of our current class programs.
One flow chart and one chart graph are included. I find the chart incomplete and confusing too. I wasn't able to relate how this is going to help real scenario. The better way would be to use a use case diagram or take example of our current class programs.
One fail  Two successful.  Over all coverage increase is 9.9%. 
One fail  Two successful.  Over all coverage increase is 9.9%. 
One check needs to pass to get deployed.
Once travis build passes the project could be merged. I have seen specs in the existing code base that are very implementation dependent so this won't be an issue.
Once the issues with pull request are fixed it can be merged.
Once any user signs in, he/she cannot log out. This is a major flaw in the workflow
On checking, the code, we find that, in agreement with @TravisBuddy, the code had a build error which seems to be unresolved, which is strange, and should have been looked into. Moreover, the overall coverage shows a good amount of increase which is good. But one must say that the details in the code changes as few as they seem have been to a good extent for the majority of the part and thus worth the merit.
On checking, the code, we find that, in agreement with @TravisBuddy, the code had a build error which seems to be unresolved, which is strange, and should have been looked into. Moreover, the overall coverage shows a decrease of 0.1% which should be a cause worth looking into. But one must say that the details in the code changes have been to a good extent for the majority of the part and thus worth the merit. One thing that surely catches the eye is variable naming, especially 'handle_dups' which is a strange/ amateurish way of variable nomenclature and there is reason to believe that it may result into conflict in code at some point. 
On checking, the code, we find that, in agreement with @TravisBuddy, the code had a build error which seems to be unresolved, which is strange, and should have been looked into. Moreover, the overall coverage shows a decrease of 0.1% which should be a cause worth looking into. But one must say that the details in the code changes have been to a good extent for the majority of the part and thus worth the merit. One thing that surely catches the eye is variable naming, especially 'handle_dups' which is a strange/ amateurish way of variable nomenclature and there is reason to believe that it may result into conflict in code at some point. 
On checking, the code, we find that, in agreement with @TravisBuddy, the code had a build error which seems to be unresolved, which is strange, and should have been looked into. Moreover, the overall coverage shows a decrease of 0.1% which should be a cause worth looking into. But one must say that the details in the code changes have been to a good extent for the majority of the part and thus worth the merit. One thing that surely catches the eye is variable naming, especially 'handle_dups' which is a strange/ amateurish way of variable nomenclature and there is reason to believe that it may result into conflict in code at some point. 
On checking the videos, the functionality seems to be working fine. I haven't been able to manually test it.
On checking the pull request, it shows the Travis CI check has failed.
Of the functionality the team have tried to to implement, the code quality is not poor. However, the arrangement of code is difficult to understand given that not all functionalities seem to have been implemented. The "def after_sign_in_path_for" function in the applications controller used by the devise gem, only takes realtor as a resource, I would advise using an if or case condition within the function to allow other users to login. Also, I was unable to find any implementation for making sure that only the inquiries specific to a real estate company be visible to a realtor, and similarly only the inquiries posted by a house hunter themselves be visible to the house hunter on that specific house. I would again suggest using some If or case statements in the show function of the inquiries controller to establish identity of current_user. 
Nothing's tested
Nothing's tested
Nothing specified.
Nothing specified.
Nothing related to technical part or classes is mentioned
Nothing related to technical part or classes is mentioned
Nothing mentioned in readme file. user interface not easy .just provided links for realtor creation. No link for house hunter.
Nothing mentioned in readme file. user interface not easy .just provided links for realtor creation. No link for house hunter.
nothing mentioned about test plan only snapshot provided.
Nothing changed since round 1. Haven't added a shorter video or a video with sound. Haven't made naming changes.
Not well structured and less content
Not well structured and less content
Not well structured and less content
Not well structured and less content
not very well. lack of the use case.
Not very good, some problems existing during the first round are still here.
Not very comprehensive.
Not uploaded on git.
Not thoroughly tested
Not thoroughly tested
not thoroughly test. Not enough test written for inquiries
not thoroughly test. Not enough test written for inquiries
Not sure, since could not replicate. 
Not sure what ca_test1 really is. I also didn't find an explanation in the write up for "node"
Not so good structure. 
Not so good structure. 
Not really. They did not pass.
Not really. They did not pass.
Not really. First of all, as I was mentioned above, the relationship between house_hunter and query didn't handle properly. Second, a realtor should belong to a real estate company, not "has one", and the real estate company should has many realtors, and the mapping of two models does not work. The company id of realtors in realtors' list look like a set of random number, which has nothing to do with the table real estate company.
Not really. First of all, as I was mentioned above, the relationship between house_hunter and query didn't handle properly. Second, a realtor should belong to a real estate company, not "has one", and the real estate company should has many realtors, and the mapping of two models does not work. The company id of realtors in realtors' list look like a set of random number, which has nothing to do with the table real estate company.
Not ready. There are still a few errors in Travis CI and code climate.
Not ready. There are still a few errors in Travis CI and code climate.
Not ready to be deployed. Some changes needed along with addition of tests
Not ready to be deployed. Some changes needed along with addition of tests
Not possible to test work manually.
Not possible to test as no way of testing has been given at all. No procedure to be even followed has been mentioned in the poorly constructed Wiki page. All that is possible is to try to infer whatever is possible through the pull request in which I have reason to believe as suggested by the code tester that multiple files are failing in the build stage itself. 
Not possible to test - neither a deployment nor screenshots provided.
Not possible to test - neither a deployment nor screenshots provided.
Not possible to test - neither a deployment nor screenshots provided.
Not perticular test plan section, but there are some different possible results have included.
Not perticular test plan section, but there are some different possible results have included.
Not only does the build fail with multiple errors, the overall coverage is shows a significant decrease instead of an increase which is a real cause of concern. Moreover, the number of commits even though impressive does include a lot of minimalistic changes which one does beg to question the necessity of. But that's still fine since, I am assuming that the complexity of the code may require so many commits. But still adding a line break as a commit? I am unsure if its a great way to go about it. 
Not much of coding is done. Only the files automatically created by rails are present.
Not much of coding is done. Only the files automatically created by rails are present.
Not much has been talked about the methods to be added. but the files specified seems right
Not much has been explained about the test plan. The authors have, however, explained how they will be going about the testing in general. An overview is provided which is clear to understand.
Not much functionality is available. Of what is available, however, the code does follow "good Ruby and Rails coding practices"
Not much explanation given
Not much explanation given
Not much described to rate over
Not mentioned in readme file and couldnt find any in code.
Not many functions defined. Only database changes made and inbuilt function used.
Not many functions defined. Only database changes made and inbuilt function used
Not it didnt pass the test. 
Not it didnt pass the test. 
Not included.
Not included.
Not explained properly
Not explained properly
Not every member of team contributed. Could see some commits after the deadline of round2.  
Not enough. Use case diagram and class diagrams are missing.
Not enough! Add use case diagrams and flow diagrams.
Not enough! Add use case diagrams and flow diagrams.
Not enough explanation
Not enough explanation
Not enough explanation
Not enough data for judgement
Not detailed design was provided. These information was not included.
Not detailed design was provided. These information was not included.
Not descriptive
Not descriptive
Not descriptive
Not defined in readme file.
Not defined in readme file.
Not cover all the scenarios.
Not cover all the scenarios.
Not cover all the scenarios.
Not completely its lacking lot of informations, consider writing the code before and after the changes to explain the changes done
Not completely clear
Not clear
Not available.
not all functionalities are working, but the once which are working are end to end tested and works fine. there are few changes which are required - Cannot create an inquiry  Cannot check the potential buyers cannot list a house cannot search a house  
Not all changes has been verified successfully. few code climates rejects has happened as well. 
not adequate explanation.
not adequate explanation.
Not able to test as the sign up failed and admin couldn't add users too.
Not able to see the mapping between inquiries and houses.  Also, not able to see mappings between potential buyers and houses.  Did you forget to commit? Because the deployed version is working but GitHub doesn't have the latest code.
Not able to see the changes done by the team. Test plan could have been explained better. If the URL or the screencast was provided it would have been better.
Not able to see the changes done by the team. Test plan could have been explained better. If the URL or the screencast was provided it would have been better.
Not able to see the changes done by the team. Test plan could have been explained better. If the URL or the screencast was provided it would have been better.
Not able to merge. Issues regarding Travis tests etc need to be resolved.
not able to login other than admin. not able to register myself. edit option is not working when admin is trying to edit. inquires/respond to inquiry etc i am not able to test as i am not able to register myself. search not working on heroku but they have mentioned its working in local.
not able to login other than admin. not able to register myself. edit option is not working when admin is trying to edit. inquires/respond to inquiry etc i am not able to test as i am not able to register myself. search not working on heroku but they have mentioned its working in local.
not able to login other than admin. not able to register myself. edit option is not working when admin is trying to edit. inquires/respond to inquiry etc i am not able to test as i am not able to register myself. search not working on heroku but they have mentioned its working in local.
not able to login other than admin. not able to register myself. edit option is not working when admin is trying to edit. inquires/respond to inquiry etc i am not able to test as i am not able to register myself. search not working on heroku but they have mentioned its working in local.
not able to log in as admin no credentials given in readme
not able to log in as admin no credentials given in readme
Not able to get coverage from the log: https://coveralls.io/jobs/41685719
Not a lot of textual explanation given but the diagrams look adequate
Not a lot of code to begin with but whatever is there seems by coding practice norms. Most of the code seems to be commented
Nope, they have errors in their build too as indicated by Travis CI and this is the error message output by it " Hey @ppvasude, Something went wrong with the build. TravisCI finished with status errored, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself." On checking the build logs I found that they errors in Bundle Install stage itself resulting from missing gems which they haven't resolved as a part of second submission.   
Nope, they have errors in their build too as indicated by Travis CI and this is the error message output by it " Hey @ppvasude, Something went wrong with the build. TravisCI finished with status errored, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself." On checking the build logs I found that they errors in Bundle Install stage itself resulting from missing gems which they haven't resolved as a part of second submission.   
Nope, the last commit still shows from 12 days ago which is the time period even before the first submission. Overall, the branch is 3 commits ahead and 20 commits behind the Expertiza master. Even so, conclusively going by their git hub their last commit was before the first submission and hence, no commits in the second submission.
Nope, again they did not mention a lot about how they test but what they have done .
None of the tests - travis ci, code climate have passed
None of the relationships are handled with the built in has_one has_many or belongs_to functionality, except the user model which randomly belongs_to realestate
None of the models specify any belongs_to or has_many relationship and no migrate nor schema stores an official reference to be used.
none of the functions are too long could find changes where DRY principle was violated the code follows ruby convention and guidelines Although the code is easy to follow , the team needs to add comments for the changes which is currently missing. Good Job!
none of the functions are too long could find changes where DRY principle was violated the code follows ruby convention and guidelines Although the code is easy to follow , the team needs to add comments for the changes which is currently missing. Good Job!
None of the controller or model are tested.
No. This is not standards to add colors in the respective element. It becomes very hard to maintain or modify such changes in future. It would be better to move the style to a scss file and use a class-UI to make this change, which is clean and DRY
No. They were no commits during round 2.
No. They only have 3 commits and 1 branch so that means they waited until the last minute to do thi
No. There was a single commit throughout the project period and that was during the 1st round.
No. there is no test plan section included
No. The test failed.
No. The last commit was on oct 21st.
No. The code needs to be cleaned up before it can be deployed. The build failure needs to be fixed. Also, as the project is not deployed, manual testing could not be done.
No. Team did not mentioned anything under Test Plan.Team should work on this part of project as well, as manual testing will not help to check all the corners of the complex project.
No. Team did not mentioned anything under Test Plan.Team should work on this part of project as well, as manual testing will not help to check all the corners of the complex project.
no. not mention about that.
No. Not clear
No. Not clear
No. I think the authors should have mentioned why a particular solution was taken. What was the main driving force for taking the approach that they have taken. This was entirely missing. Pls work on that. They could also remove much of the commented code.        
No. I think the authors should have mentioned why a particular solution was taken. What was the main driving force for taking the approach that they have taken. This was entirely missing. Pls work on that. They could also remove much of the commented code.        
No. I think the authors should have mentioned why a particular solution was taken. What was the main driving force for taking the approach that they have taken. This was entirely missing. Pls work on that. They could also remove much of the commented code.        
No. I see there are some code was commented, which seems unnecessary, so just delete it.
No. I do not think the code is ready to be deployed. I found the code change hard to understand, there are no comments and neither has the logic or rationale behind the new/changed code been given in the wiki. Besides, the build fails and there are a host of issues that need to be fixed.  Although all this might only be trivial issues and can be fixed rather easily, the code as of now, is not deployment-ready according to me. 
No. I do not think the code is ready to be deployed. I found the code change hard to understand, there are no comments and neither has the logic or rationale behind the new/changed code been given in the wiki. Besides, the build fails and there are a host of issues that need to be fixed.  Although all this might only be trivial issues and can be fixed rather easily, the code as of now, is not deployment-ready according to me. 
No. i can not see any link of video to check the changed functionality or system, hence it is difficult to pass the changes to production. Yes new team can take up remaining changes and provide a working system.  
No. i can not see any link of video to check the changed functionality or system, hence it is difficult to pass the changes to production. Yes new team can take up remaining changes and provide a working system.  
No. i can not see any link of video to check the changed functionality or system, hence it is difficult to pass the changes to production. Yes new team can take up remaining changes and provide a working system.  
No. Edge cases not tested.
No,test plan has not been implemented but I don't think a test plan is required for their functionalities/
No,it should not deployed till the build is fixed. It is a good starting place for a future team to pick up
No, Travis test did not pass. In fact, I can see test failures for each commit. Continuous integration tests has failed.
No, this writeup doesn't have a test plan section.
No, this writeup doesn't have a test plan section.
No, this team has not tested any model. The controller tests does not handle all the cases.
No, this code is not ready to be deployed since it fails in basic builds and just passes 5 out of 13 test cases which calls for reasonable concerns and traceback in the motivation of the teams approach. However, it does prove to be a good starting point for a future team to pick from where these people have left off. 
No, this code is not ready to be deployed since it fails in basic builds and just passes 5 out of 13 test cases which calls for reasonable concerns and traceback in the motivation of the teams approach. However, it does prove to be a good starting point for a future team to pick from where these people have left off. 
No, this code is not ready to be deployed since it fails in basic builds and just passes 5 out of 13 test cases which calls for reasonable concerns and traceback in the motivation of the teams approach. However, it does prove to be a good starting point for a future team to pick from where these people have left off. 
No, they seems did not commit again
No, they have not. No models were tested.
No, they have not. No models were tested.
No, they have not. No models were tested.
No, they explain nothing, just put the code on it.
No, they explain nothing, just put the code on it.
No, they didnt use any visualization.
No, they didnt include any test plan in their design.
No, they didn't pass Travis CI. 
No, they did write the test plan.
No, they did write the test plan.
No, they did not write the test code.
No, they did not write the test code.
No, they did not pass Travis Ci. 
No, they did not pass Travis Ci. 
No, they did not pass Travis Ci. 
No, they did not commit new code.
No, they did not commit new code.
No, they did not commit any new code, so no coverage increased.
No, they did not add new test case
No, they did not add new test case
No, they code is not complete, and many cases are not covered.
No, they code is not complete, and many cases are not covered.
No, they code is not complete, and many cases are not covered.
No, there is no test plan included in the review
No, there are no test cases added by the team.
No, there are no test cases added by the team.
No, their writeup is neither clear or adequate, which just contains a few lines without any explanation or introduction to the project. So i think their writeup is terrible.
No, their testing, implementation and challenges section is incomplete. Even though they given minuscule hints of the solutions and how they would try to check if at all. No sure way of testing it is given at all.
No, their sections Solution Design is blank saying everything of importance will be be provided in the final design doc. Only good thing is that they have at least a targeted section of the code which they have planned to work upon.   
No, their sections Solution Design is blank saying everything of importance will be be provided in the final design doc. Only good thing is that they have at least a targeted section of the code which they have planned to work upon.   
No, their didn't include enough text explanation.
No, their didn't include enough text explanation.
No, their didn't include enough text explanation.
No, their didn't include enough text explanation.
No, the write-up doesn't describe why certain methods were chosen and written the way its implemented.
No, the write up is a simple copy paste of sir's doc on the wiki page which half-heartedly states the problem statement in question. Also, what or how they have worked and approached the solution is not even mentioned. Difficult to follow any flow. 
No, the Travis CI had failed. Yes, there were a few conflicts, like the lines of code was very large for a commit (>500), also there were a few pending test cases in the pull request.
No, the Travis CI had failed. Yes, there were a few conflicts, like the lines of code was very large for a commit (>500), also there were a few pending test cases in the pull request.
No, the Travis CI had failed. Yes, there were a few conflicts, like the lines of code was very large for a commit (>500), also there were a few pending test cases in the pull request.
No, the test failed.
No, the test failed.
No, the team hasn't committed any changes during the second round. The last commit was on 31st October 2018.
No, the team has not been diligent in specially making a section of "what it does" as the introductory section of the doc so as to make us understand the goals of the project. They have seemed to not even make a Wiki page for the same or have seemed to forget to upload it. Because, how am I supposed to follow the approach and solution of the problem if there doesn't exist any documentation to check for the same.   
No, the team has not been diligent in specially making a section of "what it does" as the introductory section of the doc so as to make us understand the goals of the project. They have just copy pasted the problem statement on the wiki page in a single paragraph. Even, that statement seems to have been incompletely pasted in just a single paragraph. So, it highly unclear what they are doing. I had to open the projects assignment doc of the professor to try to make sense out of the motivation of the problem.  
No, the team did not add any test cases and the coverage did not increase. The overall decrease was -13.6% to 34.007%
No, the strange part is the code hasn't been committed during the second round. It is strange because they have surely seem to have achieved all their requirements to problems going by the wiki page so, why haven't they committed the new changes is the question. 
No, the README file tells me what I should do to test in local computer, and does not offer admin's information or any instruction of how to operate when login to the website.
No, the README file is an auto-generated file, and there is no details in it.
No, the README file is an auto-generated file, and there is no details in it.
No, the proposed UI changes are only mentioned and the diagrams in the wiki are of the current system. Use draw.io for mockups and drawings.
No, the proposed UI changes are only mentioned and the diagrams in the wiki are of the current system. Use draw.io for mockups and drawings.
No, the majority of the work was pushed on 09/29. It is an impressive product if they got all of this done in the past week.
No, the code was last committed on Oct 31st.
No, The changes were made and pushed only in one particular day. There is no consistent flow on GitHub for pushing.
No, The changes were made and pushed only in one particular day. There is no consistent flow on GitHub for pushing.
No, the build for the pull request does not pass. The build had 4 jobs, out of which 2 jobs passed successfully. However, 2 build jobs have errors. First job failure is related to webdriver error for chrome where test fails. Second job failure is related to NoMethodError for method []
No, the build did not pass. It seems that airbrake_expection_errors_feature_tests_spec.rb has some problem.
No, the build did not pass in Travis CI. several checks were failed but there was no conflict with the base branch.
No, the build did not pass in Travis CI. Several checks had failed but there was no conflict.
No, the authors didn't improve the code.
No, that doesn't seem to be the case since, it has been a very jumpy approach and also the functionality of only a basic login has been added. So, if adding the bare login and sign up is considered as an MVC architecture then they have surely built a bare backbone of it. 
No, that doesn't seem to be the case since, it has been a very jumpy approach and also the functionality of only a basic login has been added. So, if adding the bare login and sign up is considered as an MVC architecture then they have surely built a bare backbone of it. 
No, testing portion of the code seems empty. No testing has been done
No, testing is not covered yet.
No, since no write up or no wiki page exists. it is clearly not possible to ascertain any of the above clauses.    
No, one of the functionalities of the Test Plan is not yet done.
No, not really. The website just has one role to operate, and the readme file is an auto-generated file, which doesn't include any useful information.
No, not really. No user type has all the functionality in this review's check boxes, much less all the functionality specified in the project description. Manual inspection of the test folder reveals that all the model and controller tests are empty, as are the fixtures.
No, not really. First of all,  I still cannot login in as admin according to the account and password offered in README file. So I cannot see what could happen when I log in as an admin. Even though a hunter can put an inquiry for a house, but the realtor are not able to reply it. However, compared to the commitment in round 1, they have made a lot of improvements, but the admin part is still falling.
No, not really, the design is does not implement the test plan but rather goes on to show how the pre existing Expertiza algorithm works. So it would help if they showed the same. 
No, not really, the design is does not implement the test plan but rather goes on to show how the pre existing Expertiza algorithm works. So it would help if they showed the same. 
No, not all, but major of all functionalities.
No, none of the controllers or models have been tested.
No, none of the controllers or models have been tested.
No, no visible test cases have been added and I even checked the files on their git repo for the same, but just like the first submission there is no change in the status quo of the project. As a matter of fact their overall coverage seems to have been decreased just as before which is still an unresolved cause of concern. 
No, no visible test cases have been added and I even checked the files on their git repo for the same, but just like the first submission there is no change in the status quo of the project. As a matter of fact their overall coverage seems to have been decreased just as before which is still an unresolved cause of concern. 
No, many functionality are missing in their design.
No, many functionality are missing in their design.
No, many functionality are missing in their design.
No, majority checkins are near deadlines and not well spread out. Usage of multiple branch is good. 
No, it is not good at all, they didn't explain the functionality of their test code.
No, it is not good at all, they didn't explain the functionality of their test code.
No, it is not good at all, they didn't explain the functionality of their test code.
No, it doesn't.  Suggestion: Team should add a test plan which includes tests for testing the required changes.
No, it doesn't.  Suggestion: Team should add a test plan which includes tests for testing the required changes.
No, it doesn't.  Suggestion: Team should add a test plan which includes tests for testing the required changes.
No, it does not since the approach is to have a new model with delegation I strongly recommend team to add test cases that ensure systems functionalities are working as it is
No, it did not work intended.
No, It did not pass travis ci and there are many conflicts that must be resolved.
No, I think they code have some bugs in there.
No, I just see all commits happened in one day, so I don't think the team has been keeping on pushing their changes.
No, I don't find such commits during round 1.
No, I don not think their writeup is clear. In their writeup, they just paste the code without any explanation. 
No, I don not think their writeup is clear. In their writeup, they just paste the code without any explanation. 
No, build pass did not pass Travis CI
No, build pass did not pass Travis CI
No, automated tests for model and controller missing   
No, all the features have not been implemented e.g 1. A reviewer can be recognized or credited if he added useful bookmarks i.e if the author has made use of the bookmark. 2. A function to add badges automatically if a participant had submitted more than threshold number of useful bookmarks. plus build did not pass as well
No, all the features have not been implemented e.g 1. A reviewer can be recognized or credited if he added useful bookmarks i.e if the author has made use of the bookmark. 2. A function to add badges automatically if a participant had submitted more than threshold number of useful bookmarks. plus build did not pass as well
No, all tests are missing 
No, according to Travis CI the build doesn't seem to have passed due to some bundle install errors. Although they surely should have resolved it because the code wouldn't be able to achieve the above results as stated by their video and wikipedia page. 
No, according to Travis CI the build doesn't seem to have passed due to some bundle install errors. Although they surely should have resolved it because the code wouldn't be able to achieve the above results as stated by their photos and wikipedia page. 
No, according to the Git history, there has not been no changes pushed after Oct 1st
No, according to the commits record in github, I think that they seems created a new repository to replace the old one, and most of changes happened in one day, Oct 10. Besides, I cannot see the sign of team work. In Oct 6,  one guy submited the first comit, and the other guy submitted some changes in Oct 10, which doesn't look like a team work. Since they replaced the old repository with a new repo and didn't show much sign of team working, I give they one point.
No, according to the commits record in github, I think that they seems created a new repository to replace the old one, and most of changes happened in one day, Oct 10. Besides, I cannot see the sign of team work. In Oct 6,  one guy submited the first comit, and the other guy submitted some changes in Oct 10, which doesn't look like a team work. Since they replaced the old repository with a new repo and didn't show much sign of team working, I give they one point.
No, according to the commits record in github, I think that they seems created a new repository to replace the old one, and most of changes happened in one day, Oct 10. Besides, I cannot see the sign of team work. In Oct 6,  one guy submited the first comit, and the other guy submitted some changes in Oct 10, which doesn't look like a team work. Since they replaced the old repository with a new repo and didn't show much sign of team working, I give they one point.
No writeup/documentation found.
No writeup link provided.
No writeup link provided.
No writeup link provided.
No write-up available rn
No work shown. 
No work shown. 
no work has been done. Application throws error as soon i click on sign up button and choose any type of account.
no work has been done. Application throws error as soon i click on sign up button and choose any type of account.
No way for a house hunter to to interested in a house. A user not able to have multiple roles
No way for a house hunter to to interested in a house. A user not able to have multiple roles
no visuals at all
no visuals at all
no visuals at all
No visuals are us
No visualization or diagrams are necessary.
No visualization
No visualization
No visualization
No visualization
No visualization
No visualization
No visual aids, UML diagrams, or table/screen mockups were provided.
No visual aids, UML diagrams, or table/screen mockups were provided.
No visual aids, UML diagrams, or table/screen mockups were provided.
no visual aids in the design document.
no visual aids in the design document.
No visual aids have been provided by the author.
No visual aids have been provided by the author.
No visual aids have been provided by the author.
No visual aids have been provided by the author.
No visual aids are provided, rendering the explanations somewhat confusing.
No visual aids are present. Though the team have explained their work pretty well, the team should think about adding a few diagrams to better help in the understanding of the project.
No visual aids are included. feel the team should include more visual aid to help the reader in understanding their problem and its implementation.
No visual aid present in the doc but they have given a link which provides visual help
No video or deployment link provided to test manually.
No users or other features.
No use of any visual aids.
No use of any visual aids.
No use of any visual aids.
no URL for testing
No updates after first review.
No unit tests were added during the resubmission, but they had an initially high coverage.
No UMLs given
No UMLs given
No UML diagran
No UML diagrams present.  Suggestions: Although the wireframes make it really easier to understand how the end product will look like, the team could have mentioned a use case diagram, or a flowchart depicting the flow of the functionality. 
No UML diagrams present.  Suggestions: Although the wireframes make it really easier to understand how the end product will look like, the team could have mentioned a use case diagram, or a flowchart depicting the flow of the functionality. 
No UML diagrams present.  Suggestions: Although the wireframes make it really easier to understand how the end product will look like, the team could have mentioned a use case diagram, or a flowchart depicting the flow of the functionality. 
No uml diagrams present - can create a simple use case diagram to indicate the flow of the solution
No uml diagrams present - can create a simple use case diagram to indicate the flow of the solution
No UML diagrams or screenshots have been included currently.
No UML diagrams or screenshots have been included currently.
No UML diagrams included in the document. Please include application flow diagram, state diagram or sequence diagram or Use Case diagrams to make the document for readable.  
No UML diagrams included in the document. Please include application flow diagram, state diagram or sequence diagram or Use Case diagrams to make the document for readable.  
No UML diagrams
No UML diagrams
No UML diagrams
No UML diagrams
No UML diagrams
No UML diagrams
No UML diagram.
No UML diagram.
No UML diagram.
No UML diagram.
No UML diagram.
No UML diagram.
No UML diagram provided
NO UML diagram is provided so cant comment.
No UML Diagram is provided so can't comment.
No UML Diagram is provided so can't comment.
No UML Diagram is provided so can't comment.
NO UML diagram
no uml diagram
NO UML diagram
NO UML diagram
NO UML diagram
NO UML diagram
NO UML diagram
No UI provided but videos are uploaded to demonstrate the functionality
No this code is not ready to be deployed onto the production server. Minor bugs said by the Travis CI can be fixed. Also, Add test cases and after thorough testing, it should be good to be deployed and hence this will be a good starting place for a future team to pick up.
No this code is not ready to be deployed onto the production server. Minor bugs said by the Travis CI can be fixed. Also, Add test cases and after thorough testing, it should be good to be deployed and hence this will be a good starting place for a future team to pick up.
No they haven't tested
No they haven't added. But i think its not required for this project, as its just UI change.
No they have not. They said they will for the final submission
No they did not mention any design principles or patterns in their writeup.
No there is not any chart.
No there is no test plan included
No there is no test plan included
No there is no test plan
No the writeup does not mention the test section. 
No the writeup does not mention the test section. 
No the writeup does not have a test plan
No the new code was not committed during the second round. This could be due to the fact that the team finished their code at the end of the first round itself.
No the new code was not committed during the second round. This could be due to the fact that the team finished their code at the end of the first round itself.
No the code did not pass Travis CI tests. there was an issue with generate_team_name which could be fixed.
No the code did not pass Travis CI tests. there was an issue with generate_team_name which could be fixed.
No the build failure needs to be investigated. Some refactoring regarding the messaging should be done. instead of hard coding the mail it should be read from a config file. 
No the build failure needs to be investigated. Some refactoring regarding the messaging should be done. instead of hard coding the mail it should be read from a config file. 
No tests were added. No test plan too. So, difficult to interpret
No tests were added.
No tests were added.
No tests performed seem visible as executional flow is uneven. 
No tests have been written. At least under the Tests folder. 
No tests have been written for the application
No tests have been written for the application
No tests have been written
No tests have been discussed in the test plan.
No tests for either model or controller are present.
No tests are added for any model or controller
No tests are added for any model or controller
NO TESTS added.
No tests added.
NO TESTS added.
No tests added or at least link isn't provided
No tests added for model or controller
No tests added
No tests added
No tests
No tests
No testing, but at least they mentioned it in the readme.
No testing plan or tests are specified. 
No testing plan or tests are specified. 
No testing module found!
No testing module found!
no testing have been done
no testing have been done
No testing has been done. I checked the RSpec folder (not present) and no changes have been made to the pre built testing files as well. You could have easily written the tests for the user model and controller just by looking at the cookbook application. Good job overall with the DB validations and checks in the application (for login/logout)
No testing has been done. I checked the RSpec folder (not present) and no changes have been made to the pre built testing files as well. You could have easily written the tests for the user model and controller just by looking at the cookbook application. Good job overall with the DB validations and checks in the application (for login/logout)
No testing done.
No testing
no test plans mentioned
no test plans mentioned
No test plans has been explained. But the Git repo shows one test successful. 
No test plans added and the coverage decreased in the pull request. Test plans are not needed for the project
No test plans
No test plan. Don't know why this question is even asked.
No test plan.
No test plan, but the project purpose and design are decently well explored (especially if you look at the link to the first project page). I'd recommend pulling forward the diagrams and explanation to save your readers the effort of looking in another place.
No test plan was provided for the part 4 project.
No Test plan was provided
No Test Plan was included. The bare minimum of description was given for each test, and the project preamble. As far as I can tell, though, there is no document that says we should have created a Test Plan, and I bet it is safe to say that their mentor did not suggest creating a Test Plan either.
No Test Plan was included. The bare minimum of description was given for each test, and the project preamble. As far as I can tell, though, there is no document that says we should have created a Test Plan, and I bet it is safe to say that their mentor did not suggest creating a Test Plan either.
No Test Plan was included. The bare minimum of description was given for each test, and the project preamble. As far as I can tell, though, there is no document that says we should have created a Test Plan, and I bet it is safe to say that their mentor did not suggest creating a Test Plan either.
No test plan section in writeup. It doesn't appear as though the repository updated the team_spec.rb file either.
No test plan section in writeup. It doesn't appear as though the repository updated the team_spec.rb file either.
No test plan section in writeup. It doesn't appear as though the repository updated the team_spec.rb file either.
No test plan required I suppose.
No test plan provided.
No test plan provided.
No test plan or the test cases.
No test plan is present still.
No test plan is included. They can have manual testing for the ui at least if automated is out of scope.
No test plan is included. They can have manual testing for the ui at least if automated is out of scope.
No test plan is included. They can have manual testing for the ui at least if automated is out of scope.
No test plan is included. Testing is mentioned briefly but does not mention what tests were added.
No test plan is included.
No Test Plan is included.
No Test plan included in the submission.
No test plan included but I feel that wasnt needed.
No test plan has been mentioned.
no test plan availble in the documentation.
no test plan availble in the documentation.
No test plan added, they where missing the last time as well. You guys should add them telling how you exactly plan to test the changes you make, even if its a small change it should be mentioned how it was tested.
No test plan added, they where missing the last time as well. You guys should add them telling how you exactly plan to test the changes you make, even if its a small change it should be mentioned how it was tested.
No test plan added, they where missing the last time as well. You guys should add them telling how you exactly plan to test the changes you make, even if its a small change it should be mentioned how it was tested.
No test plan added in writeup or explained otherwise.
No test plan added in writeup or explained otherwise.
No test plan added and no test cases written in code as well as in wiki.
No test plan
No test plan
No test plan
No test plan
No test plan
No test plan
No test cases present but test plan covers it.
No test cases or test plan mentioned in the write-up.
No test cases or test plan mentioned in the write-up.
No test cases or test plan mentioned in the write-up.
No test cases is included in test plan.
No test cases is included in test plan.
No test cases have been written 
No test cases have been written 
No test cases have been implemented for any entity.
No test cases have been implemented for any entity.
no test cases found in the test folder
no test cases found in the test folder
No test cases for models. Controllers are partially tested.
No test cases for models. Controllers are partially tested.
No test cases for models. Controllers are partially tested.
No test cases explained. 
No test cases explained. 
No test cases could be found.
No test cases as this wasn't a testing project.
No test cases are implemented.
No test cases are added by the team and overall coverage of the project is decreased by 10.6%.
No test cases are added by the team and overall coverage of the project is decreased by 10.6%.
No test cases apart from default test cases.
No test cases apart from default test cases.
No test cases / Test plans
No test cases / Test plans
No test cases / Test plans
No team could have given some info on that
no such things like UML.
No specific testing apart from scaffold generated tests seems to have been implemented by the team.
No specific testing apart from scaffold generated tests seems to have been implemented by the team.
No significant improvements to the write up. It still doesnt explain clearly the functionality of menu.rb and the need for different tests. There is code provided in the write-up, which is more reductant than informative. No future scope or enhancements documented. They have provided all necessary links and coverage data.
No Screencast or deployed URL provided.
No Screencast or deployed URL provided.
No Screencast or deployed URL provided.
No roles implemented. 
No readme, or git link, code is difficult to sort through from the zip file.
No readme file found 
No pull request link is provided 
No pull request link
No pull request has been created as I can see from the link provided. The commits have been made, though. I think they are just one step behind creating a PR. Some variables like, @students_teamed_with, seemed ambiguous as to what do they represent.
No pull request has been created as I can see from the link provided. The commits have been made, though. I think they are just one step behind creating a PR. Some variables like, @students_teamed_with, seemed ambiguous as to what do they represent.
No pull request has been created as I can see from the link provided. The commits have been made, though. I think they are just one step behind creating a PR. Some variables like, @students_teamed_with, seemed ambiguous as to what do they represent.
No proper test plan has been mentioned yet in the write-up. But a link to demo vedio is available which includes the manual testing case.
No proper commenting . authors havent improved as expected.
No plan provided, cannot comment.
No plan provided, cannot comment.
No plan provided, cannot comment.
No plan or UML design is given.
No plan or UML design is given.
No plan or UML design is given.
No plan introduced
No plan introduced
No plan introduced
No plan introduced
No patterns mentioned
No not even one model or controller has been thoroughly tested
No not even one model or controller has been thoroughly tested
No new visualizations were added for the fourth part of the project.
No new tests were written for this functionality. 
No new tests were added and coverage has also reduced. Some UI testing could've been done.
No new tests have been written
No new tests have been written
No new tests have been written
No new tests have been added to the project. Commits for the first round had increased the code coverage by .0004 which was good, but the code coverage has decreased by 2.9% as per the latest build report.
No New Tests
No New Tests
No new test were added but earlier tests are working.
No new test were added and existing test are failing. AssignmentsController#update when params has key :assignment_form when the timezone preference of current user is not nil and assignment form updates attributes successfully shows an error message and redirects to assignments#edit page Failure/Error: if current_round != " " && session[:rubrics_by_round][current_round] != questionnaire["questionnaire_id"]
No new test cases were added. The new code changes don't change the modify the existing code coverage. The modifications were mostly on UI. They could have added capybara testing.
No new test cases were added. The new code changes don't change the modify the existing code coverage. The modifications were mostly on UI. They could have added capybara testing.
No new test cases were added. The new code changes don't change the modify the existing code coverage. The modifications were mostly on UI. They could have added capybara testing.
No new test cases were added
No new test cases were added
No new test cases have been added to test the newly defined functions.
No new test cases are written.
No new test cases are written.
No new test cases added, but the existing ones had a good coverage too.
No new Test cases
No new commits. Last commit was on Nov 2nd before the first review.
No new commits.
No New commits.
No new commits with respect to code or functionality. Just few indentations,  comment changes and code beautifications done
No new commits were made during the second round.
No new commits were made during the 2nd round.
No new commits were made during 2nd round.
No new commits were added during the 2nd round.
No new commits in the second round.
No new commits in the second round.
No new commits in the second round.
No new commits in the second round.
No new commits have been made. All changes are in the documentation only.
No new commits have been made in the 2nd round
No new commits are added in this round.
No new commits after the first submission.
No New Commits
No new commit.
No new commit has been added since the last submission. The commit messages are not descriptive. They should commit small portions of code one by one with proper description of the changes in the commit  message. Also their functions seem to be very long. they may consider refactoring and creating more cohesive code. Each function should do only one task.
No new commit has been added since the last submission. The commit messages are not descriptive. They should commit small portions of code one by one with proper description of the changes in the commit  message. Also their functions seem to be very long. they may consider refactoring and creating more cohesive code. Each function should do only one task.
No new commit has been added since the last submission. The commit messages are not descriptive. They should commit small portions of code one by one with proper description of the changes in the commit  message. Also their functions seem to be very long. they may consider refactoring and creating more cohesive code. Each function should do only one task.
No new code was committed in the second round. I would have really appreciated it if the team could have taken the time to add comments, and fix some "codeclimate" issues.
No new code was committed in the second round
No new code was committed in the second round
No new code was committed during this review to incorporate the changes suggested
No new changes were committed during the second round.
No models or controllers are tested
No model tests were found, but a controller test was well tested.
No model tests were found, but a controller test was well tested.
No model tests have been implemented. Basic controller tests generated by scaffold and devise are available.
No model test cases. Controllers not tested exhaustively.
No model test cases. Controllers not tested exhaustively.
No model or controller has been tested.
No model has been tested.
No mention is made as to why the changes were made in which specific files. A few lines are given before each image but they are too succinct to understand anything. The code is well written but hard to follow (what is the functionality of the code is tough to decipher). Code is well written.
No mention is made as to why the changes were made in which specific files.  The code is well written but hard to follow (what is the functionality of the code is tough to decipher). It would have been better had there been some comments or documentation as to what those respective methods do.
No mention is made as to why the changes were made in which specific files.  The code is well written but hard to follow (what is the functionality of the code is tough to decipher). It would have been better had there been some comments or documentation as to what those respective methods do.
No mapping table was found. 
No mapping table was found. 
No mapping table was found. 
No mapping table present anywhere. No belongs to/ has_many relationship present in the models
No mapping table present anywhere. No belongs to/ has_many relationship present in the models
No mapping table present anywhere. No belongs to/ has_many relationship present in the models
No link was given to the demo of the project.
No link was given to the demo of the project.
No link to the deployed application is provided. Hence, cannot be tested manually.
No link to the deployed app has been provided, neither in expertiza nor in github/README hence unable to test
No link to the deployed app has been provided, neither in expertiza nor in github/README hence unable to test
No link to the application or a screencast of manual testing.   Suggestion: You can try to add screenshots of the testing performed and attach it to the writeup
No link to the application or a screencast of manual testing.   Suggestion: You can try to add screenshots of the testing performed and attach it to the writeup
No link provided of the deployed application or screencast video where I can see the changes done.
No link provided of the deployed application or screencast video where I can see the changes done.
No link of the pull request provided.
No link of the pull request provided.
No link of the pull request provided.
No issues codewise. Can add test cases and after thorough testing It can be deployed. Yes other team can take up and fix the minor issues and build pass.
No issues codewise. Can add test cases and after thorough testing It can be deployed. Yes other team can take up and fix the minor issues and build pass.
No information on two other issues that need to be covered.
No information for admin login credentials provided anywhere. Under signing-up, no option to sign up as a realtor or a hunter is given. They should be able to do that because otherwise the functionalities aren't being differentiated for a hunter and a realtor. 
No information for admin login credentials provided anywhere. Under signing-up, no option to sign up as a realtor or a hunter is given. They should be able to do that because otherwise the functionalities aren't being differentiated for a hunter and a realtor. 
No information for admin login credentials provided anywhere. Under signing-up, no option to sign up as a realtor or a hunter is given. They should be able to do that because otherwise the functionalities aren't being differentiated for a hunter and a realtor. 
no implementation proposed in the design document, only placeholders. Need more detail for it. 
no implementation proposed in the design document, only placeholders. Need more detail for it. 
no implementation proposed in the design document, only placeholders. Need more detail for it. 
no implementation proposed in the design document, only placeholders. Need more detail for it. 
No implementation plans are proposed, but the design is satisfactory for the user to understand what needs to be done. 
no implementation details given, so cannot say how they 
no implementation details given, so cannot say how they 
no implementation details given, so cannot say how they 
No idea if it works as there was no admin login or create company functionality.
NO I don't think they have submitted any test model.
No GitHub link available as their page itself in not working by showing it is not available. 
No git link available to track progress.
No future plan mentioned
No form validations
No form validation in the create new company page. For example, when 'Founded' field is given as text and updated, it succeeds but the value is saved as a 0. Admin is unable to add new realtors. Throws up an error. Admin is unable to add new house hunters. Throws up an error. Not able to sign up as either a realtor or house hunter. Gives the "something went wrong error". Something is wrong with the deployment. Please look into it.  
No form validation in the create new company page. For example, when 'Founded' field is given as text and updated, it succeeds but the value is saved as a 0. Admin is unable to add new realtors. Throws up an error. Admin is unable to add new house hunters. Throws up an error. Not able to sign up as either a realtor or house hunter. Gives the "something went wrong error". Something is wrong with the deployment. Please look into it.  
No For e.g house should belong_to a real estate company but its not handled in house.rb
No For e.g house should belong_to a real estate company but its not handled in house.rb
No For e.g house should belong_to a real estate company but its not handled in house.rb
no files section in the wiki, need a section to list all new files and modified files.
No explanation is given. 
No diagrams, have been mentioned and they have said that they would implement a diagram in the final design doc and thus that part of the project has been left in the air.  1. No diagram present. 2. No conventional flow since no diagrams present.  3. Not only no high level but no diagrams are are even abstractly specified.
No diagrams, have been mentioned and they have said that they would implement a diagram in the final design doc and thus that part of the project has been left in the air.  1. No diagram present. 2. No conventional flow since no diagrams present.  3. Not only no high level but no diagrams are are even abstractly specified.
No diagrams, have been mentioned and they have said that they would implement a diagram in the final design doc and thus that part of the project has been left in the air.  1. No diagram present. 2. No conventional flow since no diagrams present.  3. Not only no high level but no diagrams are are even abstractly specified.
No diagrams, have been mentioned and they have said that they would implement a diagram in the final design doc and thus that part of the project has been left in the air.  1. No diagram present. 2. No conventional flow since no diagrams present.  3. Not only no high level but no diagrams are are even abstractly specified.
No diagrams to refer to
No diagrams to refer to
No diagrams to refer to
No diagrams shown
No diagrams provided.
No diagrams present to explain behaviour design.
No diagrams present to explain behaviour design.
No diagrams present to explain behaviour design.
No diagrams present
No diagrams or tables were provided. However, adding those pictures was a good idea.
No diagrams or tables were provided. However, adding those pictures was a good idea.
No diagrams included in the document. Adding some diagrams to explain what the system is and how the design will look like will be better.
No diagrams are required for this project.
No diagrams are present, would help reviewers better understand what is going on.
no diagram
No details of the proposed design.
No details of the proposed design.
No details of the proposed design.
No details of the proposed design.
No details about what was changed only details related to already existing implementation has been stated.
No details about what was changed only details related to already existing implementation has been stated.
No details about what was changed only details related to already existing implementation has been stated.
No detailed design was provided.
No detaiiled design on how to do proposed solution no visuals 
No detaiiled design on how to do proposed solution no visuals 
No detaiiled design on how to do proposed solution no visuals 
No detaiiled design on how to do proposed solution no visuals 
No design proposed.
no design proposed, can not check any mistake of the design decision. 
no design proposed, can not check any mistake of the design decision. 
no design proposed, can not check any mistake of the design decision. 
no design proposed, can not check any mistake of the design decision. 
No design has been yet proposed by the author, however the goal of the project has been well described. Most of the write-up is the same as mentioned in the Google doc. Suggestion: Expand more on what changes need to be done in order to achieve the end result.
No design has been yet proposed by the author, however i feel the author is on track to make the right changes by looking at the files intended to be modified.
No design found on the wiki. Not sure if any design diagram is needed but a flow diagram to test the changes can be helpful.
No design found on the wiki. Not sure if any design diagram is needed but a flow diagram to test the changes can be helpful.
No deployment provided so can't be verified.
No deployment provided so can't be verified.
No deployment link was provided, but from the video and tests they provided, the features works as intended.
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment link
No deployment is provided, so couldn't test manually. 
No deployment is provided, so couldn't test manually. 
No deployed!
No deployed!
No CSS has been applied. Links are redirecting to pages instead of just performing the action
No CSS has been applied. Links are redirecting to pages instead of just performing the action
No credentials for admin available in the README. Can't access the admin section and hence cannot grade it.   Also, no roles have been defined in the signup form. Hence, cannot identify a general user as an admin/realtor/hunter.   Hence unable to review the access control methods of the project.    
No credentials for admin available in the README. Can't access the admin section and hence cannot grade it.   Also, no roles have been defined in the signup form. Hence, cannot identify a general user as an admin/realtor/hunter.   Hence unable to review the access control methods of the project.    
No credential provided for login. Hence, couldn't check.
No controller nor model is tested.
no complex design, only few places need to add functionalities, and they all very similar.
No commits were done in round 2.
No commit has been added since round 1. They should have fixed the build failure which is probably happening because they have pushed changes few extra changes in schema.rb which I don't think is required for this project.
No code was committed during round 1. Most of the code was committed during second round based on reviews of Round 1.
No code is mentioned to be checked 
No code is mentioned to be checked 
No code is mentioned to be checked 
No clear explanation is given as to which files are edited for which reason. Only file names are stated along with technical changes made. The method names and variable names are very well defined ! Kudos!
No clear explanation is given as to which files are edited for which reason. Only file names are stated along with changes made. Why the changes were made and what do those changes correct is not given. No write up link has been provided. It was tough to navigate the code myself. No demo or link provided as well.
No clear explanation for the work.
No clear explanation for the work.
No class diagram, but there is er diagram and tables for database, it looks a little complex, but give the idea of what is involving. 
No class diagram, but there is er diagram and tables for database, it looks a little complex, but give the idea of what is involving. 
No clarification
No clarification
No clarification
No changes were committed in round 2.
No changes were committed in round 2.
No changes proposed.
No changes proposed.
No changes proposed.
No changes proposed.
No changes has been done
No changes has been done
No changes
No changes
No cases were mentioned in the Test Plan hence could not tell it is converted into automated tests. Please elaborate it.  
No Build still fails in spite of asking them to fix the build issues in first place
No Build still fails in spite of asking them to fix the build issues in first place
No build did not pass. 1/3 checks very successful. It is fixable and the issues are trivial.
No build did not pass. 1/3 checks very successful. It is fixable and the issues are trivial.
No automated tests. But the fix seems to be working fine as per the test plan provided.
No automated tests.
No Automated tests.
No automated tests.
No all functionalities are not incorporated. Design and implement a solution that handle GitHub is missing.
No all functionalities are not incorporated. Design and implement a solution that handle GitHub is missing.
No all functionalities are not incorporated. Design and implement a solution that handle GitHub is missing.
No admin account provided. No user role selections. Seems to be an incomplete project. Looks like they use scaffolding to generate the templates but didn't fill in the necessary code.
No admin account provided. No user role selections. Seems to be an incomplete project. Looks like they use scaffolding to generate the templates but didn't fill in the necessary code.
No admin account provided. No user role selections. Seems to be an incomplete project. Looks like they use scaffolding to generate the templates but didn't fill in the necessary code.
No additional commits were found considering one issue was still left to be implemented. Suggestion: There should have been some commits present pertaining to test cases or at least the 3rd issue that was not implemented.
No
No
No
No
No
nly one test case implemented and executed which verifies whether the correct email has been sent to the reviewer.
Nicely implemented code. Used ruby delegations appropriately, and the code is very readable.  However, a few things can be improved.  for eg, in inquiriy_replies_controller, flash[] is used to transfer data from the new method to the params method, which is not the correct way. Also, I believe that the implementation can be made more efficient by reducing the number of database hits. For example, in almost all the controllers, there are redundant database hits: User.find(session[:id]).role_type == "buyer" could have been identified during login. A second hit to identify the role type or any such info can be avoided. For a small test database, this would not show any performance decrease but as the records increase the pages will become exponentially slower.   Maybe you can store these in memory [Session?], which would reduce time taken significantly at a small memory overhead.
Nice work implementing image upload for houses. I found some functionalities missing: - After deleting a company, an error page shows up instead of a valid page, also sometimes the company does not get deleted - Company edit link goes to home page instead of edit form - Realtor can create a house even though (s)he has no company - Interest list page for hunter loads 'page does not exist'
nice user interface, good use layouts. but unable to log in as admin,
nice user interface, good use layouts. but unable to log in as admin,
nice mockup for another language, it is clean. The menu bar for translated language screen is still in English, I assume it is just a careless mistake when make the mockup. 
nice mockup for another language, it is clean. The menu bar for translated language screen is still in English, I assume it is just a careless mistake when make the mockup. 
nice mockup for another language, it is clean. The menu bar for translated language screen is still in English, I assume it is just a careless mistake when make the mockup. 
New method names and variables are fine, however this team did not add a lot of new classes, methods, etc.
New method names and variables are fine, however this team did not add a lot of new classes, methods, etc.
New houses are not adding.
New code was committed but all at once on the same day.
New code was committed but all at once on the same day.
New code added is written well with DRY and no long or complicated functions. I could see file updated has changes on line such as tab and space. Team could work upon indentation. 
nether admin nor realtor able add new houses . unable to send inquiry. no option to delete realtor and HH account
nether admin nor realtor able add new houses . unable to send inquiry. no option to delete realtor and HH account
nether admin nor realtor able add new houses . unable to send inquiry. no option to delete realtor and HH account
Needs to work a bit on the plan
Needs to work a bit on the plan
Needs to work a bit on the plan
Needs some work, code climate changes, a bit of DRYness and a passing CI is needed.
Need to specify role when logging in. It should identify with email. The house search feature does not seem to have been implemented. House hunter and realtor can view all inquiries of all users. Signup page not complete. Image not associated with house. Can view potential buyers of other companies too.  
Need to include uml diagrams - try t include use case diagram to explain the flow of the solution and a class diagram to explain how you will be implementing the solution.
need to include test plan
need to include test plan
Need to include a test plan
need to include a flow diagram
need to edit test plan and add more test cases.
need to edit test plan and add more test cases.
need to edit test plan and add more test cases.
need some diagram or prototype. 
Need more explanation of the work to be done by the team. 
need more detail of design to show any future suggestion
need more detail of design to show any future suggestion
need more detail of design to show any future suggestion
Need improvements, can add design by adding UML diagrams and Test Plans.  Technical details with class diagram to explain the code level implementation would have been better.
Need improvements, can add design by adding UML diagrams and Test Plans.  Technical details with class diagram to explain the code level implementation would have been better.
Need improvements, can add design by adding UML diagrams and Test Plans.  Technical details with class diagram to explain the code level implementation would have been better.
Need a bit of detailed explanation on 'why' and 'how'. Too many screenshots with little explanation in words.
Neat code and well arrangement of the views espaciallly the house_style view.
Nearly all of the links seem to go to the wrong pages. For example, "Back" in Viewing Houses took me to a list of Users that had signed up, while logged in as a Realtor.
Nearly all of the links seem to go to the wrong pages. For example, "Back" in Viewing Houses took me to a list of Users that had signed up, while logged in as a Realtor.
Nearly all commits occurred during round 2.
Navigation is hard, while some models seem to work for most cases, inquiries for example is not tested, as im unable to create an inquiry
Navigation is hard, while some models seem to work for most cases, inquiries for example is not tested, as im unable to create an inquiry
Naming looks fine. Could probably have used is_submitted? instead of is_submitted.
Naming is good. There are few names(eg. is_selfreview_enabled ) which don't seem fine but they were from before, any thing new that has been added by them follows proper naming convention.
Names could have been better designed especially the 'quesparams' variable. I get no idea about what that variable is used for or what that implements. You can rename it to question_params, or duplicate_directory_params etc.
N link to the deployed version is provided hence cannot comment on this question
multiple success message still not fixed
Multiple roles seems to be missing. Eg. for the details for house hunter given in readme,i get logged into realtor profile same is when  I create a new user and log-in  create a company, get message that user has been created "Welcome to the Real Estate Manager,hunter User was successfully created."  
Multiple controllers are thoroughly tested, but no models appear to be properly tested.
Mostly yes. But the working flow could have been explained better with the flow diagrams.
Mostly yes. But the working flow could have been explained better with the flow diagrams.
Mostly yes. But the working flow could have been explained better with the flow diagrams.
Mostly yes. But the working flow could have been explained better with the flow diagrams.
most the things are done in phase 2 only. but few things are missing. house hunter can't edit/delete his inquiry. no page for house hunter to see what all he has marked as interested. Not able to figure out as a house hunter if i have marked a house interested or not. realtor not . able to reply to inquiry, its throwing error.
Most of them are good, but some edge cases should be considered.
Most of them are good, but some edge cases should be considered.
Most of them are correct. In inquiry, the mapping is wrong in my opinion. It says has_many :users, has_many :houses, inquiry belongs_to one house and one user who creates the inquiry.
Most of them are correct. In inquiry, the mapping is wrong in my opinion. It says has_many :users, has_many :houses, inquiry belongs_to one house and one user who creates the inquiry.
Most of the variable names and function names are named based on proper convention. Suggestion: function addCreateTopicSection()This function name could be changed to maybe CreateTopic() or AddTopic()Apart form this, all other names look good
Most of the variable names and function names are named based on proper convention. Suggestion: function addCreateTopicSection()This function name could be changed to maybe CreateTopic() or AddTopic()Apart form this, all other names look good
Most of the variable names and function names are named based on proper convention. Suggestion: function addCreateTopicSection()This function name could be changed to maybe CreateTopic() or AddTopic()Apart form this, all other names look good
Most of the updated code is well written. Some functions could have been shortened. For example, in the set_display_type function, instead of writing a 'when' statement for each of the options, you could have stored them in a hashmap and set display type to that value if it exists in the hashmap.
Most of the tests passed. However, a small fraction of the tests have failed and the code needs to be modified to incorporate these changes
Most of the tests passed. However, a small fraction of the tests have failed and the code needs to be modified to incorporate these changes
Most of the test cases are auto generated.
Most of the test cases are auto generated.
Most of the test cases are auto generated.
Most of the source code is following standard Ruby practices. However, some cases could be improved. There is a number of variable names that are concatenated with numbers for example user1, user2 etc. While this approach can be justified in some cases, I would suggest using more descriptive names instead or arrays if multiple instances are required. Moreover, indentation needs to be fixed to improve code readability.
Most of the source code is following standard Ruby practices. However, some cases could be improved. There is a number of variable names that are concatenated with numbers for example user1, user2 etc. While this approach can be justified in some cases, I would suggest using more descriptive names instead or arrays if multiple instances are required. Moreover, indentation needs to be fixed to improve code readability.
Most of the relationships have been implemented. I couldn't log in to the admin 
Most of the problem statements have been addressed, just missing a test plan
Most of the naming is reasonable and follows standard Ruby practices.  One problem is that code makes extensive use of variable names concatenated with numbers. Example: allow(participant3).to receive(:topic).and_return(topic) Here it is not clear what distinguishes participant3 from other participants and why it is special. It would be better to avoid using contractions such as stu1 or p1 (.sort_by_name method, Line 130). Furthermore, I would suggest using consistent indentation (for example .get_authorization method, Line 113).
Most of the naming is reasonable and follows standard Ruby practices.  One problem is that code makes extensive use of variable names concatenated with numbers. Example: allow(participant3).to receive(:topic).and_return(topic) Here it is not clear what distinguishes participant3 from other participants and why it is special. It would be better to avoid using contractions such as stu1 or p1 (.sort_by_name method, Line 130). Furthermore, I would suggest using consistent indentation (for example .get_authorization method, Line 113).
Most of the functionalities works in the application, however, >While trying to add a company as a realtor after signing up the user gets the error "Already Created a Company". > While clicking on show on the potentials buyer list, the application breaks. > A house hunter is able to see all the companies which is not as per application requirement.  
Most of the functionalities that were required have been implemented but the final changes haven't been merged due to some build issues on Travis CI. The tests are quite comprehensive
Most of the functionalities seem to work fine. Below are some of them which break or are absent: 1.Link to view current user's company breaks and there is nothing to show. 2. There is no option to change a user's company. 3. There is no interest list for a house hunter. 4. There is no potential buyer's list for a listing.
Most of the functionalities seem to work fine. Below are some of them which break or are absent: 1.Link to view current user's company breaks and there is nothing to show. 2. There is no option to change a user's company. 3. There is no interest list for a house hunter. 4. There is no potential buyer's list for a listing.
Most of the functionalities are working correctly. One necessary feature that is not working as expected is inquiries. There are broken links when admin/realtor tries to view inquiries.
Most of the functionalities are working correctly. One necessary feature that is not working as expected is inquiries. There are broken links when admin/realtor tries to view inquiries.
Most of the functionalities are implemented. However, "Not a valid URL" Error message is prohibiting from editing companies under realtors even when given a valid URL. Not able to House Hunter from the users list through admin login. The following error message is displayed. We're sorry, but something went wrong. If you are the application owner check the logs for more information. Upload picture UI could have been constructed better because the picture does not fit in the given space.
Most of the functionalities are implemented but I am not able to login as an admin using username password combination mentioned in readme. 
Most of the functionalities are implemented but I am not able to login as an admin using username password combination mentioned in readme. 
Most of the functionalities are implemented but I am not able to login as an admin using username password combination mentioned in readme. 
Most of the edge cases pertain to houses/inquiries/users. This cannot be tested if houses are not present in the system. Houses can be added through admin, realtor or seed. I would suggest fixing at least admin or realtor functionality or using seed for populating data.
Most of the edge cases pertain to houses/inquiries/users. This cannot be tested if houses are not present in the system. Houses can be added through admin, realtor or seed. I would suggest fixing at least admin or realtor functionality or using seed for populating data.
Most of the edge cases pertain to houses/inquiries/users. This cannot be tested if houses are not present in the system. Houses can be added through admin, realtor or seed. I would suggest fixing at least admin or realtor functionality or using seed for populating data.
Most of the edge cases cannot be tested due to problems with accessing admin's account. Functionality pertaining to inquiries add/edit/delete is not implemented.
Most of the commits were early this week.
Most of the commits are within the last 2 days before submission of project. Yes, commits for round 2 are provided properly.
Most of the codes are well strutted, but something like "returns an equivalent item" is long and it is better to separate them.
Most of the codes are well strutted, but something like "returns an equivalent item" is long and it is better to separate them.
Most of the code is well organized and follows "good Ruby and Rails coding practices". But I found some code has indentation problems. For example, in session_controller.rb, line 12-29 have obvious indentation problem.
Most of the code is well organized and follows "good Ruby and Rails coding practices". But I found some code has indentation problems. For example, in session_controller.rb, line 12-29 have obvious indentation problem.
Most of the code is well organized and follows "good Ruby and Rails coding practices". But I found some code has indentation problems. For example, in session_controller.rb, line 12-29 have obvious indentation problem.
Most of the code is auto-generated from rails generator so they do the generic thing. Although they have connected most of the app, the basic functionalities are still lacking and no new code has been written. The only part I see is the sessions controller that has been written manually, and follows correct coding convention.
Most of the cases are covered in "should send an email to the participant" test case. Reviewer part and its mail content checks are not covered.
Most of parts are included, but they should include more details in their doc.
Most of parts are included, but they should include more details in their doc.
Most of it default UI provided by rails but is easy to use.
Most models seem to be tested, with a few errors in some places.
Most functionality is either broken or not present 1. delete real estate company not present 2. create house not present 3. On user create get,"Welcome to the Real Estate Manager,user1 User was successfully created." 4. Send inquiry, logs out the user  
Most functionalities are working great. In the first round admin was missing some basic functionalities, now they are present and working. One issue that I came across is that while admin is creating a new company, the system keeps raising an error saying that the website url is invalid and so the users cannot create new company. Maybe, there is something wrong with the validations of Company model. However, when realtor creates the company, this error does not occur.
Most commits were done by one person which cannot be considered a good practice. Naming of commits is done well, names are descriptive of the introduced changes. I would suggest doing commits more often by dividing work into smaller chunks.
Most basic functionalities are working. Admin functions of add/delete users is now working well. One issue that I faced: realtor view house listings button not working, so most of the realtor functionalities (as they are dependent on houses) are not working.
Most basic functionalities are working. Admin functions of add/delete users is now working well. One issue that I faced: realtor view house listings button not working, so most of the realtor functionalities (as they are dependent on houses) are not working.
Most basic functionalities are working well. Some functionalities that I found missing: Image upload for house has not been implemented. Admin should not be able to submit inquiries to the houses or add to interest list. I could not find the link to view the inquiry replies for house hunters No link provided for house hunter to see his/her interested house list Potential buyers list page 'show' button doesn't work Realtor cannot create house. Even though company has been updated in the profile, keep receiving message to "select an existing company by editing profile".  
Most are good, but the Test cases part just a combine of "describe" and "it" part of spec code. Could be replaced by a link of git.
More of what is done is explained. Also, steps to manually test the instance could have been included.
More explanation regarding the solution would be helpful, explaining which files must be changed, etc.  
More explanation on how to proceed with the implementation could have been added. Could have also added technologies to be used.
More explanation on how to proceed with the implementation could have been added. Could have also added technologies to be used.
More explanation around only those two graphs are being considered is needed. While its early in the project, at least what changes will be made to a file could have been mentioned.
More explanation around only those two graphs are being considered is needed. While its early in the project, at least what changes will be made to a file could have been mentioned.
More effort should be expended on the design.The current explanation talks only about changes in the view. It would be better if the solution is explained at greater depth.
More effort should be expended on the design.The current explanation talks only about changes in the view. It would be better if the solution is explained at greater depth.
More effort should be expended on the design.The current explanation talks only about changes in the view. It would be better if the solution is explained at greater depth.
More details required regarding the functionality for which the test cases have been written.
More details are expected in the Test Plan like edge cases, normal cases.
More details are expected in the Test Plan like edge cases, normal cases.
More details about the test cases can be given in the write up for a better understanding.
More details about the test cases can be given in the write up for a better understanding.
more comments are needed for clearity .
More comments are needed because I had trouble following what the code was doing in some places. The code follows Ruby Style Guide and is DRY in its design. Functions are small in size and naming conventions have been followed. Kudos!
More comments are needed because I had trouble following what the code was doing in some places. The code follows Ruby Style Guide and is DRY in its design. Functions are small in size and naming conventions have been followed. Good work in this area.
More comments are needed because I had trouble following what the code was doing in some places. The code follows Ruby Style Guide and is DRY in its design. Functions are small in size and naming conventions have been followed. Good work in this area.
More comments are needed because I had trouble following what the code was doing in some places. The code follows Ruby Style Guide and is DRY in its design. Functions are small in size and naming conventions have been followed. Good work in this area.
More comments are needed because I am having trouble following the code. The code follows Ruby Style Guide and is DRY in its design. Functions are small in size and naming conventions have been followed. Good work in this area.
Modules have test cases.
models/search.rb line 6: Don't need to use return. controllers/home_controller.rb line 2: You should use one line to define a empty method.  controllers/house_controller.rb line 34: No meaning line break. controllers/user_controller.rb line 19: No meaning line break.
Models/Schemas do not have the relationships defined. Looks like manual table updation on actions which makes it difficult to maintain long term.
Models have not been tested. Controllers are partially tested.
Models have not been tested. Controllers are partially tested.
Models are not tested and controllers are partially tested.
Model testing needs to be improved with more scenarios.
Model has not been tested.  
Model has not been tested.  
Model and controller testing are remaining. 
Model and controller testing are remaining. 
Missing many functionalities for realtor and house hunter such as login.
Missing a UML. But loved the addition of the LoFI sketch.
Minimal changes were made to the test suite and new tests were not written for the new code.
min can still be greater than max in house filter
min can still be greater than max in house filter
min can still be greater than max in house filter
method remove_instructor is written twice in the same file, delete it.
Maybe add some design diagrams rather than just have screenshots.
Maybe add some design diagrams rather than just have screenshots.
Maybe add a class diagram, but newly added flowchart and database diagram make the design more clear. 
max_choosers name was not changed. As far as i understand it denotes the maximum number of slots and should be called max_slots. which is not changed. Apart from this code is good.
max_choosers name was not changed. As far as i understand it denotes the maximum number of slots and should be called max_slots. which is not changed. Apart from this code is good.
max_choosers name was not changed. As far as i understand it denotes the maximum number of slots and should be called max_slots. which is not changed. Apart from this code is good.
Max commits were made on the last day of submission. No, no changes are committed in round 2.
Mapping of a house to a company is missing. Realtor Company mapping is also missing. Destroy feature for a house is not working
Many tests are not yet implemented. More testing of the author's work in handling edge cases will be done in round two of reviews.
Many tests are not yet implemented. More testing of the author's work in handling edge cases will be done in round two of reviews.
Many of the edge cases are covered. One issue I found is that the back buttons for admin in the edit admin page and real estate companies page moves in loop.
Many of the edge cases are covered. One issue I found is that the back buttons for admin in the edit admin page and real estate companies page moves in loop.
Many normal cases are failing as told in previous case hence the edge cases specified are not even applicable
Many normal cases are failing as told in previous case hence the edge cases specified are not even applicable
Many functionalities don't work as mentioned in the requirement. README doesn't provide enough description on how to finish the tasks. 
Many appropriate relationships are implemented. (a) companies(1) to houses(n) (b) house(1) to photo(1) and (c) house(1) to possible buyers(n) . I believe there should also be an association with how there a realtor can only belong to one company. This will ensure many necessary functional dependencies are in place for the required application flow. Keep the ones you have and continue to add missing associations as you go through the requirements check.
Many appropriate relationships are implemented. (a) companies(1) to houses(n) (b) house(1) to photo(1) and (c) house(1) to possible buyers(n) . I believe there should also be an association with how there a realtor can only belong to one company. This will ensure many necessary functional dependencies are in place for the required application flow. Keep the ones you have and continue to add missing associations as you go through the requirements check.
Many 1:n and n:n relations mapped incorrectly and they cause application crash. Code does not use dependent destroy/delete when two related (RealestateCompany is deleted, Houses )
Manually ran the Test and Coverage report says only 34% of Code is Covered
Manually ran the Test and Coverage report says only 34% of Code is Covered
Manual testing seems an impossible task since it is not having a wiki doc itself which makes it impossible to have a specific design flow for the project in question to go ahead and check the program. 
Manual testing could not be performed as the link to the deployed application was not available however the vedio link attached sufficiently demonstrates how the features work.
Manual test plans as of now! The team is planning to add Rspecs after implementation.
Manual test plans as of now! The team is planning to add Rspecs after implementation.
Manual test plan as of now. Try to automate it if possible.
Make include more details for test plan, other than that, the wiki looks very good. 
Make include more details for test plan, other than that, the wiki looks very good. 
Make include more details for test plan, other than that, the wiki looks very good. 
Magic. How did they know they needed a Test Plan?!? They did a great job laying out how they created an environment to unit test Participant with their design choice, and chosen variables and factories.
Lower level design changes are missing.  Authors have only talked about config changes.  No mention if the db requires any changes 
Lower level design changes are missing.  Authors have only talked about config changes.  No mention if the db requires any changes 
Lower level design changes are missing.  Authors have only talked about config changes.  No mention if the db requires any changes 
Lots of test plans are added. The coverage decreased for the plans added. The test plan covers the basic functionality and not the edge cases
Lots of good background details is given, but the testing and implementation sections are missing.
Lot of work is done, good job.  Few suggestions from my end,  (1) Tests not implemented for both model and controller (2) I do see   <%= form.check_box(:role_ids, {:multiple => :true, :checked => @user.roles.map { |role| role.id }.include?(role.id) }, role.id, false) %> but roles are not visible in UI (3) Though images are uploaded , in house profile it is not displayed, also as I understand multiple images for house are allowed hence its incorrect to use   has_one_attached :image_path. (4) Validations for models such a House are missing  (5) Its a good coding tech to add  : params.require in controllers  (6) In UI it is good to add in tables so that all fields are aligned  (7) you have before_action :authenticate_user! but in the controller tests I do not see login as part the tests.          
Lot of work is done, good job.  Few suggestions from my end,  (1) Tests not implemented for both model and controller (2) I do see   <%= form.check_box(:role_ids, {:multiple => :true, :checked => @user.roles.map { |role| role.id }.include?(role.id) }, role.id, false) %> but roles are not visible in UI (3) Though images are uploaded , in house profile it is not displayed, also as I understand multiple images for house are allowed hence its incorrect to use   has_one_attached :image_path. (4) Validations for models such a House are missing  (5) Its a good coding tech to add  : params.require in controllers  (6) In UI it is good to add in tables so that all fields are aligned  (7) you have before_action :authenticate_user! but in the controller tests I do not see login as part the tests.          
Lot of unnecessary directories are created in 'controller'
Lot of unnecessary directories are created in 'controller'
Looks like the team has committed the project as a whole. Bug fixes are done incrementally.
Looks like the team has committed the project as a whole. Bug fixes are done incrementally.
Looks good. There are some files which are misleading like Realtors folder has edit_company file which is blank. Also the readme.md file is missing the Admin Login Details.
Looks good. There are some files which are misleading like Realtors folder has edit_company file which is blank. Also the readme.md file is missing the Admin Login Details.
Looks good. Function name componentDidMount is a bit confusing.
Looks good. Comments could be improved. For example, In submitted_content controller there is a comment which says sending email to users. However it is just a method call which redirects it to delayed_mailer.rb. So this should be properly mentioned as it will be helpful for someone refactoring or understanding the code later.
looking at your commit history, you guys started it on Saturday when the submission was Monday.
Looking at your code on github , you guys are following good coding practices. Just at some places you have repeated you code, for example in /myaccounts/show.html.erb you are repeating alot of code. You can create one html file for the repeated code and call it based on the object or move the repeated code to a section and use it.
Looking at your code on github , you guys are following good coding practices. Just at some places you have repeated you code, for example in /myaccounts/show.html.erb you are repeating alot of code. You can create one html file for the repeated code and call it based on the object or move the repeated code to a section and use it.
Looking at the commits, there is hardly any work done by the team other than adding style tags in 2 commits.Also, the wiki link attached is of Fall 2018. New Wiki has not been created.
Login page is not available. Also back navigation from any page is not present. Very difficult for user to come back to the last page visited.
ll the checks are failing currently. The changes have a lot of robocop issues as well which should be fixed. Also the CI build is failing at the moment. Some of the tests are failing because of the change. 
Little explanation for the code is given. The only case in which code is explained comes in the section titled Test Plan under the subsection Mock Instance. Here, it is mentioned that the project uses mocks to aid in testing functionality. However, the code example is actually of factories, a different but related concept. It is unclear if this is a typo or a misunderstanding because in later code snippets mocks do appear.
Little explanation for the code is given. The only case in which code is explained comes in the section titled Test Plan under the subsection Mock Instance. Here, it is mentioned that the project uses mocks to aid in testing functionality. However, the code example is actually of factories, a different but related concept. It is unclear if this is a typo or a misunderstanding because in later code snippets mocks do appear.
Links to create new functionalities are all in place and working perfectly. However, I would like to suggest the overall redirection of the user to various places in the app would greatly improve user experience as using the back button again and again in the browser tends to become irritating after a while.
Link to the pull request is missing. Please add it.
Link to the pull request is missing. Please add it.
Link to the pull request is missing. Please add it.
Link to deployed application is not given.
Link to deployed application is not given.
Limited functionality for admin
Limited functionality for admin
Limited functionality for admin
Less explanation on problem statement. Could have elaborated on the problem scenario and why changes needs to be made.
last moment commits.
last moment commits.
Last commit was 3 days ago, so they are not continuous throughout the period.
Last commit seems to be 11 days ago
Lacks the solution part
lacking necessary UI description, eg, the final appearance of the task list or the pathway to show a task list.
lacking necessary UI description, eg, the final appearance of the task list or the pathway to show a task list.
lacking necessary UI description, eg, the final appearance of the task list or the pathway to show a task list.
lack of group members.  The design process is not very clear.
lack of group members.  The design process is not very clear.
Lack of Comments
Kind off. I felt that admin should have been able to delete the company irrespective of the realtors belonging to the company. I felt that that scenario should have been handled in one of the following ways:- 1. Realtor associated to the company should be deleted, obviously not preferable. 2. Realtor continues to exist but without the company and thereby no houses or inquiries assigned to him.
Kind off. I felt that admin should have been able to delete the company irrespective of the realtors belonging to the company. I felt that that scenario should have been handled in one of the following ways:- 1. Realtor associated to the company should be deleted, obviously not preferable. 2. Realtor continues to exist but without the company and thereby no houses or inquiries assigned to him.
Keeping the suggestion detection algorithm as a black box, as stated in the design document I will comment on the input and output to the algorithm. The input will be a text block of the review comments to the algorithm, and the output is consisting of different fields such as sentiment score, sentiment analysis as positive/negative, suggestion as present or absent. However, it is unclear to me as to what basis (the suggestion detection algorithm details/explanation/high level overview) do you classify the data into suggestion classifier.
Keeping the suggestion detection algorithm as a black box, as stated in the design document I will comment on the input and output to the algorithm. The input will be a text block of the review comments to the algorithm, and the output is consisting of different fields such as sentiment score, sentiment analysis as positive/negative, suggestion as present or absent. However, it is unclear to me as to what basis (the suggestion detection algorithm details/explanation/high level overview) do you classify the data into suggestion classifier.
Keeping the suggestion detection algorithm as a black box, as stated in the design document I will comment on the input and output to the algorithm. The input will be a text block of the review comments to the algorithm, and the output is consisting of different fields such as sentiment score, sentiment analysis as positive/negative, suggestion as present or absent. However, it is unclear to me as to what basis (the suggestion detection algorithm details/explanation/high level overview) do you classify the data into suggestion classifier.
Just overview is presented which is explained properly. The technical design is not explained in depth.
Just one table is used for all users. Therefore there is no distinction among the admin, realtor and the house_hunter
Just one table is used for all users. Therefore there is no distinction among the admin, realtor and the house_hunter
Just one table is used for all users. Therefore there is no distinction among the admin, realtor and the house_hunter
just one scenario has been tested and couldn't see any further test plan documented. 
just one scenario has been tested and couldn't see any further test plan documented. 
Just one ER diagram. Add use case and activity/flow diagrams.
Just one ER diagram. Add use case and activity/flow diagrams.
Just one ER diagram. Add use case and activity/flow diagrams.
Just one contributor
Just few high-level details (very generic) are provided which makes it hard to visualize a solution
Just few high-level details (very generic) are provided which makes it hard to visualize a solution
Just few high-level details (very generic) are provided which makes it hard to visualize a solution
Just contains the test name and file name. Doesn't show how the test was done and the output obtained.
Just contains the test name and file name. Doesn't show how the test was done and the output obtained.
Just a small explanation of the proposed solution has been given. They could clearly explained more.
Just a small explanation of the proposed solution has been given. They could clearly explained more.
Just a one-line summary has been provided about the testing but it is not clear what the test plan is.
Its good, can be more elaborative. Also in sections where you have added the code changes, you ca add comments to the code as well for better understanding.
Its deployed on heroku, but haven't written about what all features you have completed and what all features are left to complete. Also there are few pages where you can add a link to go to main menu. Sometimes I have to go back 3-4 times to reach main menu.
Its an UI intensive project, so no specific design approaches are applicable. But the team should have put it more details into the document to elaborate the changes and they choice of tools under the bootstrap framework. Like a pill or navtab or navbar is going to be used to achieve a particular look, and if one of them, why the choice. Such details on decisions should be included in the design document.
It's unclear how complete the test plan is because their wiki does not contain their total branch or mutation coverage.
It's unclear how complete the test plan is because their wiki does not contain their total branch or mutation coverage.
It's unclear how complete the test plan is because their wiki does not contain their total branch or mutation coverage.
It's probably fine if the integration tests can be resolved, and the code smells from code climate can be fixed.
It's probably fine if the integration tests can be resolved, and the code smells from code climate can be fixed.
It's probably fine if the integration tests can be resolved, and the code smells from code climate can be fixed.
It's precise but some information missing.
It's precise but some information missing.
It's hard to understand the code you have changed from writeup. I saw the changes in your pull request it looks good to me.
It's hard to tell, but there does seem to be an attempt at test even though some functionality is still missing.
It's a test project, so not applicable for production deployment. But the code can be merged as appropriate test for participant model. Any future teams can enhance the test with varied input scenarios.
It's a test project, so not applicable for production deployment. But the code can be merged as appropriate test for participant model. Any future teams can enhance the test with varied input scenarios.
It would have been good to show the comparison of the scores calculated with the old model and the new model. This will check if the proposed design is acceptable or just falls in the "smell" category.
It would have been good to show the comparison of the scores calculated with the old model and the new model. This will check if the proposed design is acceptable or just falls in the "smell" category.
It would have been better if some screenshots and UML diagrams was added to the design doc to better explain the functionality.
It would have been better if a test plan covering changes made to the system was added to the design doc.
It would be nice to see a mockup of the off-screen canvas.
It would be more modular if realtors, house hunters and admin were a different table. Since they are clubbed under users table, there are many checks performed in most of the views. Cannot identify user names, company names as IDs are displayed. It would be helpful if this can be modified.
It would be more modular if realtors, house hunters and admin were a different table. Since they are clubbed under users table, there are many checks performed in most of the views. Cannot identify user names, company names as IDs are displayed. It would be helpful if this can be modified.
It would be good if the functionality of the obsolete methods(that were removed during the refactoring) is mentioned; and also explain why they were obsolete.
It would be good if the functionality of the obsolete methods(that were removed during the refactoring) is mentioned; and also explain why they were obsolete.
It would be better to incorporate some visual aids in the design doc.
It would be better to include testing plan.
It would be better to add more diagrams.
It would be better if UML and Class diagram are added as a part of the documentation.
It would be better if testing plan is included.
It works as expected.
It was not deployed so couldn't check manually
It was not deployed so couldn't check manually
It was difficult at first to understand why they are doing what they are doing. I feel that the information is right there, it just needs better elaboration and description.
It was a simple UI color change, so not many categories are not applicable. the code can be DRY, by using the CSS file for styles. Also there is no need to add colors in bothand . would suffice
It tests the login function in the user controller, but not test any models. 
It states the internal jQuery library they plan to use to achieve the sorting, again more details on implementations are required to be documented to assess the quality of the solution.
It states the internal jQuery library they plan to use to achieve the sorting, again more details on implementations are required to be documented to assess the quality of the solution.
It states the internal jQuery library they plan to use to achieve the sorting, again more details on implementations are required to be documented to assess the quality of the solution.
It seems you have cover 94% of the participant.rb. However, all checks have failed in the pull request test.
It seems you have all the needed sections(and then some!). You just need to rename them to project purpose, project design, and testing plan. For example, the section titled Testing should be renamed to Testing Plan. 
It seems to me that the implementation of the project has not started yet. Hence, the exact place in the Expertiza code where they plan to make changes is missing. This should be added in my opinion. Additionally, they have explained very well as to what changes need to be done and how they will be done. So, good job there.
It seems to me that the implementation of the project has not started yet. Hence, the exact place in the Expertiza code where they plan to make changes is missing. This should be added in my opinion. Additionally, they have explained very well as to what changes need to be done and how they will be done. So, good job there.
It seems the authors didn't have a clear and detailed plan about how to change the current system to meet the requirement. They got the direction to do the project but still lacked details to implement it.
It seems the authors didn't have a clear and detailed plan about how to change the current system to meet the requirement. They got the direction to do the project but still lacked details to implement it.
It seems that some of the associations were attempted. (1) Real Estate Company contains many users and houses and (2) House belongs to a Real Estate Company and a user. These relationships are currently commented out so the dependencies are not enforced. There are additional connections missing such as the Users model, where a Realtor should belong to only a single company and many houses. The implementation seems incomplete, but the idea found within the company and house models is moving in the right direction.
It seems that everything works, though it was hard/confusing to find everything as per the instructions on the write-up.
It seems that everything works, though it was hard/confusing to find everything as per the instructions on the write-up.
It seems not working properly. When logged in as a realtor, click on the view inquiry will jump to the house page.
It seems like almost all changes were made on one day for part 2 of the project.
It seems evident that there are deletion issues for any resource/user that is already indexed on some other resource/user. The solution to that issue would be  adding a destroy dependency in model files, for example for house hunters, has_many :inquiries, dependent::destroy
It seems as though you have an awful lot of controllers that are supposed to have something to do with authentication that either don't get used or don't have any code in them. Other than that, the project looks organized like a Ruby on Rails project should be. There is a lot of code that is hard to follow, and I can't discern its purpose in several controllers.
It seems as though you have an awful lot of controllers that are supposed to have something to do with authentication that either don't get used or don't have any code in them. Other than that, the project looks organized like a Ruby on Rails project should be. There is a lot of code that is hard to follow, and I can't discern its purpose in several controllers.
It says what they will do, but it seems high level. Would appreciate some diagrams or mockups
It says it failed, but I am not sure the most recent commit has been checked yet.
It passed Travis, but there were some code climate issues that could've been easily addressed.
It passed Travis, but there were some code climate issues that could've been easily addressed.
It only explains how they did but not why they did. The various approach could have been mentioned in the WIKI.
It only explains how they did but not why they did. The various approach could have been mentioned in the WIKI.
It only explains how they did but not why they did. The various approach could have been mentioned in the WIKI.
It might be good to move the long function to smaller functions. But the code looks clean and understandable.
It might be good to move the long function to smaller functions. But the code looks clean and understandable.
It might be good to move the long function to smaller functions. But the code looks clean and understandable.
It mentions what they did but doesn't highlight why they chose to implement that way. Don't seem to have implemented any design pattern as well.
It mentions what they did but doesn't highlight why they chose to implement that way. Don't seem to have implemented any design pattern as well.
It mentions what they did but doesn't highlight why they chose to implement that way. Don't seem to have implemented any design pattern as well.
It looks like the code is almost ready, but there are simply some failing tests to get past.
It looks like the code is almost ready, but there are simply some failing tests to get past.
It looks like sound, but I think the authors could add some principles and patterns which they may use into wiki.
It looks like sound, but I think the authors could add some principles and patterns which they may use into wiki.
It looks like if they fix some style issues then it could increase the code coverage. I don't understand why their last unit test does not pass though.  
It looks like if they fix some style issues then it could increase the code coverage. I don't understand why their last unit test does not pass though.  
It looks like if they fix some style issues then it could increase the code coverage. I don't understand why their last unit test does not pass though.  
It looks decent. The screenshots should be with the issue write up and not at the end
It isn't clear what all the Review statistics will be shown in the column. If it is just the time spent then that's fine. But if there are other details as well then it needs to be explained how so much data will be shown in a single cell w/o affecting readability.
It isn't clear what all the Review statistics will be shown in the column. If it is just the time spent then that's fine. But if there are other details as well then it needs to be explained how so much data will be shown in a single cell w/o affecting readability.
It isn't clear what all the Review statistics will be shown in the column. If it is just the time spent then that's fine. But if there are other details as well then it needs to be explained how so much data will be shown in a single cell w/o affecting readability.
It is well written, quite understandable. It clearly and adequately indicates the working functionality. I can understand what the project is about.
It is well written document , at this point most of the teams will be getting ready on approaching the problem , so team is yet to fillout implementation plan, remaining parts are well written.
It is well written document , at this point most of the teams will be getting ready on approaching the problem , so team is yet to fillout implementation plan, remaining parts are well written.
It is very well written with a nice flow diagram. The second video link on the wiki page is unavailable, which can be fixed/removed in case it is legacy.
It is very difficult to recommend merging this code. Although it builds and appears to function correctly, it is not properly documented. It is difficult to tell how the code works and whether test cases introduced actually function as they intend.
It is very difficult to recommend merging this code. Although it builds and appears to function correctly, it is not properly documented. It is difficult to tell how the code works and whether test cases introduced actually function as they intend.
It is surely a very intuitive user interface because the ease of navigation is generally very well defined and the routes.rb file in git hub makes the session linkage explicit.  Even, so one does fail to understand the empty blanks on their login page since there aren't any blanks at all. So, we get easily confused on what to do. Sign up is not validated for any functionality be it user or admin or realtor and we don't know what to do.  Luckily, the README File does resolve the dilemma and help us to follow the steps. 
It is pending while I am doing this review. When I click on it, it did not pass Travis CI, but it fails on tests on features, while this group is testing participant, it happened to our group as well, I assume it is not an issue with their code.
It is pending while I am doing this review. When I click on it, it did not pass Travis CI, but it fails on tests on features, while this group is testing participant, it happened to our group as well, I assume it is not an issue with their code.
It is pending while I am doing this review. When I click on it, it did not pass Travis CI, but it fails on tests on features, while this group is testing participant, it happened to our group as well, I assume it is not an issue with their code.
It is not explained why the work was done, the way it is done. But the implementation looks promising
It is not a very intuitive user interface because the ease of navigation not achieved in it due to the ill defined 'db' folders and the routes.rb file in git hub makes the session linkage a bit hard to follow.  Also, I fail to understand the structural flow of the program even after logging in after signing up. So, I get easily confused on what to do. Sign up is not validated for any functionality be it user or admin or realtor and we don't know what to do and that are we admins or any other user. Privilege separation has not been done. Also, the README barely resolve the dilemma and is of minimal help to us to follow the steps. 
It is not a very intuitive user interface because the ease of navigation not achieved in it due to the ill defined 'db' folders and the routes.rb file in git hub makes the session linkage a bit hard to follow.  Also, I fail to understand the structural flow of the program even after logging in after signing up. So, I get easily confused on what to do. Sign up is not validated for any functionality be it user or admin or realtor and we don't know what to do and that are we admins or any other user. Privilege separation has not been done. Also, the README barely resolve the dilemma and is of minimal help to us to follow the steps. 
It is given in wiki that most of your test cases depend on checking the output. However, like I mentioned in my last review, several test cases like the ones mentioned below can be automated. This is especially true as TDD is explicitly mentioned in your problem statement: "Write the required tests before implementing/refactoring the methods in the above-mentioned classes". Add past due assignments to the students task list (on Student View). Check for correction in due dates of assignments (when an assignments due date is edited, it should be appropriately moved from the Past assignments list to the Current Assignments list if needed) On Student Task page, separate the list of 'teamed with' students from the current tasks box. 
It is given in wiki that most of your test cases depend on checking the output. However, like I mentioned in my last review, several test cases like the ones mentioned below can be automated. This is especially true as TDD is explicitly mentioned in your problem statement: "Write the required tests before implementing/refactoring the methods in the above-mentioned classes". Add past due assignments to the students task list (on Student View). Check for correction in due dates of assignments (when an assignments due date is edited, it should be appropriately moved from the Past assignments list to the Current Assignments list if needed) On Student Task page, separate the list of 'teamed with' students from the current tasks box. 
It is better to state the change of the feature or added feature with diagram to show the difference, to state what remains the same and what is added or update understand certain circumstances. 
It is better to state the change of the feature or added feature with diagram to show the difference, to state what remains the same and what is added or update understand certain circumstances. 
It is a testing project which aims at improving test coverage. So production deployment is not in question. However before merging the code to Master branch here are a few recommended changes. 1) Adding comments to improve readability and understanding for future use. 2) Avoid using comments like "I swear this is the last one". They do not explain anything about what you changed from your last commit and why. Proper professional comments are expected. All these comments should be refactored.
It included a proper test plan. There was no test plan included in the previous version of the design document but authors have added it in the second round which made the design document complete.
It has not been thoroughly tested. user,house and company models don't have enough validations, like valid year, phone no should be only numbers.Creating a company while creating a user doesn't link that company to the user. it has to be done manually later 
It has not been thoroughly tested. user,house and company models don't have enough validations, like valid year, phone no should be only numbers.Creating a company while creating a user doesn't link that company to the user. it has to be done manually later 
It gives purpose and design but no test plan.
It gives purpose and design but no test plan.
It feels like test plan only covers one aspect - "changing of the background color for tasks as we approach the deadline."   here are other aspects which can be automated for testing, perhaps by Rspec or the likes: Add past due assignments to the students task list (on Student View). -- Verify if they are being added/saved Check for correction in due dates of assignments (when an assignments due date is edited, it should be appropriately moved from the Past assignments list to the Current Assignments list if needed) --- Check if the functionality works. On Student Task page, separate the list of 'teamed with' students from the current tasks box. -- test if this works Write the required tests before implementing/refactoring the methods in the above-mentioned classe 
It feels like test plan only covers one aspect - "changing of the background color for tasks as we approach the deadline."   here are other aspects which can be automated for testing, perhaps by Rspec or the likes: Add past due assignments to the students task list (on Student View). -- Verify if they are being added/saved Check for correction in due dates of assignments (when an assignments due date is edited, it should be appropriately moved from the Past assignments list to the Current Assignments list if needed) --- Check if the functionality works. On Student Task page, separate the list of 'teamed with' students from the current tasks box. -- test if this works Write the required tests before implementing/refactoring the methods in the above-mentioned classe 
It feels like test plan only covers one aspect - "changing of the background color for tasks as we approach the deadline."   here are other aspects which can be automated for testing, perhaps by Rspec or the likes: Add past due assignments to the students task list (on Student View). -- Verify if they are being added/saved Check for correction in due dates of assignments (when an assignments due date is edited, it should be appropriately moved from the Past assignments list to the Current Assignments list if needed) --- Check if the functionality works. On Student Task page, separate the list of 'teamed with' students from the current tasks box. -- test if this works Write the required tests before implementing/refactoring the methods in the above-mentioned classe 
It does seem this team tried to address my earlier feedback, but I still experienced several problems. I found the following issues: I was unable to login as an Admin. Navigation in this app was difficult.  There were not very intuitive links. There were too many clicks to add/remove Interest. The Inquiries listing gave me an error.  This app did not keep track of my session very well. The search Houses only had one "filter" 
It does seem this team tried to address my earlier feedback, but I still experienced several problems. I found the following issues: I was unable to login as an Admin. Navigation in this app was difficult.  There were not very intuitive links. There were too many clicks to add/remove Interest. The Inquiries listing gave me an error.  This app did not keep track of my session very well. The search Houses only had one "filter" 
It does not show any code or any thing related to the work they did
It does not seem to be an automated test plan. There are screenshots placed, which seems to be manual testing done.
It does list out all the functionality, but there seem to be no solutions for them. Only a basic layout is present. An insight into the solutions to be implemented would be suggested.
It does list out all the functionality, but there seem to be no solutions for them. Only a basic layout is present. An insight into the solutions to be implemented would be suggested.
It does list out all the functionality, but there seem to be no solutions for them. Only a basic layout is present. An insight into the solutions to be implemented would be suggested.
It does list out all the functionality, but there seem to be no solutions for them. Only a basic layout is present. An insight into the solutions to be implemented would be suggested.
It does list out all the functionality, but there seem to be no solutions for them. An insight into the solutions to be implemented would be suggested.
it could be better if you tell in which files you'll be making those changes and if you'll create new functions or make change in existing functions.
it could be better if you tell in which files you'll be making those changes and if you'll create new functions or make change in existing functions.
it could be better if you tell in which files you'll be making those changes and if you'll create new functions or make change in existing functions.
it could be better if you tell in which files you'll be making those changes and if you'll create new functions or make change in existing functions.
It can be merged after fixing the code climate which has 7 issues(needs to follow the coding standards )and need to work upon the overall decreased code coverage.
It can be merged after fixing the code climate which has 7 issues(needs to follow the coding standards )and need to work upon the overall decreased code coverage.
It appears minimal controller testing has been performed.
It appears from the design that the authors have identified strategy pattern for implementation, which is a good design. I think that they can talk more about the design by specifying an overview of the new controller, i.e. specifying the methods they plan to add.
It appears from the design that the authors have identified strategy pattern for implementation, which is a good design. I think that they can talk more about the design by specifying an overview of the new controller, i.e. specifying the methods they plan to add.
Issues with the build Can be fixed quickly. Issues seem trivial.
Issues related to not mentioning the functionality of each method have been resolved. The wiki now mentions what each method does and what issue does it fix. Only issue with the current codebase is that it contains very long functions that could have been refactored and broken down. The 'perform' function contains a lot of lines and has tons of if-else statements.
Issues are fixed but creating house from a realtor account breaks in heroku. I am unable to create an account which has same email address for realtor and buyer. Realtor does not have a choose company input field to choose his realtor company.
Issues #391, #1201 were fixed but i dont see any tests as mentioned in issue #1190.
Issues - Able to create admin accounts. View Inquiry is failing for HouseHunter. No way to see interested house list.
issue 1065 uml diagram is too high level so it does not provide enough details, Rest all diagrams follow the standards and are easy to understand.
Issue #1201 In the assignments_controller code, the team has checked in a puts statement (line 48) which looks like debug code. Even though these are helpful during the development phase, we need to remove them before finally pushing them. Issue #391 The comment (assignments_controller.rb:85) is not descriptive enough. The author has commented out a method call. It would be beneficial to the person reading the code to understand the intention behind this. Please provide a detailed comment on why this was done. Again the author has use a puts statement (_submitted_files.html.erb:29) which should not be committed and should only be used during development/debugging. Please remove the debug code.
Issue #1201 Below is the change made in _general.html.erb Directory name will be autogenerated if not provided. In the form of assignment name_id_course_id. The last part could be modified to something with a bit more clarity. From the assignments_controller code it could be seen that the auto-generated directory name follows the format <assignment name>_<assignment id>_<course_id> which is not what is specified in the text. There is a typo in the word 'autogenerated', it needs to be hyphenated as 'auto-generated'.   
Involves fixing code climate issues. 
Intuitive UI. Could add a bit of bootstrap and CSS
Intuitive UI. Could add a bit of bootstrap and CSS
Interface is very basic It lacks in many major functionalities that made the navigation through the site difficult. README was not well described to understand the team's work and their functionalities.
Interest list has not been implemented. Please write a readme file in your repo to let us know the admin credentials Please provide the deployment link
Integration tests don't cover authentication
Integration tests don't cover authentication
Integration tests don't cover authentication
Instead of writing role = 1. It would have cleaner if some constants were defined. Then, role = ADMIN would have been much clearer The create method in users_controller.rb is very big and contains several if else statements. It should have been broken down into several sub-methods like create_realtor or create_house_hunter   I did not find any user wricomments in any  
Instead of writing role = 1. It would have cleaner if some constants were defined. Then, role = ADMIN would have been much clearer The create method in users_controller.rb is very big and contains several if else statements. It should have been broken down into several sub-methods like create_realtor or create_house_hunter   I did not find any user wricomments in any  
Inquiry part seems to be a bit confusing. The reply messages showed on the page is confusing. Displaying the message that "error is occurring on Heroku but email has been sent doesn't look good."
Inquiry part seems to be a bit confusing. The reply messages showed on the page is confusing. Displaying the message that "error is occurring on Heroku but email has been sent doesn't look good."
Inquiry part seems to be a bit confusing. The reply messages showed on the page is confusing. Displaying the message that "error is occurring on Heroku but email has been sent doesn't look good."
Inquiry mapping is not done.
inquiry doesn't seem to belong to a house and there is no table for potential buyes
inquiry doesn't seem to belong to a house and there is no table for potential buyes
Inquiry doesn't belong to either a house or user
Inquiries weren't mapped to houses. DEpendent destroy missing in companies for houses, hence getting an error when trying to delete companies which have houses. Admin is able to add users but they were not able to sign in as they are not created with a default password, but just added to the users table.
Inquiries weren't mapped to houses. DEpendent destroy missing in companies for houses, hence getting an error when trying to delete companies which have houses. Admin is able to add users but they were not able to sign in as they are not created with a default password, but just added to the users table.
Inquiries weren't mapped to houses. DEpendent destroy missing in companies for houses, hence getting an error when trying to delete companies which have houses. Admin is able to add users but they were not able to sign in as they are not created with a default password, but just added to the users table.
inquiries controller and interests controller are tested no models are tested
Inquiries and house interest lists should not belong to companies. They belong to houses which belong to companies. Also, a user should not have many companies. This is possible with the database and model configuration. Otherwise, the relationships were properly implemented.
Including basic Understanding of the problem statement and work will help in manual testing.
Included a kind of mock UI/Lo-Fi diagram to shown how the uiwould like which is great.
Include testing plan if possible
Inadequate information
Inadequate information
In-line CSS style tags inserted instead of linking external CSS file.
In their test plan, most of it is code, without any explanation or cases.
In their test plan, most of it is code, without any explanation or cases.
In the wiki, I really appreciated seeing the appropriate build statements next to the unit tests. It helped connect what each test was testing in my mind.
In the test plan section and on Git also I found no test cases written. There is testing done, however it is not what was desired.
In the problem statement section, the first author should be reviewers I think.
In the problem statement section, the first author should be reviewers I think.
In the first round, which files were related to what issue was not mentioned. However, now they have edited the wiki to reflect the mentioned changes. Each file and its related functionality has been mentioned. Appreciated!
In the first round, which files were related to what issue was not mentioned. However, now they have edited the wiki to reflect the mentioned changes. Each file and its related functionality has been mentioned. Appreciated!
In the first round, the application was slightly performing better as compared to the final one. The team may have had troubles while merging and unresolved conflicts lead to error pages for signups.
In the first round, the application was slightly performing better as compared to the final one. The team may have had troubles while merging and unresolved conflicts lead to error pages for signups.
In the first round the team had only created the two Web IDL  files namely OffScreenCanvas.webidl and OffScreenCanvasRenderingContext2D.webidl; which are the interface files which define the implementation in the corresponding files offscreencanvas.rs and offscreenrenderingcontext2d.rs. In this round the team has implemented the functionalities described in the two Web IDL files in offscreencanvas.rs and offscreenrenderingcontext2d.rs. The offscreencanvas.rs interacts with the javascript and hence has the constructor with attributes height and width; a method getContext() to return the reference to OffscreenCanvasRenderingContext2d; and a reflector object for garbage collection. The offscreenrenderingcontext2d.rs file does not interact directly with Javascript and does not have a constructor or reflector object. It has the code to build the offscreencanvas object.  On inspection, the variable and method names used in the code are intuitive. But the main issue is that the name of the webidl file OffScreenCanvasRenderingContext2D.webidl and corresponding Rust file offscreenrenderingcontext2d.rs don't match. The team could have formatted the code appropriately for readable indentation. There are not many comments that give a high level description of the code. Instead there are some instances of unnecessary code that has been commented. The code is indeed DRY.
In the due_date_color(due_date), instead of hardcoding the color vs interval, it would have been more useful if those are pulled from a config file. That will make the implementation more flexible   Similar hardcoding found in 1. list_student_tasks: per_page: 10 2. breaking_word_wrap: breaking_word_wrap(student_task.assignment.name,40 )     Use of inline CSS element, could have avoided by using a simple css class. Such harcoded stuffs make the view strongly coupled with the style elements, which could have been avoided. <hr style="height:2px;border:none;color:#e3e3e3;background-color:#e3e3e3;"   Also, the UI changes are not showing up properly aligned. Please see the attached screenshot  
In the due_date_color(due_date), instead of hardcoding the color vs interval, it would have been more useful if those are pulled from a config file. That will make the implementation more flexible   Similar hardcoding found in 1. list_student_tasks: per_page: 10 2. breaking_word_wrap: breaking_word_wrap(student_task.assignment.name,40 )     Use of inline CSS element, could have avoided by using a simple css class. Such harcoded stuffs make the view strongly coupled with the style elements, which could have been avoided. <hr style="height:2px;border:none;color:#e3e3e3;background-color:#e3e3e3;"   Also, the UI changes are not showing up properly aligned. Please see the attached screenshot  
In the due_date_color(due_date), instead of hardcoding the color vs interval, it would have been more useful if those are pulled from a config file. That will make the implementation more flexible   Similar hardcoding found in 1. list_student_tasks: per_page: 10 2. breaking_word_wrap: breaking_word_wrap(student_task.assignment.name,40 )     Use of inline CSS element, could have avoided by using a simple css class. Such harcoded stuffs make the view strongly coupled with the style elements, which could have been avoided. <hr style="height:2px;border:none;color:#e3e3e3;background-color:#e3e3e3;"   Also, the UI changes are not showing up properly aligned. Please see the attached screenshot  
In the code topic_id1 and @drop_topic_deadline1 name doesn't seems to follow the ruby guide line and you should probably name them differently like first_topic_id and first_drop_topic_deadline.
In the code topic_id1 and @drop_topic_deadline1 name doesn't seems to follow the ruby guide line and you should probably name them differently like first_topic_id and first_drop_topic_deadline.
In test.html.erb you shoud not write code like this: <%= User.find_by(id: session[:user_id]).name %>
In my opinion, they have included the application flow but where in Expertiza they are implementing this logic seems to be missing. They should include the same in round 2 when they have completed the implementation.
In my opinion, they have included the application flow but where in Expertiza they are implementing this logic seems to be missing. They should include the same in round 2 when they have completed the implementation.
In my opinion Inquiries should belong to a user. One inquiry belongs to a user, and one user has many inquiries.
In my opinion Inquiries should belong to a user. One inquiry belongs to a user, and one user has many inquiries.
In general, the problem seems to be easy. but design states that  it involves whole new MVC setup which could translate to difficult implementation
In general, The code of this system is in a clean and readable, and written in the MVC way. But there are some problems in the code. For example, in the realtor controller, there is no method to handle the "join" action when a realtor wants to join in a new company. And a realtor can not receive a inquires from hunter. Besides, in the models folder, I seems redundant to me: role, users, and users_roles, making reader easily confused.
In general, the code of this system is clean and readable, but there are some problems in it. For example, author didn't handle the interest list properly. When a realtor wants to see the potential buyers of a house, it does not mean he wants to see all the hunters registered in the system. Besides, the realtor can not edit his own profile can change real estate company, because the edit method in the controller is not realized. And in models, some relationships shouldn't appear because one of the model is not created, such as the model house_hunters, which has many queries, but the model query is not created. 
In general, the code of this system is clean and readable, but there are some problems in it. For example, author didn't handle the interest list properly. When a realtor wants to see the potential buyers of a house, it does not mean he wants to see all the hunters registered in the system. Besides, the realtor can not edit his own profile can change real estate company, because the edit method in the controller is not realized. And in models, some relationships shouldn't appear because one of the model is not created, such as the model house_hunters, which has many queries, but the model query is not created. 
In general the code seemed to look fine. There were some really long methods like in the users_controller class, so I docked a star. There was a separate method for adding to interest list.
In due_date_color switch case would have been a better approach then if else if block. Lots of code that is done in view can be moved to the controller. Follow MVC architecture. 
In due_date_color switch case would have been a better approach then if else if block. Lots of code that is done in view can be moved to the controller. Follow MVC architecture. 
In documentation it mentions participant.rb model file is changed to for increasing code coverage. However the file is missing in the pull request generated. There is no mention about changes in the assignment_participant.rb file. But that is present in the pull request. It may be a name mismatch or some files are indeed missing. I pointed it out during the first review but changes are not incorporated currently. The code overall looks good. Proper variable names are used. Commenting is required
In documentation it mentions participant.rb model file is changed to for increasing code coverage. However the file is missing in the pull request generated. There is no mention about changes in the assignment_participant.rb file. But that is present in the pull request. It may be a name mismatch or some files are indeed missing. I pointed it out during the first review but changes are not incorporated currently. The code overall looks good. Proper variable names are used. Commenting is required
Impressive write-up. Flow-charts and UML diagrams are well-explained. Detailed explanation of problem statement and solution to be implemented.
Impossible to do since no submission or uploading of the image have been done for this project. It is unclear how to decipher any meaningful data without the help of pull request as well. 
Implementation details are missing, but the testing plan is ready. 
Implementation details are missing, but the testing plan is ready. 
Implementation details are missing, but the testing plan is ready. 
Implementation details are missing, but the testing plan is ready. 
Image not showing with listed houses. Admin cannot view list of potential buyers. House Hunter also asked for company. House Hunter has the ability to add houses and list companies. This should not happen.
Image not showing with listed houses. Admin cannot view list of potential buyers. House Hunter also asked for company. House Hunter has the ability to add houses and list companies. This should not happen.
Im unable to signup as a house hunter or a realtor, so the controllers for the same have not been tested. A suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities.
Im unable to signup as a house hunter or a realtor, so the controllers for the same have not been tested. A suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities.
Im unable to signup as a house hunter or a realtor, so the controllers for the same have not been tested. A suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities.
If they had presented a working deployment, then rest everything was done. So it could be deployed onto the production server.
If they had presented a working deployment, then rest everything was done. So it could be deployed onto the production server.
If they can write more test cases to test their code and make sure their code does not have bugs, i think they can deploy their code onto server. 
If it is deployed, it is not made known. 
If it is deployed, it is not made known. 
If company is delete, the house will also disappear, and the realtor need to find a new company. But the README does not cover edge cases.
If as a realtor, I am trying to update my profile where I only change my company to a random company "ABC", it is updating just fine which I believe should not be done because the company doesn't exist and is not even being added to the company list as a new company. Couldn't check any of the admin's functionality. Couldn't sign-up as a Realtor.
If admin tries to delete company, corresponding houses gets deleted. Similarly association between inquiry and other models handled well. System goes into error when we try to create house without images, though houses gets created multiple times. (Realtors login) Team could probability add null check for empty references.  
if a company is deleted the realtor and houses doesn't get deleted. and if a house gets deleted the inquires are not getting deleted.
I'm unable to get a really good idea of exactly what was done here for this project other than that it can be used as a display and rendering port and that it improves fail-safeness of browsers.
I'm essentially keeping my feedback the same. There are places where I believe that better names could be used and smaller javascript methods could be used. 
I'm essentially keeping my feedback the same. There are places where I believe that better names could be used and smaller javascript methods could be used. 
I'm essentially keeping my feedback the same. There are places where I believe that better names could be used and smaller javascript methods could be used. 
I'm docking some points here because Heroku doesn't appear to work. I think some malicious reviewer deleted the admin and the real estate company, and surprise! If a company doesn't exist, it doesn't let any user sign up.    Please re-seed your database so I can test your app.  
I'm docking some points here because Heroku doesn't appear to work. I think some malicious reviewer deleted the admin and the real estate company, and surprise! If a company doesn't exist, it doesn't let any user sign up.    Please re-seed your database so I can test your app.  
I'm afraid there is still no test plan in the second round.
I'm afraid there is still no test plan in the second round.
I'm afraid the code is not well organized because the functions are not working properly.
I'm afraid that the build failed and there are code climate issues.
I'm afraid none of the three checks passed.
I'm afraid none of the three checks passed.
I'm afraid no test cases were added in round 2.
I would the test section incomplete. The authors have mentioned about 11 test cases thats all. I think that is not at all sufficient. Also missing are unit tests if any and UI tests if any.  I would have liked mention of more test cases both automated as well as UI tests that will ensure basic sanity to the system
I would the test section incomplete. The authors have mentioned about 11 test cases thats all. I think that is not at all sufficient. Also missing are unit tests if any and UI tests if any.  I would have liked mention of more test cases both automated as well as UI tests that will ensure basic sanity to the system
I would the test section incomplete. The authors have mentioned about 11 test cases thats all. I think that is not at all sufficient. Also missing are unit tests if any and UI tests if any.  I would have liked mention of more test cases both automated as well as UI tests that will ensure basic sanity to the system
I would only suggest you to add more comments to your code. I know that no comments were previously added for you to feed off of, but I guess a major aspect of these OSS projects is to add as many comments as possible to the existing code.
I would have liked to see more use of context in the tests and grouping of similar test methods in context.   
I would appreciate a little more detail on bugs #1017 and #1072, which have a flow established, but no code snippets.
I wasn't able to login as admin using the credentials given in the README file. Still, Edge cases are handled well.
I was unable to sign-up as a Realtor and a House Hunter with the same email.
I was unable to sign-up as a Realtor and a House Hunter with the same email.
I was unable to sign-up as a Realtor and a House Hunter with the same email.
I was unable to judge if this works -there was no way for me to determine that. The admin can not delete companies, can not view, edit or delete realtors or househunters. Also, users cannot delete themselves.  Further, the third party admin gem or module  used does not let me edit or delete users or companies either - it gives an error on heroku.  Thus, I was unable to determine if the edge cases work. Also README does not specify anything.
I was not provided a link, so I cannot see if the UI is intuitive.
I was not provided a link, so I cannot see if the UI is intuitive.
I was able to understand what the project does to a certain extent. The writeup could have been more eloborate with views/snapshots of the page before and after the changes.  It adequately indicated what functionality the work is related to.
I was able to understand the changes they were making and why, however I thought the write-up was a little too verbose and had too much code - I can find the code in their PR.
I was able to understand the changes they were making and why, however I thought the write-up was a little too verbose and had too much code - I can find the code in their PR.
I was able to understand the changes they were making and why, however I thought the write-up was a little too verbose and had too much code - I can find the code in their PR.
I was able to post house without any data filled in form. House got created successfully. Likewise for company. Phone number validation missing in Sign Up. Sort by Sqft, Price and floors are failing (going to error page) Applying price range filter and clicking once is giving expected result. Clicking on it again is resetting the filter. Could try to retain the applied filter on the html select option. When I tried to view a non-existent house manually by changing URL (example https://calm-forest-11598.herokuapp.com/house_lists/1000), I got the default Ruby error screen ("The page you were looking for doesn't exist").  Could do a redirect to browse page :) (https://calm-forest-11598.herokuapp.com/house_lists/)   Tried to update an old inquiry. got a new page that says "Invalid Access" as well as "Inquiry was successfully updated"!
I was able to post house without any data filled in form. House got created successfully. Likewise for company. Phone number validation missing in Sign Up. Sort by Sqft, Price and floors are failing (going to error page) Applying price range filter and clicking once is giving expected result. Clicking on it again is resetting the filter. Could try to retain the applied filter on the html select option. When I tried to view a non-existent house manually by changing URL (example https://calm-forest-11598.herokuapp.com/house_lists/1000), I got the default Ruby error screen ("The page you were looking for doesn't exist").  Could do a redirect to browse page :) (https://calm-forest-11598.herokuapp.com/house_lists/)   Tried to update an old inquiry. got a new page that says "Invalid Access" as well as "Inquiry was successfully updated"!
I was able to post house without any data filled in form. House got created successfully. Likewise for company. Phone number validation missing in Sign Up. Sort by Sqft, Price and floors are failing (going to error page) Applying price range filter and clicking once is giving expected result. Clicking on it again is resetting the filter. Could try to retain the applied filter on the html select option. When I tried to view a non-existent house manually by changing URL (example https://calm-forest-11598.herokuapp.com/house_lists/1000), I got the default Ruby error screen ("The page you were looking for doesn't exist").  Could do a redirect to browse page :) (https://calm-forest-11598.herokuapp.com/house_lists/)   Tried to update an old inquiry. got a new page that says "Invalid Access" as well as "Inquiry was successfully updated"!
I was able to create a new user with the username "abc def". Although the changes made to the code seem to be sufficient to fix this, the deployment does not seem to reflect the changes.
I was able to create a new user with the username "abc def". Although the changes made to the code seem to be sufficient to fix this, the deployment does not seem to reflect the changes.
I was able to check for the realtor and house hunter. Some of the functionality of a realtor and househunter weren't working.
I was able to check for the realtor and house hunter. Some of the functionality of a realtor and househunter weren't working.
I thought the write-up was clear and had proper instructions and screenshots. However, the write-up was not in the wikki but in a word file
I think you explained the change they want to make clear, but maybe you can state which file you want to make and how you guys want to change that file. 
I think you explained the change they want to make clear, but maybe you can state which file you want to make and how you guys want to change that file. 
I think work is still needed on this project. All test cases are not able to pass so.
I think work is still needed on this project. All test cases are not able to pass so.
I think we cannot add it to production because i feel authorization for the newly added pages is required.  once that is done it should be okay to add the code after further testing  
I think User experience and code readability are as imp as producing a working code. So based on how urgent is the requirement for this functionality, I would prioritize refactoring the Notices and Display messages to more appropriately indicate what action was taken when we try to add a participant to the assignment or import using a CSV file. Secondly improving the comments as explained with an example in the first question.
I think this team did not correctly implement several database relationships. For instance, a House does not have many users, it has a single realtor (the realtor who posted it) and it might have many interested users (potential buyers), but that should have been via a through relationship. Another example is inquiries. An inquiry has one user for one house, not many users and many houses.
I think this team did not correctly implement several database relationships. For instance, a House does not have many users, it has a single realtor (the realtor who posted it) and it might have many interested users (potential buyers), but that should have been via a through relationship. Another example is inquiries. An inquiry has one user for one house, not many users and many houses.
I think they have simply copied the text from the requirements document presented by the professor. The page is not well documented
I think their introduction and issue sections clearly shows what functionality the work is related to, they also add some screenshots which help me understand what they have done. But I can not understand what is bookmark and what it is used for, I think it is difficult for someone like me who have not used bookmark to understand these with only a short description. If they can write something more about bookmarks it will be better. 
I think their introduction and issue sections clearly shows what functionality the work is related to, they also add some screenshots which help me understand what they have done. But I can not understand what is bookmark and what it is used for, I think it is difficult for someone like me who have not used bookmark to understand these with only a short description. If they can write something more about bookmarks it will be better. 
I think their introduction and issue sections clearly shows what functionality the work is related to, they also add some screenshots which help me understand what they have done. But I can not understand what is bookmark and what it is used for, I think it is difficult for someone like me who have not used bookmark to understand these with only a short description. If they can write something more about bookmarks it will be better. 
I think their designs look complicated and there might be existing gems that can be simplified.
I think their designs look complicated and there might be existing gems that can be simplified.
I think the writing could be done better, with more explanation on why the solutions mentioned in the last paragraph are taken, and what other approaches were considered. Or an explanation of why no alternative exists. With regard to design, explained in detail in a previous comment.
I think the UML diagram can be improved further by adding the classes that are related to the use cases separately.  
I think the UML diagram can be improved further by adding the classes that are related to the use cases separately.  
I think the testing plan is missing, others are good.
I think the project looks pretty close to be merge-ready and with a small amount of work on the coding styles and making sure all the PR checks pass the code can be deployed on the production server. It might however require some rigorous testing before getting merged.
I think the project looks pretty close to be merge-ready and with a small amount of work on the coding styles and making sure all the PR checks pass the code can be deployed on the production server. It might however require some rigorous testing before getting merged.
I think the files that the authors plan to modify seems to be quite appropriate. As to the 'smell' of the code that can be ascertained only when they have started writing the code. So far though the design seems sound. There have however been no mention of the existence of any gems. I think the authors should explore that avenue as well as that would probably simplify their task. For example:- I found the gem sentimental that categorizes the phrases into positive, negative and neutral. I think this is something the authors can look into.
I think the files that the authors plan to modify seems to be quite appropriate. As to the 'smell' of the code that can be ascertained only when they have started writing the code. So far though the design seems sound. There have however been no mention of the existence of any gems. I think the authors should explore that avenue as well as that would probably simplify their task. For example:- I found the gem sentimental that categorizes the phrases into positive, negative and neutral. I think this is something the authors can look into.
I think the files that the authors plan to modify seems to be quite appropriate. As to the 'smell' of the code that can be ascertained only when they have started writing the code. So far though the design seems sound. There have however been no mention of the existence of any gems. I think the authors should explore that avenue as well as that would probably simplify their task. For example:- I found the gem sentimental that categorizes the phrases into positive, negative and neutral. I think this is something the authors can look into.
I think the diagrams shown include where you intend to add the metrics, but not how all the metrics will be incorporated, in the next phase make sure to include details for each of these : Total number of commits. Number of files changed. Lines of Code added Lines of code modified. Lines of code deleted. LOCs that survived until final submission - (exclude from MVP due to the complexity and lower priority). 
I think the diagrams shown include where you intend to add the metrics, but not how all the metrics will be incorporated, in the next phase make sure to include details for each of these : Total number of commits. Number of files changed. Lines of Code added Lines of code modified. Lines of code deleted. LOCs that survived until final submission - (exclude from MVP due to the complexity and lower priority). 
I think the diagrams shown include where you intend to add the metrics, but not how all the metrics will be incorporated, in the next phase make sure to include details for each of these : Total number of commits. Number of files changed. Lines of Code added Lines of code modified. Lines of code deleted. LOCs that survived until final submission - (exclude from MVP due to the complexity and lower priority). 
I think the design perfectly captures the view part. They have also incorporated the db related changes after the first review. However, there is still room for improvement in terms of depth of details provided in the doc
I think the design perfectly captures the view part. However, it looks a bit high level. I think more low level and model related details can be added. For e.g. what design pattern would be used, the tables that will be affected. 
I think the code need some amount of refactoring before it can be merged with the expertiza master and pushed to production. Some of the functions implemented by the team seem quite long and they should try and restrict the functionality implemented in each function to just one.
I think the code need some amount of refactoring before it can be merged with the expertiza master and pushed to production. Some of the functions implemented by the team seem quite long and they should try and restrict the functionality implemented in each function to just one.
I think that they need to fix some things that are mentioned by travis CI. Once they do that they are good to go.
I think that they need to fix some things that are mentioned by travis CI. Once they do that they are good to go.
I think that there is a huge scope for test plan improvisation. The current test plan is just a step-by-step procedure to test if the reviewer receives a mail fir conflicting reviews. The test plan should also include test cases to test whether the link is present in the email notification. Also, is the link correct and navigable? The test plan should also cover the pits where the functionality may fail, so as to ensure smooth functioning of the system.
I think that there is a huge scope for test plan improvisation. The current test plan is just a step-by-step procedure to test if the reviewer receives a mail fir conflicting reviews. The test plan should also include test cases to test whether the link is present in the email notification. Also, is the link correct and navigable? The test plan should also cover the pits where the functionality may fail, so as to ensure smooth functioning of the system.
I think that there is a huge scope for test plan improvisation. The current test plan is just a step-by-step procedure to test if the reviewer receives a mail fir conflicting reviews. The test plan should also include test cases to test whether the link is present in the email notification. Also, is the link correct and navigable? The test plan should also cover the pits where the functionality may fail, so as to ensure smooth functioning of the system.
I think that there is a huge scope for test plan improvisation. The current test plan is just a step-by-step procedure to test if the reviewer receives a mail fir conflicting reviews. The test plan should also include test cases to test whether the link is present in the email notification. Also, is the link correct and navigable? The test plan should also cover the pits where the functionality may fail, so as to ensure smooth functioning of the system.
I think that the team has done a great work for the future team to pick up. They can improve it by adding comments for newly defined functions. Although, the pull request build has not passed, after fixing the conflicts, the new team can readily work ahead on the remaining issues.
I think that the authors have identified changes in the html.erb files, which looks right to me. As it only deals with the sorted view of instructor reports, the changes must go in the views part of the application.  Suggestion: You can try to add a bit of information on whether your changes include addition of new code, deletion of existing code, or just slightly modifying or extending the existing code and justify it. Query: Do you plan on creating  a drop-down like option to choose from which type of sorting is to be performed? If yes, it is an add-on user-friendly feature.
I think that the authors have identified changes in the html.erb files, which looks right to me. As it only deals with the sorted view of instructor reports, the changes must go in the views part of the application.  Suggestion: You can try to add a bit of information on whether your changes include addition of new code, deletion of existing code, or just slightly modifying or extending the existing code and justify it. Query: Do you plan on creating  a drop-down like option to choose from which type of sorting is to be performed? If yes, it is an add-on user-friendly feature.
I think technical design lacks details. the section should be more detailed on how this internationalization will work, where will the string be kept. what are the effective changes required across the project test plan should have more tests  
I think technical design lacks details. the section should be more detailed on how this internationalization will work, where will the string be kept. what are the effective changes required across the project test plan should have more tests  
I think technical design lacks details. the section should be more detailed on how this internationalization will work, where will the string be kept. what are the effective changes required across the project test plan should have more tests  
I think overall it looks good. However, a bit more low-level details may give better insight about such issues.
I think more tests can be added
I think more effort should be expended on the design. The addition of MVC suggested in the solution is vaguely explained. 
I think it does pretty well to follow the "good Ruby and Rails coding practices". It is elegant and follows the DRY code approach.
I suggest the testing plan be improved. In place of giving steps on how a reviewer should test the project, the team should instead list how they wish to write tests for the functionality added. The rspec could be something like expect(page).to have_content(sorted)
I suggest the testing plan be improved. In place of giving steps on how a reviewer should test the project, the team should instead list how they wish to write tests for the functionality added. The rspec could be something like expect(page).to have_content(sorted)
I still was not provided a link to a deployed application. I re-read the README as carefully as a I could, but could not find one.
I still was not provided a link to a deployed application. I re-read the README as carefully as a I could, but could not find one.
I still see some lint issues and commented-out code. The code looked fairly DRY and compliant with standard Ruby style and looks that way still.
I see test cases properly defined, but the test plan is missing.
I see really less commits in the second round. The last commit was on 31st October. It would have been really nice if they have worked on the project further to enhance the work they have done.
I see only one commit on Nov 2nd. The project was in good working condition during the first review itself. and they did fix the minor bugs in the commit
I see only 1 contributor. Also only once the commit was made.
I see only 1 contributor. Also only once the commit was made.
I see commits only on a single day .
I see commits only on a single day .
I saw a lot of places were instance variables were used when the didn't need to be (ie using @var instead of just var in methods). I think naming seemed appropriate were I looked. This team made good use of helper functions and classes, though there were some rather large functions in those classes. I saw a lot of complicated views, which to indicates lack of separation of concerns.  I would recommend being more diligent about the scope of variables and continue trying to push concerns/responsibilities to isolated classes and methods.
I saw a lot of places were instance variables were used when the didn't need to be (ie using @var instead of just var in methods). I think naming seemed appropriate were I looked. This team made good use of helper functions and classes, though there were some rather large functions in those classes. I saw a lot of complicated views, which to indicates lack of separation of concerns.  I would recommend being more diligent about the scope of variables and continue trying to push concerns/responsibilities to isolated classes and methods.
I really appreciate the organization of your code. Everything is grouped in appropriate folders and easy to navigate. I also like how most of your code is indexed and spaced. Great readability. Functions are clearly written to handle exactly what the name indicates. There are a few places where the continuation of parameters should be realigned (examples: company_params in Companies Controller and format of website in Company model). Overall great use of Ruby styling standards.
I really appreciate the organization of your code. Everything is grouped in appropriate folders and easy to navigate. I also like how most of your code is indexed and spaced. Great readability. Functions are clearly written to handle exactly what the name indicates. There are a few places where the continuation of parameters should be realigned (examples: company_params in Companies Controller and format of website in Company model). Overall great use of Ruby styling standards.
I noticed they did generate tests for some controllers, but not enough. No tests for models. 
I noticed they did generate tests for some controllers, but not enough. No tests for models. 
I noticed they did generate tests for some controllers, but not enough. No tests for models. 
I meant to leave this blank. Kindly ignore the rating for this question as this project does not require any tests. All the changes made are CSS related.
I looked through their github commits log, and found that their first commit is on Sep 28,2018. Maybe their just began to do the project on Sep 28?
I looked through their github commits log, and found that their first commit is on Oct 1,2018. Maybe their just began to do the project on Oct 1?
I looked through their github commits log, and found that their first commit is on Oct 1,2018. Maybe their just began to do the project on Oct 1?
i looked through all the files in the test folder and don't see any tests filled in. They seem to only be the pre filled skeleton.
i looked through all the files in the test folder and don't see any tests filled in. They seem to only be the pre filled skeleton.
I liked that instead of stating all the problems at once and then stating their solutions the design doc tackles in one at a time. Still there wsa no visual aid provided for the project.
I just see commits done on last few days by most teammates.
I have not been supplied with a link to manually use an instance with their changes and I have not been able to find a link in their PR or write-up.
I have not been supplied with a link to manually use an instance with their changes and I have not been able to find a link in their PR or write-up.
I have no idea how to test the code manually.
I have been unable to test the users work manually as expertiza does not allow me to send a mail to my existing mail id. I have also tried adding a new student to the assignment which was not possible( i got an error stating the student does not exist) and all existing students have the mail id( expertiza@mailinator.com) which cannot be accessed to verify.
I have been unable to test the users work manually as expertiza does not allow me to send a mail to my existing mail id. I have also tried adding a new student to the assignment which was not possible( i got an error stating the student does not exist) and all existing students have the mail id( expertiza@mailinator.com) which cannot be accessed to verify.
I had suggested changing the ambiguous or bad variable like temp, temp1. These changes have been incorporated. However comments missing. Adding these will improve the readability of the code and make it easy to refactor at a later stage as per requirements
I found the write up to be same. There is more scope to improve it with more explanation and test cases, specially the links to the refactored codes could be added for the other teams to know.
I found the write up to be same. There is more scope to improve it with more explanation and test cases, specially the links to the refactored codes could be added for the other teams to know.
I found many commits related to the code climate fixes.  No suggestions.
I find the information and solutions provided inadequate as they fail to explain me the solution. also missing diagrams
I find the information and solutions provided inadequate as they fail to explain me the solution. also missing diagrams
I find few changing records from github, but I can't show the process of development.
I find few changing records from github, but I can't show the process of development.
I felt there was just too much overlap and with the doc from previous year: 2017 Project . Even if the current project is to extend a previous one, the documents aren't supposed to be copied almost word to word. The only major addition I see is the last section. None of the diagram correlate to the new changes being made; they are contextual to the older project. Testing plan is missing from the document. From what I know, even the development projects need that section. Even when the older document was used, no references have been provided for it.
I felt there was just too much overlap and with the doc from previous year: 2017 Project . Even if the current project is to extend a previous one, the documents aren't supposed to be copied almost word to word. The only major addition I see is the last section. None of the diagram correlate to the new changes being made; they are contextual to the older project. Testing plan is missing from the document. From what I know, even the development projects need that section. Even when the older document was used, no references have been provided for it.
I felt there was just too much overlap and with the doc from previous year: 2017 Project . Even if the current project is to extend a previous one, the documents aren't supposed to be copied almost word to word. The only major addition I see is the last section. None of the diagram correlate to the new changes being made; they are contextual to the older project. Testing plan is missing from the document. From what I know, even the development projects need that section. Even when the older document was used, no references have been provided for it.
i felt there was a need of adding more explanation. Add UML diagram so that it is easily understood
I felt the section "conditions tested in menu" could have been more verbose.
I feel you guys should add a few comments for a third person to follow.
I feel there are more number of test cases that need to be covered before deploying this in PROD.
I feel the user model is well tested. The link to houses broke through realtor role on heroku. This might just be a production issue and might work well locally in the development environment. I recommend checking the heroku logs and fixing this error. Due to this error, I could not create any house for listing. Overall, I feel it is a good job and you have managed to implement most of the functionalities. One suggestion would be : 1)      When I try to sign-up as a user, I have to fill up the role type. This is not intuitive for a user as the user does not know what kinds of roles and their format(case sensitivity, data type etc) expected by your system. I would suggest either give a drop down for this or checkboxes which will be easy for a user to use.
I feel the user model is well tested. The link to houses broke through realtor role on heroku. This might just be a production issue and might work well locally in the development environment. I recommend checking the heroku logs and fixing this error. Due to this error, I could not create any house for listing. Overall, I feel it is a good job and you have managed to implement most of the functionalities. One suggestion would be : 1)      When I try to sign-up as a user, I have to fill up the role type. This is not intuitive for a user as the user does not know what kinds of roles and their format(case sensitivity, data type etc) expected by your system. I would suggest either give a drop down for this or checkboxes which will be easy for a user to use.
I feel the test plan should be more descriptive while also covering a few edge cases.
I feel the test plan should be more descriptive while also covering a few edge cases.
I feel the test plan should be more descriptive while also covering a few edge cases.
I feel the test plan should be more descriptive while also covering a few edge cases.
I feel the diagram is more complex, team could have gone with some usecase/UML/CRC diagrams
I feel the diagram is more complex, team could have gone with some usecase/UML/CRC diagrams
I feel the diagram is more complex, team could have gone with some usecase/UML/CRC diagrams
I feel the diagram is more complex, team could have gone with some usecase/UML/CRC diagrams
I feel that they have achieved a 100% test coverage, although the design principles or patterns used haven't been listed. Listing that would help understand the testing strategy used.
I feel that they have achieved a 100% test coverage, although the design principles or patterns used haven't been listed. Listing that would help understand the testing strategy used.
I feel that the writeup was incomplete and none of the code changes made have been explained. It is difficult to see what approach they took.
I feel that the test section is in adequate, the users have only listed 3 scenarios with no details on how to implement that. Also missing are detailed steps on how to execute the tests if required.
I feel that the test section is in adequate, the users have only listed 3 scenarios with no details on how to implement that. Also missing are detailed steps on how to execute the tests if required.
I feel that the test section is in adequate, the users have only listed 3 scenarios with no details on how to implement that. Also missing are detailed steps on how to execute the tests if required.
I feel that the project could cover more test cases which would have explained the functionality better. The sql that has been mentioned, could have no results as well, so covering negative results would have been better.
I feel that the project could cover more test cases which would have explained the functionality better. The sql that has been mentioned, could have no results as well, so covering negative results would have been better.
I feel that the code from line 64 to 76 could have been written in a separate function to avoid making the function submit_hyperlink from becoming so large.  Additionally, the functionality inside the function review_reminder_email could have been separated into 2 different functions.
I feel some comments can be added before every function for the code to be understood better.
I feel some comments can be added before every function for the code to be understood better.
I feel confident if the Travis CI integration issues are addressed, then it can be deployed in the production server.
I feel confident if the Travis CI integration issues are addressed, then it can be deployed in the production server.
I feel confident if the Travis CI integration issues are addressed, then it can be deployed in the production server.
I dont seem many commits for round 2, but yes the video has been added for explanation. Also, the wiki is pretty well explained with the code.
I don't think this project is the type that would be deployed on a production server, and I can't say it's ready to be added because every thing in the pull failed on github.
I don't think this project is the type that would be deployed on a production server, and I can't say it's ready to be added because every thing in the pull failed on github.
I don't think this code is ready to be deployed due to the fact that I can't actually examine the functionality, nor can I see the actual repository this project was written in.
I don't think they need any visual aids.
I don't think the test part of this website is working.
I don't think the test part of this website is working.
I don't think the test has been finished. the controller test file is basic empty and the same empty in the model test file.
I don't think the authors plan to add methods to the wrong class. They are modifying the right files. The new design does not appear to potentially make the code "smelly". But for few issues you haven't added any files which you'll be modifying, only the uml is given, you can add them before the final submission.
I don't think the authors plan to add methods to a wrong class. They seem to be working on the right class namely Review and its associated view page review.html.erb that exactly pertains to their project. The response time might potentially increase with this new feature. But fortunately the team has proposed to work on optimizing the suggestion algorithm so that it does not take forever to execute. The team has done a good job on the design documentation.
I don't think anything is missing from their document, but it is in general "lite". I would prefer a few more details on how they plan to limit reviews from being viewed until a self-review is complete, or which places they plan on making changes. 
I don't think anything is missing from their document, but it is in general "lite". I would prefer a few more details on how they plan to limit reviews from being viewed until a self-review is complete, or which places they plan on making changes. 
I Don't see the GIT Link to comment on this. Requesting the Team to upload the GIT Link and Deployment URL in Expertiza instead of the Project Folders  
I Don't see the GIT Link to comment on this. Requesting the Team to upload the GIT Link and Deployment URL in Expertiza instead of the Project Folders
I Don't see the GIT Link here. Requesting to upload the GIT Link and Deployment URL in Expertiza instead of the Project Folders
I Don't see the Deployment URL to comment on this and rest other UI questions. Requesting to upload the GIT Link and Deployment URL in Expertiza instead of the Project Folders
I don't see tests for the logout button on the menu.
I don't see new code being committed.
I don't see new code being committed.
I don't see any tests in this project.
I don't see any tests added by this team, although they do mention that their code additions were not particularly testable except with the existing automatic tests, which they enabled.
I don't see any test plans.
I don't see any test cases added. The overall coverage has decreased by 2.99% to 33.88%. 
I don't see any new tests
I don't see any new tests
I don't see any new tests
I don't see any code changes after the first round.
I don't exactly understand how the waveforms help to produce the sound for the new browser they're adding support for, but other than that, their approach seems solid.
I don not think their code is good, because they did not solve the problems existing in the first round.
I don not think their code is good, because they did not solve the problems existing in the first round.
I don not think it's good, because they just paste most of their code on the writeup.
I do not think the code should be deployed. The test cases are not yet written and there are a few code climate issues. Due to the lack of test cases, the Travis CI build has also failed.  Suggestion: Once they are resolved the code can be deployed. There is one remaining issue, but that could be done in the next iteration. 
I do not think that the design will increase the response time of the system. The team also has mentioned about the API that they will use. Enough efforts have been taken to convey what is to be done and how the team will do it.  Suggestions: No information about the methods that will be implemented has been given in the design document. Availability of such info would have been helpful.
I do not think that the design will increase the response time of the system. The team also has mentioned about the API that they will use. Enough efforts have been taken to convey what is to be done and how the team will do it.  Suggestions: No information about the methods that will be implemented has been given in the design document. Availability of such info would have been helpful.
I do not think that the design will increase the response time of the system. Suggestion: I did not find any details regarding about any methods that will be used to implement the functionality. That would have been useful. The test plan does mention  ViewSuggestionMetricsForReviewSegment though. If this is the method name then it does not follow snake casing. 
I do not think that the design will increase the response time of the system. Suggestion: I did not find any details regarding about any methods that will be used to implement the functionality. That would have been useful. The test plan does mention  ViewSuggestionMetricsForReviewSegment though. If this is the method name then it does not follow snake casing. 
I do not see the link in the readme file for the deployment in the cloud
I do not see the link in the readme file for the deployment in the cloud
I do not see any test plan in the writeup.
I do not see any new commit after 5th November. In my opinion, some of the tests could be made more articulate in round 2.
I do not see any new commit after 5th November. In my opinion, some of the tests could be made more articulate in round 2.
I do not see any changes made to the spec folder in this repo so it would appear no tests have been written.
I do believe the code could be deployed after a bit of refactoring is done as suggested by the code climate tests. But overall looking at only the functionality of the code, it is ready to be deployed
I didn't see any mapping done between tables, for example, the company-realtor relationship isn't shown 1-to-n.
I didn't find any testing done for model or controller. Nor anything was mentioned in the readme.
I didn't find any information about how and why they did the work, they only show me what are the issues and the results after they fixed these issues, for example, in problem 2, they told me their is an average rating metric bug and they fixed the bug, but they said nothing about how they fixed the bug.
I didn't find any information about how and why they did the work, they only show me what are the issues and the results after they fixed these issues, for example, in problem 2, they told me their is an average rating metric bug and they fixed the bug, but they said nothing about how they fixed the bug.
I didn't find any information about how and why they did the work, they only show me what are the issues and the results after they fixed these issues, for example, in problem 2, they told me their is an average rating metric bug and they fixed the bug, but they said nothing about how they fixed the bug.
I did not understand why is it necessary to prohibit spaces in usernames. I believe the code could have been modified to work with spaces as well
I did not understand why is it necessary to prohibit spaces in usernames. I believe the code could have been modified to work with spaces as well
I did not see pull request
I did not see pull request
I did not see a test plan per se, but they did include examples of the scenarios there code was solving.
I did not see a test plan per se, but they did include examples of the scenarios there code was solving.
I did not see a test plan per se, but they did include examples of the scenarios there code was solving.
I did not find the test plan in the documentation. However, there were details mentioned about the tests that the team wrote. One Test related to the issue has been written in the assignment_participant_spec file. The test works works properly. I feel that the Test plan should have been explicitly mentioned in the documentation. 
I did not find any test plan in the documentation.
I dd not find the link. I viewed the code on Github, it seems work. 
I couldn't login to the deployed website since there were no credentials which I could use. Perhaps the wiki page should have included the credentials for logging into the deployed website. However, from the screenshots it seems that the functionality works.
I couldn't log in using the admin credentials. Rest worked fine for me. Couldn't add houses in my interest list as a House Hunter.
I couldn't get it to build but because rails repeatedly failed to find the config.yml. I don't think this is your fault
I couldn't find any test method other than the one in the sessions_controller_test class.
I could understand what the project does. However, there are fewer examples of the test.
I could understand what the project does. However, there are fewer examples of the test.
I could think of 1 missing test case, where an assignment due date changes from future to past, that assignment should now appear in the past assignment section,   apart from this test case, all edge cases have been covered.
I could think of 1 missing test case, where an assignment due date changes from future to past, that assignment should now appear in the past assignment section,   apart from this test case, all edge cases have been covered.
I could think of 1 missing test case, where an assignment due date changes from future to past, that assignment should now appear in the past assignment section,   apart from this test case, all edge cases have been covered.
I could see testing done. I could see extra test cases added.
I could see only one person's commits. Each team member needs to contribute to Git.
I could see only one person's commits. Each team member needs to contribute to Git.
I could see commits by only one person. Need team contribution.
I could see commits by only one person. Need team contribution.
I could see commit performed by only single team member. 1. Functions are not too long or repeatative. 2. No code needs to be extracted as a new function. 3. Yes team need to add more comments. 4. Team does follow Ruby style guide. 5. Team understood rails and followed DRY principle well.  
I could see commit performed by only single team member. 1. Functions are not too long or repeatative. 2. No code needs to be extracted as a new function. 3. Yes team need to add more comments. 4. Team does follow Ruby style guide. 5. Team understood rails and followed DRY principle well.  
I could only see 3 commits with no significant file changes. I would request team to add and contribute the changes as soon as possible. With the present changed code, methods names and variables and class names are proper with reasonable naming conventions.
I could only see 3 commits with no significant file changes. I would request team to add and contribute the changes as soon as possible. With the present changed code, methods names and variables and class names are proper with reasonable naming conventions.
I could only see 3 commits with no significant file changes. I would request team to add and contribute the changes as soon as possible. With the present changed code, methods names and variables and class names are proper with reasonable naming conventions.
I could only check househunter UI. Since I could not find admin and realtor code on github either, I believe you are yet to implement the functionality.  The UI I viewed was easy to use. Further site is responsive and incorporates several new features like requiring password for editing the profile. I guess that was work of a gem, but either way, good work!
I could not see the list of test cases
I could not see the list of test cases
I could not see any mention of test cases in the wiki or github. Team could add/mention test cases surrounding the change that lead to checking the changes in this merge.
I could not run it locally and hence I am not sure about the edge cases. Code looks clean and should not break in most of the cases
I could not login as an admin using the user password combination mentioned in readme.
I could not login as admin using username password combination provided in readme. So, edge-cases could not be tested.
I could not login as admin using username password combination provided in readme. So, edge-cases could not be tested.
I could not get a deployment link or watch a video that demonstrates the work done. So, I'm unable to test.
I could not get a deployment link or watch a video that demonstrates the work done. So, I'm unable to test.
I could not find the filters tab in the show houses section for the house hunter. Rest, everything looks great.
I could not find the filters tab in the show houses section for the house hunter. Rest, everything looks great.
I could not find any test plan or documentation and hence could not verify whether the tests have passed or no. Tests for checking for duplicate directories due to assignments having same names is missing.
I could not find any file in which tests have been implemented, and neither is the file mentioned in README. 
i could not find admin credentials in read-me file  rest of the interface is good
i could not find admin credentials in read-me file  rest of the interface is good
I could not figure out how to test the code. I could not make an account for myself because Expertiza is not set up that way. There were no setup instructions in the writeup for testing the emailing capabilities.
I could not figure out how to test the code. I could not make an account for myself because Expertiza is not set up that way. There were no setup instructions in the writeup for testing the emailing capabilities.
I could not check if most of the edge cases work. All the ways I tried doing this failed: Admin cannot destroy most of the users, admin cannot view/edit/destroy realtors, admin was unable to destroy househunter account I created ( it was also registered as a realtor acc ),  When i destroyed the company, associated houses were also destroyed, and their associated inquiries and replies were deleted so that edge case has been taken care of.   I believe that maybe all the cases are taken care of, but I could nopt test them as their dependent functionalities are not working.
I could neither test it manually nor there were any videos to check the functionality.
I could neither test it manually nor there were any videos to check the functionality.
I coud see only few builds passed the Travis Cl. There are many builds that are failing and should be worked on.
I cannot get access to the interface and the readme is not provided. They should provide a readme file later to state how can I test the project.
I cannot get access to the interface and the readme is not provided. They should provide a readme file later to state how can I test the project.
I cannot find the test plan.
I cannot find the test plan.
I cannot find the code
I cannot find test plan.
I cannot find test plan.
I cannot find test plan.
I cannot find test plan.
I cannot find test plan.
I cannot find any project purpose, but they did provide a lot of solutions to problems.
I cannot find any new test cases.
I cannot find any new test cases.
I cannot create any hunter or realtor accounts.
I cannot create any hunter or realtor accounts.
I cannot appraise this because I do not believe they did their development in the linked repo. There is only one commit, where all the functionality was added. I am inclined to say the team was not actively developing over the project period.
I cannot access the link provided by the team. Since this is hosted on AWS, I believe they have not opened the Ip to public by mistake (I have worked with AWS before and this happens). Maybe they worked from Library or their house, and when you spawn an instance in AWS it adds the IP from where the instance is spawned to the access list, which is why I am not able to access this from my IP. This can also be a problem with the proxy server setup in the instance and since you guys are maybe doing ssh into the server to deploy your code, the default HTTP request will go to port 80 and wont be forwarded to 8080 unless explicitly specified in apache/nginx and will block the requests. Easier way would be to host the app on heroku which handles all this automatically and provides you with a DNS entry
I can't say about this since I tried to login with the credentials mentioned in their wiki(student5408/password) and I couldn't. However looking at their screenshots it seems that the UI looks good to go.
I can't really tell how to navigate to this portion of the project in the application. The writeup is not descriptive enough for me to know where to go to test it.
I can't really tell how to navigate to this portion of the project in the application. The writeup is not descriptive enough for me to know where to go to test it.
I can't find any explanation for principles and patterns, maybe the authors should add them to wiki.
I can't find any explanation for principles and patterns, maybe the authors should add them to wiki.
I can't examine the code because a link to the repository is not actually given in the project, and when I navigate to their repository, I can't figure out which branch is the correct one; however, from the details of the writeup, it seems as though the code is well written.
I can't create a house with no basement as a realtor. It also deleted my image after I uploaded it in this case, before it redirected me to the new page with error information. Also, potential buyers are listed twice (I'm assuming because they liked the house and submitted an inquiry to the realtor associated with it.).  
I can't create a house with no basement as a realtor. It also deleted my image after I uploaded it in this case, before it redirected me to the new page with error information. Also, potential buyers are listed twice (I'm assuming because they liked the house and submitted an inquiry to the realtor associated with it.).  
I can't actually see this team's repository because they linked the expertiza/expertiza pull request, but it doesn't look like new code was committed in the second round.
I can understand what the project does. I cannot, however, understand how the project does what it does. The code is not explained at all.
I can understand what the project does. I cannot, however, understand how the project does what it does. The code is not explained at all.
I can see that there are multiple commits on a single day. This might imply that team members have worked remotely without using git. Suggestions: 1. Make complete use of git when working remotely. 2. Keep pushing changes periodically to avoid any code loss and to have a timeline of changes. 3. Commit message carries great importance for the first level of code change analysis. So this has to explain the changes to a decent extent. Commit messages in this repository is vague; if they are meaningful, it reduces some effort in analysing the code timeline.
I can not see the completed devolepment procedure, the only commit in the github is happend on Monday, the week of 9/30.
I can not see any test plan section in the writeup.
I can not see any link to test changes as well as no video to watch the changes. Team could have shared implemented part to test and review.
I can not see any link to test changes as well as no video to watch the changes. Team could have shared implemented part to test and review.
I can not see any link to test changes as well as no video to watch the changes. Team could have shared implemented part to test and review.
I can not find the test plan.
I can not find the test plan.
I can guess the array 'quesparams' means question parameters, but this variable name is confusing, I think they should use question_param instead. 
I can find where is the bookmarks page, but according to their screenshots I think their features work well.
I can create a company, but I cannot join it as a Realtor if I already joined a company without re-clikcing the Realtor checkbox on the Edit Profile page
I can create a company, but I cannot join it as a Realtor if I already joined a company without re-clikcing the Realtor checkbox on the Edit Profile page
I believe this change that affects the system as a whole, needs more test to be performed in all affected tables and functions to be sure, no other part of the system is broken.My opinion is that, once all parts of the system test is done, corresponding to this centralized db change the code can be deployed to production.
I believe the wiki is not complete. However, the content that is included so far does aid in the explanation of the project purpose. More elaboration and completion of additional sections such as the testing design and implementation of tests will help to fully clarify the project purpose to the reader.
I believe the wiki is not complete. However, the content that is included so far does aid in the explanation of the project purpose. More elaboration and completion of additional sections such as the testing design and implementation of tests will help to fully clarify the project purpose to the reader.
I believe that code, as it stands, is not ready to be deployed. More comments are needed and the code is hard to understand, so even though the changes are small, one might need to see id the changes can be simplified. I believe testing can be more thorough too. 
I believe more effort should be expended on the design. Currently, it is still not so comprehensive. A lot of details can be added in terms of how each file should be modified and how the sorting will be implemented.
I believe more effort should be expended on the design. Currently, it is still not so comprehensive. A lot of details can be added in terms of how each file should be modified and how the sorting will be implemented.
I believe more effort should be expended on the design. Currently, it is still not so comprehensive. A lot of details can be added in terms of how each file should be modified and how the sorting will be implemented.
I believe a lot more effort should be expeneded on the design. As being addressed above, there are a lot of questions that are not addressed at all in this document. The formatting is not nice either. 
I appreciate the thought of using Delegation pattern. More details on this would have been helpful. Also why was delegation pattern selected in particular? 
I am unable to view real estate companies from the admin account
I am unable to test any edge cases as logging into the system as any type of a user is not implemented.
I am unable to signup so could not login and check for functionalities. But, UI is improved a lot and the confusing sign up page in round 1 is fixed.
I am unable to signup so could not login and check for functionalities. But, UI is improved a lot and the confusing sign up page in round 1 is fixed.
I am unable to sign up. I am getting the following error :   We're sorry, but something went wrong. If you are the application owner check the logs for more information. Therefore I am unable to test any of the features.
I am unable to sign up. I am getting the following error :   We're sorry, but something went wrong. If you are the application owner check the logs for more information. Therefore I am unable to test any of the features.
I am unable to log in as admin with credentials that are provided in README.  Search houses functionality for house hunter is missing. Inquiries are not added to the system and page that is supposed to display all the inquiries is not working.
I am unable to go back to dashboard. Hence I am unable to test the functionalities of House Hunter.   The back button is a major problem.
I am unable to find the file review_response_map_spec in the github repo that was supplied. However, there was a ruby file that was attached in the submission. The variable names are also clear and unambiguous. This file is incomplete but the tests that are complete seem to follow appropriate syntax and guidelines. I would suggest to add some describe and context blocks that would clarify the purpose of each test case rather than just have the it statement saying the name of the method being tested. Keep working to finish up the remaining tests in this fashion and it would be great.
I am unable to find the file review_response_map_spec in the github repo that was supplied. However, there was a ruby file that was attached in the submission. The variable names are also clear and unambiguous. This file is incomplete but the tests that are complete seem to follow appropriate syntax and guidelines. I would suggest to add some describe and context blocks that would clarify the purpose of each test case rather than just have the it statement saying the name of the method being tested. Keep working to finish up the remaining tests in this fashion and it would be great.
I am unable to find many relationships in the model, though functionality seems to be in place either additional gems have  been used or code has been pushed in schema.db which is wrong.   
I am unable to find many relationships in the model, though functionality seems to be in place either additional gems have  been used or code has been pushed in schema.db which is wrong.   
I am unable to find many relationships in the model, though functionality seems to be in place either additional gems have  been used or code has been pushed in schema.db which is wrong.   
I am not sure since these are Unit tests and there are Travis tests failures too. Need to check with the team and mentors. 
I am not sure how to create a house hunter and realtor using the same email. I see a link to switch roles, but can only see realtor option there as it didn't allow me to create an account for house hunter with same details.
I am not convinced with the "similar_assignments" table schema. For an assignment Ax, there is a foreign key that points to an assignment Ay such that Ax can be an assignment in say 2018 and Ay can be the same assignment in 2017. But what if one of the reviews from assignment Az which was in 2015 was really good and we need to include that as a sample and also include another review from Aw from 2016 as a sample.  According my understanding, this above requirement cannot be met with the current DB table design. Something that the team may look into.
I am not able to sign up into the system. Neither i could see any credentials in the readme file. Hence not able to proceed further to check the above mentioned functionalities.
I am not able to sign up into the system. Neither i could see any credentials in the readme file. Hence not able to proceed further to check the above mentioned functionalities.
I am not able to sign up into the system. Neither i could see any credentials in the readme file. Hence not able to proceed further to check the above mentioned functionalities.
I am not able to sign up into the system. Neither i could see any credentials in the readme file. Hence not able to proceed further to check the above mentioned functionalities.
I am not able to sign up into the system. Neither i could see any credentials in the readme file. Hence not able to proceed further to check the above mentioned functionalities.
I am honestly unsure how to rate this. Earlier the build was passing. Now Travis CI cumulatively says the build failed, but when you look at the build history, Job#6150.3 failed, but Job#6150.4 passed.
I am giving this a zero because of concerns of plagiarism. Your page has multiple sections that are direct copy pastes of the wiki that you linked to. You either need to write something original or site that this is not your work. Consider having a shorter summary of these sections and link to the other wiki for greater background as you have already done.
Hunters functionalities are working properly.
https://pure-peak-85957.herokuapp.com/houses When this link is opened after registering as a realtor and adding a house, the application crashes. All other basic functionality works well. Great job with the design and methods! The flow of the application could be a bit more clear instead of just listing all the links in  one page.
https://pure-peak-85957.herokuapp.com/houses When this link is opened after registering as a realtor and adding a house, the application crashes. All other basic functionality works well. Great job with the design and methods! The flow of the application could be a bit more clear instead of just listing all the links in  one page.
http://152.46.18.195:8080   is not working. Also, the video is not running, Please upload in youtube.
http://152.46.18.195:8080   is not working. Also, the video is not running, Please upload in youtube.
how to encapsulate that sorting table for future use?
how to encapsulate that sorting table for future use?
how to encapsulate that sorting table for future use?
How has been shown well through the screenshots but why has not yet been described. No particular reference to a design pattern has been made, but that is understandable since their project was based more on changes and less on additions to the code.
How has been shown well through the screenshots but why has not yet been described. No particular reference to a design pattern has been made, but that is understandable since their project was based more on changes and less on additions to the code.
Houses cannot be created.
Houses can still be deleted by anyone and not just the realtor who posted the listing. The application link to Heroku or any other deployment link isn't given. Readme is not properly updated.
house_hunter_accounts_controller.rb line 28: meaningless line break. house_list_controller.rb line 8,98: meaningless line break. realtor_accounts_controller.rb line 28: meaningless line break. session_controller.rb line 6,19,20: Wrong indentations, line 9: No parentheses. user_controller.rb line 13:meaningless line break, line 52: No parentheses.  
house_hunter_accounts_controller.rb line 28: meaningless line break. house_list_controller.rb line 8,98: meaningless line break. realtor_accounts_controller.rb line 28: meaningless line break. session_controller.rb line 6,19,20: Wrong indentations, line 9: No parentheses. user_controller.rb line 13:meaningless line break, line 52: No parentheses.  
house search not working- able to keep fields like price blank during new house creation I was getting inquiry- invalid access on replying to an inquiry but it did save to the database.   high-low links in  houses table erroring for realtor admin was able to add to interest list admin able to reply to queries hunter shouldn't have contact method authentication not applied throughout the app- https://calm-forest-11598.herokuapp.com/companies/42 accessible without login
house search not working- able to keep fields like price blank during new house creation I was getting inquiry- invalid access on replying to an inquiry but it did save to the database.   high-low links in  houses table erroring for realtor admin was able to add to interest list admin able to reply to queries hunter shouldn't have contact method authentication not applied throughout the app- https://calm-forest-11598.herokuapp.com/companies/42 accessible without login
house search not working- able to keep fields like price blank during new house creation I was getting inquiry- invalid access on replying to an inquiry but it did save to the database.   high-low links in  houses table erroring for realtor admin was able to add to interest list admin able to reply to queries hunter shouldn't have contact method authentication not applied throughout the app- https://calm-forest-11598.herokuapp.com/companies/42 accessible without login
House images look broken. Destroying a company does not work, instead leads to edit company page.  
house hunter functionalties are chacked but there is scope for improvement
hough the team have explained their work pretty well, the have not included a test plan. It is an important part of the project and should be included
history shows lots of commits, but majorly from one teammate only.
HH is able to view all the other house hunters and their contact details which only admin is designated to view. Major privacy breach. README.md file well written.
HH could not add inquiry
HH could not add inquiry
Here, the most important thing, the problem statement is missing. Secondly, no test plan has been mentioned. So, this makes the document incomplete.
Here, the most important thing, the problem statement is missing. Secondly, no test plan has been mentioned. So, this makes the document incomplete.
Here is something which needs to be focused: 1. I can't see the association between company and houses.  2. Deletion of company by admin is redirecting to show.html.erb and not deleting the company. 3. I'm not able to view the inquiries too. In most of the views, deletion is not working.
Here a few things I found: I could list a house that was built in the future. I was also required to give a full date instead of just a year. I was able to edit a house as a House Hunter
Here a few things I found: I could list a house that was built in the future. I was also required to give a full date instead of just a year. I was able to edit a house as a House Hunter
Haven't uploaded the link for the pull request.
Haven't included the test plan
Haven't included the test plan
Haven't included the test plan
Haven't deployed so could not manually check. Though according video and wiki page it look likes that teh code would work fine.
Haven't deployed so could not manually check. Though according video and wiki page it look likes that teh code would work fine.
Have listed out the functionality which is very intuitive. But some links like 'As realtor' and 'As house hunter' are broken, making a bit of a confusion.
Have explained the problem and its functionality is described but missing proposal for code changes. 
Have explained the problem and its functionality is described but missing proposal for code changes. 
Have covered almost all the issues, it would have been better if an implementation plan was provided.
Have covered almost all the issues, it would have been better if an implementation plan was provided.
Have covered almost all the issues, it would have been better if an implementation plan was provided.
Hard to tell as very little explanation given.
Handles most of the edge cases properly. There are some bugs related to Messages as i could not test it properly. In some cases deleting a user or a company fails.
Handles most of the edge cases properly. There are some bugs related to Messages as i could not test it properly. In some cases deleting a user or a company fails.
Great job with your pull request and passing the Travis CI build. There are several code climate failures that could have been addressed many to deal with incorrect formatting and extra parenthesis or braces. Simple fixes so great job!
Great job with your pull request and passing the Travis CI build. There are several code climate failures that could have been addressed many to deal with incorrect formatting and extra parenthesis or braces. Simple fixes so great job!
Great efforts have been taken to convey what is to be done and how the team will do it. The design will definitely increase the response time. Suggestion: Information about the methods that will be implemented is not given in the design document Availability of such info would have been helpful.
grades_helper.rb:62 The parameter id is not descriptive enough. Please consider changing it to be more descriptive. 
Got confused in between about the proposed solution
Good, but lacks readability. The code is directly copy-pasted in the approach section. You could have used the pseudo code with proper explanations. The structure and formatting should be improved.
Good work. Need to work on tests.
Good work on problem statement and implementation ideas. However, screenshots could have added. LoFi sketches and flowcharts missing. 
Good work but I find following missing for completeness, a. table of content b. current design and proposed changes  c. integration of new features in design  d. use case diagrams  e test plan    
Good work but I find following missing for completeness, a. table of content b. current design and proposed changes  c. integration of new features in design  d. use case diagrams  e test plan    
Good thing would be to increase the test coverage.
Good test plan. Should include more test cases that check the functionality of GitHub integration. eg: If number of lines of code committed by a student is correctly computed.
Good test plan. Should include more test cases that check the functionality of GitHub integration. eg: If number of lines of code committed by a student is correctly computed.
Good explanation of the proposed changes. You may want to add it in a separate heading. Overall explanation quality is adequate.
Good description. I think with the use of headings and subcategories it will look good also need lot of conteent to mention the changes done
good coding practice followed.
Given UML diagram which are explaining the functionality appropriately but class diagram would have been better to explain the detail code level change 
Given UML diagram which are explaining the functionality appropriately but class diagram would have been better to explain the detail code level change 
GitHub link is not redirecting. Shows 404 not found. Please deploy the application on any of the platforms.
Github link is broken and the project has not been deployed. Don't know how to review this project.  
GitHub link above gives 404 error. Please fix it.
Git was not utilized fully. There are only a handful of commits that do not capture the development process of project. 
Git was not utilized fully. There are only a handful of commits that do not capture the development process of project. 
Git shows too many changes which are not required. One can test thoroughly before submitting the changes.
Git link is not working. the account might be private
Git link is not working. the account might be private
Git has been used properly but needed team contribution. There is only one committer. 
Git has been used properly but needed team contribution. There is only one committer. 
Get the GitHub pull metrics and show 'em to a person! That person being an instructor!
Functions are really small and absurd. Does not go along Ruby Style guide.
Functions are of appropriate length and code is in proper methods. However, no comments are provided what so ever.  
Functions are of appropriate length and code is in proper methods. However, no comments are provided what so ever.  
functions are not named properly. example getphoto in photos_controller.
functions are not named properly. example getphoto in photos_controller.
Functions are named properly.
Functionality features test has been included but plan for RSpec tests is yet to be included.
Functionality features test has been included but plan for RSpec tests is yet to be included.
Functionality features test has been included but plan for RSpec tests is yet to be included.
Functionalities work fine but could not find inquiries form after logging as an admin.
Functionalities work fine but could not find inquiries form after logging as an admin.
Functionalities of admins are working.Though many other functionalities are yet to be implemented.
Functionalities are incomplete, while able to log in through admin, cannot edit or create any other user because of the error.
Functionalities are incomplete, while able to log in through admin, cannot edit or create any other user because of the error.
Function, variable names are ok but there were ruby coding style issues like not using elsif blocks, not keeping code concise and not following ruby syntax.  Scripts for converting non UTF-8 files is a good approach.
Function, variable names are ok but there were ruby coding style issues like not using elsif blocks, not keeping code concise and not following ruby syntax.  Scripts for converting non UTF-8 files is a good approach.
Function names look good. And most of them have len < 20 which is good.  The tests make use of contexts effectively. This is great to see.    Yes more comments are required especially in the controller code telling why an approach was taken and what the function does.   
Function names look good. And most of them have len < 20 which is good.  The tests make use of contexts effectively. This is great to see.    Yes more comments are required especially in the controller code telling why an approach was taken and what the function does.   
Function names look good. And most of them have len < 20 which is good.  The tests make use of contexts effectively. This is great to see.    Yes more comments are required especially in the controller code telling why an approach was taken and what the function does.   
Function length is good. General convention of having function length < 20 has been followed. What I found lacking was additional 2-3 lines of comments before each new function to understand what has been implemented.     
From what I see it looks like code we have seen in class. Although in the model classes, they don't have any associations between models.
From what I can gather, nothing sounds too complicated individually, but the practice of a workflow across multiple pages can become very cumbersome and complex. I don't see any details on how this team plans to mitigate those issues.
From what I can gather, nothing sounds too complicated individually, but the practice of a workflow across multiple pages can become very cumbersome and complex. I don't see any details on how this team plans to mitigate those issues.
FRom the Pull request i see Coverage Decreased, But from the Screen-cast looks like 100% covered When i tried running manually i get the below errors  1) ReviewResponseMap #final_versions_from_reviewer     Failure/Error: prepare_final_review_versions(assignment, maps)          NoMethodError:       undefined method `prepare_final_review_versions' for #<Class:0x007fab83429010>
FRom the Pull request i see Coverage Decreased, But from the Screen-cast looks like 100% covered When i tried running manually i get the below errors  1) ReviewResponseMap #final_versions_from_reviewer     Failure/Error: prepare_final_review_versions(assignment, maps)          NoMethodError:       undefined method `prepare_final_review_versions' for #<Class:0x007fab83429010>
From the previous stage, the team has added the Use Case Diagram that efficiently describes the actors involved in the process. Also, since a new controller is proposed it was essential to identify the role of the instructor.
From the file diff in GitHub, it looks the code is in good shape. There were a few suggestions provided during round 1 review. If those could also be integrated, it would be better. The test cases are successfully running. But the functionality could not be tested due to lack for steps in the wiki. 
From the file diff in GitHub, it looks the code is in good shape. There were a few suggestions provided during round 1 review. If those could also be integrated, it would be better. The test cases are successfully running. But the functionality could not be tested due to lack for steps in the wiki. 
From the Code DB Design looks fine. They have handled most of the relationships properly. Although I believe having different tables for admins/realtors/hunters/users/roles and role maps is un-necessary and just increases the complexity of the system. 
From my previous review of this project, there have been few additions to the set of functionalities implemented. For the 3rd project (OSS) the team had worked on OffscreenCanvas.rs (interacts with javascript) and OffscreenCanvasContextRendering2D.rs (works on OffScreenCanvas) which are implementations of OffscreenCanvas.webidl and  OffscreenCanvasContextRendering2D.webidl  (Web IDL files) respectively. In this project, the team has proposed to implement OffscreenCanvas analogous to HTMLCanvasContextRendering2D, by reusing some code from the latter and add additional functionalities. They finally propose to implement blob API, to test the contents on the canvas and also support webgl contexts as used in WebGLRenderingContext.
Frankly, I can not see their concrete designs from their doc. 
Frankly, I can not see their concrete designs from their doc. 
Frankly, I can not see their concrete designs from their doc. 
Frankly, I can not see their concrete designs from their doc. 
Found that company has many users missing House has many inquiries and reply missing.
Found commits only near the deadlines.
Foreign key integration is been done in DB, but as there are no separate active records for user types(hunter, realtor,admin) hence the 1-1,1-many relations are absent.
Foreign key integration is been done in DB, but as there are no separate active records for user types(hunter, realtor,admin) hence the 1-1,1-many relations are absent.
Foreign key integration is been done in DB, but as there are no separate active records for user types(hunter, realtor,admin) hence the 1-1,1-many relations are absent.
Foreign key integration is been done in DB, but as there are no separate active records for user types(hunter, realtor,admin) hence the 1-1,1-Many etc relations are absent. 
Foreign key integration is been done in DB, but as there are no separate active records for user types(hunter, realtor,admin) hence the 1-1,1-Many etc relations are absent. 
Foreign key integration is been done in DB, but as there are no separate active records for user types(hunter, realtor,admin) hence the 1-1,1-Many etc relations are absent. 
Foreign key integration does not seem to have been done completely in DB.
For the same reason, 3/6 edge cases passing corresponds to 50% or three stars. the README.md was very detailed.
For the Ruby changes they have made, they have used intuitive names and used naming conventions as much as possible. def update_feedback   Some places, the variable names are used in CamelCase whereas few places they werent used. Few variable names were directly used from legacy code, although refactoring could have been done. curquestionnaire quesparams . questArray
For the Ruby changes they have made, they have used intuitive names and used naming conventions as much as possible. def update_feedback   Some places, the variable names are used in CamelCase whereas few places they werent used. Few variable names were directly used from legacy code, although refactoring could have been done. curquestionnaire quesparams . questArray
For the Ruby changes they have made, they have used intuitive names and used naming conventions as much as possible. def update_feedback   Some places, the variable names are used in CamelCase whereas few places they werent used. Few variable names were directly used from legacy code, although refactoring could have been done. curquestionnaire quesparams . questArray
For the first two issues, the team gave different conditions but no codes or demos are presented in the wiki for this test, I can only know the results by the description. For the later issues, the team gave the comparison between the old version and new version, which is easy to understand.
For the "manage participant" part, the authors didn't explain how will they solve the issue that the "add student" button cannot work correctly after a user add a course. The document included other changes need to be made, but the explantation was not clear enough. The design used a lot of components in Bootstrap, but the authors didn't give any explantations to these components they would use and didn't give any diagrams to show what the changes will be like.
For sign up, I don't understand what is the difference between "I am shopping for a house" and "I am a realtor and I am shopping for a house". 
for now explainations are in preliminary state , I'm hoping that team will fillout this as they progress in project
For nil input test, they should separate them from the normal input with a new test, instead of put them in one. some missing invalid input testing, such as import, export methods. 
For nil input test, they should separate them from the normal input with a new test, instead of put them in one. some missing invalid input testing, such as import, export methods. 
For each problem the authors display relevant chunks of code and discuss which parts need to be changed. Aside from the Issue #1072 all the solutions seem reasonable and simple. One minor suggestion for improvement would be to use the .collect instead of the .each method for computing total_weight in validate_assignment_questionnaires_weights method.
For each method, there should be multiple test cases, but they put all tests for a method together wrap by a single it '.....' do, they should consider to add more it '......' do, to separate each test case, so the reader know what are they testing.
For each method, there should be multiple test cases, but they put all tests for a method together wrap by a single it '.....' do, they should consider to add more it '......' do, to separate each test case, so the reader know what are they testing.
For each cases, it include too many things need to be test, it is better to separate them into different cases. Also, the object used for this test seems not be put into the factory, it is better to make them into factory which is a good practice. The use of context is not good enough.
For all user, sign up and log in should at the same place.
Following errors: Realtors home page cannot be accessed after logging in as admin.  Signup for realtor is not working Signup for hunter is not working Realtors home page is not showing up after signing in as realtor Cannot signin as realtor with the credentials given in the ereadme    
Following are some of the relationships missing:   house hunter has_many inquiries realtor has_one company
flowcharts are simple to understand but no design patterns used.some supporting class diagrams or sequence diagrams would be helpful.
Flowchart is included in the document but there is no screenshot or mock-up screens. 
Flow charts have been used but no UML or screen shots
Flow charts have been used but no UML or screen shots
Fixes are simple adjustments to the current code. The last issue requires an addition of a full function but I think that it is appropriate to handle the bug fix as it pulls that responsibility out and keeps things nicely separated and associated for purpose.
Fixed problems: Users can edit their name now. Admin/Realtors can create, select(only one) and change companies. They can edit their own company's information. Admin/Realtors can view/list houses and edit/destroy houses that belongs to his/her company. Realtors can switch roles to house hunter. House hunters can view/add companies info. Inquiries functionality is implemented. Issues: Houses do not show if they have basement or not. After an inquiry is sent, the app redirects to an error page. Looks like house hunters can add company/houses too. These tasks should have been restricted.  
Fixed problems: Users can edit their name now. Admin/Realtors can create, select(only one) and change companies. They can edit their own company's information. Admin/Realtors can view/list houses and edit/destroy houses that belongs to his/her company. Realtors can switch roles to house hunter. House hunters can view/add companies info. Inquiries functionality is implemented. Issues: Houses do not show if they have basement or not. After an inquiry is sent, the app redirects to an error page. Looks like house hunters can add company/houses too. These tasks should have been restricted.  
FIXED -Users can log in and log out -Admin can create/view realtors/house hunters/companies - Users can edit his/her profile - potential buyers funtionality implemented - inquiry funtionality implemented ISSUES - Admin cannot create houses - house hunters can edit real estate companies    
First review comment weren't addressed.
First of all, this website doesn't work at all. I can't sign up as any role. And I also can't get admin's info from README file, which is an auto-generated file.
First of all, this website doesn't work at all. I can't sign up as any role. And I also can't get admin's info from README file, which is an auto-generated file.
First of all, the doc is  not a wiki page, which does not meet the requirement
First of all, the doc is  not a wiki page, which does not meet the requirement
First of all, I cannot login as an admin, so I cannot validate most of edge cases. But through the way they handle the relationships between models. I think some of the edge cases may not happen after fixing the problem. 
figures are drawn but are not explained in detail.
Fewer commits on the project, More towards the deadline date.
Fewer commits compared to other teams that I have reviewed.
Few test plan is written. The team can add more test plan.
Few test plan is written. The team can add more test plan.
Few test plan is written. The team can add more test plan.
Few test cases are missing context and it block so it is difficult to understand what the test case is doing unless you read the entire code.
Few test cases are missing context and it block so it is difficult to understand what the test case is doing unless you read the entire code.
Few test cases are missing context and it block so it is difficult to understand what the test case is doing unless you read the entire code.
Few of the travis tests have failed. The issues were code guidelines and spacing issues.
few more test cases can be added
few more test cases can be added
few more test cases can be added
few more test cases can be added
Few minor issues with the build which can be ignored.
Few issues with the build but I feel they are trivial.
Few issues that I found were : 1. different logins for different type of users 2. how does realtor switch roles between user and realtor  
Few issues that I found were : 1. different logins for different type of users 2. how does realtor switch roles between user and realtor  
Few information is missing like specification on NLP and how exactly the implementation would be. Idea is fine but add more details to it.
Few information is missing like specification on NLP and how exactly the implementation would be. Idea is fine but add more details to it.
Few information is missing like specification on NLP and how exactly the implementation would be. Idea is fine but add more details to it.
Few checks are failing. The checks suggest to use build or double instead of create in test cases.
Few checks are failing. The checks suggest to use build or double instead of create in test cases.
Features implemented in this project work as intended. After running the code manually I am getting the same coverage as stated on the wiki page. One problem is that the main object under test - participant is created using build method. factories.rb describes participant as an instance of AssignmentParticipant class. There is a possibility that this is complicating test cases or will complicate them in the future. The solution is to either define a new Participant class instance in the factory or to define it in the code itself.
Features implemented in this project work as intended. After running the code manually I am getting the same coverage as stated on the wiki page. One problem is that the main object under test - participant is created using build method. factories.rb describes participant as an instance of AssignmentParticipant class. There is a possibility that this is complicating test cases or will complicate them in the future. The solution is to either define a new Participant class instance in the factory or to define it in the code itself.
feature and controller test failing. Mentioned in the previous review as well. Travis Failing and issues with code climate as well
Favouriates controller is tested. But not in detail. It just checks if we can navigate to it.
Favouriates controller is tested. But not in detail. It just checks if we can navigate to it.
Favouriates controller is tested. But not in detail. It just checks if we can navigate to it.
Extra credit features have not been implemented. No google sign-in and no email replies 
explanation is good and easy to understand. proposed solution looks good as well. Design and implement a solution that handle GitHub hasn't been explained.
explanation is good and easy to understand. proposed solution looks good as well. Design and implement a solution that handle GitHub hasn't been explained.
Explains the testing functionality appropriately. As mentioned in Review one, technicalities are explained thoroughly but the functional knowledge required to understand what the test is doing and why it is doing what it does is missing. Along with mentioning what are the mappings and return values, proper explanation of what the test is written for will be more appropriate in a document.
Explains the testing functionality appropriately. As mentioned in Review one, technicalities are explained thoroughly but the functional knowledge required to understand what the test is doing and why it is doing what it does is missing. Along with mentioning what are the mappings and return values, proper explanation of what the test is written for will be more appropriate in a document.
Explained the project and its purpose with the design and files that need to be changed.  Test plan section is created but no description or plan is given.
Explained the project and its purpose with the design and files that need to be changed.  Test plan section is created but no description or plan is given.
Except the login controller, none of the models/controller seems to be well tested.There are no test-cases written for any of the controllers, or in general any component of the application.
Except the lack of comments in the code, the code seems to be perfectly fine. Could be improved in that scenario.
Except the lack of comments in the code, the code seems to be perfectly fine. Could be improved in that scenario.
Except the comments, everything seemed to be fine. The code seemed to lack proper comments, and as a result of which, it took several seconds to determine why the author did what he did. Apart from that, the code seemed perfect. Functions were sufficiently long, and code was DRY enough too.
Except the comments, everything seemed to be fine. The code seemed to lack proper comments, and as a result of which, it took several seconds to determine why the author did what he did. Apart from that, the code seemed perfect. Functions were sufficiently long, and code was DRY enough too.
Except one method, all the other methods have been covered. This is similar to round 1 review given by me.
Except inquiry reply all other functionalities work in my opinion.
Except for the test plan, the design doc seems to have all the important details. The team should add a test plan before starting in order to go for a test-driven development. 
Except for the lack of comments, the code was relatively easy to understand, and was sufficiently DRY. 
Excellent writeup. The instructions were clear. The screenshots were apt. One suggestion: Could be shorter and precise.
Excellent writeup. The instructions were clear. The screenshots were apt. One suggestion: Could be shorter and precise.
Excellent work but the codeclimate build has failed
Excellent use of visualizations!
Excellent code! Very well commented and followed most of the Ruby,s standard code formate. Very well organized. 
Everything works from their UI. Their peer review plan works as intended and clearly explains how to test on UI. There are SQL errors when trying to delete a user which is tied to some assignment. Although the team has mentioned it is out of scope of the project, future work could be to remove those SQL error displayed on pages and give a pop up / alert box, saying your user is tied to an assignment.
Everything works as per the video linked in google drive. A link to the same can be added on the wiki page.  
Everything seems good. You can move constants to a separate file and use them . For example where you are comparing =="admin" or =="realtor". You can either move them to a separate file or in database and use it.
Everything seems good. You can move constants to a separate file and use them . For example where you are comparing =="admin" or =="realtor". You can either move them to a separate file or in database and use it.
Everything looks great as they have added the uml diagrams ad explained everything in detail. Test plan is missing which can be added as they are solving a lot of issues in this project.
everything looks great , you can add test plan for this as its a big change in functionalities.
everything looks great , you can add test plan for this as its a big change in functionalities.
Everything looks fine, except for a few places where there are issues with indentation.
Everything is failing. Code climate has 56 issues. Build is failing. Haven't made a change since round 1.
Everything in the pull request failed (although this is not an expertiza project)
Everything in the pull request failed (although this is not an expertiza project)
Everything has been described well and in details.
Everything but the CodeClimate checks passed
Everything but the CodeClimate checks passed
Everything but the CodeClimate checks passed
Even though there is a no test plan available in the write-up, however, a lot of tests have been added. 
Even though the code has been refactored keeping in mind the coding standards but I think that there is still room for improvement in writing the test cases and the PR checks should be checked as well since they are failing. This is something that the next team could pickup and then the code could be ready to be deployed on the production server.
Even though the build is failing in Travis CI, there are no conflicts. The controller tests are failing as there is no flash message that is appearing. Please look into this.
Even though few test cases have been provided I feel like it could have been more detailed with the steps involved in the testing.
error w/o company for realtor on viewing buyers empty companies- validation missing for empty info on companies admin view - realtor show not working admin view - hunter show not working Search by area missing- no fields to search by area
Enquiries hasnt been tested.
Edge cases not handled properly. Company delete crashing until all realtors and houses under it are deleted. House delete crashes until all inquiries on it are deleted.
Edge cases not handled properly. Company delete crashing until all realtors and houses under it are deleted. House delete crashes until all inquiries on it are deleted.
Edge cases missing from the test case. Write more test cases with invalid input types. Example - give a string to an int type and raise an error accordingly.
Edge cases missing from the test case. Write more test cases with invalid input types. Example - give a string to an int type and raise an error accordingly.
Edge cases like real estate company deletion are handled as deletions which is basically not handling it. Could've done some case like transferring them to other user account or such.
Edge cases like real estate company deletion are handled as deletions which is basically not handling it. Could've done some case like transferring them to other user account or such.
Edge cases handled well. After hunter adds an inquiry, the "back" button goes again to the "create new inquiry" form, letting the user recreate the same inquiry multiple times README.md does not cover how the system handles edge cases. 
Edge cases handled well. After hunter adds an inquiry, the "back" button goes again to the "create new inquiry" form, letting the user recreate the same inquiry multiple times README.md does not cover how the system handles edge cases. 
Edge cases could have been implemented.
Edge cases are not explicitly handled, but the validations and logic will limit edge case scenarios from affecting the application.
Edge cases are handled, but arent described briefly on the readme
Edge cases are handled, but arent described briefly on the readme
Duplicating code and fixing it for the new implementation is an effective strategy but not very DRY and could result in code that is hard to maintain, read, and test.
Due to the lack of provided admin login and the fact that I cannot sign up for a realtor or hunter account it is impossible to evaluate the functionalities
Due to the lack of provided admin login and the fact that I cannot sign up for a realtor or hunter account it is impossible to evaluate the functionalities
Due to the lack of provided admin login and the fact that I cannot sign up for a realtor or hunter account it is impossible to evaluate the functionalities
drying is possible
Drastic improvements have been made to design doc. 
Dont see a SEPC folder
Dont see a SEPC folder
Don't see the role switch functionality and it's not mentioned in the readme file too. While adding a new house by an admin, it is seen that I can add it to a company, say, A and and also add a realtor, R1, which does not belong in company A, but another company, say, B. So what is the flow here? The end result is the house has a company A, but has a realtor whose company is B.
Don't see the role switch functionality and it's not mentioned in the readme file too. While adding a new house by an admin, it is seen that I can add it to a company, say, A and and also add a realtor, R1, which does not belong in company A, but another company, say, B. So what is the flow here? The end result is the house has a company A, but has a realtor whose company is B.
Doesn't seem like it. only user and company part have been implemented and I was able to delete the admin user easily,and in the company edit view for e.g year input doesn't check for a valid year(398343 is a valid year). Therefore it has not been thoroughly tested
Doesn't seem like it. only user and company part have been implemented and I was able to delete the admin user easily,and in the company edit view for e.g year input doesn't check for a valid year(398343 is a valid year). Therefore it has not been thoroughly tested
Doesn't contain the snapshots of the code that was changed.
Doesn't contain the snapshots of the code that was changed.
Does not tell about how to run test
Does not apply much.But instead of using names like temp and temp 1, a more significant name which is self explanatory of its content will be useful.
Documentation mentions the steps, problem statement, solutions and screenshots. The description are detailed. However, I feel there is no need to give screenshots for tests written. 
Documentation mentions the steps, problem statement, solutions and screenshots. The description are detailed. However, I feel there is no need to give screenshots for tests written. 
Documentation is proper. Team could have added DB tables as well in the design doc.
Documentation is proper. Team could have added DB tables as well in the design doc.
Documentation can be improved. Include more details about the controllers method team is planning to change/add.
Document is explained well with clear understanding of the issue. Problem statement, design plan is explained well. Team can work on adding test plans. As well as well diagrams and screenshots to make the document more explanatory.
Document is explained well with clear understanding of the issue. Problem statement, design plan is explained well. Team can work on adding test plans. As well as well diagrams and screenshots to make the document more explanatory.
Document explains the problem well. One thing I would like to explained more is how strategy pattern being used will help reduce the code than the amount of code currently present, But i guess that will be explained better once the teams gets to implementing stuff and knows a bit more about the design.
Document explains the problem well. One thing I would like to explained more is how strategy pattern being used will help reduce the code than the amount of code currently present, But i guess that will be explained better once the teams gets to implementing stuff and knows a bit more about the design.
Dissatisfied with the write up because no clear explanation has been given for how they arrived at the design. At some places the documentation abruptly stops mid-explanation. The code screenshots and the accompanying explanation is good.
Dissatisfied with the write up because no clear explanation has been given for how they arrived at the design. At some places the documentation abruptly stops mid-explanation. The code screenshots and the accompanying explanation is good.
Difficult to test and review the work one since there were no screenshots provided. I was not able to find an instance of a review which could be submitted as a team but not by individual members of the team. Some of the webpages crash after clicking on a particular assignment to view the review report. Suggestions: The team could explain steps to access the "review view", so that manual testing could be done. The team could create dummy assignments for testing. Maybe, adding screenshots would help in the process.
Didn't see any test cases.
Didn't see any test cases.
Didn't find any pull request. Code coverage has increased as more tests are written and it is one of the required outcomes. Wiki states that 100% coverage is achieved and the same is demonstrated in the video link provided.
Didn't find any pull request. Code coverage has increased as more tests are written and it is one of the required outcomes. Wiki states that 100% coverage is achieved and the same is demonstrated in the video link provided.
Didn't find any documentation link. But it was understandable from the code links on github.  Goal is to create unique directories for each assignment.
Didn't commit at regular intervals. Yes, committed changes in round 2.
Didn't commit at regular intervals. Yes, committed changes in round 2.
did not use Rspec, but team has done testing.
Did not see much info on the files or classes the changes proposed, so its hard to comment here
Did not see much info on the files or classes the changes proposed, so its hard to comment here
Did not see much info on the files or classes the changes proposed, so its hard to comment here
Did not see a SPEC folder in the GIT
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find much info on the Design
Did not find any diagrams in the Wiki.
Did not find any diagrams in the Wiki.
Did not find any diagrams in the Wiki.
Did not even pass the auto test.
Did not even pass the auto test.
Did a good job using forms to stay dry with the edit and new pages. Some more comments especially in the models would have been helpful to understand why certain validations were chosen. The use of JSON to store and recall in views was clever.
Did a good job using forms to stay dry with the edit and new pages. Some more comments especially in the models would have been helpful to understand why certain validations were chosen. The use of JSON to store and recall in views was clever.
Diagrams for use cases are given properly, but the class diagram is missing.
Diagrams for use cases are given properly, but the class diagram is missing.
Diagrams are used from previous project. No diagrams explaining newer functionality.
Diagrams are used from previous project. No diagrams explaining newer functionality.
Diagrams are used from previous project. No diagrams explaining newer functionality.
Diagrams are still overly large.
Diagrams are still overly large.
Diagrams are explanatory but few but I think they are sufficient
Diagram included in the implementation plan is confusing. A better way would have been to include a diagram to indicate the step by step flow.
Diagram included in the implementation plan is confusing. A better way would have been to include a diagram to indicate the step by step flow.
Diagram for stacked chart missing from the design document.
Diagram for stacked chart missing from the design document.
Diagram for stacked chart missing from the design document.
Detailed. But the screenshots of the manual testing are missing in the test plan.
Detailed. But the screenshots of the manual testing are missing in the test plan.
detailed design is missing, the document covers only the screen shots and high level overview of what needs to be done
detailed design is missing, the document covers only the screen shots and high level overview of what needs to be done
Detailed design and test plan lacks. For introduction part, the explanation is not clear enough and a little bit confusing. It is better to add more explantation about what the project is and point out the exact purpose clearly.
Detailed design and test plan lacks. For introduction part, the explanation is not clear enough and a little bit confusing. It is better to add more explantation about what the project is and point out the exact purpose clearly.
Destroy not working Unable to create user from admin
Destroy not working Unable to create user from admin
Destroy not working Unable to create user from admin
destroy does not work at all, it will redirect user back to edit page of the object for houses and real estate companies. For users, if they have a foreign key association with any inquire, then you can not delete them. 
Design principles were not discussed. They did discussed the general approach, but that approach did not seem to be rooted in design principles.
Design principles were not discussed. They did discussed the general approach, but that approach did not seem to be rooted in design principles.
Design plan of the document only explains algorithm or flow for the code change. Team should explain the changes from existing system  to proposed solution with some texts.
Design plan of the document only explains algorithm or flow for the code change. Team should explain the changes from existing system  to proposed solution with some texts.
Design plan has not changed since I last reviewed. A bit more detail would still be nice
Design plan has not changed since I last reviewed. A bit more detail would still be nice
Design patterns were not used. Rest of the code is explained and easy to follow.
Design patterns were not used. Rest of the code is explained and easy to follow.
Design patterns were not used. Rest of the code is explained and easy to follow.
Design looks good at high level though specific details about implementation are still missing. I would expect that here.  they also state that they are using google translate details on what api they will be using would have been helpful
Design looks good at high level though specific details about implementation are still missing. I would expect that here.  they also state that they are using google translate details on what api they will be using would have been helpful
Design looks good at high level though specific details about implementation are still missing. I would expect that here.  they also state that they are using google translate details on what api they will be using would have been helpful
design looks clear, just need to add what files will be added, and what files will be modified to make the design more sound. 
Design is very nicely explained with flowchart makes the design flow very clear. Suggestion : If a screenshot of actual screen where the change needs to be made is added, that would be perfect.
Design is too detailed. I would suggest keeping it short and precise.
Design is informative. But too detailed. One UML would have been apt.
Design is informative. But too detailed. One UML would have been apt.
Design is informative. But too detailed. One UML would have been apt.
design is fine. some minor errors like no stop phase.Moreover no design patterns used. Just flowcharts are provided.If some sequence diagram or use case diagrams were provided it would improve the design a lot.
design is fine. some minor errors like no stop phase.Moreover no design patterns used. Just flowcharts are provided.If some sequence diagram or use case diagrams were provided it would improve the design a lot.
design is fine. some minor errors like no stop phase.Moreover no design patterns used. Just flowcharts are provided.If some sequence diagram or use case diagrams were provided it would improve the design a lot.
Design flow diagram is included indicating the flow which is good.
Design does seem to be sound, but complex. As mentioned in the earlier review, I am unsure if looping over each review is the correct thing to do or not. Maybe the team discussed this with the mentor and decided against it as no new information has been added in the document. If so, I would only suggest the team to include the complexity of the design in the document.
Design does seem to be sound, but complex. As mentioned in the earlier review, I am unsure if looping over each review is the correct thing to do or not. Maybe the team discussed this with the mentor and decided against it as no new information has been added in the document. If so, I would only suggest the team to include the complexity of the design in the document.
Design document explains the entire project flow very well. The whole implementation plan is very well written which clearly explains how the team is planing to work on project. The idea of including screenshots which explains how the functionality will look like once all the implementation is done is what I liked the most. Suggestion: Team should include test plan in the doc.The purpose of project should be explained more clearly. Overall, nice work!
Design document explains the entire project flow very well. The whole implementation plan is very well written which clearly explains how the team is planing to work on project. The idea of including screenshots which explains how the functionality will look like once all the implementation is done is what I liked the most. Suggestion: Team should include test plan in the doc.The purpose of project should be explained more clearly. Overall, nice work!
Design document explains the entire project flow very well. The  objectives/goals are clearly stated in the doc along with the approach which team will be following in future.The  flowchart explains the functionality very well. Overall, the doc is easy to understand.  Suggestion: Team should include test plan in the doc.
Design document explains the entire project flow very well. The  objectives/goals are clearly stated in the doc along with the approach which team will be following in future.The  flowchart explains the functionality very well. Overall, the doc is easy to understand.  Suggestion: Team should include test plan in the doc.
Design document does not seem complete. Problem statement is explained well. But project design or test plan is not mentioned.
design doc is complete except for implementation and testing which is not required for this review 
Design doc does not explain the approach to resolve the issue to be taken well. As i could see only 2 lines of explanation. Team should explain the design more clearly for naive users too. Team has not used any design principle.
Design doc does not explain the approach to resolve the issue to be taken well. As i could see only 2 lines of explanation. Team should explain the design more clearly for naive users too. Team has not used any design principle.
Design concept seems promising but a brief introduction about how each module will be implemented for both reviewer and reviewee is missing. 
Design concept seems promising but a brief introduction about how each module will be implemented for both reviewer and reviewee is missing. 
Design approaches are clearly explained (yes, the 2nd approach is the correct approach). Any design patterns used???
Design approaches are clearly explained (yes, the 2nd approach is the correct approach). Any design patterns used???
Design approaches are clearly explained (yes, the 2nd approach is the correct approach). Any design patterns used???
Design approaches are clearly explained (yes, the 2nd approach is the correct approach). Any design patterns used???
deployed on Heroku. Friendly interface, good README file.
Deployed link is not worKing
Deletion of House by admin is failing. Privacy breach - As a user, I am able to see details of all other users. Only admin should be able to see details of other users. Overall very good effort. If the above issues weren't there, I would have given full points.
Deletion fails in most cases as dependent records don't get deleted. Model changes to add and delete these dependencies will resolve the issue.
Deletion fails in most cases as dependent records don't get deleted. Model changes to add and delete these dependencies will resolve the issue.
Deletion fails in most cases as dependent records don't get deleted. Model changes to add and delete these dependencies will resolve the issue.
Deleting company doesn't delete it's houses. No form of cascade delete present anywhere.
Deleting company doesn't delete it's houses. No form of cascade delete present anywhere.
Deleting a house hunter does not work, possible error in deployment.   Edge cases Company cannot be created without filling all details. This is implemented. Session control : When user signs out from a page and then goes back, the profile page should not be shown (as he is signed out). This should be considered.
Deleting a company doesn't delete its houses.
Deleting a company doesn't delete houses.Deleting househunter doesn't his/her inquiries.
Deleting a company doesn't delete houses.Deleting househunter doesn't his/her inquiries.
Delete of company is not working. Deletion of a house is not working Admin should not be able to change/add to his role. I was able to make admin as a realtor. System should not allow that
Default tests are present. Not the actual tests. 
Default tests are present. Not the actual tests. 
Default tests are present. Not the actual tests. 
def create function in assignments controller seems to be long and could have been refactored. Considering that they used most of the legacy code and most of their work was on UI, their part on ruby changes werent much 
def create function in assignments controller seems to be long and could have been refactored. Considering that they used most of the legacy code and most of their work was on UI, their part on ruby changes werent much 
DB seems well designed. I didn't see potential buyers. That will have a relation with house such that house has many potential buyers.
DB relationships looked fine. New model was created for house style which could have been a parameter in house model itself.
DB relations are handled properly but dependent destroy is not mentioned because which there are issues when destroying entries which have a foreign key dependency.
DB relations are handled properly but dependent destroy is not mentioned because which there are issues when destroying entries which have a foreign key dependency.
DB relations are handled properly but dependent destroy is not mentioned because which there are issues when destroying entries which have a foreign key dependency.
DB design is not taken care of properly. Various mappings between entities have not been established.
DB design is kind of ok, but there are redundant tables for roles/realtors/hunters/admins and users. I believe all this can be combined into one using proper fields and access control. This would have helped you guys keep the code easier as well. Everything else has been handled properly.
DB design is kind of ok, but there are redundant tables for roles/realtors/hunters/admins and users. I believe all this can be combined into one using proper fields and access control. This would have helped you guys keep the code easier as well. Everything else has been handled properly.
Db design doesn't have key reference and 1-1 or 1-many relationships in active records are missing but the same is implemented via code logic.
Db design doesn't have key reference and 1-1 or 1-many relationships in active records are missing but the same is implemented via code logic.
Currently your team have 4 code climate issues that denote code redundancy as stated in the code comment above. Best just to bring those statements out to keep it as dry as possible. From what I can tell, none of the pull requests pass these requirements including my own teams so I am not sure what is the cause of this but I guess no one will be getting all the stars on this questions :)
Created a great visual aid which helps us explain the plan.
Crashed for me once randomly. Might be not because of these changes but I am not sure
Crashed for me once randomly. Might be not because of these changes but I am not sure
Crashed for me once randomly. Might be not because of these changes but I am not sure
Covers all edge cases like checking whether Assignments is absent in the menu in default view and present in student view.  Could not view the reviews done by students. 
covered all the edge cases but have not provided any explanation. 
covered all the edge cases but have not provided any explanation. 
Coverage decreased by .01%.
Coverage decreased by .01%.
Couldn't test the features as no information regarding logging in credentials were provided anywhere.
Couldn't test manually as no information regarding the steps to take to test is provided.
Couldn't test it manually as no link/guide provided for the same.
Couldn't test it manually as no link/guide provided for the same.
Couldn't test it manually as no link/guide provided for the same.
Couldn't see any testing being done.
Couldn't see any testing being done.
Couldn't see any testing being done.
Couldn't see any testing being done.
Couldn't see any testing being done.
couldn't relate code with the application - for eg - admin index page has Hello admin at the top, however, there is no such thing on the UI Similarly for inquiries- LIST the Inquiries- not found in UI
couldn't relate code with the application - for eg - admin index page has Hello admin at the top, however, there is no such thing on the UI Similarly for inquiries- LIST the Inquiries- not found in UI
Couldn't find any testing done for any controller. Model "User" was thoroughly tested.
Couldn't find any test plan.
Couldn't check the base cases, edge cases.  Also found high similarity of program2 doc that detailed the requirements with readme 
Couldn't check the base cases, edge cases.  Also found high similarity of program2 doc that detailed the requirements with readme 
Couldn't check as no deployed app link was given
Couldn't check as no deployed app link was given
could use more detail
could use more detail
could see default testcases.
Could not test UI because links for signing up are broken.
Could not test UI because links for signing up are broken.
Could not test UI because links for signing up are broken.
Could not test most of the edge cases as functionalities have not been implemented.
could not test inquiry form
Could not see the Test Plan as write-up link has not been provided. Looking at the code also, it seems as if no tests are written. It is always a good practice to follow TDD. Please write test cases to test the changes made.
Could not see test plan as well as automated test cases are not included Team could work upon adding test cases to test the functionalities. That would make the issue resolution more robust.
Could not see any new commits after last change. Also commits distribution is not equal.
Could not see any new commits after last change. Also commits distribution is not equal.
Could not really find the required relationship mapping.
Could not really find the required relationship mapping.
Could not really find the required relationship mapping.
could not log in as admin. Rest worked as expected.
could not log in as admin. Rest worked as expected.
could not log in as admin. Rest worked as expected.
Could not find the test file, and neither is it mentioned in the README.
Could not find steps to replicate on UI. Documentation does not mention steps how to test the feature. More information required as I was not able to follow the steps 
could not find model or controller testing.
could not find model or controller testing.
Could not find dile in which tests are done, neither is it specified in README
Could not find custom tests.
Could not find commits for Test files.
Could not find any test cases. The team should implement test cases for the issues they've fixed.
Could not find any test cases. The team seem to have made changes to only the views. The team should implement test cases for the issues they've fixed.
Could not find any explanations regarding the changes proposed.
Could not find any explanations regarding the changes proposed.
Could not find any explanations regarding the changes proposed.
Could not find any
Could not do the manual testing since the link mentioned did not work. But, the code seems good enough to work.
Could not add a company as a realtor. Also could not attach and display a picture when listing a house. When signing up as house hunter was asked to select a real estate company. The house Interest /interest list feature  has not been implemented. Also the inquiry is not associated with a listed house. Cannot delete real estate companies.
Could not add a company as a realtor. Also could not attach and display a picture when listing a house. When signing up as house hunter was asked to select a real estate company. The house Interest /interest list feature  has not been implemented. Also the inquiry is not associated with a listed house. Cannot delete real estate companies.
Could have been more eloborate. No mention of design principles or patters used. 
Could have been more elaborate how to check the work. No mention of design principles or patterns used. 
Could have been more elaborate how to check the work. No mention of design principles or patterns used. 
Could have been more descriptive
Could have been more descriptive
Could have been explained more
Could have been explained more
Could have added UML diagrams, LoFi sketches and flowcharts.
Could have added UML diagrams, LoFi sketches and flowcharts.
Could have added more explanation on the changes proposed by the team.
Could be more specific, especially with test plan.
Could be more specific, especially with test plan.
Could be better if you add the screens. Only conventional flow of diagrams is present. Adequate details.
Could be better if contain with more info about the test itself instead of the rb file they tested.
Controllers have a few test cases, models have none. Some of the suggested test cases could be as follows-: company_test.rb -> company should not be deleted if not owner of company (realtor should only be able to delete company if he created it)
Controllers have a few test cases, models have none. Some of the suggested test cases could be as follows-: company_test.rb -> company should not be deleted if not owner of company (realtor should only be able to delete company if he created it)
Controller test cases have been covered, but no model test cases can be seen.
Controller test cases have been covered, but no model test cases can be seen.
Content is good and well written from the last review I was expecting little more in depth deatails on the implementation side . I see no edits after Nov 14 except for the new image
Content is good and well written from the last review I was expecting little more in depth deatails on the implementation side . I see no edits after Nov 14 except for the new image
Confusing method naming: eg can_create, can_edit, can_destroy etc all should return true/false, but itredirects requests as well, which should be done in the parent method which calls them  
Confusing method naming: eg can_create, can_edit, can_destroy etc all should return true/false, but itredirects requests as well, which should be done in the parent method which calls them  
Conflicts were resolved to an extent for the Travis Cl. But not all the tests are passing.
Conflicts were resolved to an extent for the Travis Cl. But not all the tests are passing.
Conflicts were resolved to an extent for the Travis Cl. But not all the tests are passing.
Complex design
Complex design
company realtor relation should be 1-n but isn't. also realtor , house_hunter should belong to user.
companies_controller along with a few other controllers are populated with the tests generated by scaffolding. No tests in models found.
commit were done at a timely manner
Comments needed.
Comments in the code would have been helpful to understand the flow.
Comments in code are missing. There are few lines that need to be removed but still exist, it would be nice to delete those eg #emails << assignment.instructor.email   Function length looks okay, most functions have len < 20 lines which is an acceptable number. Since the code is implementing very specific issues over it has specific local changes.  Other change are okay and ruby like
Comments in code are missing. There are few lines that need to be removed but still exist, it would be nice to delete those eg #emails << assignment.instructor.email   Function length looks okay, most functions have len < 20 lines which is an acceptable number. Since the code is implementing very specific issues over it has specific local changes.  Other change are okay and ruby like
Comments from Round 1 are taken care of.    Delete real estate company crashed. View Inquiry lists inquiries from all houses, including ones that are not under the same company. These should not be accessible to the realtor. He should see only ones from houses in his company.
Comments from Round 1 are taken care of.    Delete real estate company crashed. View Inquiry lists inquiries from all houses, including ones that are not under the same company. These should not be accessible to the realtor. He should see only ones from houses in his company.
Comments and indentation at a couple of places can be update.
Comments and indentation at a couple of places can be update.
comments
Commented-out code should be removed (at least one example found in participant_spec.rb). Also, there are some indentation issues as well as other issues flagged by CodeClimate. Otherwise, the code seems to comply with the Ruby Style Guide and be fairly DRY.
Commented-out code should be removed (at least one example found in participant_spec.rb). Also, there are some indentation issues as well as other issues flagged by CodeClimate. Otherwise, the code seems to comply with the Ruby Style Guide and be fairly DRY.
Codewise no issues. Build issue has to be fixed.
Codewise no issues. Build issue has to be fixed.
CodeClimate bot reports 73 style issues, which is an awful lot. 
CodeClimate bot reports 73 style issues, which is an awful lot. 
Code written well. Remove the unwanted methods, there are few duplicate methods which can be removed.
Code was not committed in second round.
Code was not committed in second round.
Code snippets are provided but the functionality that was to be implemented and how has that been achieved is not explained.
Code snippets are not mentioned, but design is properly done.
Code snippets are not mentioned, but design is properly done.
Code snippets are not mentioned, but design is properly done.
Code snippets are not mentioned, but design is properly done.
Code snippets are given but need explanation. 
Code snippets are given but need explanation. 
Code Snippet added.  Still, Git link is not of the pull request.   No link provided for the change. Either screencast or the URL of the deployed application would have been ideal.
Code Snippet added.  Still, Git link is not of the pull request.   No link provided for the change. Either screencast or the URL of the deployed application would have been ideal.
Code Snippet added.  Still, Git link is not of the pull request.   No link provided for the change. Either screencast or the URL of the deployed application would have been ideal.
Code quality was not upto the mark. Firstly, there were 3 separate table for admins, realtors and househunter, which caused a lot of redundancy inside the application, as well as for the user using the product. Secondly, the lack of proper documentation made it very difficult to traverse through the code.
Code quality was not upto the mark. Firstly, there were 3 separate table for admins, realtors and househunter, which caused a lot of redundancy inside the application, as well as for the user using the product. Secondly, the lack of proper documentation made it very difficult to traverse through the code.
Code mostly follows good styling guidelines but there are a couple of issues. I would suggest splitting nouns when naming classes (e.g. PotentialBuyer instead of Potentialbuyer). Spacing is inconsistent in some classes (househunter_controller.rb#search and houses_controller.rb#show). There are some cases when decomposition and moving functionality into a separate method would make sense. For example in search method of househunter_controller.rb class, if statements could be moved to a separate method with a descriptive name. This would make code more readable. There are instances where code is commented out (e.g. inquirydetails_controller.rb). Removing that commented chunk entirely would make code cleaner. Deleted chunk could always be referenced in git history.  
Code mostly follows good styling guidelines but there are a couple of issues. I would suggest splitting nouns when naming classes (e.g. PotentialBuyer instead of Potentialbuyer). Spacing is inconsistent in some classes (househunter_controller.rb#search and houses_controller.rb#show). There are some cases when decomposition and moving functionality into a separate method would make sense. For example in search method of househunter_controller.rb class, if statements could be moved to a separate method with a descriptive name. This would make code more readable. There are instances where code is commented out (e.g. inquirydetails_controller.rb). Removing that commented chunk entirely would make code cleaner. Deleted chunk could always be referenced in git history.  
Code looks very clean. I did find some commented lines of code though.
Code looks okay, Suggestions for improvements not done.  build still fails   
Code looks okay, Suggestions for improvements not done.  build still fails   
Code looks okay, changes suggested have not been implemented. I wanted to see more comments on "why" this is has been done, which is missing.  Also strings checks for str != '' are still used and not .empty  
Code looks okay, but I found few features missing. As far as code is concerned found admin details hard coded in the code, this is a wrong way to do.   Could have used tables for better alignment    
Code looks okay, and the spec is written in detail. But as mentioned earlier, I'm not in a position to judge due to lack of video or deployment link or even some screenshots proving the work.
Code looks okay, and the spec is written in detail. But as mentioned earlier, I'm not in a position to judge due to lack of video or deployment link or even some screenshots proving the work.
Code looks okay, and the spec is written in detail. But as mentioned earlier, I'm not in a position to judge due to lack of video or deployment link or even some screenshots proving the work.
Code looks good. The first cut for good too.  I still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme
Code looks good. The first cut for good too.  I still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme
Code looks good. The first cut for good too.  I still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme
Code looks good. Namings are also ok. Print statements are also pushed(not expected!).
Code looks good. Namings are also ok. Print statements are also pushed(not expected!).
Code looks good apart from a lot of commented code. If that is written by the team and was not already present, then it should be removed if not used before submitting pull requests.
Code looks good apart from a lot of commented code. If that is written by the team and was not already present, then it should be removed if not used before submitting pull requests.
Code looks fine, but build issue has to be fixed.
Code looks concise. However at few places, indentation is messed up.
Code looks concise. However at few places, indentation is messed up.
Code looks concise. However at few places, indentation is messed up.
code looks clean and neat. UI design looks very good and is elegant. Search functionality for the houses should have been in controllers and not in the model.  
code looks clean and neat. UI design looks very good and is elegant. Search functionality for the houses should have been in controllers and not in the model.  
Code level implementation details are not provided. But, the approach looks clean.
Code level implementation details are not provided. But, the approach looks clean.
Code level details are not covered in this doc. But the high-level approach looks fine to me.
Code level details are not covered in this doc. But the high-level approach looks fine to me.
Code level details are not covered in this doc. But the high-level approach looks fine to me.
Code level details are not covered in the doc. But the changes suggested follow the desired requirements. 
Code is written well without dead or complicated code. DRY principle is followed. I can not see any changes or commits in code after last submission.
Code is written properly. Simple and clean Every function is simple and has distinguishing work. Did not understand the need of creating MVC for search, photos separately.  Many functionalities could have been merged together and made a defined solution. Eg house search function could have been added in House MVC.
Code is written properly. Simple and clean Every function is simple and has distinguishing work. Did not understand the need of creating MVC for search, photos separately.  Many functionalities could have been merged together and made a defined solution. Eg house search function could have been added in House MVC.
Code is written properly with no bad naming conventions. No major code change can be seen after first submission.  Code is DRY. But I could not see color change specific comments in the code. 
Code is well written. Functions are well defined. Some areas where it can be improved is moving the house search logic from controllers to the respective models. 
Code is very neat and readable. I appreciate you attention to following good syntax practices. There is some similar code was exists in the controller action method and the content page method but simple to bring out and make dry. Overall great job.
Code is very neat and readable. I appreciate you attention to following good syntax practices. There is some similar code was exists in the controller action method and the content page method but simple to bring out and make dry. Overall great job.
Code is using Basic Ruby on Rails Structure which by default provides the CRUD Functionalty. But no details of Admin login provided. Also some of the models seem to be missing.
Code is using Basic Ruby on Rails Structure which by default provides the CRUD Functionalty. But no details of Admin login provided. Also some of the models seem to be missing.
Code is using Basic Ruby on Rails Structure which by default provides the CRUD Functionalty. But no details of Admin login provided. Also some of the models seem to be missing.
Code is running and no errors are encountered. However, very few tests have been written and coverage is low. A way to make the testing more robust is to test every function with a known success case and  an edge case or potential failure.
Code is running and no errors are encountered. However, very few tests have been written and coverage is low. A way to make the testing more robust is to test every function with a known success case and  an edge case or potential failure.
Code is running and no errors are encountered. However, very few tests have been written and coverage is low. A way to make the testing more robust is to test every function with a known success case and  an edge case or potential failure.
Code is nicely written and runs well. However, more edge cases should be included. For example, each function should be tested for a known success case and an edge case or potential failure.
Code is nicely written and runs well. However, more edge cases should be included. For example, each function should be tested for a known success case and an edge case or potential failure.
Code is great, usage of SearchController and PotentialBuyerController shows deep understanding of rails as a framework. Great job. But I find following missing  1. In controllers, you will need to put before_action :authenticate_user! 2. Usage of devise for user management is good.  3. Code for Models seems to be missing, House has no entries , validations , relations etc 4. You can use rails_admin for admin account management 5. Gemfile has ref to sqlite impliescode is not deployed on heroku atleast 6. Integrations tests have been written which is good.      
Code is great, usage of SearchController and PotentialBuyerController shows deep understanding of rails as a framework. Great job. But I find following missing  1. In controllers, you will need to put before_action :authenticate_user! 2. Usage of devise for user management is good.  3. Code for Models seems to be missing, House has no entries , validations , relations etc 4. You can use rails_admin for admin account management 5. Gemfile has ref to sqlite impliescode is not deployed on heroku atleast 6. Integrations tests have been written which is good.      
Code is clean and variable names are readable. Need a bit of formatting as some lines are not 'aligned' well. 
Code is clean and variable names are readable. Need a bit of formatting as some lines are not 'aligned' well. 
Code is clean and variable names are readable. Need a bit of formatting as some lines are not 'aligned' well. 
Code is clean and easy to understand. Some unused/unimplemented empty function definitions are there in the files.
Code in the model methods looks very clean. Attribute symbols are appropriately validated and proper constraints are applied to measure uniqueness. The controller code has great parenthesis and bracket use for function calls and assignments. More consistent spacing of functions and function content would aid in the readability of the code. Also, there are a few instances where conditional blocks are empty. If there is no purpose for the block, it should be removed (example found in the static page controller). Overall, the code seems to implement good Ruby style standards.  
Code has been submitted frequently.
Code had a few guideline misses which was noted and suggested by the automated tool on pull request.  
Code had a few guideline misses which was noted and suggested by the automated tool on pull request.  
Code follows standards but variable names can be better and more 'readable'. Another suggestion: declare ALL variables first then use those variables to call methods. When you add/declare variables in between method calls, it looks as though you 'forgot' to declare earlier and added them later. Just a thought !
Code does follow the conventions. Just that the comments could be better explained for the functionallity
Code convention for mail looks good but I found find_participant_emails misleading because it gets email for all participants and not emails for participant
Code climate show 99 issues in the code. Many lines aren't properly aligned. Commented code hasn't been removed.
Code climate show 99 issues in the code. Many lines aren't properly aligned. Commented code hasn't been removed.
Code changes does not follow the DRY principle in atleast two places. Also, the comments in the code are not helpful. All code comments are like "# E1834 Fall 18" which does not explain what is the code does, it only says when the code was added. Such comments may be removed.
Code appears to work. Don't really know what edge cases there could be due to lack of a test plan.
Code appears to work. Don't really know what edge cases there could be due to lack of a test plan.
Clicking on "List of inquiries" broke the application.
Clicking on "List of inquiries" broke the application.
Clicking on "List of inquiries" broke the application.
Clearly defined bugs and problem statements, but no implementation details given. So it is hard to judge this criterion
Clearly defined bugs and problem statements, but no implementation details given. So it is hard to judge this criterion
Clearly defined bugs and problem statements, but no implementation details given. So it is hard to judge this criterion
Clean and nice code. But lack of ReadMe.
class level details are missing but i suspect that can be because this is the first phase doc. they have mentioned use of existing gems that need investigation
class level details are missing but i suspect that can be because this is the first phase doc. they have mentioned use of existing gems that need investigation
class level details are missing but i suspect that can be because this is the first phase doc. they have mentioned use of existing gems that need investigation
class level details are missing but i suspect that can be because this is the first phase doc. they have mentioned use of existing gems that need investigation
Class diagrams are missing. Class diagrams are missing. First flow diagram looks perfect. Second needs some modifications - the instructor login flow should not include a step to set the count limit to 10. This should have been done before only. You should add a step to perform a check to see if the total students count is crossing the allowed limit(10). If yes, then don't add this new student and show some proper error message to the user. If no, then add the student.
Class diagrams are missing. Class diagrams are missing. First flow diagram looks perfect. Second needs some modifications - the instructor login flow should not include a step to set the count limit to 10. This should have been done before only. You should add a step to perform a check to see if the total students count is crossing the allowed limit(10). If yes, then don't add this new student and show some proper error message to the user. If no, then add the student.
Class diagrams are missing. Class diagrams are missing. First flow diagram looks perfect. Second needs some modifications - the instructor login flow should not include a step to set the count limit to 10. This should have been done before only. You should add a step to perform a check to see if the total students count is crossing the allowed limit(10). If yes, then don't add this new student and show some proper error message to the user. If no, then add the student.
Class diagrams are missing. Class diagrams are missing. First flow diagram looks perfect. Second needs some modifications - the instructor login flow should not include a step to set the count limit to 10. This should have been done before only. You should add a step to perform a check to see if the total students count is crossing the allowed limit(10). If yes, then don't add this new student and show some proper error message to the user. If no, then add the student.
Class and variables are name correctly. get_bookmark_rating_response_map is an not an apt name for a function. The word bookmark can be omitted in function and variable names inside the bookmark controller. .when a student requests a bookmark it should show a bookmark test is failing
Class and variables are name correctly. get_bookmark_rating_response_map is an not an apt name for a function. The word bookmark can be omitted in function and variable names inside the bookmark controller. .when a student requests a bookmark it should show a bookmark test is failing
Class and variables are name correctly. get_bookmark_rating_response_map is an not an apt name for a function. The word bookmark can be omitted in function and variable names inside the bookmark controller. .when a student requests a bookmark it should show a bookmark test is failing
CI Fails
Checks aren't successful.
Checks aren't successful.
Checked the following functionalities through UI:1) Log in as instructor. - checked2) Got to profile page. - checked3) Check the box that says 'Send me copies of all the emails'. -checked4) Log in as 'student2064' with password 'password'. - checked 5) Trigger any action that may result in mail being sent to the student. -checked6) Log in to instructor's email to check if copy of the same email has been received. --could not check if emails are being sent/received . 1) Login as a student and send an invitation to an invitee. -checked2. The invitee should get an mail on your invitation. - could not check mailing 3. Login as the invitee and accept/decline the invitation. - checked4. The inviter should get a mail on the response. - could not check  the mailing 
Checked the following functionalities through UI:1) Log in as instructor. - checked2) Got to profile page. - checked3) Check the box that says 'Send me copies of all the emails'. -checked4) Log in as 'student2064' with password 'password'. - checked 5) Trigger any action that may result in mail being sent to the student. -checked6) Log in to instructor's email to check if copy of the same email has been received. --could not check if emails are being sent/received . 1) Login as a student and send an invitation to an invitee. -checked2. The invitee should get an mail on your invitation. - could not check mailing 3. Login as the invitee and accept/decline the invitation. - checked4. The inviter should get a mail on the response. - could not check  the mailing 
Checked on a few tests tuned out to be handled. If an admin deletes either a house/company/user all the dependencies are deleted.
Changes were committed only at the last moment at once. Please commit the changes as soon as development is complete and the code is tested.
Changes were committed only at the last moment at once. Please commit the changes as soon as development is complete and the code is tested.
Changes to application continued throughout the second round of project submissions. Many of the commits deal with the adding additional functionality to the company controller, as well as, additions to the ReadMe. I can see that good work was made toward implementing missing functionality from the first round of submission.
Changes proposed by authors are good. But, they are explained in detail.
Changes proposed are adequate, but without any reference to code or design diagrams its hard to tell if the proposed solution will work. It is always better to investigate the code instead of writing states such as this "Maybe the legacy code is in two places hence the two calls"
Changes proposed are adequate, but without any reference to code or design diagrams its hard to tell if the proposed solution will work. It is always better to investigate the code instead of writing states such as this "Maybe the legacy code is in two places hence the two calls"
changes could be explained in details. i think that is missing a bit. 
changes could be explained in details. i think that is missing a bit. 
changes could be explained in details. i think that is missing a bit. 
Changes are suggested in a well manner but could have been explained in more details.
Changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement. It yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution.  
Changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement. I say this because even though they have detailed diagrams and solutions in place, they have left important parts like tests and implementation empty. It yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution.    
Changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement.  It yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution.  They have even yet to work on the most important part that is figuring out the solution. 
Changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement.  It yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution.  They have even yet to work on the most important part that is figuring out the solution. 
Changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement.  It yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution.  They have even yet to work on the most important part that is figuring out the solution. 
Changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement.  It yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution.  They have even yet to work on the most important part that is figuring out the solution. 
Changes are not currently elaborated upon. There is a section labeled 'implementation" that will house these details.
Changes are explained but are not very descriptive. The document is not much changed since the last submission
Changes are explained but are not very descriptive. The document is not much changed since the last submission
Certain test cases are not possible to test due to the way edit realtor is implemented. The website takes real estate company id and not name for update. Being a user I wouldn't know the company id and hence won't be able to perform the right test
Certain test cases are not possible to test due to the way edit realtor is implemented. The website takes real estate company id and not name for update. Being a user I wouldn't know the company id and hence won't be able to perform the right test
Certain basic functionalities realted to roles and switching roles aren't working. The realtor was being able to create a new company and new inquiry, which as far as I know is not in the realtor functionality. The inquiry listing for realtor link fails on click on show of any inquiry.  
Certain basic functionalities realted to roles and switching roles aren't working. The realtor was being able to create a new company and new inquiry, which as far as I know is not in the realtor functionality. The inquiry listing for realtor link fails on click on show of any inquiry.  
Cases mentioned seem to be working fine. Can be a bit descriptive about the steps though.
Cases mentioned seem to be working fine. Can be a bit descriptive about the steps though.
Cases mentioned seem to be working fine. Can be a bit descriptive about the steps though.
Cant see a rspec folder.
Cannot upload the image to the house. And a realtor can create an inquiry which they should not. Also, the realtor should able to see the potential buyer for the house under their company, not only the house they create. The more button in the interest list does not work. 
Cannot test the work as application link is not provided. They have not provided a screencast for working code
Cannot test the code as the application is not opening and the videos uploaded are binary files.
Cannot test the code as the application is not opening and the videos uploaded are binary files.
Cannot sign in as a Realtor. After signing in as a Househunter, you can view realtors list.   
Cannot run the app
Cannot perform manual testing, as application is not deployed or the link is not provided. However, checked from the screencast and issue seems to be resolved
Cannot log in as admin so can't test deletion of a company.  realtor is not able to add a company. What will happen if a realtor changes his/her real estate company? Not able to add house so can't be tested.
Cannot log in as admin so can't test deletion of a company.  realtor is not able to add a company. What will happen if a realtor changes his/her real estate company? Not able to add house so can't be tested.
Cannot log in as admin so can't test deletion of a company.  realtor is not able to add a company. What will happen if a realtor changes his/her real estate company? Not able to add house so can't be tested.
cannot find test plan.
cannot find test plan.
Cannot delete company. Reason cited is 'dependent realtor exist'. Realtor is able to delete houses that he created when he was in company A, after changing to company B. When hunter is deleted by admin and inquiries are checked, the page doesnt show up. (deployment error)   Edge cases Company cannot be created without filling all details. This is implemented. Session control : When user signs out from a page and then goes back, the profile page should not be shown (as he is signed out). This should be considered.
Cannot delete company. Reason cited is 'dependent realtor exist'. Realtor is able to delete houses that he created when he was in company A, after changing to company B. When hunter is deleted by admin and inquiries are checked, the page doesnt show up. (deployment error)   Edge cases Company cannot be created without filling all details. This is implemented. Session control : When user signs out from a page and then goes back, the profile page should not be shown (as he is signed out). This should be considered.
Cannot check. Link 
Cannot check. Link 
Cannot be verified since no deployment is provided.
Cannot Access App
Can't test as the link to the deployed application is not working(Unable to login with correct user credentials. Even after giving forgot password, did not receive password reset email) 
Can't test as the link to the deployed application is not working(Unable to login with correct user credentials. Even after giving forgot password, did not receive password reset email) 
Can't test as the link to the deployed application is not given nor the screencast video link is provided. Please include either of them.
Can't test as the link to the deployed application is not given nor the screencast video link is provided. Please include either of them.
Can't test as the link to the deployed application is not given nor the screencast video link is provided. Please include either of them.
Can't switch between house hunter and user. Anyone can create a house. viewing inquiries directs to creating a house. Admin not configured(that I can tell). Creating/changing real estate companies isn't implemented.
can't say in what file they'll make change as its not specified in the document. You can add what changes you'll be making and explain a little more for better understanding.
can't say in what file they'll make change as its not specified in the document. You can add what changes you'll be making and explain a little more for better understanding.
can't say in what file they'll make change as its not specified in the document. You can add what changes you'll be making and explain a little more for better understanding.
can't say in what file they'll make change as its not specified in the document. You can add what changes you'll be making and explain a little more for better understanding.
Can't say as code is not visible.
Can't say as code is not visible.
Can't say as code is not visible.
Can't run the application.
can't login as admin in the REDAME flie.
Can't find the pull request to comment on this
Can't find the Pull Request
Can't find the Pull Request
Can see the commits in a single shot on few particular days. Yes the team has committed changes in round 2
Can see the commits in a single shot on few particular days. Yes the team has committed changes in round 2
Can not tell without a git link.
Can not see new commits after last submission. 2 Issues are resolved out of 3 issues given in problem statement.  
can not login as an admin
can not log in as admin
Can not load the online page.
Can not find pull request link.
Can not find pull request link.
Can not find any video or link or Ip address link to manually test the changes. I would request team to deploy the changes so that we can test the system partially.
Can not find any video or link or Ip address link to manually test the changes. I would request team to deploy the changes so that we can test the system partially.
Can not find any video or link or Ip address link to manually test the changes. I would request team to deploy the changes so that we can test the system partially.
Can not create new house.
Can not create new house.
Can not create new house.
Can elaborate more on the problem statement and the approach that you are planning to take
Can elaborate more on the problem statement and the approach that you are planning to take
Build says the overall coverage decreased but the coverage of the  Test has increased.
Build passed. codeclimate - 7 issues to fix. 2/3 checks were passed. Issues seem trivial.
Build pass was failed in Travis CI.
Build pass was failed in Travis CI.
build not pass in travis ci.
build not pass in travis ci.
Build needs to be fixed. Then its ready for production.
Build issues to be fixed. This pull request is not in "ready to merge" state.
Build isn't passing. Write up isn't passable. No screenshots or explaination in write up of what you h=are doing and why.
Build isn't passing. Write up isn't passable. No screenshots or explaination in write up of what you h=are doing and why.
Build is not passed. Build failed Travis CI. Team can work to fix suggestion given on the pull request. 
Build is failing. Correct it by understanding the reason. Good job on Ruby standards for the naming convention.
Build is failing, they should solve that issue, then it is ready for production.
Build is failing, they should solve that issue, then it is ready for production.
Build is failing probably because they have pushed changes few extra changes in schema.rb which I don't think is required for this project.
Build is failing in Travis CI
Build fails. pls check the same. There are no conflicts with the mail branch. 
Build fails. pls check the same. There are no conflicts with the mail branch. 
Build fails. pls check the same. There are no conflicts with the mail branch. 
Build fails, pls look into it.  BookmarkRatingResponseMap has been replaced by BookmarkRatingQuestionnaire but the earlier naming convention just by looking at the name let the reader understand the data structure being used. I would have liked similar approach here.    
Build fails, pls look into it.  BookmarkRatingResponseMap has been replaced by BookmarkRatingQuestionnaire but the earlier naming convention just by looking at the name let the reader understand the data structure being used. I would have liked similar approach here.    
Build fails, pls look into it.  BookmarkRatingResponseMap has been replaced by BookmarkRatingQuestionnaire but the earlier naming convention just by looking at the name let the reader understand the data structure being used. I would have liked similar approach here.    
build fails that needs to be investigated , once that is done i dont see why the project cannot be merged with the mail branch. Loot of good work has been done and merge with the main branch would bring the work to fruition.  
build fails that needs to be investigated , once that is done i dont see why the project cannot be merged with the mail branch. Loot of good work has been done and merge with the main branch would bring the work to fruition.  
Build fails and there are aa plethora of issues (121 by code climate) and several warnings.
Build fails and there are aa plethora of issues (121 by code climate) and several warnings.
Build fails and there are aa plethora of issues (121 by code climate) and several warnings.
Build failing due to bad test. Log shows one error for now. Also, I have a feeling tests on some projects aren't able to run all test- the coverage log for this PR shows that none of the files are getting covered: https://coveralls.io/jobs/41685719
Build failing due to bad test. Log shows one error for now. Also, I have a feeling tests on some projects aren't able to run all test- the coverage log for this PR shows that none of the files are getting covered: https://coveralls.io/jobs/41685719
Build does not pass. Also, code climate issues are observed.
Build did pass successfully. Could have written version specific code to avoid errors
Build did not pass. Version compatible code can be written
Build did not pass Travis CI but there are a lot of warnings and issues that have not been fixed. Many of them are trivial and easy to fix. 
Build did not pass Travis CI but there are a lot of warnings and issues that have not been fixed. Many of them are trivial and easy to fix. 
build did not pass in travis ci.
Both the specs fails spec/controllers/student_task_controller_spec.rb fails spec/features/airbrake_expection_errors_feature_tests_spec.rb  
Both the specs fails spec/controllers/student_task_controller_spec.rb fails spec/features/airbrake_expection_errors_feature_tests_spec.rb  
Both the specs fails spec/controllers/student_task_controller_spec.rb fails spec/features/airbrake_expection_errors_feature_tests_spec.rb  
Both the project purpose and the project design are not very well stated.  In terms of project purpose, although I was expecting it to appear in the introduction part, it actually did not. The part just stated a high-level abstract goal, being transmitting the conflicting message to the grader. But it's not at all stated in detail. So I went to the proposed solution to find the project purpose. In the proposed solution section, Neither project purpose nor project design was well put. It talks about changes that are expected to be implemented in the file. But they are not talked about in detail. This sentence: "loop through each review not for calculating the average but to compare the new review score with each review score"    seems to be not so easy to be understood. The project design seems also to be in the proposed solution section. There's no detailed modification plan, workflow statement, or anything.  The testing plan looks succinct and helpful enough for a tester to use and check the functionality. 
Both the project purpose and the project design are not very well stated.  In terms of project purpose, although I was expecting it to appear in the introduction part, it actually did not. The part just stated a high-level abstract goal, being transmitting the conflicting message to the grader. But it's not at all stated in detail. So I went to the proposed solution to find the project purpose. In the proposed solution section, Neither project purpose nor project design was well put. It talks about changes that are expected to be implemented in the file. But they are not talked about in detail. This sentence: "loop through each review not for calculating the average but to compare the new review score with each review score"    seems to be not so easy to be understood. The project design seems also to be in the proposed solution section. There's no detailed modification plan, workflow statement, or anything.  The testing plan looks succinct and helpful enough for a tester to use and check the functionality. 
Both the project purpose and the project design are not very well stated.  In terms of project purpose, although I was expecting it to appear in the introduction part, it actually did not. The part just stated a high-level abstract goal, being transmitting the conflicting message to the grader. But it's not at all stated in detail. So I went to the proposed solution to find the project purpose. In the proposed solution section, Neither project purpose nor project design was well put. It talks about changes that are expected to be implemented in the file. But they are not talked about in detail. This sentence: "loop through each review not for calculating the average but to compare the new review score with each review score"    seems to be not so easy to be understood. The project design seems also to be in the proposed solution section. There's no detailed modification plan, workflow statement, or anything.  The testing plan looks succinct and helpful enough for a tester to use and check the functionality. 
Both the project purpose and the project design are not very well stated.  In terms of project purpose, although I was expecting it to appear in the introduction part, it actually did not. The part just stated a high-level abstract goal, being transmitting the conflicting message to the grader. But it's not at all stated in detail. So I went to the proposed solution to find the project purpose. In the proposed solution section, Neither project purpose nor project design was well put. It talks about changes that are expected to be implemented in the file. But they are not talked about in detail. This sentence: "loop through each review not for calculating the average but to compare the new review score with each review score"    seems to be not so easy to be understood. The project design seems also to be in the proposed solution section. There's no detailed modification plan, workflow statement, or anything.  The testing plan looks succinct and helpful enough for a tester to use and check the functionality. 
Both the problems and proposed changes are clearly detailed. My only suggestion is to put the description of the issue being solved in the same location as the solution to it, otherwise one has to scroll around the page to figure out which problem is being fixed.
Both the problems and proposed changes are clearly detailed. My only suggestion is to put the description of the issue being solved in the same location as the solution to it, otherwise one has to scroll around the page to figure out which problem is being fixed.
before deploying the project onto the production server, this projects asks  for some attention. new test cases should be added to the project. I can't say much on that.
before deploying the project onto the production server, this projects asks  for some attention. new test cases should be added to the project. I can't say much on that.
Because they did not provide a link for me to test, i am not sure if their code has bugs, so i don't know if this code is ready to be deployed onto server.
Because of the merge conflict in gemlock file, it is not merged and travis CI has not run.  i believe they ran bundle update and committed the file which should not happen as it updates the dependencies and might break some features.
basically, it is good. however, i cannot find the test paln, and some explanation is not complete.
basically, it is good. however, i cannot find the test paln, and some explanation is not complete.
basically, it is good. however, i cannot find the test paln, and some explanation is not complete.
Basic tests are written. Could improve by adding specific application logic.
Basic tests are written. Could improve by adding specific application logic.
Basic Tests are present. Not custom tests though
Basic navigation is missing. For example, Once a user click on the edit profile and tries to navigate, its difficult to return to home page.  There are no details available in the readme file to help with the application flow.
Basic navigation is missing. For example, Once a user click on the edit profile and tries to navigate, its difficult to return to home page.  There are no details available in the readme file to help with the application flow.
Basic functionality seems to be working. But no explicit test cases found.
Basic functionality and navigation is missing in the project.
Basic functionality and navigation is missing in the project.
Basic functionalities seem to be working now. I could see that there have been many functionalities been added in round2 which weren't present in round 1. Though, certain functionalities are still not present. eg. realtor joining a real estate company.
Basic functionalities missing
Basic functionalities are working in the sense that able to add users but many features are missing. Unable to use same email id for realtor and househunter  Admin is not able to edit house records Realtor cant view other realtors Real Estate Company info not there for any house therefore it invalidates many requirements
Basic functionalities are working in the sense that able to add users but many features are missing. Unable to use same email id for realtor and househunter  Admin is not able to edit house records Realtor cant view other realtors Real Estate Company info not there for any house therefore it invalidates many requirements
Basic functionalities are working fine Except few. Team could work on below functionalities. 1. System crashes when realtor tries to create house. 2. House hunter can create company. 3. When clicked on show company, system crashes. 4. Passwords are visible.      
Basic Function still have some minor problem. Like a househunter can view the potential buyers and when click view the inquiry, the web page return an error.
Basic Function still have some minor problem. Like a househunter can view the potential buyers and when click view the inquiry, the web page return an error.
Based on the mockups, it seems like the designs will fit in well with th expertiza system. I'd like to see more professional mockups or descriptions of the new UIs, but I understand that might not be feasible yet.
Bad names like "review_num" have been used.
Automated and manual tests have been added and coverage has increased by a very tiny amount.
Authors have given a brief description of the subclass of Questionnaire named SupplementaryReviewQuestionnaire that they are going to implement but it would have been better if they have provided how and what model dependency needs to implemented to achieve the goal.
Authors have given a brief description of the subclass of Questionnaire named SupplementaryReviewQuestionnaire that they are going to implement but it would have been better if they have provided how and what model dependency needs to implemented to achieve the goal.
Authors have followed Ruby style guide. Test cases have not been discussed in the write-up.
Authors have followed Ruby style guide. Test cases have not been discussed in the write-up.
Authors have followed Ruby style guide. Test cases have not been discussed in the write-up.
Authors have converted test plan into an appropriate test case. Suggestion:   The authors can improve the writeup if they elaborate more on the testing approach used for the newly added code.
Authors have clearly explained what needs to be done and how it would be done.
Authors describe the strategy they utilized for tackling the project and the detailed mechanics of each test case. However, there is no mention of specific design decisions or patterns that were used in the implementation. My suggestion is for the team to elaborate on technical decisions made for simplifying test cases for example the majority of mock objects is created at the beginning before every 'it' statement.
Authors describe the strategy they utilized for tackling the project and the detailed mechanics of each test case. However, there is no mention of specific design decisions or patterns that were used in the implementation. My suggestion is for the team to elaborate on technical decisions made for simplifying test cases for example the majority of mock objects is created at the beginning before every 'it' statement.
Authors could use empty? instead of checking unityId != ''. Another thing that the authors have taken care of ttml mails but what if the somone needs to non-html mails.  attribute copy_of_all_emails does not look like a good name, it would be nice if they could rename it to email_copy_all or so this help in reader understand as well as in ide intellisense.  Code coverage has decreased     
Authors could use empty? instead of checking unityId != ''. Another thing that the authors have taken care of ttml mails but what if the somone needs to non-html mails.  attribute copy_of_all_emails does not look like a good name, it would be nice if they could rename it to email_copy_all or so this help in reader understand as well as in ide intellisense.  Code coverage has decreased     
authors adequately explained the changes to be made to the system but it would have been better if they have provided how and what model dependency needs to be implemented to achieve the goal.  
authors adequately explained the changes to be made to the system but it would have been better if they have provided how and what model dependency needs to be implemented to achieve the goal.  
Author has not proposed any changes.
Author has not proposed any changes.
Author has not proposed any changes.
Author has not proposed any changes.
Author does not explain the approach they are going to use. Team should add project purpose, project design to show case how they are going to tackle the issue.
Author could have provided the design pattern they need to implement.
Author could have provided the design pattern they need to implement.
Author could have provided the design pattern they need to implement.
At several places, the code used a lot of nested if else statements and some methods were very long. These lines could have been refactored. Also more comments are needed that explain what a method/variable does (just good naming is not enough). The code is DRY compliant and follows style pattern well.
As this rubric calls for the need of a section - Test Plan, I suggest adding it and including the work done in that section along with why a particular test has been written.
As this rubric calls for the need of a section - Test Plan, I suggest adding it and including the work done in that section along with why a particular test has been written.
As this rubric calls for a section called Test Plan, I suggest adding it and rearranging the wiki content, so that a description of the tests is given in this section
As this rubric calls for a section called Test Plan, I suggest adding it and rearranging the wiki content, so that a description of the tests is given in this section
As this rubric calls for a section called Test Plan, I suggest adding it and rearranging the wiki content, so that a description of the tests is given in this section
As this project is in the early stages of development, the UI is minimal. The title is prominently displayed as a header on the home page and subsequent pages to clearly indicate what this application is "Real Estate manager". The login and signup links are clear as to purpose; however, the intent in the presence of the words "Hello World" beside them is unclear. Additionally, the login and signup page functionalities are easily interpreted. I would suggest that the user profile actually display what kind of user they are rather than a number that only has meaning to the system, as well as, a log out link/button in the header for a user as he/she traversed your application. The README file only contains the fact that there is no pre-configured administrator. I would recommend including the suggested context from the Ruby generator and the project write up.
As they have provided a very high-level idea of their proposed solution, there is no pseudocode or any class diagram which helps explain the design adequately. You can improvise the design by including flow of the methods, to highlight how and where will your new method come into picture. However, looking at the intended modifications, it seems that the changes follow DRY principles, and changes are not unnecessary. There is also no need of using any design patterns as per the required changes.
As they have provided a very high-level idea of their proposed solution, there is no pseudocode or any class diagram which helps explain the design adequately. You can improvise the design by including flow of the methods, to highlight how and where will your new method come into picture. However, looking at the intended modifications, it seems that the changes follow DRY principles, and changes are not unnecessary. There is also no need of using any design patterns as per the required changes.
As they have provided a very high-level idea of their proposed solution, there is no pseudocode or any class diagram which helps explain the design adequately. You can improvise the design by including flow of the methods, to highlight how and where will your new method come into picture. However, looking at the intended modifications, it seems that the changes follow DRY principles, and changes are not unnecessary. There is also no need of using any design patterns as per the required changes.
As they have provided a very high-level idea of their proposed solution, there is no pseudocode or any class diagram which helps explain the design adequately. You can improvise the design by including flow of the methods, to highlight how and where will your new method come into picture. However, looking at the intended modifications, it seems that the changes follow DRY principles, and changes are not unnecessary. There is also no need of using any design patterns as per the required changes.
As there are UI changes test plan is not required but a basic stepwise description of how to see the required output can be helpful
As there are UI changes test plan is not required but a basic stepwise description of how to see the required output can be helpful
As the design document section is missing I cannot review the quality of their proposed design.
As the design document section is missing I cannot review the quality of their proposed design.
As the design document section is missing I cannot review the quality of their proposed design.
As suggested by the Mozilla team themselves, a few errors need to be rectified. The final code also needs to be formatted using rustfmt to make it consistent with the design
As suggested by the Mozilla team themselves, a few errors need to be rectified. The final code also needs to be formatted using rustfmt to make it consistent with the design
As such the project description does not ask for any visualizations.  But visualization in terms of UML diagram or a CRC cards would have been a helpful way to make the description better.
As such the project description does not ask for any visualizations.  But visualization in terms of UML diagram or a CRC cards would have been a helpful way to make the description better.
As such the project description does not ask for any visualizations.  But visualization in terms of UML diagram or a CRC cards would have been a helpful way to make the description better.
As stated on previous comment, the design needs more explanation. 
As stated above, the writeup has a missing test plan which could be added by the team for the second iteration of the submission.
As stated above, the team has not explained any design pattern they are following. However they have mentioned all the code changes they are making for this functionality implementation. The code snippets they have included is very useful to understand the exact code changes they are making and the files which are getting impacted. This would help the future developers to understand the  code in a simple manner.
As stated above, the team has not explained any design pattern they are following. However they have mentioned all the code changes they are making for this functionality implementation. The code snippets they have included is very useful to understand the exact code changes they are making and the files which are getting impacted. This would help the future developers to understand the  code in a simple manner.
As stated above, the team has not explained any design pattern they are following. However they have mentioned all the code changes they are making for this functionality implementation. The code snippets they have included is very useful to understand the exact code changes they are making and the files which are getting impacted. This would help the future developers to understand the  code in a simple manner.
As stated above, the team has not explained any design pattern they are following. However they have mentioned all the code changes they are making for this functionality implementation. The code snippets they have included is very useful to understand the exact code changes they are making and the files which are getting impacted. This would help the future developers to understand the  code in a simple manner.
As stated above, the team has not explained any design pattern they are following. However they have mentioned all the code changes they are making for this functionality implementation. The code snippets they have included is very useful to understand the exact code changes they are making and the files which are getting impacted. This would help the future developers to understand the  code in a simple manner.
As stated above, the team has not explained any design pattern they are following. However they have mentioned all the code changes they are making for this functionality implementation. The code snippets they have included is very useful to understand the exact code changes they are making and the files which are getting impacted. This would help the future developers to understand the  code in a simple manner.
As stated above, it is difficult to understand the team's own solution to the given issue. The team could provide the paths to the files that they think should be changed. It would increase the readability of the documentation.
As stated above all the references needs to be checked as signup sheet controller is populating the database and every field should be available to maintain consistency.
As soon as they fix code climate issue, and separate each test cases with more it '......' do, it is good to deploy. 
As soon as they fix code climate issue, and separate each test cases with more it '......' do, it is good to deploy. 
As said in the previous review, though the UI mockup explains the functionalities, it could have been more legible.
As said in the previous review, though the UI mockup explains the functionalities, it could have been more legible.
As per the requirement document, test cases are not required.
As of now, I'm not able to sign in as admin with preconfigured account, I can't comment om test cases.  
As of now, I'm not able to sign in as admin with preconfigured account, I can't comment om test cases.  
As of now, I'm not able to sign in as admin with preconfigured account, I can't comment om test cases.  
As of now, all relationships have been commented out, I am not sure why this has been done.  
As mentioned previously, the UI mockups are decent but don't necessarily convey the overall design concept to those not familiar with the expertiza system. 
As mentioned previously, the UI mockups are decent but don't necessarily convey the overall design concept to those not familiar with the expertiza system. 
As mentioned no design diagrams are present.
As mentioned no design diagrams are present.
As mentioned no design diagrams are present.
As mentioned in the document, some of the proposed changes are not DRY, which I would like to see improved if possible.
As mentioned in the above comment, Add these describe and context statements to further comment on the purpose of your test cases. This makes it easier to understand the why the test is there, I also find that it helps to clarify to the developer that the test is necessary.
As mentioned in the above comment, Add these describe and context statements to further comment on the purpose of your test cases. This makes it easier to understand the why the test is there, I also find that it helps to clarify to the developer that the test is necessary.
As mentioned in my previous review, I cannot understand the back-end design handling. Which controller and view files are being modified? or Will new methods or .erb files be added? Any plans to use third-party gems or API's?
As mentioned earlier, they have not considered testing at all at this point and hence, we are assuming that they are to implement testing at a further point in the project. Of course, mentioning an approach to the testing framework and how they would be going about it would have helped. Moreover, the absence of a wiki doc only adds to the grievances of being unable to decipher the problem statements. 
As mentioned earlier, they have not considered testing at all at this point and hence, we are assuming that they are to implement testing at a further point in the project. Of course, mentioning an approach to the testing framework and how they would be going about it would have helped.   
As mentioned earlier, they have not considered testing at all at this point and hence, we are assuming that they are to implement testing at a further point in the project. Of course, mentioning an approach to the testing framework and how they would be going about it would have helped. 
As mentioned earlier, they have not considered testing at all at this point and hence, we are assuming that they are to implement testing at a further point in the project. Of course, mentioning an approach to the testing framework and how they would be going about it would have helped. 
As mentioned earlier, the flowchart and simple ER diagram are helpful, but I believe these changes would benefit greatly from having low-fi sketches, and actor diagrams instead of flow-charts.
As mentioned earlier, the flowchart and simple ER diagram are helpful, but I believe these changes would benefit greatly from having low-fi sketches, and actor diagrams instead of flow-charts.
As mentioned designs are well depicted and no Mock UI can be found but at this stage, UI is not a priority for the project.
As mentioned before the document is good for most of the part except that key aspects of the implementation are missing which leaves me wondering about how exactly they are going to do this. I would like more details on this so called 'API'
As mentioned before the document is good for most of the part except that key aspects of the implementation are missing which leaves me wondering about how exactly they are going to do this. I would like more details on this so called 'API'
As mentioned above, they can make it better by fixing some issues.
As mentioned above, the document lacks a lot of details. The proposed changes have not been mentioned.
As mentioned above, the document lacks a lot of details. The proposed changes have not been mentioned.
As mentioned above, the design part is pretty weak for a writeup, and needs to be further worked upon.
As mentioned above, the design part is pretty weak for a writeup, and needs to be further worked upon.
As mentioned above, it lacks some depth in this.
As mentioned above the flow diagram should be completely modified 
As mentioned above the flow diagram should be completely modified 
As me tioned above, the design is not completed,  and gives only a high level view. So, answer to this question cannot be justified using the given writeup.
as long as they fix 3 indentation issues for code climate, they are good to go. 
as long as they fix 3 indentation issues for code climate, they are good to go. 
as long as they fix 3 indentation issues for code climate, they are good to go. 
As its a test project, deployment to production may not be applicable. The code can be merged, but i would suggest few changes to DRY the code as the test seems slow, which is a scope for improvement.
As It did not pass the test, it is not ready. For a future team, end of this project should be a good starting place.
As I said early the images are very very large and don't fit unless I have the wiki full screen. Also finding the changes from the original is a bit tricky. 
As given in wiki for their test plan,  The admin tests include building and deleting both Administrator and Instructor accounts using Capybara for testing the front-end web functionality. it 'delete instructor successfully' do it 'delete admin successfully' do To test the role creation, Capybara was again used to check that the web page did not have any button for "New Role" and that navigating to the page manually resulted in an error. it 'should not create a new role and redirect to index page when "new" method is called' do.   Although they havent explained the edge cases and negative inputs in the wiki, their test cases cover whatever has been discussed
As for the designs proposed by the authors it proves to be substantial since there is a good amount of Design aspect in their doc.  Sure, they have defined an application flow, but that is all there is to it.  1. Nothing about adding a method to any class has been suggested. Implementation section is left blank.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.    
As for the designs proposed by the authors it proves to be a redundant check since there is a minimal amount of Design aspect in their doc.  They haven't even defined an application flow.  1. Nothing about adding a method to any class has been suggested. As per them most important things are going to be given in the final doc design.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.
As for the designs proposed by the authors it proves to be a redundant check since there is a minimal amount of Design aspect in their doc.  They haven't even defined an application flow.  1. Nothing about adding a method to any class has been suggested. As per them most important things are going to be given in the final doc design.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.
As for the designs proposed by the authors it proves to be a redundant check since there is a minimal amount of Design aspect in their doc.  They haven't even defined an application flow.  1. Nothing about adding a method to any class has been suggested. As per them most important things are going to be given in the final doc design.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.
As for the designs proposed by the authors it proves to be a redundant check since there is a minimal amount of Design aspect in their doc.  They haven't even defined an application flow.  1. Nothing about adding a method to any class has been suggested. As per them most important things are going to be given in the final doc design.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.
As for the designs proposed by the authors it proves to be a redundant check since there is a minimal amount of Design aspect in their doc.  Sure, they have defined an application flow, but that is all there is to it.  1. Nothing about adding a method to any class has been suggested. Only a simple formula for composite score has been written.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.
As for the designs proposed by the authors it proves to be a redundant check since there is a minimal amount of Design aspect in their doc.  Sure, they have defined an application flow, but that is all there is to it.  1. Nothing about adding a method to any class has been suggested. Only a simple formula for composite score has been written.  2. The design hasn't been implemented to the depth to make it a code let alone make it smelly.  3. Nothing mentioned about the design to make it complicated and the piece of code which they would delve into to ascertain of any pre-existing gems for simplification.  4. This too is hard to reach a conclusion on since not enough details to answer it with certainty.  5. Yes. Absolutely, a much more thorough investigation should be carried out and relevant previous work exploration with help solve the cause.
As explained in the test plan, rspec test is not implemented.
As a realtor, i tried to list a house with no basement, but it won't let me save it saying that an error is prohibiting me. It says basement is blank, when i clearly am selecting the no option. when i changed it to yes, it saved fine   As an admin I can't see potential buyer list for houses  
As a realtor, i tried to list a house with no basement, but it won't let me save it saying that an error is prohibiting me. It says basement is blank, when i clearly am selecting the no option. when i changed it to yes, it saved fine   As an admin I can't see potential buyer list for houses  
As a hunter, I get a "View house inquiries" button but the system crashes when I click on it.
As a house hunter I could edit houses. Also, anyone can create a company, and a realtor cannot create a company before signing up. A realtor could not submit a reply to an inquiry. A realtor could not drop his or her company and could list a house without choosing a company. Last, table IDs are all over the site which is confusing and not helpful to the user. These IDs should not appear to the user or have to be used to create new entities.
As a house hunter I could edit houses. Also, anyone can create a company, and a realtor cannot create a company before signing up. A realtor could not submit a reply to an inquiry. A realtor could not drop his or her company and could list a house without choosing a company. Last, table IDs are all over the site which is confusing and not helpful to the user. These IDs should not appear to the user or have to be used to create new entities.
Application is deployed on Heroku, but the user interface does not compliant with the requirement(your home page contains house information and search function before user signing in). Also it is not described in the README file.
Application is deployed on Heroku, but the user interface does not compliant with the requirement(your home page contains house information and search function before user signing in). Also it is not described in the README file.
Application flow is present and done well. UML diagrams need to be added.
Application flow is present and done well. UML diagrams need to be added.
Application errors out in edge cases.  Deleting house shows error. User deletion throws an error.
App crashes when I try to create a RealEstateCompany App crashes when I try to create a House, etc App crashes when I try to add multiple Realtors into a Company
App crashes if I test any of these mentioned cases
Apart from the ones that are generated during scaffold, there are no new test cases added to test the application. 
Apart from the ones that are generated during scaffold, there are no new test cases added to test the application. 
Apart from the login functionality nothing is done. Commit ID : 7fe864078b219bebacc0046b8f45c6e25cc1544c
Apart from some code-climate change, the code seems to be ready to merged
Apart from some code-climate change, the code seems to be ready to merged
An unnecessary commit has been performed because  of which build has failed, and i think it wasn't required as already code had 100% coverage. You should check that out, it just an indentation issue i think. Format it using rubymine and push, it should work.  A shorter video to explain the work has been added as well. 
An unnecessary commit has been performed because  of which build has failed, and i think it wasn't required as already code had 100% coverage. You should check that out, it just an indentation issue i think. Format it using rubymine and push, it should work.  A shorter video to explain the work has been added as well. 
An unnecessary commit has been performed because  of which build has failed, and i think it wasn't required as already code had 100% coverage. You should check that out, it just an indentation issue i think. Format it using rubymine and push, it should work.  A shorter video to explain the work has been added as well. 
An old test case fails. Looks like it was broken before and therefore not a result of your changes
An exception occurred when replying to an inquiry. An inquiry could not be deleted by a house hunter.
Although what changes are to be made is explained, how they are going to be made isn't explained. However, there is no Ruby code involved just CSS styling so applying appropriate principles and patterns does not really apply in this case.   
Although there aren't too many commits, The team does seem to have been updating their git in a continuous manner. 
Although their documentation shows screenshots and their app is deployed on VCL, there was no testing plan/ how to test on application. There was no screencast too. So it poses a difficulty on how to see. But from the screenshots on the documentation, the features seem to work good.
Although their documentation shows screenshots and their app is deployed on VCL, there was no testing plan/ how to test on application. There was no screencast too. So it poses a difficulty on how to see. But from the screenshots on the documentation, the features seem to work good.
Although their documentation shows screenshots and their app is deployed on VCL, there was no testing plan/ how to test on application. There was no screencast too. So it poses a difficulty on how to see. But from the screenshots on the documentation, the features seem to work good.
Although the write-up explains the things clearly, visual aids will leverage your proposed changes. Suggestions: You can include UML diagrams like use cases, application flow to elaborate more on your additional changes. You can mock the changes ( editing html page to show proposed changes) which will really help in a better understanding of your design.      
Although the write-up explains the things clearly, visual aids will leverage your proposed changes. Suggestions: You can include UML diagrams like use cases, application flow to elaborate more on your additional changes. You can mock the changes ( editing html page to show proposed changes) which will really help in a better understanding of your design.      
Although the write-up explains the things clearly, visual aids will leverage your proposed changes. Suggestions: You can include UML diagrams like use cases, application flow to elaborate more on your additional changes. You can mock the changes ( editing html page to show proposed changes) which will really help in a better understanding of your design.      
Although the write up has all the details about how the work has been done and what solutions are proposed. There are no explanation about design principles. 
Although the write up has all the details about how the work has been done and what solutions are proposed. There are no explanation about design principles. 
Although the write up has all the details about how the work has been done and what solutions are proposed. There are no explanation about design principles. 
Although the write up clearly explains the problem statement and also contains the changes made, it doesn't include the test plan which would give a clearer picture of the changes added.
Although the write up clearly explains the problem statement and also contains the changes made, it doesn't include the test plan which would give a clearer picture of the changes added.
Although the write up clearly explains the problem statement and also contains the changes made, it doesn't include the test plan which would give a clearer picture of the changes added.
Although the textual explanation is succinct and nice, there's not yet diagrams or other visual aids available. I think a diagram that depicts the workflow might be very helpful.
Although the textual explanation is succinct and nice, there's not yet diagrams or other visual aids available. I think a diagram that depicts the workflow might be very helpful.
Although the test plan looks good, I am not able to see any test cases added in the pull request.
Although the test coverage is increased according to github, i could not find any new test cases in the project. The team has not added any test case for the correction.
Although the relationships have been properly handled, I see in places with a belongs_to relationship optional:true option is present which allows violation of the relationship and is a bad idea.
Although the design provided is clear, there might be some more work needed to optimize it properly and make it work as intended. 
Although the application is deployed on Heroku and the user interface is concise and easy to use, the README file provides no information about admin account(email and password) and application features.   
Although the application is deployed on Heroku and the user interface is concise and easy to use, the README file provides no information about admin account(email and password) and application features.   
Although the application is deployed on Heroku and the user interface is concise and easy to use, the README file provides no information about admin account(email and password) and application features.   
Although screenshots are available on the Projects page, it would have been easier to visualize if the page mockups were added in the design document too.
Although screenshots are available on the Projects page, it would have been easier to visualize if the page mockups were added in the design document too.
Although screenshots are available on the Projects page, it would have been easier to visualize if the page mockups were added in the design document too.
Although scafolded code exists, there are no testcases written
Although not all sections of the document are complete, upon completion, these sections will be more than adequate in successfully describing the project, its design, purpose, and intent. Nice work.
Although no specific test plans have been mentioned, the wiki page does show screenshots of the changes that are visible after logging in.
Although it looks like a good start the team can still improve on the design by adding a UML diagram and a test plan. There is a need for a low-level design explanation so that others can understand the technical details of the implementation.
Although it looks like a good start the team can still improve on the design by adding a UML diagram and a test plan. There is a need for a low-level design explanation so that others can understand the technical details of the implementation.
Although it looks like a good start the team can still improve on the design by adding a UML diagram and a test plan. There is a need for a low-level design explanation so that others can understand the technical details of the implementation.
Although I believe this project is ready to be merged into the branch, I would still like to make sure as to why their build is failing in Travis CI. Most likely it's not because of their own code, but as a suggestion the team should have also looked into this matter themselves, and explicitly stated somewhere in the wiki by getting clarification from the instructors.
Although I believe this project is ready to be merged into the branch, I would still like to make sure as to why their build is failing in Travis CI. Most likely it's not because of their own code, but as a suggestion the team should have also looked into this matter themselves, and explicitly stated somewhere in the wiki by getting clarification from the instructors.
Although I believe this project is ready to be merged into the branch, I would still like to make sure as to why their build is failing in Travis CI. Most likely it's not because of their own code, but as a suggestion the team should have also looked into this matter themselves, and explicitly stated somewhere in the wiki by getting clarification from the instructors.
Although branching strategy was followed. The commits mostly seem to be made on the second-last and last day of submission. It will be helpful to keep committing code at the end of each day or every couple of days so that there is no major issue of merging at the end. Also it ensures that all team members are working on the same copy of code.
Although branching strategy was followed. The commits mostly seem to be made on the second-last and last day of submission. It will be helpful to keep committing code at the end of each day or every couple of days so that there is no major issue of merging at the end. Also it ensures that all team members are working on the same copy of code.
Although branching strategy was followed. The commits mostly seem to be made on the second-last and last day of submission. It will be helpful to keep committing code at the end of each day or every couple of days so that there is no major issue of merging at the end. Also it ensures that all team members are working on the same copy of code.
Although as per the scope of the project, the team did extremely well. All implementations as written in the project description were completed. However I feel that this project in general has more scope. Say introducing email notifications to the students when a review is due. As far as the work of the team is concerned, they completed everything that was asked of them.
Although as per functionality, this code is ready to be merged and the team did put in a fair amount of work into it. Still, I believe this project can be bettered by another team in the future by refactoring some the code to improve code writing principles and also improve the wiki documentation.
Already covered in detail in above question. There are some issues with View and Create Houses functionality. Also Deletion of users is working fine but gives error when clicked on Realtors or House Hunter's Account Button in Admin View.
Already covered in detail in above question. There are some issues with View and Create Houses functionality. Also Deletion of users is working fine but gives error when clicked on Realtors or House Hunter's Account Button in Admin View.
Already covered in detail in above question. There are some issues with View and Create Houses functionality. Also Deletion of users is working fine but gives error when clicked on Realtors or House Hunter's Account Button in Admin View.
Along with the above improvements some of the things you might want to take care of are: Even if a company is deleted the houses and inquires remain as it is. (Partial reason is the above bug which allows to create a house and post reply without being associated to any company).When I try to delete a house it shows application error. So not able to test if dependent child records for potential buyers and house hunters are deleted or not. For Realtor and HouseHunter Signup, it should be allowed to signup without specifying company or other details except name, email, password as per the usecase given. This is not allowed currently.
Almost all variable and method names are well-defined. Suggestion: Try to refactor method 'render_report' in module ReportFormatterHelper by using hash instead of really long case when statements.
Almost all variable and method names are well-defined. Suggestion: Try to refactor method 'render_report' in module ReportFormatterHelper by using hash instead of really long case when statements.
Almost 80-85% of the features are covered. Dual role implementation is missing/not working. Signup doesn't give an option to register as both realtor and hunter at the same time. Input validations are not handled. Remove from interest list option is missing(ideally, once the user clicks on add to interest list button, the button should be changed to remove from interest list). Admin didn't have the delete option for all the users listed (this needs to be fixed). A realtor was not given an option to edit the details of the house he/she has listed(only photo adding feature was there).
All users have their own model controllers. The code is following Ruby on Rails standards but there are some debug "puts" that should be removed.
All the variables are defined with respect to the functionality like - max_team_size, get_participants_without_team.
All the tests have not been implemented. but the test plan has been described. Could have included more test cases to extensively test the system. Automated test could have been written.
all the tests are working properly except one. A pretty good work has been done.
all the tests are working properly except one. A pretty good work has been done.
All the tests are auto-generated.
all the test scenarios are included in rspec. The tests are also increasing the test coverage. Great job!
All the test cases are passing however code coverage is low. Various different scenarios must be tested thoroughly. Travis CI build is passing and efforts were taken to work on this. Appreciated!
all the scenarios including the corner cases are working fine. No issues or problems were found with the functionality. The only issue is related to the CI built which is failing at the moment. The team needs to analyse the root cause related to the build failure and fix it. Other than that it was a great team effort!  
all the scenarios including the corner cases are working fine. No issues or problems were found with the functionality. The only issue is related to the CI built which is failing at the moment. The team needs to analyse the root cause related to the build failure and fix it. Other than that it was a great team effort!
All the required part is in their design. However, maybe you can add a little more detail to your test plan. 
All the required part is in their design. However, maybe you can add a little more detail to your test plan. 
All the names are used properly and the team adds some comments after last round.
All the names are reasonable except for a few like the function name "get_feedback_assessments_for". It is ambiguous as to what the function will be doing.
All the names are intuitive and reasonable apart from "drop_topic_deadline1". The team need to change this variable name to something more precise other than that Good job following naming conventions!
All the names are intuitive and reasonable apart from "drop_topic_deadline1". The team need to change this variable name to something more precise other than that Good job following naming conventions!
All the functionalities are listed and code also attached for the same. But, if the code changes were highlighted in color as in git, then its better comparable.
All the functionalities are listed and code also attached for the same. But, if the code changes were highlighted in color as in git, then its better comparable.
All the code of the project has been pushed to Github on a single day.
All the code of the project has been pushed to Github on a single day.
All the checks including the CI build is failing.
All the changes were pushed on a single day. the last day of submission.
All the changes are pushed at once.
All the cases in Test plan are included in the automated tests.
All the cases discussed in the Test Plan have been converted into automated tests.
All the buttons which do what they say they do are quite good. Quite reasonably, I can click on these buttons and the expected behavior occurs. It's a little weird to have to select whether I want to log in as a house hunter, a realtor, or the admin at the login screen, and that it doesn't work without selecting the right user type.   Unfortunately, many buttons do not do what they say, or redirect the application to a dead page. Here are the functionalities which do not work: 1. Attempting to delete Real Estate Company makes you view Real Estate Company detailed info. Inquiries do the same. 2. Attempting to 'show' anything that's not a real estate company throws a 406. 3. As a realtor, I tried to Update/add company information and my change was rejected. 4. The List a House form has 'create company' as its submit button.    There are also many things I expected to be able to do that there were not buttons or links for.
all the basic scenarios are working fine. No issues or problems were found with the functionality. There is an issue related to the CI built which is failing at the moment. The team needs to analyse the root cause related to the build failure and fix it. Also the scenario where the TA is assigned to a instructor , what will happen to the instructors impersonated students when the TA of the constructor login to the application. The scenario could not be tested as the same is missing from video and the application is not deployed. Other than that it was a great team effort
All the 1-n, n-n Relationships have been commented out. There are no mapping table in Schema as well.
All parts are presented, but need little fore explanation in test plan part. 
All parts are presented, but need little fore explanation in test plan part. 
All parts are presented, but need little fore explanation in test plan part. 
All of the commits for this application were made on the same day.
All of the commits for this application were made on the same day.
All of the code appears to be above board, and no functions are overly long. The test did take like 28 seconds to run, which seems like a lot.
All of the code appears to be above board, and no functions are overly long. The test did take like 28 seconds to run, which seems like a lot.
All of the code appears to be above board, and no functions are overly long. The test did take like 28 seconds to run, which seems like a lot.
All methods and variables are suggestive of the functionality. The vm_question_reponse table could have been named/edited to be named in a more descriptive way. I do not understand what is the meaning of VM.
All methods and variables are suggestive of the functionality. Only some of the code changes are explained and reason of taking a particular problem solving approach is lacking.
All methods and variables are suggestive of the functionality. Only some of the code changes are explained and reason of taking a particular problem solving approach is lacking.
All methods and variables are suggestive of the functionality. Only some of the code changes are explained and reason of taking a particular problem solving approach is lacking.
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if.
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if.
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if.
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if else conditions. 
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if else conditions. 
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if else conditions.
All methods and classes are well designed and serve well defined functionality. Good job! Could have named the methods and variables a little better. Each function performs a single task. Every method is short and to the point i.e does not contain many nested blocks or if else conditions.
All issues related to admin functionality have been fixed. Selecting a company as a realtor and editing it seem to be broken; as such, a house can't be posted.
All is good. Only one code climate issue needs to be fixed before complete.
All is good. Only one code climate issue needs to be fixed before complete.
All good components of a design document are present. It would be nice to have the UI mockups without handwriting that may make it hard to read.
All good components of a design document are present. It would be nice to have the UI mockups without handwriting that may make it hard to read.
All functionalities required are in the design doc, but no content is provided. 
All functionalities required are in the design doc, but no content is provided. 
All functionalities required are in the design doc, but no content is provided. 
All commits were on just 2 days before and on the day of submission. It will be helpful to keep committing code at the end of each day or every couple of days so that there is no major issue of merging at the end. Also it ensures that all team members are working on the same copy of code.
All commits were made on one day
All commits were made on one day
All commits were found to be done on a single day. i.e. October 1.
All commits on same day before submission
All commits on same day before submission
All commits happened at deployment.
All coding principles are followed. //Add more comments.
All codes construct perfectly, though not much code I could see in the git.
All code written is clearly in separate and well defined methods. Although the program still misses out on comments, but you can still find out what a particular part does as the methods have been named appropriately.
Alignment issues for the content
Again, the problem persists of containment of sentence.
Again wiki page is missing. They submitted a google doc for the same
Again the test plan is not about what they test in the Rspec test.
After resolving the issues with Travis tests and adding comments to the code, it is ready to be merged with Master branch. Production deployment in not applicable.
After manual testing, issue 1 seems to be fixed and reflects the changes properly. Nothing seems to be done to fix issues 2 and 3 of the problem statement. Suggestion: 1. You can include any approach or design of functions to resolve remaining 2 issues in the writeup
After logging in as realtor or house hunter, if we press the button create a house or an inquiry, and before creating if we press back button , the user is taken to home page where he has to log in again.
After deleting a user from the admin account, I am being signed out of the application
After creating the user from the admin , Why I am logged into the created user ?   Also, where can the user update the company info
After creating the user from the admin , Why I am logged into the created user ?   Also, where can the user update the company info
After creating the user from the admin , Why I am logged into the created user ?   Also, where can the user update the company info
admin requires a separate url to  login.
Admin not able to delete houses or users or companies. Unable to test a few cases due to these issues. Realtor not able to delete houses. Error page is getting displayed.
Admin not able to delete houses or users or companies. Unable to test a few cases due to these issues. Realtor not able to delete houses. Error page is getting displayed.
Admin model has only two tests.  
Admin model has only two tests.  
Admin login is failing with the credentials provided in the readme file. Not able to test any functionality of admin. Clicking on show button for the house results in error page when I have logged in as a realtor. Deleting my own account results in error.
admin login fails: realtors and other users successful.  all functionalities works. 
admin login fails: realtors and other users successful.  all functionalities works. 
admin login fails: realtors and other users successful.  all functionalities works. 
Admin Login Details are not present in Readme.md file. Atleast Untill now. It may be a case of wrong Readme file commited at the last moment. I have looked into the seeds.rb file and got the admin details from there. Do make changes in the Readme file. Things which needs to be corrected: 1) Admin Should not be able to edit any of his details apart from his name. 2.) Editing a company should only update it (which is working fine). The message shown to user says a new company is created which is slightly misleading. Will be a very small message change. 3) Creating and Viewing Houses Functionality not working currently. gives Application error with message check logs for more details. 4) Admin is able to create Realtor and House Hunter. But once I delete some users and then click on Realtor's Account or House Hounter's Account options given on the UI, it throws Application error same as above. Can you explain about about why this buttons are given and what should it exactly do?   5) Admin is able to delete himself from users/househunters/realtors list. This should not be allowed. 6) Not able to check Potential Buyers and Interests functionality as Admin, as creating or view house is not functioning currently. May be you can check the logs. Might be a small deployment error like get/ post methods misplaced. 7) For Realtor and HouseHunter Signup, it should be allowed to sugnup without specifying company or other details except name, email, password as per the usecase given. This is not allowed currently. 8) No houses are currently present and Not able to create a new house. It gives the same error as it does with Admin Login. So not able to test Potential buyers, Intersest and Deletion functionalities for it.  
Admin Login Details are not present in Readme.md file. Atleast Untill now. It may be a case of wrong Readme file commited at the last moment. I have looked into the seeds.rb file and got the admin details from there. Do make changes in the Readme file. Things which needs to be corrected: 1) Admin Should not be able to edit any of his details apart from his name. 2.) Editing a company should only update it (which is working fine). The message shown to user says a new company is created which is slightly misleading. Will be a very small message change. 3) Creating and Viewing Houses Functionality not working currently. gives Application error with message check logs for more details. 4) Admin is able to create Realtor and House Hunter. But once I delete some users and then click on Realtor's Account or House Hounter's Account options given on the UI, it throws Application error same as above. Can you explain about about why this buttons are given and what should it exactly do?   5) Admin is able to delete himself from users/househunters/realtors list. This should not be allowed. 6) Not able to check Potential Buyers and Interests functionality as Admin, as creating or view house is not functioning currently. May be you can check the logs. Might be a small deployment error like get/ post methods misplaced. 7) For Realtor and HouseHunter Signup, it should be allowed to sugnup without specifying company or other details except name, email, password as per the usecase given. This is not allowed currently. 8) No houses are currently present and Not able to create a new house. It gives the same error as it does with Admin Login. So not able to test Potential buyers, Intersest and Deletion functionalities for it.  
Admin Login Details are not present in Readme.md file. Atleast Untill now. It may be a case of wrong Readme file commited at the last moment. I have looked into the seeds.rb file and got the admin details from there. Do make changes in the Readme file. Things which needs to be corrected: 1) Admin Should not be able to edit any of his details apart from his name. 2.) Editing a company should only update it (which is working fine). The message shown to user says a new company is created which is slightly misleading. Will be a very small message change. 3) Creating and Viewing Houses Functionality not working currently. gives Application error with message check logs for more details. 4) Admin is able to create Realtor and House Hunter. But once I delete some users and then click on Realtor's Account or House Hounter's Account options given on the UI, it throws Application error same as above. Can you explain about about why this buttons are given and what should it exactly do?   5) Admin is able to delete himself from users/househunters/realtors list. This should not be allowed. 6) Not able to check Potential Buyers and Interests functionality as Admin, as creating or view house is not functioning currently. May be you can check the logs. Might be a small deployment error like get/ post methods misplaced. 7) For Realtor and HouseHunter Signup, it should be allowed to sugnup without specifying company or other details except name, email, password as per the usecase given. This is not allowed currently. 8) No houses are currently present and Not able to create a new house. It gives the same error as it does with Admin Login. So not able to test Potential buyers, Intersest and Deletion functionalities for it.  
Admin has a separate login url and cannot login from the same page as other users. Admin panel could be made a little more user friendly by separating links on different lines.
Admin has a separate login url and cannot login from the same page as other users. Admin panel could be made a little more user friendly by separating links on different lines.
Admin functionality is failing. Not able to log in as it should. 
Admin details in readme missing   No way to create real estate company,  When admin tries creating new user, signup button shows, it should not be In user lists, can see multiple admin accounts with same user name , email        
Admin credentials still not provided in the readme file. So not able to test any functionality related to admin. Creation of a new house is failing. So anything related to house module (inquiries, reply, email) cannot be tested.  As the house cannot be added House interest list module cannot be verified. Phone Number validation is missing. Inquiry module gives error page/
Admin credentials still not provided in the readme file. So not able to test any functionality related to admin. Creation of a new house is failing. So anything related to house module (inquiries, reply, email) cannot be tested.  As the house cannot be added House interest list module cannot be verified. Phone Number validation is missing. Inquiry module gives error page/
Admin credentials still not provided in the readme file. So not able to test any functionality related to admin. Creation of a new house is failing. So anything related to house module (inquiries, reply, email) cannot be tested.  As the house cannot be added House interest list module cannot be verified. Phone Number validation is missing. Inquiry module gives error page/
Admin credentials not provided, realtor and house hunter signup throws error so unable to use app.
Admin credentials not provided, realtor and house hunter signup throws error so unable to use app.
Admin credentials in README file not working therefore not able to test admin part. UI is confusing, there are multiple success messages displayed. Only ids are displayed in house list and no other info
Admin cannot see houses/inquiries List of realtors does display company information List of house hunter does not display all information
Admin cannot delete users Deleting a House Hunter crashes the app No validation present in any models, eg Houses/Real Estate Company   Admin cannot delete houses
Admin cannot delete users Deleting a House Hunter crashes the app No validation present in any models, eg Houses/Real Estate Company   Admin cannot delete houses
Admin cannot delete real estate companies, users or houses. I found that admin can delete these if they are not related to anything else, i.e. if there is a house which is not present in interest list, has no inquiries than it can be deleted. Ditto others. I suspect that the error is thrown as the entry is being referenced in some other table as foreign key. This would imply that edge cases have not been implemented, or are for some reason not working on heroku.
Admin can't delete a real estate company. Clicking destroy takes it back to the show page. So couldn't test the first use case.  Realtor is unable to create new houses and admin doesn't have the option to create houses. So couldn't test the second use case. Realtors can't see inquiries and potential buyers. 'Show' page running into errors.   Due to the combination of these issues, couldn't test any of these edge cases.  
Admin can't delete a real estate company. Clicking destroy takes it back to the show page. So couldn't test the first use case.  Realtor is unable to create new houses and admin doesn't have the option to create houses. So couldn't test the second use case. Realtors can't see inquiries and potential buyers. 'Show' page running into errors.   Due to the combination of these issues, couldn't test any of these edge cases.  
Admin can't delete a real estate company. Clicking destroy takes it back to the show page. So couldn't test the first use case.  Realtor is unable to create new houses and admin doesn't have the option to create houses. So couldn't test the second use case. Realtors can't see inquiries and potential buyers. 'Show' page running into errors.   Due to the combination of these issues, couldn't test any of these edge cases.  
Admin can not delete or edit companies, The search functionality for houses is not working (Filter by min price) Admin can add house to only one company. Admin can not view list of users Admin can not delete inquiries from the system. Realtor can not view inquiries sent to houses in the company not posted by him
Admin can not delete or edit companies, The search functionality for houses is not working (Filter by min price) Admin can add house to only one company. Admin can not view list of users Admin can not delete inquiries from the system. Realtor can not view inquiries sent to houses in the company not posted by him
Admin and Realtor's functionalities are partially working. Many other features need to implement. 
Admin and Realtor's functionalities are partially working. Many other features need to implement. 
admin account credentials not listed
admin account credentials not listed
Admin 1. Admin can not see all the inquiries by house hunters. Hunter 1.House search feature -Not implemented. 2.House Interest /interest list feature -Not implemented.  3. Even a hunter can post an ad of a house and create a company, missed implementation of basic checks on user roles. 4. The inquiry is not associated with the house, a separate tab is given with a generic form where the hunter has to select a realtor and that is failing when clicked on submit(maybe a Heroku glitch ). 5.No record of submitted inquiries. Relator: 1. Seeing potential buyers -Not implemented. 2.Inquiry view/reply- -Not implemented. 3.Can post houses for any user(i.e under any company and under any realtor or hunter)   Many functionalities have not been implemented, if https://nameless-everglades-55236.herokuapp.com the link they have submitted for round 2.  
Admin 1. Admin can not see all the inquiries by house hunters. Hunter 1.House search feature -Not implemented. 2.House Interest /interest list feature -Not implemented.  3. Even a hunter can post an ad of a house and create a company, missed implementation of basic checks on user roles. 4. The inquiry is not associated with the house, a separate tab is given with a generic form where the hunter has to select a realtor and that is failing when clicked on submit(maybe a Heroku glitch ). 5.No record of submitted inquiries. Relator: 1. Seeing potential buyers -Not implemented. 2.Inquiry view/reply- -Not implemented. 3.Can post houses for any user(i.e under any company and under any realtor or hunter)   Many functionalities have not been implemented, if https://nameless-everglades-55236.herokuapp.com the link they have submitted for round 2.  
Admin 1. Admin can not see all the inquiries by house hunters. Hunter 1.House search feature -Not implemented. 2.House Interest /interest list feature -Not implemented.  3. Even a hunter can post an ad of a house and create a company, missed implementation of basic checks on user roles. 4. The inquiry is not associated with the house, a separate tab is given with a generic form where the hunter has to select a realtor and that is failing when clicked on submit(maybe a Heroku glitch ). 5.No record of submitted inquiries. Relator: 1. Seeing potential buyers -Not implemented. 2.Inquiry view/reply- -Not implemented. 3.Can post houses for any user(i.e under any company and under any realtor or hunter)   Many functionalities have not been implemented, if https://nameless-everglades-55236.herokuapp.com the link they have submitted for round 2.  
Admin - Can't create houses, which then means i can't add to interest list or make inquiries   Realtor - Can't view list of potential buyers for a house   Hunter - does everything it needs to do
Admin - Can't create houses, which then means i can't add to interest list or make inquiries   Realtor - Can't view list of potential buyers for a house   Hunter - does everything it needs to do
Admin -  Not able to create a Real estate company - loads error page After creating a new user, not able to see the user in the list Couldn't find sign up for a realtor/House hunter - throwing an error -  Company must exist This is because of the foreign key reference and while creating the user there is no field to select one so it gets an empty or nil value. No houses and inquiries functionality created yet. Not able to check the functionalities of house hunter and realtor as was not able to sign up for that user because of the above error
Admin -  Not able to create a Real estate company - loads error page After creating a new user, not able to see the user in the list Couldn't find sign up for a realtor/House hunter - throwing an error -  Company must exist This is because of the foreign key reference and while creating the user there is no field to select one so it gets an empty or nil value. No houses and inquiries functionality created yet. Not able to check the functionalities of house hunter and realtor as was not able to sign up for that user because of the above error
Actually,, the design seems not simple. Due to the ambiguous of the design, I cannot tell clearly what the four links are used to do in the first step, but it seems too many links will be used and some strange conditions need to be checked before instructors can perform a review. In addition, it seems not all the instructors can do the reviews, so there may be some errors? Description for step 2 is also complex and seems include a lot of jobs need to do.
Actually,, the design seems not simple. Due to the ambiguous of the design, I cannot tell clearly what the four links are used to do in the first step, but it seems too many links will be used and some strange conditions need to be checked before instructors can perform a review. In addition, it seems not all the instructors can do the reviews, so there may be some errors? Description for step 2 is also complex and seems include a lot of jobs need to do.
Actually, all these edge cased list above are not realized at all.  And the mapping relationships between the models don't work at all. For example, when I delete a real estate company, and I look back to realtors' list, nothing happened, because the company id in the realtors' list looks like some random number, such as a company id 6, which is not appear in the company list. And so does the house list. 
Actually, all these edge cased list above are not realized at all.  And the mapping relationships between the models don't work at all. For example, when I delete a real estate company, and I look back to realtors' list, nothing happened, because the company id in the realtors' list looks like some random number, such as a company id 6, which is not appear in the company list. And so does the house list. 
Actually they talked a little about previous work from E1791 project and a lot about what they gonna do. But it's better to have some contrast.  
Actually they talked a little about previous work from E1791 project and a lot about what they gonna do. But it's better to have some contrast.  
Actually they talked a little about previous work from E1791 project and a lot about what they gonna do. But it's better to have some contrast.  
Actually they may include too much info. which could be replaced by some links.
Actually they may include too much info. which could be replaced by some links.
Actually they may include too much info. which could be replaced by some links.
Actually they may include too much info. which could be replaced by some links.
Actually i did find some auto generated test code for the controllers, but i don't think it is a thoroughly test. And there is no test code for the model.
Actually i did find some auto generated test code for the controllers, but i don't think it is a thoroughly test. And there is no test code for the model.
Actually i did find some auto generated test code for the controllers, but i don't think it is a thoroughly test. And there is no test code for the model.
Actually i did find some auto generated test code for the controllers, but i don't think it is a thoroughly test. And there is no test code for the model.
Actually i did find some auto generated test code for the controllers, but i don't think it is a thoroughly test. And there is no test code for the model.
Actual project work has not been started yet, so code modifications have not been mentioned yet. But the files to be changed seem appropriate for the project objective.
Actual project work has not been started yet, so code modifications have not been mentioned yet. But the files to be changed seem appropriate for the project objective.
Actual project work has not been started yet, so code modifications have not been mentioned yet. But the files to be changed seem appropriate for the project objective.
Active record relationships are missing. All the relations are implemented through code logic.
Active record relationships are missing. All the relations are implemented through code logic.
According to write-up and video yes but since I couldn't manually check I would say no.
According to write up, it's good to go but since there is no deployed link I couldn't manually check.
According to the project requirement https://docs.google.com/document/d/1Br9hm-SWIvl5ibWSfRVjmiYTQl5j27l8slWhv2iUCqQ/edit#heading=h.654oe3xw5p73  The design has nearly copy pasted all the textual explanation from here, but there's a lot of details that are remained unexplained - is the underlying functionality already implemented, and there's just an UI change that remains to be done? If yes, where is the underlying functionality? In which file? How is it implemented? If not,  then the corresponding implementation is missing in this design document.
According to the github page, no new test cases
According to the github page, no new test cases
According to the github page, it doesn't seems that new code are commited
According to the github page, it doesn't seems that new code are commited
Able to login with admin and use all functionalities . But unable to signup for realtor or househunter it shows the heroku page "we're sorry something went wrong"
Able to login with admin and use all functionalities . But unable to signup for realtor or househunter it shows the heroku page "we're sorry something went wrong"
Able to create two users with same email. And if I try to login with that particular email, error screen appears.
Able to create two users with same email. And if I try to login with that particular email, error screen appears.
A use case diagram is provided in the documentation. The team should add a class diagram as well to give an idea of the low-level implementation.  
A use case diagram is provided in the documentation. The team should add a class diagram as well to give an idea of the low-level implementation.  
A through test-plan is described. I do think Test Case-2 could be described more efficiently so that it is clear and easy to understand. Overall looks good.
A through test-plan is described. I do think Test Case-2 could be described more efficiently so that it is clear and easy to understand. Overall looks good.
A through test-plan is described. I do think Test Case-2 could be described more efficiently so that it is clear and easy to understand. Overall looks good.
A test plan is there without any details, just the files which will be modified or added are given 
A test plan is there without any details, just the files which will be modified or added are given 
A small suggestion , new_feedback --> author_new_feedback The variables, methods and class names are aptly named. I could not find names which are not suggestive of functionality.
A simple enough explanation has been provided for how the functionality will be working.  Suggestion: I feel that the approach that the team will take to implement the functionality should have been explained more elaborately. For example what different possible methods will be implemented. Or how the web service will be used, or what kind of data the web service will provide for suggestion detection. 
A simple enough explanation has been provided for how the functionality will be working.  Suggestion: I feel that the approach that the team will take to implement the functionality should have been explained more elaborately. For example what different possible methods will be implemented. Or how the web service will be used, or what kind of data the web service will provide for suggestion detection. 
A realtor changing real estate company makes them unable to edit houses they've listed with the previous company.
A model has been thoroughly tested.
a Lot of refactoring is required before the code goes on to production server.
A lot of outdated approaches were used. Refactoring was needed.
A lot of commits were done in phase 2. A total of 106 commits were performed which is quite impressive. It shows that the team was working in a timely manner, so well done there.  However, I deducted 1 star as I could see 2 commits done after the deadline on Oct 13.
A lot of commits were done in phase 2. A total of 106 commits were performed which is quite impressive. It shows that the team was working in a timely manner, so well done there.  However, I deducted 1 star as I could see 2 commits done after the deadline on Oct 13.
A little too brief.
A little confusing as there are two sign up forms one under the other and it is not clear what they are for.
A little confusing as there are two sign up forms one under the other and it is not clear what they are for.
A huge improvement from Round 1. In round one not much code was submitted so this is a huge improvement. Keep it up. I have a Suggestion: It is very important to have comments in the code which will help other readers understand your code or in this case understand what you have tested without having to look for any other documentation which explains it. (Code file should be self sufficient)
A flowchart and graph has been shown in the documentation.  Suggestions: I feel that there should have been mockups of the screens where the functionality will actually appear. Team should have shown how the solution would look like on the expertiza page. There could have been use case diagrams too. 
A flow chart is depicted in the documentation. However, other UML diagrams could have been represented to show the structure and the sequence of the project. The flow chart depicted is a little high level. The total capacity of the project could have been represented by more UML diagrams.
A fix for the second and fourth issues is missing at the current moment. If this is included as in the other issues then the document will adequately propose solutions. Also, perhaps more elaboration on the 3rd fix on how the columns are not being copied over (I know the code is pasted but a simple worded explanation would be nice too).
A few tests were added, though I'd like to see more tests regarding edge cases or invalid functionality. 
A few comments could be included in code to make it more clear.
A few changes to functions and their declaration have to be made to make the code production ready
A detailed explanation would have been better
A commit has been performed 4 days back , which isn't making any change to the code just the indentation, and since then build hasn't passed. You should check that out, it just an indentation issue i think. Format it using rubymine and push, it should work.
A commit has been performed 4 days back , which isn't making any change to the code just the indentation, and since then build hasn't passed. You should check that out, it just an indentation issue i think. Format it using rubymine and push, it should work.
A commit has been performed 4 days back , which isn't making any change to the code just the indentation, and since then build hasn't passed. You should check that out, it just an indentation issue i think. Format it using rubymine and push, it should work.
A brief description for the class level implementation would be better.
A better explanation on the test cases would have made sure that the code is ready. I feel that some more tests need to be done before deploying the code.
A better explanation on the test cases would have made sure that the code is ready. I feel that some more tests need to be done before deploying the code.
85-90% of the functionalities are covered.   Issues: 1. A realtor could edit the information of houses that were not part of his/her company. 2. Option to signup as both realtor and hunter at the same time is missing. 3. Role switching feature is missing(if a user has both hunter and realtor roles). 4. Feature to delete the uploaded image for a house is missing. 5. There was no option to view the replies sent to hunters queries.      
67 commits by one whereas 26 by the other two I was expecting an even number of commits
5), More effort should be expended on the design. The solution is too high-end, abstract. Also, some screenshots being added would be a lot more helpful. And addressing the above issues will also increase the readability
5), More effort should be expended on the design. The solution is too high-end, abstract. Also, some screenshots being added would be a lot more helpful. And addressing the above issues will also increase the readability
5) more effort should be expended on the design. I think there are a lot of problems in the design. The changes to the controller, where the notification is implemented, such questions are not addressed. Also, the questions listed in the above answers are not addressed.
5) more effort should be expended on the design. I think there are a lot of problems in the design. The changes to the controller, where the notification is implemented, such questions are not addressed. Also, the questions listed in the above answers are not addressed.
5) more effort should be expended on the design. I think there are a lot of problems in the design. The changes to the controller, where the notification is implemented, such questions are not addressed. Also, the questions listed in the above answers are not addressed.
5) more effort should be expended on the design. I think there are a lot of problems in the design. The changes to the controller, where the notification is implemented, such questions are not addressed. Also, the questions listed in the above answers are not addressed.
5 Stars! All but one problem has a snippet with the code fix and a rationale explaining why.
34% is better than nothing, but it's still a far-cry from a complete unit test suite for the review_response_map model. I'd recommend it be merged, but it needs to be completed.
34% is better than nothing, but it's still a far-cry from a complete unit test suite for the review_response_map model. I'd recommend it be merged, but it needs to be completed.
34% is better than nothing, but it's still a far-cry from a complete unit test suite for the review_response_map model. I'd recommend it be merged, but it needs to be completed.
3) The search method is a little long. Some of it could have been extracted to function calls.   Otherwise, the code looks good. Methods were short and names were sensible.
3) The search method is a little long. Some of it could have been extracted to function calls.   Otherwise, the code looks good. Methods were short and names were sensible.
3) The admin encountered an exception when trying to view potential buyers of a house after its only potential buyer was deleted.   The README.md did not describe how the system handles edge cases.
3) The admin encountered an exception when trying to view potential buyers of a house after its only potential buyer was deleted.   The README.md did not describe how the system handles edge cases.
29 commits total. Only one user contribute to it.
2) The realtor could only remove the houses he or she created, regardless of his or her company. The README.md was not very specific on how to handle edge cases.
2 of the methods are resulting in Errors
2 of the methods are resulting in Errors
2 failed and 1 accepted. 
1] when the admin deletes a real estate company it deletes the house entry but doesnot deletes the realtors entry however, for realtor the company field becomes blank. 2] when the realtor changes his company he is still able to delete and view the companies that he had listed with the previous company. 3] yes the Inquires case is handled properly .  
1] when the admin deletes a real estate company it deletes the house entry but doesnot deletes the realtors entry however, for realtor the company field becomes blank. 2] when the realtor changes his company he is still able to delete and view the companies that he had listed with the previous company. 3] yes the Inquires case is handled properly .  
1)In the first release there was a issue in user registration. The issue still persists. Team has kept both realtor and house hunter registration on the same page that only allows house hunter to register. 2)Can not register new realtor using registration link. For simpler design, team could have simply give 2 links for 2 types of user registration. 3)Team tried covering many functionalities as compared to last release and succeeded partially. 4)Team has provided admin credentials and admin functionalities are working fine.
1)In the first release there was a issue in user registration. The issue still persists. Team has kept both realtor and house hunter registration on the same page that only allows house hunter to register. 2)Can not register new realtor using registration link. For simpler design, team could have simply give 2 links for 2 types of user registration. 3)Team tried covering many functionalities as compared to last release and succeeded partially. 4)Team has provided admin credentials and admin functionalities are working fine.
1)Admin is able to delete the company which has houses and realtor associated with it. When you try to edit houses associated with such company, the add button does not perform any action. where in if you try to edit houses, houses get edited successfully. It seems like relation between model and tables is not maintained properly. 2) While creating new houses realtor is asked to enter id of company and realtor.   These id's are back end data with system incremented numbers and not given to user after       registration. Hence we should restrain displaying such back end information to users.  3) Not able to submit inquiry. Posting an inquiry and reply to the inquiry is on same page, visible to house hunter. 4)  With this release team has written README file very well and neatly. Also provided admin credentials.      Below are few major functionalities team can work upon:      a)House hunter can create new company.      b)Can not register as realtor.      c)Search functionality not working.      d)Potential buyer functionality not implemented properly. It does not connect houses with potentials           buyer. It seem like listing all the buyers.       
1)Admin is able to delete the company which has houses and realtor associated with it. When you try to edit houses associated with such company, the add button does not perform any action. where in if you try to edit houses, houses get edited successfully. It seems like relation between model and tables is not maintained properly. 2) While creating new houses realtor is asked to enter id of company and realtor.   These id's are back end data with system incremented numbers and not given to user after       registration. Hence we should restrain displaying such back end information to users.  3) Not able to submit inquiry. Posting an inquiry and reply to the inquiry is on same page, visible to house hunter. 4)  With this release team has written README file very well and neatly. Also provided admin credentials.      Below are few major functionalities team can work upon:      a)House hunter can create new company.      b)Can not register as realtor.      c)Search functionality not working.      d)Potential buyer functionality not implemented properly. It does not connect houses with potentials           buyer. It seem like listing all the buyers.       
1) Yes. The team has added test cases. The newly added tests are not covering the range of this project well. The total coverage has decreased and more number of files have lost coverage.  2) Overall coverage decreased (-28.6%) to 8.18%.       
1) Yes. The team has added test cases. The newly added tests are not covering the range of this project well. The total coverage has decreased and more number of files have lost coverage.  2) Overall coverage decreased (-28.6%) to 8.18%.       
1) Yes, just could not check the mailing functionality. 2) Also the test coverage needs to be improved.
1) Yes 2) No 3) No
1) When the admin deletes a real estate company all the realtors associated with them are deleted along with all the houses posted by those realtors. 2) Currently the Realtor is able to edit/delete houses of other companies which is the fault in the behavior and the team needs to correct this to test this edge case. 3) If Admin deletes a house_hunter all their queries are automatically deleted.Also they are deleted from potential buyers list. 4) i)If a Relator replies to the query, the house hunter is unable to see them in the system. ii) Validation on phone numbers should be enforced. iii) Session handling could be improved, few left over data are present on screen after logging out and using direct links to access page. such as hunter query after logging out. No documentation on READ.me regarding edge cases.    
1) User is able to sign-up as admin which should not happen 2) Admin is able to delete real estate companies 3) Admin is not able to view inquiries
1) User is able to sign-up as admin which should not happen 2) Admin is able to delete real estate companies 3) Admin is not able to view inquiries
1) The write-up is comprehensive and clearly explained. 2) Should explain the test cases in more detail.
1) The houses controller handles multiple users. It would make more sense to call methods to handle the case of each type of user. 3) The houses controller also has several long methods. These should be broken up into method calls.
1) The houses controller handles multiple users. It would make more sense to call methods to handle the case of each type of user. 3) The houses controller also has several long methods. These should be broken up into method calls.
1) The admin can delete the house hunter that has an inquiry but the inquiry is still available. 2) Realtor is able to edit and update a company which is not listed by him/her. 3) Realtor is able to edit and update the house that is not listed by him/her. 4) Realtor is able to destroy a house that is not listed by him/her.
1) The admin can delete the house hunter that has an inquiry but the inquiry is still available. 2) Realtor is able to edit and update a company which is not listed by him/her. 3) Realtor is able to edit and update the house that is not listed by him/her. 4) Realtor is able to destroy a house that is not listed by him/her.
1) The admin can delete the house hunter that has an inquiry but the inquiry is still available. 2) Realtor is able to edit and update a company which is not listed by him/her. 3) Realtor is able to edit and update the house that is not listed by him/her. 4) Realtor is able to destroy a house that is not listed by him/her.
1) Realtor not able to view the house listing, so unable to check if inquiry deletions.  
1) Realtor not able to view the house listing, so unable to check if inquiry deletions.  
1) Preferred contact doesnt have call as one of the options. 2) As a house hunter, I am unable to view and edit my profile. 3) As a realtor, I am unable to view and edit my profile. 4) Wrong error message while creating a house: Oops, couldn't create account. Please make sure you are using a valid email and password and try again. 5) While creating a house, the realtor is needed to list the potential buyers which is a wrong analysis. As a house hunter shows interest in the house, this information will be populated. 6) As a house hunter, I am unable to create a company. 7) As a realtor, I am unable to view or edit a company 8) As a house hunter, I am unable to create an inquiry 9) As an admin, I am unable to edit and delete users  10) As an admin, I am unable to edit houses  11) Interests and inquiry features are not yet implemented.
1) No, they have modularized well. 2) No 3) They could have provided more comments on tests where they set nodes at few places. 4) They could have used factories more extensively, due to various mock data they might have needed to cover different inputs 5) Their code can be more DRY, as they seem to repeat instantiations in all places
1) No, function length is good 2) No. they are apt. 3) comments are not included, which makes it hard to follow, as the changes are not regarding functionality rather than system implementation, comments should have been elaborate and detailing why the change is done 4) Yes they did 5) No. the code was DRY and reused efficiently
1) No model is tested. 2) Home controller test appears to be thorough.
1) No all functions are reasonably long if not too short. 2) No all methods seem about right 3) no but the team could have provided some comments in the score test function, as multiple expects are included 4) The code follows ruby guidelines and they used factories efficiently 5) Yes the code is DRY, they have used after each method to achieve it
1) No all functions are reasonably long if not too short. 2) No all methods seem about right 3) no but the team could have provided some comments in the score test function, as multiple expects are included 4) The code follows ruby guidelines and they used factories efficiently 5) Yes the code is DRY, they have used after each method to achieve it
1) logged in as a house hunter, I can edit a house, which should not be allowed. 2) logged in as a house hunter, I can edit the company, which should not be allowed. 3) Founded: 19677689 ----- the company year can be any numeric value 4) logged in as a house hunter, I can destroy house, which should not be allowed 5) logged in as a house hunter, I can destroy company, which should not be the case 6) Year built: 2001890 ---------- this field in house table for year takes any numerical value
1) logged in as a house hunter, I can edit a house, which should not be allowed. 2) logged in as a house hunter, I can edit the company, which should not be allowed. 3) Founded: 19677689 ----- the company year can be any numeric value 4) logged in as a house hunter, I can destroy house, which should not be allowed 5) logged in as a house hunter, I can destroy company, which should not be the case 6) Year built: 2001890 ---------- this field in house table for year takes any numerical value
1) logged in as a house hunter, I can edit a house, which should not be allowed. 2) logged in as a house hunter, I can edit the company, which should not be allowed. 3) Founded: 19677689 ----- the company year can be any numeric value 4) logged in as a house hunter, I can destroy house, which should not be allowed 5) logged in as a house hunter, I can destroy company, which should not be the case 6) Year built: 2001890 ---------- this field in house table for year takes any numerical value
1) In the UML diagram the set of actions that the instructor can perform to add more than one question to nomination and textual type is not added. Also add the actions to modify the display sequence of existing questions. 2) In the instructor flow-chart, the flow for review questionnaire and to modify the display sequence of existing questions is missing.
1) In the UML diagram the set of actions that the instructor can perform to add more than one question to nomination and textual type is not added. Also add the actions to modify the display sequence of existing questions. 2) In the instructor flow-chart, the flow for review questionnaire and to modify the display sequence of existing questions is missing.
1) In the UML diagram the set of actions that the instructor can perform to add more than one question to nomination and textual type is not added. Also add the actions to modify the display sequence of existing questions. 2) In the instructor flow-chart, the flow for review questionnaire and to modify the display sequence of existing questions is missing.
1) If the admin tries to delete a real estate company which has some realtors and houses, it would not delete the record, because a dependent realtor exists. 2) The realtor can change his real estate company and he won't be prohibited from removing houses. 3) If admin tries to delete a house hunter who has submitted several inquiries, the inquiries will be deleted and house hunter will be removed from the buyers' list.
1) If the admin tries to delete a real estate company which has some realtors and houses, it would not delete the record, because a dependent realtor exists.   2) The realtor can change his real estate company and he won't be prohibited from removing houses.   3) If admin tries to delete a house hunter who has submitted several inquiries, the inquiries will be deleted and house hunter will be removed from the buyers' list.
1) If the admin tries to delete a real estate company which has some realtors and houses, it would not delete the record, because a dependent realtor exists.   2) The realtor can change his real estate company and he won't be prohibited from removing houses.   3) If admin tries to delete a house hunter who has submitted several inquiries, the inquiries will be deleted and house hunter will be removed from the buyers' list.
1) If the admin tries to delete a real estate company which has some realtors and houses, it would not delete the record, because a dependent realtor exists.   2) The realtor can change his real estate company and he won't be prohibited from removing houses.   3) If admin tries to delete a house hunter who has submitted several inquiries, the inquiries will be deleted and house hunter will be removed from the buyers' list.
1) If the admin tries to delete a real estate company which has some realtors and houses, it would not delete the record, because a dependent realtor exists.   2) The realtor can change his real estate company and he won't be prohibited from removing houses.   3) If admin tries to delete a house hunter who has submitted several inquiries, the inquiries will be deleted and house hunter will be removed from the buyers' list.
1) If the admin deletes a company, all the related properties will be deleted and will remove the company name assigned to any realtor. 2) If the realtor changed his or her company, the realtor cannot make changes to old posts which they have posted for the previous company they worked for. So they will not be able to edit,add or remove the houses listed in previous company. 3) If the house hunter is deleted by the admin, all the inquiries by the house hunter will be deleted and their names in the potential buyers list is removed. The README.me did not cover how the system handles all these edge cases. README.md could be updated.
1) If the admin deletes a company, all the related properties will be deleted and will remove the company name assigned to any realtor. 2) If the realtor changed his or her company, the realtor cannot make changes to old posts which they have posted for the previous company they worked for. So they will not be able to edit,add or remove the houses listed in previous company. 3) If the house hunter is deleted by the admin, all the inquiries by the house hunter will be deleted and their names in the potential buyers list is removed. The README.md covers how the system handles all these edge cases.
1) If the admin deletes a company, all the related properties will be deleted and will remove the company name assigned to any realtor. 2) If the realtor changed his or her company, the realtor cannot make changes to old posts which they have posted for the previous company they worked for. So they will not be able to edit,add or remove the houses listed in previous company. 3) If the house hunter is deleted by the admin, all the inquiries by the house hunter will be deleted and their names in the potential buyers list is removed. However, The README.md does not cover how the system handles all these edge cases.
1) If a house hunter is interested in a house, there should be only one entry specifying this interest in the database. In this app, the same house hunter can show multiple interests on the same house. This results to duplicates in db and must be handled. 2) After creating an inquiry, clicking on the Back link on the page should re-direct to /houses or which ever page was visited before creating an inquiry. This is not happening. 3) Founded year field of the company table takes any numeric value --- Founded: 465789 4) The house hunter is able to create a company which is not supposed to be an allowed operation. This happens when as a house hunter, I edit profile and choose to be realtor, I get an option to create a company but even without changing the role to realtor.  5) Point 3 holds good for built year field of house table Builtyear: 7598 6) View inquiries feature is not working...throws an error.
1) If a house hunter is interested in a house, there should be only one entry specifying this interest in the database. In this app, the same house hunter can show multiple interests on the same house. This results to duplicates in db and must be handled. 2) After creating an inquiry, clicking on the Back link on the page should re-direct to /houses or which ever page was visited before creating an inquiry. This is not happening. 3) Founded year field of the company table takes any numeric value --- Founded: 465789 4) The house hunter is able to create a company which is not supposed to be an allowed operation. This happens when as a house hunter, I edit profile and choose to be realtor, I get an option to create a company but even without changing the role to realtor.  5) Point 3 holds good for built year field of house table Builtyear: 7598 6) View inquiries feature is not working...throws an error.
1) i deleted a company that a realtor was assigned to and it was deleted successfully but the house listed by that company is still in the house list 2) When i switched company for a realtor, i could still deleted the house i listed when i was a previous company 3) when a househunter who made inquiries was deleted, it got rid of their inquires from the system
1) i deleted a company that a realtor was assigned to and it was deleted successfully but the house listed by that company is still in the house list 2) When i switched company for a realtor, i could still deleted the house i listed when i was a previous company 3) when a househunter who made inquiries was deleted, it got rid of their inquires from the system
1) Have clearly mentioned when will GitHub Api be hit to retrive the data and which gem will be used.
1) Document includes test plan. 2) However can include more test cases.
1) Create class diagram and UML diagram outlining the set of actions that the reviewer and the author can perform.
1) Create class diagram and UML diagram outlining the set of actions that the reviewer and the author can perform.
1) As far as I can tell, an admin cannot delete a real estate company. 2) Realtors don't appear to have real estate companies. 3) House Hunters do not seem to be able to make inquiries. 4) The README does not document any edge cases.
1) After signing up as realtor:    -> Show inquiries is not working  -> A realtor cannot thus reply to an inquiry 2) After signing up as hunter  -> A hunter is able to create a cpmpany which should be not allowed -> An inquiry should be created for a particular house which is not the case -> new inquiry is not working shows {"success":false} message      
1) After signing up as realtor:    -> Show inquiries is not working  -> A realtor cannot thus reply to an inquiry 2) After signing up as hunter  -> A hunter is able to create a cpmpany which should be not allowed -> An inquiry should be created for a particular house which is not the case -> new inquiry is not working shows {"success":false} message      
1) Admin trying to delete a user that has an inquiry and interested in some house fails as expected but the failure is not graceful.  2) Admin can edit a profile by making a user neither a realtor nor a house hunter and delete that user that has inquiries and interests in/on a house. 3) Admin cannot destroy a company...this operation is throwing error but after updating a company, the company can be destroyed.
1) Admin trying to delete a user that has an inquiry and interested in some house fails as expected but the failure is not graceful.  2) Admin can edit a profile by making a user neither a realtor nor a house hunter and delete that user that has inquiries and interests in/on a house. 3) Admin cannot destroy a company...this operation is throwing error but after updating a company, the company can be destroyed.
1) Admin deletes real estate company - not tested 2) Realtor sign in/signup not working 3) Inquiries not visible for househunter
1)    Not indicated 2)     Not very clear from the documentation- no detailed explanation of design provided. 3)      Not enough details provided to conclude 4)     Not enough details provided to conclude  5)     Yes,the team needs to extend their effort on documenting the design better. Pl
1)     The team has already identified the files to be changed, which is a good thing. It looks like, all changes will be handled in the client-side, so not applicable 2)     I assume, as it is nowhere mentioned, they would be writing a custom js file, the team plans to repeat some of the custom written code, if same functionality is required in 2 different file, which could violate DRY. Team might need to consider such possibility. 3)     NO, the team is already optimizing by leverage some JavaScript libraries. 4)     It would as user opts to sort, but here it seems to be a necessary evil. 5)     Yes, the team can elaborate more on their design approach and provide visual aids to help reader understand the sorting intended better.    
1)     The team has already identified the files to be changed, which is a good thing. It looks like, all changes will be handled in the client-side, so not applicable 2)     I assume, as it is nowhere mentioned, they would be writing a custom js file, the team plans to repeat some of the custom written code, if same functionality is required in 2 different file, which could violate DRY. Team might need to consider such possibility. 3)     NO, the team is already optimizing by leverage some JavaScript libraries. 4)     It would as user opts to sort, but here it seems to be a necessary evil. 5)     Yes, the team can elaborate more on their design approach and provide visual aids to help reader understand the sorting intended better.    
1.realtor has to choose a company while signing up. Realtor can not create a company. Admin has to create the company for realtor. 2. Realtor cannot create a house. After clicking on the create house button , some exception is thrown in the console. Realtor can not list a house. 3. Logout is not working 4. Since the house can not be listed and there are no houses in the system , other functionalities can not be tested.   The basic functionalities are not working.
1.realtor has to choose a company while signing up. Realtor can not create a company. Admin has to create the company for realtor. 2. Realtor cannot create a house. After clicking on the create house button , some exception is thrown in the console. Realtor can not list a house. 3. Logout is not working 4. Since the house can not be listed and there are no houses in the system , other functionalities can not be tested.   The basic functionalities are not working.
1.realtor has to choose a company while signing up. Realtor can not create a company. Admin has to create the company for realtor. 2. Realtor cannot create a house. After clicking on the create house button , some exception is thrown in the console. Realtor can not list a house. 3. Logout is not working 4. Since the house can not be listed and there are no houses in the system , other functionalities can not be tested.   The basic functionalities are not working.
1.If admin deletes a company which has realtors and houses, the realtor associated with it get deleted. 2. Realtor can change her company and she can delete the ad posts previously posted by her. 3.Admin can delete the house hunter who has several queries and inquiries get deleted automatically.    
1.Admin can only delete a company which has no users(realtors/hunters), else he is unable to delete it. 2.Realtor cannot change his company and can post an ad under any user. 3. House hunter inquiry feature is absent hence could not test this test case.    
1.Admin can only delete a company which has no users(realtors/hunters), else he is unable to delete it. 2.Realtor cannot change his company and can post an ad under any user. 3. House hunter inquiry feature is absent hence could not test this test case.    
1.Admin can only delete a company which has no users(realtors/hunters), else he is unable to delete it. 2.Realtor cannot change his company and can post an ad under any user. 3. House hunter inquiry feature is absent hence could not test this test case.    
1. When the admin deletes a real estate company which has some realtors and houses, (s)he can no longer view the list of other realtors, house hunters and users. The view button redirects to an error page. 2. Admin was able to view realtors/hunters/ users before any deletion happened. After the above step 1, it seems taht admin is unable to view users, realtors and hunters. So, admin cannot delete any users, realtors and hunters.
1. When the admin deletes a real estate company which has some realtors and houses, (s)he can no longer view the list of other realtors, house hunters and users. The view button redirects to an error page. 2. Admin was able to view realtors/hunters/ users before any deletion happened. After the above step 1, it seems taht admin is unable to view users, realtors and hunters. So, admin cannot delete any users, realtors and hunters.
1. When admin tries to delete real estate company that has realtors and house hunters in it, there is an error that says 'Cannot delete record because of dependent realtors'. Since real estate company is a foreign key in the realtor table, the system does not allow the deletion of real estate companies that have realtors under it. 2. When a realtor changes his real estate company, the houses that are listed by him are unaffected. The system also allows the realtor to delete houses listed in the previous company. 3. I was unable to view inquiries after logging in as admin, hence I am not able to inspect the condition of submitted inquiries after the hunter who created the inquiries has been deleted.
1. When admin tries to delete real estate company that has realtors and house hunters in it, there is an error that says 'Cannot delete record because of dependent realtors'. Since real estate company is a foreign key in the realtor table, the system does not allow the deletion of real estate companies that have realtors under it. 2. When a realtor changes his real estate company, the houses that are listed by him are unaffected. The system also allows the realtor to delete houses listed in the previous company. 3. I was unable to view inquiries after logging in as admin, hence I am not able to inspect the condition of submitted inquiries after the hunter who created the inquiries has been deleted.
1. User cannot sign up as both Realtor and Hunter, no role switching.  
1. Unable to login as admin. Hence, I was not able to test the scenario when a real estate company is deleted by the admin. 2. The list listing link shows only the 2 pre-existing houses by default. Even after applying the appropriate search filters, the newly created houses are not being displayed. Hence, I was unable to test scenario of change of real estate company.  3. Since the admin login is not working, the test on inquiries could not be performed.
1. Unable to login as admin. Hence, I was not able to test the scenario when a real estate company is deleted by the admin. 2. The list listing link shows only the 2 pre-existing houses by default. Even after applying the appropriate search filters, the newly created houses are not being displayed. Hence, I was unable to test scenario of change of real estate company.  3. Since the admin login is not working, the test on inquiries could not be performed.
1. Unable to login as admin. Hence, I was not able to test the scenario when a real estate company is deleted by the admin. 2. The list listing link shows only the 2 pre-existing houses by default. Even after applying the appropriate search filters, the newly created houses are not being displayed. Hence, I was unable to test scenario of change of real estate company.  3. Since the admin login is not working, the test on inquiries could not be performed.
1. This test fails, as corresponding houses and realtors are not deleted. 2. The realtor's current company is not visible (feature break), thus it fails. 3. This test case fails as inquiry of the user is not deleted. 
1. This test fails, as corresponding houses and realtors are not deleted. 2. The realtor's current company is not visible (feature break), thus it fails. 3. This test case fails as inquiry of the user is not deleted. 
1. This test case is a flaw as an admin can hitherto delete whenever and whatever he wants.  2. This too is not strongly tested and runs into glitches on doing so.  3. This too falls through when tested.  4. The admin can be deleted and edited with. System fails overall when this case happens. Biggest flaw yet unresolved. 
1. the realtors also got deleted its a pass 2.switches successfully 3.previous company house cannot be removed inquires, will not get deleted with the removed house hunter
1. the realtors also got deleted its a pass 2.switches successfully 3.previous company house cannot be removed inquires, will not get deleted with the removed house hunter
1. The grammar in introduction may need improvement to be more understandable. 2. For abbreviations, it would be better to give explanations to help others understand.
1. The grammar in introduction may need improvement to be more understandable. 2. For abbreviations, it would be better to give explanations to help others understand.
1. tests are too few for models 2. integration tests missing   
1. tests are too few for models 2. integration tests missing   
1. Team has worked well compared to last release on UI and tried to cover up all the functionalities. 2.  I still can not see Admin credentials in ReadMe file, ReadMe file only states there will be only one admin in the system. Hence can not review admin functionalities. 3.  I am not able to create house using realtors login as well. It seems code only support specific inputs for house creation and i am not able to find those specific inputs. 4. Hence can not perform many other functionalities reviews from house hunter also.  
1. Team has worked well compared to last release on UI and tried to cover up all the functionalities. 2.  I still can not see Admin credentials in ReadMe file, ReadMe file only states there will be only one admin in the system. Hence can not review admin functionalities. 3.  I am not able to create house using realtors login as well. It seems code only support specific inputs for house creation and i am not able to find those specific inputs. 4. Hence can not perform many other functionalities reviews from house hunter also.  
1. Team has worked well compared to last release on UI and tried to cover up all the functionalities. 2.  I still can not see Admin credentials in ReadMe file, ReadMe file only states there will be only one admin in the system. Hence can not review admin functionalities. 3.  I am not able to create house using realtors login as well. It seems code only support specific inputs for house creation and i am not able to find those specific inputs. 4. Hence can not perform many other functionalities reviews from house hunter also.  
1. Team did not provide credentials in readme file. Hence can not check these functionalities. 2. Realtor is allowed to change company, but only able to create a house hence can not review further functionality. 3. Again admin credentials not given and realtor not able to create house.
1. Team did not provide credentials in readme file. Hence can not check these functionalities. 2. Realtor is allowed to change company, but only able to create a house hence can not review further functionality. 3. Again admin credentials not given and realtor not able to create house.
1. Team did not provide credentials in readme file. Hence can not check these functionalities. 2. Realtor is allowed to change company, but only able to create a house hence can not review further functionality. 3. Again admin credentials not given and realtor not able to create house.
1. Switch role option is working for Admin too which is not supposed to be the case.
1. Switch role functionality could have been simplified. While logging there are two fields regarding roles. If a user forgets to mark yes for realtor, then switch role will be redundant. There is dependency between switch role and these fields. Both do the same functionality which results in code duplication. 2. A realtor should not be able to add inquiry, he should be able to reply to inquiry.
1. Problem in Admin Logout 2. No option for updating profile for realtor 3. Realtor cannot create a new company. 4. Realtor cannot view Potential Buyers of his company. 5. Realtor cannot view inquiries for a house. 6. Realtor cannot submit replies for inquiries. 7. Realtor cannot sign out. 8. Hunter cannot edit his profile. 9. Hunter cannot view Real Estate Company information. 10. Hunter cannot add a house in his interested list. 11. Hunter cannot sign out. 12. Admin cannot view inquiries.
1. Problem in Admin Logout 2. No option for updating profile for realtor 3. Realtor cannot create a new company. 4. Realtor cannot view Potential Buyers of his company. 5. Realtor cannot view inquiries for a house. 6. Realtor cannot submit replies for inquiries. 7. Realtor cannot sign out. 8. Hunter cannot edit his profile. 9. Hunter cannot view Real Estate Company information. 10. Hunter cannot add a house in his interested list. 11. Hunter cannot sign out. 12. Admin cannot view inquiries.
1. Problem in Admin Logout 2. No option for updating profile for realtor 3. Realtor cannot create a new company. 4. Realtor cannot view Potential Buyers of his company. 5. Realtor cannot view inquiries for a house. 6. Realtor cannot submit replies for inquiries. 7. Realtor cannot sign out. 8. Hunter cannot edit his profile. 9. Hunter cannot view Real Estate Company information. 10. Hunter cannot add a house in his interested list. 11. Hunter cannot sign out. 12. Admin cannot view inquiries.
1. If the company that a realtor belongs to is deleted, his or her company will be the admin company, which I think may nit be the best choice. The company can be empty and in that case, the realtor should nit be able to list a house. 2. The inquiry should be able to show the hunter's name, not the code string.
1. If the company that a realtor belongs to is deleted, his or her company will be the admin company, which I think may nit be the best choice. The company can be empty and in that case, the realtor should nit be able to list a house. 2. The inquiry should be able to show the hunter's name, not the code string.
1. If the admin deletes realtor/company accounts, house ads posted by them still shows. 2. If realtor changes his company then he can no delete the ad post posted by him previously. 3. If an admin deletes house hunters, inquiries remain saved.   
1. If the admin deletes realtor/company accounts, house ads posted by them still shows. 2. If realtor changes his company then he can no delete the ad post posted by him previously. 3. If an admin deletes house hunters, inquiries remain saved.   
1. if a real estate company is deleted has houses and realtor, then the house and inquiries are deleted too 2. when you change your company as a realtor, then you can't edit houses listed from another company, but it still shows up 3. the inquiries are deleted if the respective hunter is deleted  
1. if a real estate company is deleted has houses and realtor, then the house and inquiries are deleted too 2. when you change your company as a realtor, then you can't edit houses listed from another company, but it still shows up 3. the inquiries are deleted if the respective hunter is deleted  
1. I wasn't able to log in from the admin role to test. 2. When I tested, the realtor wasn't able to join a real estate company. 3. Couldn't login from admin account.
1. houses stillshow up after deleting company 2. when a realtor switches companies, their old listed house still shows up and is editable 3. no potential buyer list
1. Fails this edge case due to unavailable admin functions 2. This function fails to.  3. Not available. 4. Realtor inquiries are also non functional. 
1. DELETES 2. NOPE 3. DELETES 4. NO EDGE CASES MENTIONED
1. Could not login from the admin credentials provided 2. Realtor cannot change the real estate company. He/she is able to update the real estate company information, which in my opinion is the function of the admin 3. Could not login from the admin credentials provided. 4. Realtor can list a house without giving details of 
1. Could not login from the admin credentials provided 2. Realtor cannot change the real estate company. He/she is able to update the real estate company information, which in my opinion is the function of the admin 3. Could not login from the admin credentials provided. 4. Realtor can list a house without giving details of 
1. Could not login from the admin credentials provided 2. Realtor cannot change the real estate company. He/she is able to update the real estate company information, which in my opinion is the function of the admin 3. Could not login from the admin credentials provided. 4. Realtor can list a house without giving details of 
1. Could not login as administrator, no  information for login provided in seeds.rb or the README doc. 2. Changing a house hunter role to realtor, did not list functionalities related to realtor. Hence, the realtor was not able to check/join companies. Please check with review@review.com, password : password 3. Could not login as administrator, no  information for login provided in seeds.rb or the README doc. 4. I had just created a house hunter account, but I could see my interested houses and inquiries. This doesn't seem to be correct. Interest list to user mapping is not done correctly. The README file does not provide details regarding the application. Hence, it is not easy to review the application. 5. While updating the user, the password field is visible. This is a major security concern.
1. Could not login as administrator, no  information for login provided in seeds.rb or the README doc. 2. Changing a house hunter role to realtor, did not list functionalities related to realtor. Hence, the realtor was not able to check/join companies. Please check with review@review.com, password : password 3. Could not login as administrator, no  information for login provided in seeds.rb or the README doc. 4. I had just created a house hunter account, but I could see my interested houses and inquiries. This doesn't seem to be correct. Interest list to user mapping is not done correctly. The README file does not provide details regarding the application. Hence, it is not easy to review the application. 5. While updating the user, the password field is visible. This is a major security concern.
1. Code is simple and written efficiently without long functions, unnecessary looping or dead code. 2. Shown snippet itself is well modularized and no need to be written as separate methods 3. Code is well understandable. 4. Code does follow ruby style guide. 5. Code follows DRY principle.  
1. Clicking on action from manage menu correctly opens the corresponding tab.    Clicking on any manage sub menu action, correctly loads the corresponding rubric. 2. Whenever is rubric is changes, user is being asked for confirmation.    On conformation from user, corresponding  review response is deleted and email is being sent to user.    When user declined the confirmation, rubric is set back to original one. 3. Issue#1173 does not seem to be resolved.
1. Cannot test as delete functionality is missing. 2. Cannot test as functionality is missing. 3. Cannot test as delete functionality is missing.
1. All realtors belonging to a company should not be allowed to delete the company. Instead only the realtor who created the company must be allowed to delete. Else it can be catastrophic.
1. After signing up as a realtor, I edited the profile and selected a company. However, I can't post a house, the system kept asking me to update my profile and select one of the companies. (alert: "Create a new company or select an existing company by editing profile to post a house.")  2. when the admin deleted the company, the house that belongs to the company were not destroy.  3. https://guarded-chamber-77369.herokuapp.com/potentialbuyers/34 this url crashes   
1 check is failing so the build has not passed.
1 > No Option to switch roles between hunter/Realtor 2 > No default admin/realtor/hunter account. Maybe you forgot to run db:seed on the server 3 > No validation for Email while creating a company. Any string can be typed in. 4 > Inquiries can only have 1 reply which is a field in DB which gets updated
1 > No Option to switch roles between hunter/Realtor 2 > No default admin/realtor/hunter account. Maybe you forgot to run db:seed on the server 3 > No validation for Email while creating a company. Any string can be typed in. 4 > Inquiries can only have 1 reply which is a field in DB which gets updated
1 > Admin login is not working for me 2 > Since I cannot use Admin Account, i cannot test edge cases related to creating/deleting users or creating/deleting Companies 3 > Search is working but is case sensitive.
1 > Admin login is not working for me 2 > Since I cannot use Admin Account, i cannot test edge cases related to creating/deleting users or creating/deleting Companies 3 > Search is working but is case sensitive.
1 > Admin Login is not working for me 2 > Cannot Login through default Realtor/Hunter Accounts 3 > No Search Functionality for houses 4 > No Image upload for houses 5 > Views are a bit messed up, It shows Inquire About a House in create company page. 6 > Navigation is not proper, Creating a new house redirects you to the home page 7 > inquiries Feature although implemented does not work 8 > No reply Feature   
1 ) Since Admin Login is not working, this cannot be tested 2 ) Realtor Can still edit the house after changing his Company 3 ) Inquiries Feature although implemented is not working    Since the basic Functionalities are still lacking I believe the edge cases have not been handled anywhere.
1 ) Admin cannot reply to Inquiries Posted by the users. If he can I am not able to find that option from the dashboard. 2 ) Admin cannot delete the real estate companies in some random cases. works in some. 3 ) I could not find the option to switch between hunter and realtor roles. 4 ) Search is Case sensitive 5 )
1 ) Admin cannot reply to Inquiries Posted by the users. If he can I am not able to find that option from the dashboard. 2 ) Admin cannot delete the real estate companies in some random cases. works in some. 3 ) I could not find the option to switch between hunter and realtor roles. 4 ) Search is Case sensitive 5 )
* Test plan is missing. * Code is directly copy-pasted in the approach section - pseudo code with proper comments would have been better. * Wiki alignment is missing in those places where the code is copy-pasted.  
* Test plan is missing. * Code is directly copy-pasted in the approach section - pseudo code with proper comments would have been better. * Wiki alignment is missing in those places where the code is copy-pasted.  
@all_task vs @student_tasks   The name 'all_task' does not sound appropriate. It should be student_all_tasks.   1. all_tasks => student_all_tasks   2. student_tasks => student_available_tasks   3. current_student_tasks => student_current_tasks 4. past_student_tasks => student_past_tasks     Also, the filename will_paginate_array_fix.rb seems misleading to me. A better name would have been support_array_pagination.rb.   Also, I am not sure this file should be in the initializers, as it is just a require statement. May be this should be included in the places where the pagination is required, instead of loading it during app initialization.       
@all_task vs @student_tasks   The name 'all_task' does not sound appropriate. It should be student_all_tasks.   1. all_tasks => student_all_tasks   2. student_tasks => student_available_tasks   3. current_student_tasks => student_current_tasks 4. past_student_tasks => student_past_tasks     Also, the filename will_paginate_array_fix.rb seems misleading to me. A better name would have been support_array_pagination.rb.   Also, I am not sure this file should be in the initializers, as it is just a require statement. May be this should be included in the places where the pagination is required, instead of loading it during app initialization.       
@all_task vs @student_tasks   The name 'all_task' does not sound appropriate. It should be student_all_tasks.   1. all_tasks => student_all_tasks   2. student_tasks => student_available_tasks   3. current_student_tasks => student_current_tasks 4. past_student_tasks => student_past_tasks     Also, the filename will_paginate_array_fix.rb seems misleading to me. A better name would have been support_array_pagination.rb.   Also, I am not sure this file should be in the initializers, as it is just a require statement. May be this should be included in the places where the pagination is required, instead of loading it during app initialization.       
(2) Realtor cannot add a house so could not be tested. (3) Admin is unable to delete a house hunter who has submitted inquiries but no proper explanation or error message is displayed. System handles house deletion properly. All relevant inquiries are deleted.
(1)No login or sing uo (2)No authorization for the user, basically, any one can do anything in this system. (3)No picture function (4)No search function (5)No reply for the inquiry.
(1): Works perfectly fine (2): The realtor is able to remove previous houses! works like charm (3): Enquiries are not auto-deleted
(1): when an admin deletes a company which has existing realtors, it shows on the admin page that the company is deleted, but when the realtor signs in, it still shows that he belongs to the deleted company, and is able to update all the profile information of the company. So, it means the company is not being deleted, even when it says so on the admin page. (2): the realtor isn't able to view any houses except his own company. (3): No, the inquiries are not auto deleted, nor is the househunter removed from potential buyers list.
(1): Unable to login as admin! (2): Realtor can delete houses, but houses don't seem to map to a real estate company, rather they are mapped to the realtor only (3): Unable to login as admin
(1): Admin can delete real-estate companies with realtors attached to it (2): Realtor is being able to delete any house (3): Admin can delete house-hunter with several enquires.
(1) What will happen if the admin tries to delete a real estate company which has some realtors and houses? It deletes it successfully.     (2) What will happen if a realtor changes his/her real estate company? Will (s)he be prohibited to remove the houses (s)he listed in the previous company? No, houses are easily changed and can be deleted by realtors.    (3) What will happen if admin tries to delete a house hunter who has submitted several inquiries? Will the inquiries be automatically deleted? If this house hunter is a potential buyer of a house, will (s)he be removed from the corresponding potential buyers list?  It cannot be removed if inquiries are pending.    4) You can come up with more edge-cases. If the system fails in some edge-cases, explain with enough details Most of the functionalities I checked, such as creating a house, putting inquiries, removing various users, looking back in different accounts if it removes such as inquiries if user has still submitted or pending inquiries. All works fine. 
(1) What will happen if the admin tries to delete a real estate company which has some realtors and houses? Houses got deleted and realtor got assigned with some other random company.   (2) What will happen if a realtor changes his/her real estate company? Will (s)he be prohibited to remove the houses (s)he listed in the previous company? House also got changed to realtor's new company.   (3) What will happen if the admin tries to delete a house hunter who has submitted several inquiries? Will the inquiries be automatically deleted?  Cascade delete is in place.
(1) What will happen if the admin tries to delete a real estate company which has some realtors and houses? Can't be tested. (2) What will happen if a realtor changes his/her real estate company? Will (s)he be prohibited to remove the houses (s)he listed in the previous company? No realtor is still allowed to delete houses. (3) What will happen if admin tries to delete a house hunter who has submitted several inquiries? Will the inquiries be automatically deleted? If this house hunter is a potential buyer of a house, will (s)he be removed from the corresponding potential buyers list? Cannot be tested (4)  Delete a house in a House Hunter's interest list and see if it still appears there? Works as expected
(1) https://nameless-everglades-55236.herokuapp.com/users/sign_up does not let you enter Roles  which then fails the user signup (2) No details of admin given    (3) Tried logging for companies and got an error, https://nameless-everglades-55236.herokuapp.com/companies With some combinations, was able to login but then again when tried updating account got  "error 1 error prohibited this user from being saved:", I suspect that is because role field does not have a value  (4) List of users being showed for creating a new house  (5) Issues in sending messages tried sending a message got error "https://nameless-everglades-55236.herokuapp.com/messages"  
(1) https://nameless-everglades-55236.herokuapp.com/users/sign_up does not let you enter Roles  which then fails the user signup (2) No details of admin given    (3) Tried logging for companies and got an error, https://nameless-everglades-55236.herokuapp.com/companies With some combinations, was able to login but then again when tried updating account got  "error 1 error prohibited this user from being saved:", I suspect that is because role field does not have a value  (4) List of users being showed for creating a new house  (5) Issues in sending messages tried sending a message got error "https://nameless-everglades-55236.herokuapp.com/messages"  
(1) Admin not implemented (2) Real estate company functionality missing. (3) Admin not implemented The Readme.md wasn't updated to reflect the state of the application. As best I can tell the app doesn't handle any known edge case.
"Switch to student view" - But to which student? Open and Close student view is handled on clicking it to switch the type of view. Same changes (to delete session[:student_view]) need to be done on logout in auth_controller as well.I logged in as instructor6, clicked on "Open Student View" and logged out. When I login again as instructor4, I must still see "Open Student View", but I see "Close Student View" while I'm not in the student view at all since I just logged in...
-No validations implemented on the model's attributes. - The models do not have associations implemented. 
-No validations implemented on the model's attributes. - The models do not have associations implemented. 
-No validations implemented on the model's attributes. - The models do not have associations implemented. 
- There is no admin account - No roles assigned to any users - Any users can edit/delete another user - Functionalities of potential buyer, realtors, admin missing or incorrect.    
- The write-up does mention the files changed but misses out on adding code snippets. - Little formatting inconsistencies found like "-- Expertiza Project" in the introduction, and a ":-" only for Overview but none of the other headings. - Looks like "Separate the list of 'teamed with' students from the current tasks box" needs to be a heading rather than plain text! - Now we have created a separate table for assignments" sounds ambiguous - does it mean a new database table or a html table..? Please be specific. - "A helper function was also added to format a string into multiple lines" - please mention what the string is about (what it represents), what are these multiple lines that it is getting split into, and why you would want to split them. - Test Cases are not stated. Test Plan does mention one as "for example" but the testing process could've been given a little more respect. :)
- The write-up does mention the files changed but misses out on adding code snippets. - Little formatting inconsistencies found like "-- Expertiza Project" in the introduction, and a ":-" only for Overview but none of the other headings. - Looks like "Separate the list of 'teamed with' students from the current tasks box" needs to be a heading rather than plain text! - Now we have created a separate table for assignments" sounds ambiguous - does it mean a new database table or a html table..? Please be specific. - "A helper function was also added to format a string into multiple lines" - please mention what the string is about (what it represents), what are these multiple lines that it is getting split into, and why you would want to split them. - Test Cases are not stated. Test Plan does mention one as "for example" but the testing process could've been given a little more respect. :)
- The write-up does mention the files changed but misses out on adding code snippets. - Little formatting inconsistencies found like "-- Expertiza Project" in the introduction, and a ":-" only for Overview but none of the other headings. - Looks like "Separate the list of 'teamed with' students from the current tasks box" needs to be a heading rather than plain text! - Now we have created a separate table for assignments" sounds ambiguous - does it mean a new database table or a html table..? Please be specific. - "A helper function was also added to format a string into multiple lines" - please mention what the string is about (what it represents), what are these multiple lines that it is getting split into, and why you would want to split them. - Test Cases are not stated. Test Plan does mention one as "for example" but the testing process could've been given a little more respect. :)
#NAME?
- After the admin deletes a company, its  associated houses, realtors are not deleted. - Realtors who don't have a company can still post a listing, view/edit other companies' listing and also send/receive inquires.
#NAME?
#NAME?
#NAME?
 Your background and detail of description is excellent. However without a strong background in the topic I could not figure out what a DOM was.  I don't see anything about a test plan but other wise the detail was good.
 you can not destroy any real estate company, realtor, or househunter as admin with any realtor, house, or inquire, it will just throw an error. you can have negative floors for house. readme file does not tell anything about edge cases. 
 Yes, they have improved the UML diagram from last round and its a standard class UML diagram. Its very self-explanatory. Though the diagram under test plan should be clearer. Also, there could have been a sample report generated for reference.
 Yes, they have improved the UML diagram from last round and its a standard class UML diagram. Its very self-explanatory. Though the diagram under test plan should be clearer. Also, there could have been a sample report generated for reference.
 Yes, their design seems to cover all the intended functionality requested for the project. But how the team will achieve the few not so straight-forward sorting such as the one indicated in Author feedback report is not clear to conclude, their approach will achieve the intended functionality    
 Yes, their design seems to cover all the intended functionality requested for the project. But how the team will achieve the few not so straight-forward sorting such as the one indicated in Author feedback report is not clear to conclude, their approach will achieve the intended functionality    
 Yes, their design seems to cover all the intended functionality requested for the project. But how the team will achieve the few not so straight-forward sorting such as the one indicated in Author feedback report is not clear to conclude, their approach will achieve the intended functionality    
 Yes the design is simple, however, as stated above it is very succinct and abstract.  Only which files are going to be edited are written. What methods/interfaces will be modified is not mentioned.
 Yes the design is simple, however, as stated above it is very succinct and abstract.  Only which files are going to be edited are written. What methods/interfaces will be modified is not mentioned.
 Yes the design is simple in nature and easy to understand. This can be attributed to the fact that their issues are quite simple in nature. They could have provided some simple UI mockups of the changes.
 Yes the design includes a test plan in the end. This too is very abstract (about 5 lines total) and just states the use cases. Tip: use the 'it should' format or at least describe the simple manual testing that can be done.
 Yes the design includes a test plan in the end. This too is very abstract (about 5 lines total) and just states the use cases. Tip: use the 'it should' format or at least describe the simple manual testing that can be done.
 Visual aids are missing entirely. No class diagrams are provided either. Tip: you could've provided simple charts or ER diagrams for the design
 UML diagrams not present but rest of the document seems feasible
 UML diagrams not present but rest of the document seems feasible
 UI is easy to use, but not well described in the README. Please add brief Test Cases to demonstrate expected functionality.
 This seems complete to me. They have the introduction with a purpose and problem, a ui mockup, and use cases. It does seem odd that the use cases are listed in the test plan.
 This seems complete to me. They have the introduction with a purpose and problem, a ui mockup, and use cases. It does seem odd that the use cases are listed in the test plan.
 This seems complete to me. They have the introduction with a purpose and problem, a ui mockup, and use cases. It does seem odd that the use cases are listed in the test plan.
 They wrote the literal least possible, but again, I get it. Learning how to test with doubles, mocks, stubs, and spies, to peek in on the innards of a high complexity OO system was actually really difficult.
 They wrote the literal least possible, but again, I get it. Learning how to test with doubles, mocks, stubs, and spies, to peek in on the innards of a high complexity OO system was actually really difficult.
 They wrote the literal least possible, but again, I get it. Learning how to test with doubles, mocks, stubs, and spies, to peek in on the innards of a high complexity OO system was actually really difficult.
 They test the controller but not the model.
 They have included the flowchart of the flow of the functionality that is being added which seems to be designed properly and readable. Also database table whichthey are going to change is depicted. They could add Class Responsibility Collaborators cards to further illustrate the code changes they are about to make.
 They have included the flowchart of the flow of the functionality that is being added which seems to be designed properly and readable. Also database table whichthey are going to change is depicted. They could add Class Responsibility Collaborators cards to further illustrate the code changes they are about to make.
 They explained what design pattern they use but not how they use them.
 they explained how they made the changes. Patterns if used are not noticed by looking at the code and not mentioned in the writeup
 they explained how they made the changes. Patterns if used are not noticed by looking at the code and not mentioned in the writeup
 They dont have a test plan in their write up but they showed the screenshots for various cases.
 They did not do any automated tests.
 They continued to update their project. However, some changes were made after the due date. 
 There is no design given per se but from what I can understand from the document, their proposed system covers all required issues. 
 There is no design given per se but from what I can understand from the document, their proposed system covers all required issues. 
 There are some tests for the controllers, but it looks like just the scaffold generated tests.
 There are no visual aids of any kind
 there are no deployed version of the project, readme file does not give any help, and I tried to download it, and run it locally, it is not working. 
 There are no any submission for round 1.
 The writeup overall is good, but they did change the problem related to test plan like I mentioned last time. 
 The writeup explains to a limited extent the approach that was followed.Majority of the writeup consists of code and not how it was implemented.
 The writeup explains to a limited extent the approach that was followed.Majority of the writeup consists of code and not how it was implemented.
 The write-up has detailed how the author has done the changes. But it fails to address why the particular direction was taken, in some cases. It would be good to elucidate on that as well. In ' Solutions Implemented...' section, it would be good to include the names of the files before each code snippet and not just the description so that it is easier for the reader to relate.  
 The system now has the basic functionality that was missing last time like logging in. Good job on the fixes. It crashed when as a realtor I attempted to create a house, telling me to check the logs for more information if I was the owner. Still no information on an admin user listed in the github readme though.
 The system now has the basic functionality that was missing last time like logging in. Good job on the fixes. It crashed when as a realtor I attempted to create a house, telling me to check the logs for more information if I was the owner. Still no information on an admin user listed in the github readme though.
 The system now has the basic functionality that was missing last time like logging in. Good job on the fixes. It crashed when as a realtor I attempted to create a house, telling me to check the logs for more information if I was the owner. Still no information on an admin user listed in the github readme though.
 The source code and project structure seems fine, but most of it still looks scaffold generated. RoR conventions have been maintained.
 The realtor cannot choose company so the edge case that handle change in company is not handled
 The realtor cannot choose company so the edge case that handle change in company is not handled
 The project does not pass the Travis CI integration tests. I looked at its output, and I cannot tell how significant the failure is. Maybe its an easy fix?
 The project does not pass the Travis CI integration tests. I looked at its output, and I cannot tell how significant the failure is. Maybe its an easy fix?
 The project does not pass the Travis CI integration tests. I looked at its output, and I cannot tell how significant the failure is. Maybe its an easy fix?
 The problem statements are much detailed, but they could be more concise. The test plan could probably be elaborated for better explanation. 
 The problem statements are much detailed, but they could be more concise. The test plan could probably be elaborated for better explanation. 
 The photos included are superb at showing the expected View. They can have more 1 or 2 more stars if most of the Expteriza work for the github metrics was already completed when they made these screen shots. Do you think it is feasible to expect that you can start a software project before getting a green light on the project in order to include high quality pictures of your proposed View in action?
 The photos included are superb at showing the expected View. They can have more 1 or 2 more stars if most of the Expteriza work for the github metrics was already completed when they made these screen shots. Do you think it is feasible to expect that you can start a software project before getting a green light on the project in order to include high quality pictures of your proposed View in action?
 The photos included are superb at showing the expected View. They can have more 1 or 2 more stars if most of the Expteriza work for the github metrics was already completed when they made these screen shots. Do you think it is feasible to expect that you can start a software project before getting a green light on the project in order to include high quality pictures of your proposed View in action?
 The page is complete. Only thing which I mentioned is a good color combination is needed.
 The logout functionality does not work for any user
 the links tell you what page you will go to or what action you will do. It's not pretty, but it works enough
 the links tell you what page you will go to or what action you will do. It's not pretty, but it works enough
 The functions seem to be implemented in a good manner and the code seems to be DRY.. In some cases though the authors could have improved as in the i app/helpers/student_task_helper.rb  file. In side the due_date_color method they could have used case expressions in Ruby instead of the if else logic implemented as that would be a more Ruby on Rails way of doing it. As it will reduce the lines of code as well as being a more elegant way of handling it.
 The functions seem to be implemented in a good manner and the code seems to be DRY.. In some cases though the authors could have improved as in the i app/helpers/student_task_helper.rb  file. In side the due_date_color method they could have used case expressions in Ruby instead of the if else logic implemented as that would be a more Ruby on Rails way of doing it. As it will reduce the lines of code as well as being a more elegant way of handling it.
 The functionalities that the authors plan to add seem logical as they plan to implement OffScreenCanvas as an efficient alternative to HTMLCanvas but with all the functionalities included.  The authors have not discussed about the implementation of the proposed design yet, which I am expecting them to do in the next review. The response time is expected to decrease with the incorporation of OffScreenCanvas because the rendering of the images in the canvas is done independently using web workers  
 The Fixes Required part has been explained well with the cause of the issues. But, more light could be shed on what the formative and summative rubrics are. 
 The features work. However the notice messages could be improved to state exactly the action that is conducted. Eg. One of the notice message says either user is already added or it doesn't exist. Narrowing it down will be of great value.
 The explanations seem to be okay. Couldn't fully understand what they meant by 'use proper polymorphism to handle ...' in the problem statement part 2(b)i.
 The explanations seem to be okay. Couldn't fully understand what they meant by 'use proper polymorphism to handle ...' in the problem statement part 2(b)i.
 The document is simple to read and has the details mentioned for the the project purpose , the design of their implementation but they haven't included the test plan
 The document is simple to read and has the details mentioned for the the project purpose , the design of their implementation but they haven't included the test plan
 The diagrams have been enlarged and are now visible. Good improvement. However I still feel that computer made mockups would have looked cleaner.
 The diagrams have been enlarged and are now visible. Good improvement. However I still feel that computer made mockups would have looked cleaner.
 The design seems to be sound. There are a lot of mention of which files will be modified however, as I said in the previous round, there is no mention of the layout of the existing database or if the changes they will make currently will change the database. Suggestion: Team could mention what tables are present in the database of the Bacui project. I believe this will be really helpful since most of the reviewers are working on Expertiza projects and have no knowledge of Bacui projects. At the very least the team could mention which tables the project will be interacting with along with their structure.
 The design seems to be sound. There are a lot of mention of which files will be modified however, as I said in the previous round, there is no mention of the layout of the existing database or if the changes they will make currently will change the database. Suggestion: Team could mention what tables are present in the database of the Bacui project. I believe this will be really helpful since most of the reviewers are working on Expertiza projects and have no knowledge of Bacui projects. At the very least the team could mention which tables the project will be interacting with along with their structure.
 The design seems to be sound. There are a lot of mention of which files will be modified however, as I said in the previous round, there is no mention of the layout of the existing database or if the changes they will make currently will change the database. Suggestion: Team could mention what tables are present in the database of the Bacui project. I believe this will be really helpful since most of the reviewers are working on Expertiza projects and have no knowledge of Bacui projects. At the very least the team could mention which tables the project will be interacting with along with their structure.
 The design seems to be sound. There are a lot of mention of which files will be modified however, as I said in the previous round, there is no mention of the layout of the existing database or if the changes they will make currently will change the database. Suggestion: Team could mention what tables are present in the database of the Bacui project. I believe this will be really helpful since most of the reviewers are working on Expertiza projects and have no knowledge of Bacui projects. At the very least the team could mention which tables the project will be interacting with along with their structure.
 The design is quite robust however more effort could be given to the design analysis. In some places the author just states that they might have to look into the code.
 The design appears to be well made. However due to lack of more detail I am unable to judge it correctly. What changes need to be made in the files is not mentioned.
 The design appears to be well made. However due to lack of more detail I am unable to judge it correctly. What changes need to be made in the files is not mentioned.
 The color combination could be changed for buttons. Maybe for someone who has a difficulty while differentiating colors (me) faces a lot of problem.
 The code is well written, follows ruby guidelines and functions are of appropriate length.   No comments are provided what so ever, making the huge code change very difficult to follow.
 The code is well written, follows ruby guidelines and functions are of appropriate length.   No comments are provided what so ever, making the huge code change very difficult to follow.
 The code is well written, follows ruby guidelines and functions are of appropriate length.   No comments are provided what so ever, making the huge code change very difficult to follow.
 The code block runs out of the space. Needs to be corrected for proper look.
 The build does not pass. Also, the coverage is very low. Not many testcases.
 The build does not pass. Also, the coverage is very low. Not many testcases.
 The authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.
 The authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.
 The authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.
 The authors have done good job explaining the changes to be made to the system, and even explaining why other, more obvious options, are not chosen. It still sounds like a complicated change to make to the system.
 The authors have done good job explaining the changes to be made to the system, and even explaining why other, more obvious options, are not chosen. It still sounds like a complicated change to make to the system.
 The authors have done good job explaining the changes to be made to the system, and even explaining why other, more obvious options, are not chosen. It still sounds like a complicated change to make to the system.
 The admin model is tested however this seems silly as creation of admin accounts doesn't really matter as it is not possible. They are supposed to be predefined. The admin controller has a very extensive list of tests. Very good work here.    
 The admin model is tested however this seems silly as creation of admin accounts doesn't really matter as it is not possible. They are supposed to be predefined. The admin controller has a very extensive list of tests. Very good work here.    
 The admin model is tested however this seems silly as creation of admin accounts doesn't really matter as it is not possible. They are supposed to be predefined. The admin controller has a very extensive list of tests. Very good work here.    
 Test plan is not described fully. However whatever is mentioned in the wiki doc has been implemented via Rspec. But there are some previously running tests which are failing because of the changes.
 Test plan documentation is missing currently. Plan will help to relate with the code and understand if things are tested appropriately and the response is as expected or not
 Sparse on comments describing functionality. Otherewise overall code quality is good, I did not see any glaring issues.
 Sparse on comments describing functionality. Otherewise overall code quality is good, I did not see any glaring issues.
 Some more specific details could be added
 Some checks fail in the build. But I feel that few checks are much intricate (one failed because of a score of 15.07/15) and can be neglected. The TRAVIS CI Build error was faced by many teams too. The namings are not unclear or ambiguous. goto_controller('Questionnaires','3') goto_controller('Review','3')  
 Some cases yes but most cases it needs more documentation
 Only scaffold generated tests for models and controllers.
 Only scaffold generated tests for models and controllers.
 One file is missing. May be a commit issue. Test coverage is not mentioned. Pull request is not raised so it does not mention about the whether the test coverage increased or not.
 Not handled (1) - No actual link created between companies and users as user just stores the company name as a string. Instead, saving the company_id for the user will create a relation between them as the company_id will act as a foreign key. That way edge case example (1) can be handled. Not handled (2) -  Realtor can edit/delete any house that (s)he created even if company changes. Handled. When a user is deleted, (s)he is automatically deleted from potential buyer list of house. The README.md does not cover how the system handles edge cases. 
 Not enough implementation description to provide adequate feedback on this question.
 Not all i can see only some of the methods being covered 61% approx
 Not all i can see only some of the methods being covered 61% approx
 No, the design approach is very high-level over-view. An MVC design pattern is an obvious conclusion for incorporating any functionality in a web application, but more precise details of the design approach from the team can help the reader in a long way in gaining understanding.
 No, changes made from last review.
 No, changes made from last review.
 No the team did not add any new test cases. Coverage is low.
 No the team did not add any new test cases. Coverage is low.
 no testing mentioned in readme file.
 No test cases were added and the coverage decreased.  The overall coverage decreased (-2.9%) to 33.88%.
 No new code was committed during the 2nd round of resubmission.
 No details about the problem statement is mentioned currently. So it is difficult to understand the test code directly.
 Neither the project purpose nor the testing plan or the project design is given. The project just states what are the proposed solutions.
 Neither the project purpose nor the testing plan or the project design is given. The project just states what are the proposed solutions.
 Most of the scenario is covered, the total coverage needs to increase a bit.
 Most of the scenario is covered, the total coverage needs to increase a bit.
 More or less an A for effort, but I don't know if the UML is fine with so little in it because we don't care about what those classes do, or if we should care and there should be more about those classes and their states and behaviors.
 More or less an A for effort, but I don't know if the UML is fine with so little in it because we don't care about what those classes do, or if we should care and there should be more about those classes and their states and behaviors.
 More effort could have been expended on the design because in some places, they are not sure of the direction and just state that they might have to look into the code and discuss with the professor.
 More effort could have been expended on the design because in some places, they are not sure of the direction and just state that they might have to look into the code and discuss with the professor.
 Its fine. I have the gist of it, but most of the text in the document is cut and pasted from the Project Description. The uml is a nice touch, albeit super bare.
 Its a good write up, additionally you could try to explain method and test rather than including all the test cases 
 Its a good write up, additionally you could try to explain method and test rather than including all the test cases 
 It's fine to good. I wish y'all would have posted a link to your repo in stead of the pull request.
 It's fine to good. I wish y'all would have posted a link to your repo in stead of the pull request.
 It's fine to good. I wish y'all would have posted a link to your repo in stead of the pull request.
 in test file, you can give one more line of it, for each test to describe the purpose in a little more detail than just the method names. 
 in test file, you can give one more line of it, for each test to describe the purpose in a little more detail than just the method names. 
 If delete a company, the realtor needs to find another company, and the house under this company disappeared. But the README.md does not cover the edge cases. 
 I think with proper testing, this code is ready to be deployed onto the production server.
 I don't know much about the topic and so it can be hard for me to judge but I would have liked a couple more pictures or other aids to understanding
 I believe this code is ready to be merged once the Travis CI passed.
 Here the team has only included screenshot relating to how the UI of the system should look like which gives a idea of its appearance , However , They haven't given any UML diagrams to represent the flow of their work for example a flow chart relating to how their functionalities would co-ordinate.
 Here the team has only included screenshot relating to how the UI of the system should look like which gives a idea of its appearance , However , They haven't given any UML diagrams to represent the flow of their work for example a flow chart relating to how their functionalities would co-ordinate.
 For the discussed solution, the code does not smell or does not need to have separate methods. The commits show the contributions by only one author. 
 For testing I don't think there are any design related thing.
 Design appears to be sound, however, it is unclear where the NLP algorithm is supposed to go. As in, will the 1st iteration use another service to analyze with the button, and then a 2nd iteration will add the local NLP algorithm?
 Design appears to be sound, however, it is unclear where the NLP algorithm is supposed to go. As in, will the 1st iteration use another service to analyze with the button, and then a 2nd iteration will add the local NLP algorithm?
 Design appears to be sound, however, it is unclear where the NLP algorithm is supposed to go. As in, will the 1st iteration use another service to analyze with the button, and then a 2nd iteration will add the local NLP algorithm?
 Commenting was pretty weak in the files I looked through. Overall code style looked pretty good though, I scanned through the files and nothing caught my eye as poor.
 Commenting was pretty weak in the files I looked through. Overall code style looked pretty good though, I scanned through the files and nothing caught my eye as poor.
 Commenting was pretty weak in the files I looked through. Overall code style looked pretty good though, I scanned through the files and nothing caught my eye as poor.
 codes looks clean, but there are no deployed version of the project. 
 can not test functionalities.
 As the project is based upon making changes to the UI of the system , thus there is no such specific pattern being followed however the design that they have made available in the form of screenshots appear very much inclined with the functionalities that they need to implement .
 All the names and methods look reasonable but some of the function size is still long.
 All the major functionalities work and most of them work. However, There are a couple of bugs that could be solved: After submitting a inquiry and clicking "back", the user is redirected to the page where all the messages in the database are shown The realtor is not able to view the potential buyers for any house The look and all the major functionalities are running smoothly. Great work on that!  
 Again, its fine. I don't understand the changes too well, but I also don't understand MVC and Expertiza very well either, but maybe they could have tried harder. I do feel there is a strong need to refactor and improve the code quality of Expertiza.
 Admin should not able to submit an inquiry and put a house in interest list. Also, the user should not able to sign up as an admin. And reply to the inquiry function must use the email system to reply, cannot do it onsite. When creating a company, the user can only choose Raleigh and Cary as their address. Cannot see the house list by other company. 
 Admin - As an admin, when creating a user, there is an option to create an admin - Can't add a house, gives me an error ( im not adding a picture when i save) - can't make inquiries - can't add houses to interest lists - new hunter/realtors i made did get added to the table of all user Realtor - when i switch companies, the previous houses listed from that company, don't appear again. Hunter - search doesn't work - can't make inquiries or add houses for interest list -
 A more through explanation of what each testcase does will be useful. Its documented well about what the testcase will return but not what it does. Mentioning that will be useful
 A more through explanation of what each testcase does will be useful. Its documented well about what the testcase will return but not what it does. Mentioning that will be useful
 1. when a real estate company is deleted, then the house associated are also deleted 2. when i switch companies, the previous houses listed from that company, don't appear again. 3. cant make inquiries  
 >Unable to test the edge cases as the many functionalities are not working as stated above. > The logout functionality does not work. User is  enabled to login as an admin and realtor at the same time, but cannot log out. > The validation have still not been implemented in the application for example entities can be created without adding any details in the field. Please find the Real estate company creation screen as below: Real estate company was successfully created. Real estate company was successfully created. Name: Website: Address: Size: Founded: Revenue: Synopsis:
 >Unable to test the edge cases as the many functionalities are not working as stated above. > The logout functionality does not work. User is  enabled to login as an admin and realtor at the same time, but cannot log out. > The validation have still not been implemented in the application for example entities can be created without adding any details in the field. Please find the Real estate company creation screen as below: Real estate company was successfully created. Real estate company was successfully created. Name: Website: Address: Size: Founded: Revenue: Synopsis:
 >Unable to test the edge cases as the many functionalities are not working as stated above. > The logout functionality does not work. User is  enabled to login as an admin and realtor at the same time, but cannot log out. > The validation have still not been implemented in the application for example entities can be created without adding any details in the field. Please find the Real estate company creation screen as below: Real estate company was successfully created. Real estate company was successfully created. Name: Website: Address: Size: Founded: Revenue: Synopsis:
 (1)Functions are still long, save choice and save quizes are the top two, consider increasing more internal methods
 (1) I don't have access to an admin account to test this (2) There were no currently existing houses and I cannot create a new one (3) I don't have access to an admin account to test this (4) The README is still just the default one provided by rails.
 (1) I don't have access to an admin account to test this (2) There were no currently existing houses and I cannot create a new one (3) I don't have access to an admin account to test this (4) The README is still just the default one provided by rails.
 (1) I don't have access to an admin account to test this (2) There were no currently existing houses and I cannot create a new one (3) I don't have access to an admin account to test this (4) The README is still just the default one provided by rails.
  Yes they have a test section. The amount of coverage added for the new tests is great. Keep it up, however I would have liked that the authors added more negative cases as part of t heir unit tests.  I see mostly the +ve test cases being handled in the tests.   
  Yes they have a test section. The amount of coverage added for the new tests is great. Keep it up, however I would have liked that the authors added more negative cases as part of t heir unit tests.  I see mostly the +ve test cases being handled in the tests.   
  Yes they have a test section. The amount of coverage added for the new tests is great. Keep it up, however I would have liked that the authors added more negative cases as part of t heir unit tests.  I see mostly the +ve test cases being handled in the tests.   
  The test plan has covered test cases for testing functionalities of sorting submissions table and review mappings per field. They can also include test plan for the edge cases of the system, like the code should not break when the submissions table is empty and show should probably display a flash message saying "no entries to be sorted!". In this way, try to add a few negative testing to improve your coverage. This will make your code more rigid.
  The test plan has covered test cases for testing functionalities of sorting submissions table and review mappings per field. They can also include test plan for the edge cases of the system, like the code should not break when the submissions table is empty and show should probably display a flash message saying "no entries to be sorted!". In this way, try to add a few negative testing to improve your coverage. This will make your code more rigid.
  The test plan has covered test cases for testing functionalities of sorting submissions table and review mappings per field. They can also include test plan for the edge cases of the system, like the code should not break when the submissions table is empty and show should probably display a flash message saying "no entries to be sorted!". In this way, try to add a few negative testing to improve your coverage. This will make your code more rigid.
  The design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information.  Also, they have been thorough in pointing out the application flow in the Application Flow section so as to elucidate the problem statement. 
  The authors have done a good job by identifying the sub-classes they plan to add. It would be good to have an overview of the class definitions. It is quite clear from the explanation that they plan to have different tasks depending upon the type of report to be removed.
  The authors have done a good job by identifying the sub-classes they plan to add. It would be good to have an overview of the class definitions. It is quite clear from the explanation that they plan to have different tasks depending upon the type of report to be removed.
  Realtor can't sign up without specifying a real estate company. This shouldn't be the case. Realtor can't edit his profile after logging in. Admin not able to create realtors and house hunters. Nothing happens when the submit button is clicked. Later this was found out to be because of the phone number not having 10 digits. But no error or validation message was shown.  Admin can't create new houses. Realtor after logging in can only create and view houses. No way found to view and reply to inquiries. Also, no way found to see potential buyers. House hunters can edit houses due to session issues.   House Search feature breaks. It works only with location. Realtors are not able to add new houses. Admin can't delete a real estate company. Clicking destroy takes it back to the show page. Log out running into errors.  
  Realtor can't sign up without specifying a real estate company. This shouldn't be the case. Realtor can't edit his profile after logging in. Admin not able to create realtors and house hunters. Nothing happens when the submit button is clicked. Later this was found out to be because of the phone number not having 10 digits. But no error or validation message was shown.  Admin can't create new houses. Realtor after logging in can only create and view houses. No way found to view and reply to inquiries. Also, no way found to see potential buyers. House hunters can edit houses due to session issues.   House Search feature breaks. It works only with location. Realtors are not able to add new houses. Admin can't delete a real estate company. Clicking destroy takes it back to the show page. Log out running into errors.  
  Realtor can't sign up without specifying a real estate company. This shouldn't be the case. Realtor can't edit his profile after logging in. Admin not able to create realtors and house hunters. Nothing happens when the submit button is clicked. Later this was found out to be because of the phone number not having 10 digits. But no error or validation message was shown.  Admin can't create new houses. Realtor after logging in can only create and view houses. No way found to view and reply to inquiries. Also, no way found to see potential buyers. House hunters can edit houses due to session issues.   House Search feature breaks. It works only with location. Realtors are not able to add new houses. Admin can't delete a real estate company. Clicking destroy takes it back to the show page. Log out running into errors.  
  I could not see any test plan. Team could work on writing test plan and implementing the same for the issues resolved. Also where team is failing to implement some functionality, as future scope, they can try design the solution and also test cases for the same,
  Convert if nested inside else to elsif. Unused variable key inside remove_non_utf8 method.   
  1) It seems that something is wrong with admin login functionality, as I am not able to sign-in as an admin with the provided credentials, thus I am unable to test this edge case  2) Due to missing functionality of realtor being associated to a company, I am unable to test this edge case. 3)  It seems that something is wrong with admin login functionality, as I am not able to sign-in as a user 4) There is no potential buyer's list, hence cannot test this edge case.
 Yes, the team has covered the high-level implementation changes to be made to the system. We get the gist of the files that might be changed and what is end goal to be achieved. Though, its not very clear what is the change to be made under Separation of concerns section, which could have been explained better.           
 Yes, the team has covered the high-level implementation changes to be made to the system. We get the gist of the files that might be changed and what is end goal to be achieved. Though, its not very clear what is the change to be made under Separation of concerns section, which could have been explained better.           
 Yes, the code was extremely clean and readable. The naming represented the task( such as: remove_from_interest_list, show_potential_buyers etc ) of the method and no extra load was carried by that method, except for the action assigned to the method.  No methods were longer than necessary and no unnecessary nesting was present. Though not major, a suggestion for the team is to avoid using pronouns or subjective references such as my_interest_list and houses_posted_by_me for method naming. Also, as methods are referred to as actions, naming should reflect an action, so add show in front of naming such as houses_posted_by_company 
 Yes, the code was extremely clean and readable. The naming represented the task( such as: remove_from_interest_list, show_potential_buyers etc ) of the method and no extra load was carried by that method, except for the action assigned to the method.  No methods were longer than necessary and no unnecessary nesting was present. Though not major, a suggestion for the team is to avoid using pronouns or subjective references such as my_interest_list and houses_posted_by_me for method naming. Also, as methods are referred to as actions, naming should reflect an action, so add show in front of naming such as houses_posted_by_company 
 There is no problem statement mentioned in the design document. It directly dives into the implementation details. This does not help the reader is understanding the need for a project. There is no test plan, project purpose. The team has tried to provide a design implementation details which is not very descriptive. More effort is needed to enable reader to understand the design better           
 The team has partially handled the relationships. Has_many: They have aptly provided all the has_many relationships, such as RealEstateCompany has many houses, relators; A House Hunter has many interest and inquiry etc. One more relation should have been a relator has many houses under him. Most of these relations are bi-directional associations, so there should ideally have been a belongs_to relation. Such as, if a Company has many realtors, then a relator belongs_company is an association. No such relations are found in code. Also, as the realtor can only be linked to one company at a time, this calls for a has_one relation. 
 The team has efficiently described the problem statement and the need for undertaking such a project. Good effort. As it talks about refactoring, few more lines on the pain points of current design would have helped a great deal in appreciating the project. The design selection is great. Apt to the problem and the UML diagram to visualize it, is helpful. The UML diagram should have been more descriptive on how the current code is to be modified to incorporate the proposed design pattern, as it was not easily to know, if this pattern would fit the current code. Test plan is missing. 
 The team has efficiently described the problem statement and the need for undertaking such a project. Good effort. As it talks about refactoring, few more lines on the pain points of current design would have helped a great deal in appreciating the project. The design selection is great. Apt to the problem and the UML diagram to visualize it, is helpful. The UML diagram should have been more descriptive on how the current code is to be modified to incorporate the proposed design pattern, as it was not easily to know, if this pattern would fit the current code. Test plan is missing. 
 I dont see a test available for controller or model in the code, and as its not documented whether a different type of test implementation is available, I am marking this unavailable. 
 I dont see a test available for controller or model in the code, and as its not documented whether a different type of test implementation is available, I am marking this unavailable. 
 All basic functionality outlined by the test suite is working as expected with few corner case bugs. The filter functionality should have been more flexible to filter for a range of price and Sq ft, rather than try to match exact numbers provided which is not user friendly. Also the realtor signup should allow realtor to choose company from list available which is more user-friendly 
 1)     The diagram provided is a generalization for strategy pattern and more aligned to help give a simpler outlook 2)     The standards are not followed, as it should indicate the class type (as an interface) and the method implementations needed in the concrete classes 3)     The UML is high-level indication. More project specific diagram is needed  
 1)     The diagram provided is a generalization for strategy pattern and more aligned to help give a simpler outlook 2)     The standards are not followed, as it should indicate the class type (as an interface) and the method implementations needed in the concrete classes 3)     The UML is high-level indication. More project specific diagram is needed  
 1)     No such indications are available. 2)     No such indications are available. 3)     No, the team is trying to simply the current design. 4)     At few places, the designs seems to indicate they would like to centralize or combine processing of data, which looks like an increase in response time. Clear justification is needed to say for sure. 5)     More explanation of the teams thought process is needed in the document to comment further 
 1)     No such indications are available. 2)     No such indications are available. 3)     No, the team is trying to simply the current design. 4)     At few places, the designs seems to indicate they would like to centralize or combine processing of data, which looks like an increase in response time. Clear justification is needed to say for sure. 5)     More explanation of the teams thought process is needed in the document to comment further 
 
