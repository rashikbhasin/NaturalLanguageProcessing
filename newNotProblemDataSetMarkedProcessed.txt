noproblem of what code is available in the zip file most of it is understandable the devise gem seems unnecessary to their implementation however
noproblem github link is not submitted i downloaded the repo and it has barely 4 commits with basic scaffolds and schema generated for realtors and houses   
noproblem the link seems to be a local deployment
noproblem all tests in the zip file are scaffold generated
noproblem yes the house controller has been tested
noproblem no testing has been done apart from the auto generated tests
noproblem the zip posted doesn t seem to be updated again later after 1st oct
noproblem yes the controllers have been properly tested
noproblem there are 24 commits done however all have been made on one day
noproblem there are no proper commit messages
noproblem no i just see all commits happened in one day so i don t think the team has been keeping on pushing their changes
noproblem    no there has been only one commit on 10 01
noproblem all the changes were pushed on a single day the last day of submission
noproblem interface is very basic it lacks in many major functionalities that made the navigation through the site difficult readme was not well described to understand the team s work and their functionalities
noproblem the ruby coding convention has been followed   through out the project
noproblem the mvc structure is good but some details should   be improved
noproblem    yeah in a way the scaffolding generated code follows convention
noproblem the code follows the common ruby on rails application structure hence it was easy for me to navigate through other files to see portion of the code it follows the common mvc structure however in some parts of the code comments were missing which was confusing as i didn t understand the logic for that code readme file was not properly described for other users navigating through app
noproblem the controllers are well written
noproblem the code follows good ruby and rails coding practice from my point of view
noproblem have used dry principles the code has good readability and good naming conventions are followed have grouped similar functionalities into classes so that it is modularized have used iterators such as each instead of for and while
noproblem ui ux is awesome and intuitive read me file is also well described
noproblem the user interface is easy to use and the readme file is explicit
noproblem great ui admin dashboard looks very professional
noproblem yes you have the tests written
noproblem the basics test are written some application specific tests can be written
noproblem requesting to git link to verify the same
noproblem it seems that there is only one team member pushing changes
noproblem the model and controller are well designed each method covers a single functionality good job
noproblem the mvc structure is completed and basic functions have been finished
noproblem the interface is good clean and very easy to use
noproblem they are simple links to pages which does tell you where to go so it s fine
noproblem the ui is elementary but intuitive the links have long descriptive names
noproblem yes it is deployed on heroku
noproblem yes the team seems to have tested their userscontroller completely that handles login logout and other user signin validations
noproblem the code was presumable uploaded in the end pushed from another repo and hence i could not see any regular commits
noproblem in total there are only 3 commits done
noproblem the ruby coding convention has been followed   through out the project
noproblem    yeah in a way the scaffolding generated code follows convention
noproblem no not really the website just has one role to operate and the readme file is an auto generated file which doesn t include any useful information
noproblem yes the controllers have been properly tested
noproblem    there are some tests for the controllers but it looks like just the scaffold generated tests
noproblem only the default testcases created by the command are present in the repository
noproblem there are 24 commits done however all have been made on one day
noproblem    no there has been only one commit on 10 01
noproblem the models views and controllers have been properly designed and implemented
noproblem most of the practices have been followed
noproblem the ruby source code appears to follow ror conventions and uses a few rails associations the directory names and project structure appear to follow good ror mvc conventions source code is organized and uncluttered too
noproblem the code is neat and precise with proper structure and comments
noproblem very good structure readable and names are very relevant to the functionality
noproblem the code is written   really well
noproblem good design and easy to use
noproblem controller has been tested   
noproblem extensive testing was done
noproblem yes
noproblem team was active thoughout the process
noproblem no the majority of the work was pushed on 09 29 it is an impressive product if they got all of this done in the past week
noproblem there are many commits which are divided almost equally between all teammmates
noproblem yes about 75   commits were done
noproblem code commit frequency is good
noproblem the code is very well written and arranged to be easily understandable no extraneous code or unused code visible dry principles have been implemented very well
noproblem very clearly code
noproblem this team has followed the basic structure followed in every ruby on rails application which made my task easier to access files and understand their logic properly described readme file and also one additional pdf given with application was enough to give me proper understanding of the modules
noproblem readme file contains enough information to understand the project implementation basics
noproblem please directly tall users where to sign up
noproblem the user interface is very intuitive and easy to use it is very well explained in the readme file the steps to run the code are described as well
noproblem yes the user interface is intuitive and easy to use also the readme file has been perfectly described to give the proper idea of the flow and login credentials of an admin
noproblem basic scaffold generated tests available
noproblem yes from what i could see they have done well in testing at least one model and one controller
noproblem team has perfectly implemented major modules and also they have implemented the extra credit portion i tried to login with invalid credentials or some invalid password email phone lengths but there were validations hence they have perfectly focused on this parts too and tested it    i believe this has implemented a through test of at least one module and controller
noproblem several linear commits with good explanations available
noproblem tem has properly used git and only pushed the changes when necessary and also consistently throughout the project period
noproblem well written code
noproblem not a lot of code to begin with but whatever is there seems by coding practice norms most of the code seems to be commented
noproblem yes the code follows good ruby and rails coding practices as the models views and controllers are well defined
noproblem the interface is preliminary but is easy to understand
noproblem the admin functionality is tested well however there are some fields like validations of phone number which are yet to be tested or improved upon
noproblem functionalities of admins are working though many other functionalities   are yet to be implemented
noproblem i did see updates and commits 15 hours ago
noproblem yes added the working functionalities timely
noproblem the team has been pushing commits in a way that shows they have been making consistent progress on the project
noproblem yes they have around 21 commits
noproblem most files seem to be following good coding practices
noproblem the readme file is well constructed mvc files are properly made and easy to navigate db migrations can be seen easily as well overall good job done on this part
noproblem fairly good coding practices followed
noproblem the ui is well built as well specially the navigation bar at the top is a delight in terms of user experience
noproblem yes the controller and model for handling inquiries have been thoroughly tested
noproblem the team kept on pushing changes throughout the project period showing timely contributions from each team member in fact by looking at the commits each team member was probably assigned a dedicated module to work on which always works well to create such a big application
noproblem yes through the commit record i can see that this team has been keeping pushing their changes
noproblem there are more than 70 commits and they have been working continously
noproblem there were regular commits during the course of the project
noproblem fairly frequent commits to git
noproblem not much functionality is available of what is available however the code does follow   good ruby and rails coding practices
noproblem the code is very neat and easy to read but i can tell it is the auto generated code from scaffold   
noproblem the application is deployed on heroku and the user interface is easy to use
noproblem no roles implemented   
noproblem basic tests are present not custom tests though
noproblem yes good effort in case of pushing changes
noproblem no updates since 6 days ago
noproblem only on 2 days all together
noproblem well written code
noproblem yes the code follows good ruby and rails coding practices as the models views and controllers are well defined
noproblem the interface is preliminary but is easy to understand
noproblem i did see updates and commits 15 hours ago
noproblem yes added the working functionalities timely
noproblem the team has been pushing commits in a way that shows they have been making consistent progress on the project
noproblem yes they have around 21 commits
noproblem most code seems to be written with good coding practices in mind
noproblem the repository looks to be set up well and the app is laid out like a typical ruby on rails application good readme file was present as well
noproblem good coding style names are well selected and good readability
noproblem have used dry principles followed good coding practices
noproblem the code follows the right style and in a good format
noproblem they had a good amount of tests the usermodel
noproblem comprehensively tested for users
noproblem in the files they provided i found they provided test for most of controllers and models
noproblem have implemented basic testing could add more application specific test cases
noproblem last commit was 3 days ago so they are not continuous throughout the period
noproblem yes it looks like all team members contributed and they have 80 commits over the course of several weeks
noproblem so many commits it makes me proud starting as early as september 22nd they make progress up until today either way they passed this with flying colors
noproblem about 80 commits were done along the timspan
noproblem according to the record on github they committed for many times so they may keep pushing changes
noproblem evenly committed code during the project duration
noproblem the team pushed changes frequently
noproblem the code is very well written and arranged to be easily understandable no extraneous code or unused code visible dry principles have been implemented very well
noproblem the code is very well written and organised all the framework conventions have been followed such as the naming conventions comments have been added at appropriate places which improved the readability
noproblem yes code is written properly followed dry principle added comments where possible followed mvc with rails framework
noproblem it does well to follow the good ruby and rails coding practices it follows the dry code approach
noproblem the git code included almost everything that follows good coding practices using ruby and rails   
noproblem yes user interface is good and easy to access
noproblem excellent commit history contributions from all team members could be seen
noproblem yes i could see many push requests on the github hence concluding team is pushing their changes periodically
noproblem yes the team kept pushing changes throughout the project period
noproblem there was consistent commits with a spike in between when probably most development happened
noproblem looking at   your commit history    you guys started it on saturday when the submission was monday
noproblem the website did not seem to work at first now i was able to access it i also noticed some features that were included in the meantime like testing by adding house hunters overall the team did work on updating the site functionalities   
noproblem the git repo shows total of 15 commits although majority of the places ruby standards have been followed but at some places variables names such as househunter_url does not show any relavancy   or understandidng   to the reader if the variable is pointing to a function or belongs to for example it can be house_hunt_xyz overall i think good standards are being followed   
noproblem yes we can see many pushes on git hence they have updated code
noproblem timely commits and elaborated readme file
noproblem the code is clear and concise it does follow good ruby and rails coding practices
noproblem yes the code does follow ruby and rails practices to an extent as i can see the use of many helper methods in the code
noproblem most files seem to be following good ruby and rails practices
noproblem did a good job using forms to stay dry with the edit and new pages some more comments especially in the models would have been helpful to understand why certain validations were chosen the use of json to store and recall in views was clever
noproblem yes it is well written and they managed to follow dry principle
noproblem code follows the basic crud structure given by rails and neatly explains what is being performed the notices nicely explains the user what is happening the db schema is designed to incorporate most of the requirements
noproblem reviewed the git code for all controller models and views    standard ruby coding practices have been followed and code is easily readable  
noproblem code follows good ruby and rails coding practices naming   conventions are correct methods in controllers are short and concise and there are no instances of spaghetti code
noproblem yes user interface is easy to use on the first page
noproblem tests are added for most controllers
noproblem multiple commits are present in the repo
noproblem all of the commits for this application were made on the same day
noproblem there were 4 commits on the day it was due presumably to get the project up and running for submission and 1 today to upload the development database
noproblem i see commits only on a single day
noproblem all the changes are pushed at once
noproblem they have attached 2 other files saying what all they have implemented
noproblem everything was described properly in the readme file
noproblem i could see testing done i could see extra test cases added
noproblem yes  
noproblem the team all had multiple commits throughout the course of the project
noproblem yes i could see multiple pushes   
noproblem the team has been pushing changes since around 12 days ago and the project structure feels well planned with some changes and testing required
noproblem they have 195 commits ui is great everything is running smoothly
noproblem the project was continuously updated during the past two weeks
noproblem code commit frequency is fairly good
noproblem readme file contains enough information to understand the project implementation basics
noproblem basic scaffold generated tests available
noproblem several linear commits with good explanations available
noproblem very clearly code
noproblem this team has followed the basic structure followed in every ruby on rails application which made my task easier to access files and understand their logic properly described readme file and also one additional pdf given with application was enough to give me proper understanding of the modules
noproblem yes the user interface is intuitive and easy to use also the readme file has been perfectly described to give the proper idea of the flow and login credentials of an admin
noproblem team has perfectly implemented major modules and also they have implemented the extra credit portion i tried to login with invalid credentials or some invalid password email phone lengths but there were validations hence they have perfectly focused on this parts too and tested it    i believe this has implemented a through test of at least one module and controller
noproblem tem has properly used git and only pushed the changes when necessary and also consistently throughout the project period
noproblem i think it does pretty well to follow the   good ruby and rails coding practices it is elegant and follows the dry code approach
noproblem the user interface is very intuitive and easy to use it is very well explained in the readme file the steps to run the code are described as well
noproblem yes from what i could see they have done well in testing at least one model and one controller
noproblem most code seems to be written with good coding practices in mind
noproblem the repository looks to be set up well and the app is laid out like a typical ruby on rails application good readme file was present as well
noproblem good coding style names are well selected and good readability
noproblem have used dry principles followed good coding practices
noproblem the code follows the right style and in a good format
noproblem have listed out the functionality which is very intuitive but some links like as realtor and as house hunter are broken making a bit of a confusion
noproblem deployed on heroku friendly interface good readme file
noproblem they had a good amount of tests the usermodel
noproblem comprehensively tested for users
noproblem in the files they provided i found they provided test for most of controllers and models
noproblem have implemented basic testing could add more application specific test cases
noproblem well tested
noproblem yes it looks like all team members contributed and they have 80 commits over the course of several weeks
noproblem so many commits it makes me proud starting as early as september 22nd they make progress up until today either way they passed this with flying colors
noproblem about 80 commits were done along the timspan
noproblem according to the record on github they committed for many times so they may keep pushing changes
noproblem evenly committed code during the project duration
noproblem the team pushed changes frequently
noproblem well written code following coding practices
noproblem ruby coding convention has been followed almost throughout the project
noproblem all practices were followed
noproblem code looks good use comments wherever necessary
noproblem coding standards are fairly good
noproblem constant changes were being made
noproblem team was proactive in working together
noproblem code commit frequency is fairly good
noproblem code follows general ruby guidelines and is formatted in a legible manner
noproblem the ruby code is precise and the project follows a proper structure with all the required files
noproblem yes the team has included tests for controller model and have also implemented integration tests   
noproblem yes their commits started from september they have been working on the project for the entire period
noproblem 16 commits in last 11 days implies have been pushing code frequently
noproblem    the repo has many commits contributed by the teammates throughout   the project period
noproblem i found many commits throughout the project period about fixing bugs add new features and update readme      
noproblem user interface is very nice and well organized
noproblem readmd   has all important required details
noproblem this application is deployed on heroku and the user interface is easy to understand and use
noproblem    the code is neat and concise with required comments and messages for all the changes
noproblem the controllers are well written
noproblem the code follows good ruby and rails coding practice from my point of view
noproblem have used dry principles the code has good readability and good naming conventions are followed have grouped similar functionalities into classes so that it is modularized have used iterators such as each instead of for and while
noproblem the user interface is easy to use and the readme file is explicit
noproblem great ui admin dashboard looks very professional
noproblem ui ux is awesome and intuitive read me file is also well described
noproblem yes you have the tests written
noproblem the code followed best practices for items such as indentation line separation and method naming
noproblem mvc structures are very nice and every required functions are finished   
noproblem very nicely written code dry principles used nicely formatting is also done very nicely
noproblem code looks as they say hella fresh very clean from the files i looked over
noproblem the team has used excellent ruby standards coding practice controller as well as model has variable names which are self explanatory   
noproblem the code on git has good readability with proper indentation and naming conventions similar functionalities have been combined together into a class like in the case of potentialbuyercontroller the use of a single user model and role based authentication has certainly dry d up the code one possible alternative to further dry up the code is that in many controllers like in the case of users_controller every method is storing the list of real estate companies in an instance variable real_estate_companies so in this case a callback like before_action can be used to save the real estate companies in real_estate_companies variable so that all methods have access to it    the use of appropriate iterators instead of looping constructs like for and while follows ruby s good coding practices every controller serves a specific purpose and the use of a common welcome_controller and its associated views has again modularised the code for easy extensibility   
noproblem ruby rails code standards are correctly followed and code is committed properly
noproblem the code followed best practices for items such as indentation line separation and method naming
noproblem mvc structures are very nice and every required functions are finished   
noproblem very nicely written code dry principles used nicely formatting is also done very nicely
noproblem code looks as they say hella fresh very clean from the files i looked over
noproblem the team has used excellent ruby standards coding practice controller as well as model has variable names which are self explanatory   
noproblem the code on git has good readability with proper indentation and naming conventions similar functionalities have been combined together into a class like in the case of potentialbuyercontroller the use of a single user model and role based authentication has certainly dry d up the code one possible alternative to further dry up the code is that in many controllers like in the case of users_controller every method is storing the list of real estate companies in an instance variable real_estate_companies so in this case a callback like before_action can be used to save the real estate companies in real_estate_companies variable so that all methods have access to it    the use of appropriate iterators instead of looping constructs like for and while follows ruby s good coding practices every controller serves a specific purpose and the use of a common welcome_controller and its associated views has again modularised the code for easy extensibility   
noproblem ruby rails code standards are correctly followed and code is committed properly
noproblem ui has modified which is good
noproblem the interfce is very good clean and very easy to use
noproblem very nice ui great ux great use of material design icons and bootstrap enjoyed using the website great job
noproblem in general ui was great the site looks really clean and the buttons did what i expected them to do
noproblem user interface is well organized and easy to use
noproblem highly intuitive user interface properly states admin as well as new user login the navebar   shows the logged in user as well as log out options very easy to user and understandable   
noproblem yes the ui is interactive and easy to use
noproblem modules have test cases
noproblem yes at least one controller and one model have been tested
noproblem two tests have been implemented and working   
noproblem hunters functionalities are working properly
noproblem the team used multiple development branches and a master branch along with frequent commits to stay in sync
noproblem   
noproblem yes the team keep on pushing their changes
noproblem yes there are periodic commits and the messages are very descriptive
noproblem starting on september 22nd and going up through today 100 commits is great
noproblem yes the team kept pushing changes throughout the project period
noproblem a total of 105 commits consecutive update done on github   
noproblem the team has started to work on the project from sept 16th and has regularly pushed their commits to the repository both the team members have been actively contributing to the project a total of 58 commits have been made so far and the project is progressing at a very good rate
noproblem i could see commits made my team members in timely manner
noproblem the user interface is very intuitive i like the modern look and feel of the ui as well as the icons and images it s quite professional excellent work the various buttons are in good locations the button text could be darker however the new user link could be made into a bigger button which would make it more prominent right now it is hard to see
noproblem the interfce is very good clean and very easy to use
noproblem very nice ui great ux great use of material design icons and bootstrap enjoyed using the website great job
noproblem in general ui was great the site looks really clean and the buttons did what i expected them to do
noproblem user interface is well organized and easy to use
noproblem highly intuitive user interface properly states admin as well as new user login the navebar   shows the logged in user as well as log out options very easy to user and understandable   
noproblem the user interface is very appealing the show view is especially remarkable that makes good use of the attractive classes of css and bootstrap the navigation links provided in every page are very helpful to explore the website the switch user capability makes it easy for users to switch between roles without the hassle of logging out and logging in again one issue that i encountered was that the inquiries controller has not been fully implemented which lands the website into an error page   
noproblem the testing was thorough although one model and one controller individually did not appear to be tested thoroughly
noproblem yes at least one controller and one model have been tested
noproblem some test cases are missing for complicated flows like real estate company should only be deleted when there are no realtors assigned
noproblem the inquiry controller was thoroughly tested but none of the models appear to have the same amount of testing
noproblem two tests have been implemented and working   
noproblem the team has not yet started to test their models unit test and controller functional and integration test test driven development tdd is a good strategy to test the application features before and during the application development phase by using tdd it is possible to anticipate the potential pit falls and corner cases before starting to address the code to tackle those
noproblem the team used multiple development branches and a master branch along with frequent commits to stay in sync
noproblem yes the team keep on pushing their changes
noproblem yes there are periodic commits and the messages are very descriptive
noproblem starting on september 22nd and going up through today 100 commits is great
noproblem yes the team kept pushing changes throughout the project period
noproblem a total of 105 commits consecutive update done on github   
noproblem the team has started to work on the project from sept 16th and has regularly pushed their commits to the repository both the team members have been actively contributing to the project a total of 58 commits have been made so far and the project is progressing at a very good rate
noproblem i could see commits made my team members in timely manner
noproblem code is written properly and followed ruby framework with mvc architechure also added various packages
noproblem basic practices were followed reusability of code is maintained and the code is well intended
noproblem it has a good structure choice of names of the files is appropriate and readable
noproblem no
noproblem realtor user can perform basic functionalities
noproblem yes we could see updated git hence i can   conclude that they are updating code regularly   
noproblem somewhat since i can see the commits were made in 2 days only
noproblem there were 24 commits in 6 days which means that they have been working in last few days and have been doing check in regularly since they started work
noproblem    i can see 28 commits which is descent
noproblem code follows general ruby guidelines and is formatted in a legible manner
noproblem the ruby code is precise and the project follows a proper structure with all the required files
noproblem yes the team has included tests for controller model and have also implemented integration tests   
noproblem yes their commits started from september they have been working on the project for the entire period
noproblem there is no external   link provided to the application
noproblem 16 commits in last 11 days implies have been pushing code frequently
noproblem very inconvenient for me to review without a deployed version   
noproblem the code is as per coding practices nice first attempt
noproblem looks good to me the ruby dry code approach is followed throughout
noproblem easy to understand
noproblem yes it is very intuitive and easy to use
noproblem test cases are generated through scaffold
noproblem only controller tested
noproblem the team has not implemented a testing module as of yet
noproblem test skeletons are present doesn t look like tests are added yet
noproblem committed throughout the period to avoid merge conflicts
noproblem yes timely pushing of code and creation of branches to avoid merge conflict
noproblem the team has a well documented history of commits for the code repository
noproblem you guys started pretty late but overall great effort great ui
noproblem good coding style
noproblem overall the following things can be improved 1 the primary key for the real estate company should be auto generated this is done automatically by the rails framework so maybe you can remove the code from the view which asks for the user to select the primary key while creating a company 2 whenever there is a reference to a foreign key in a model you can validate and use that reference by following the format model_id where model is the entity of your foreign key eg if house has foreign key of realtor realtor is the entity of your foreign key hence you can reference the realtor as realtor_id in your house model this is because rails follows convention over configuration and this is the naming convention with respect to foreign keys
noproblem navigation between pages is not defined well   
noproblem deployed on heroku interface is not friendly but thr readme file explained some of it
noproblem decent coding practice
noproblem the app s indentation method names and line separation seem to match solid ruby style guidelines
noproblem from what i see it seems to be following the practice we have been using in class
noproblem    yes the source code follows expected ror style the directory names and project structure also follow ror conventions good job
noproblem good rails coding practice has been implemented in model as well controller we can see variables names that shows the relation to overall module and model   
noproblem the interface is intuitive specially they have very good form structure for realtor as well as new users and house hunters   
noproblem it appears minimal controller testing has been performed
noproblem no testing but at least they mentioned it in the readme
noproblem the team used mutliple branches and many commits throughout the project to increment on the codebase
noproblem    they have a lot of commits so they were always working on it
noproblem yes it looks like sizable commits were made before the 24th
noproblem yes 95 commits   
noproblem the interface is good and the readme   provides good documentation
noproblem couldn t find any issues respective to style guidelines
noproblem there were 9 commits overall in the git
noproblem the user interface is quite intuitive to use i had a very minor suggestion i found a case where the go back link was missing and thus i had to click on the dashboard link to go back ex after i click on view companies there s   no go back link    overall i feel you did a really good job for example while switching the role you gave an option to edit the roles as well as well as a delete account functionality   
noproblem very nice code and almost every functions that test required are finished
noproblem the interface is easy to use and it is wll described in the readme file
noproblem good set of directions in readme
noproblem there were continuous code pushes   
noproblem most files seem to be following good ruby and rails practices
noproblem yes it is well written and they managed to follow dry principle
noproblem code follows the basic crud structure given by rails and neatly explains what is being performed the notices nicely explains the user what is happening the db schema is designed to incorporate most of the requirements
noproblem reviewed the git code for all controller models and views    standard ruby coding practices have been followed and code is easily readable  
noproblem code follows good ruby and rails coding practices naming   conventions are correct methods in controllers are short and concise and there are no instances of spaghetti code
noproblem yes user interface is easy to use on the first page
noproblem tests are added for most controllers
noproblem multiple commits are present in the repo
noproblem most files seem to be following good ruby and rails practices
noproblem yes it is well written and they managed to follow dry principle
noproblem code follows the basic crud structure given by rails and neatly explains what is being performed the notices nicely explains the user what is happening the db schema is designed to incorporate most of the requirements
noproblem reviewed the git code for all controller models and views    standard ruby coding practices have been followed and code is easily readable  
noproblem not much of coding is done only the files automatically created by rails are present
noproblem code follows good ruby and rails coding practices naming   conventions are correct methods in controllers are short and concise and there are no instances of spaghetti code
noproblem yes user interface is easy to use on the first page
noproblem no work has been done application throws error as soon i click on sign up button and choose any type of account
noproblem tests are added for most controllers
noproblem multiple commits are present in the repo
noproblem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
noproblem all the changes are pushed at once
noproblem i looked through their github commits log and found that their first commit is on oct 1 2018 maybe their just began to do the project on oct 1
noproblem not much functionality is available of what is available however the code does follow   good ruby and rails coding practices
noproblem have used dry principles follows good coding practices
noproblem yes the ui is good and easy for navigation usage
noproblem the ui is good and intuitive good use of colors and html features
noproblem yes tests are done for many models and controllers
noproblem yes there are lot of commits over many days from multiple contributors
noproblem yes there are many commits which added new features and fixed some bugs   
noproblem yeah they have done the project with even number of commits throughout the duration
noproblem code is written properly and followed ruby framework with mvc architechure also added various packages
noproblem basic practices were followed reusability of code is maintained and the code is well intended
noproblem it has a good structure choice of names of the files is appropriate and readable
noproblem no
noproblem realtor user can perform basic functionalities
noproblem yes we could see updated git hence i can   conclude that they are updating code regularly   
noproblem somewhat since i can see the commits were made in 2 days only
noproblem there were 24 commits in 6 days which means that they have been working in last few days and have been doing check in regularly since they started work
noproblem    i can see 28 commits which is descent
noproblem well written code following coding practices
noproblem ruby coding convention has been followed almost throughout the project
noproblem all practices were followed
noproblem code looks good use comments wherever necessary
noproblem coding standards are fairly good
noproblem a model has been thoroughly tested
noproblem constant changes were being made
noproblem yes there are 24 commits done over a span of 13 days
noproblem team was proactive in working together
noproblem code commit frequency is fairly good
noproblem the code is very neat and easy to read but i can tell it is the auto generated code from scaffold   
noproblem the application is deployed on heroku and the user interface is easy to use
noproblem no roles implemented   
noproblem no none of the controllers or models have been tested
noproblem actually i did find some auto generated test code for the controllers but i don t think it is a thoroughly test and there is no test code for the model
noproblem total of 10 commits are visible on got but do not show a linear increment in the work done
noproblem yes good effort in case of pushing changes
noproblem no updates since 6 days ago
noproblem only on 2 days all together
noproblem total of only 10 commits has been made on 3 days
noproblem i looked through their github commits log and found that their first commit is on   sep 28 2018 maybe their just began to do the project on   sep 28
noproblem the application is deployed on heroku and the user interface is easy to use
noproblem basic tests are present not custom tests though
noproblem total of 10 commits are visible on got but do not show a linear increment in the work done
noproblem yes good effort in case of pushing changes
noproblem no updates since 6 days ago
noproblem only on 2 days all together
noproblem total of only 10 commits has been made on 3 days
noproblem i looked through their github commits log and found that their first commit is on   sep 28 2018 maybe their just began to do the project on   sep 28
noproblem the code follows mvc architecture and practices in an organized way
noproblem even though the codebase is not large ruby and rails standards such as naming conventions file structure and the correct usage of mvc pattern are followed
noproblem the user interface looks intuitive as it has options for signing up with different roles
noproblem they have tested for the models and controllers constructed
noproblem seem to be following standard practices
noproblem yes the code has the parameters well defined for all the users and has the correct mvc layout as expected    for instance they seem to have created separate mvc architectures for houses inquiries interests companies and users this goes to show that they have a layered approach on access and privileges    also the code is written in a very clean and formatted style with the variable definitions to be self explanatory of the functionalities they perform   
noproblem good job done here you have listed the features available to test
noproblem the app is deployed very well and is very easy to use
noproblem all the basic features implemented for admin house hunter and realtor is functional   
noproblem there are 67 commits made during the tenure of the project by all the team members the team has worked on git since the start of the project
noproblem yes 67 commits it seems they have been pushing changes regularly
noproblem yes the commits were regular after the project was assigned there were several commits on a weekly basis and as the deadline neared the frequency of the commits kept increasing in an orderly manner there was no last minute rush and the development of the project seemed pretty well planned
noproblem yes as seen from the number of commits on each section of their github profile not only have they meticulously made a number of changes on repo but they have also updated what all changes they made against the files this is a very neat practice in my opinion and shows that they have put ample effort to structure the code moreover they have updates the gemfile multiple times so as to make it run for the heroku app which is a must thing to do and a challenge we faced too   
noproblem yes there are git commits and pushes after initial commit as well
noproblem no not really no user type has all the functionality in this review s check boxes much less all the functionality specified in the project description manual inspection of the test folder reveals that all the model and controller tests are empty as are the fixtures
noproblem i cannot appraise this because   i do not believe they did their development in the linked repo there is only one commit where all the functionality was added i am inclined to say the team was not actively developing over the project period
noproblem the model and controller are well designed each method covers a single functionality good job
noproblem all users have their own model controllers the code is following ruby on rails standards but there are some debug puts that should   be removed
noproblem yes it is deployed on heroku
noproblem most of the practices have been followed
noproblem the ruby source code appears to follow ror conventions and uses a few rails associations the directory names and project structure appear to follow good ror mvc conventions source code is organized and uncluttered too
noproblem the code is neat and precise with proper structure and comments
noproblem very good structure readable and names are very relevant to the functionality
noproblem the code is written   really well
noproblem controller has been tested   
noproblem extensive testing was done
noproblem yes
noproblem team was active thoughout the process
noproblem there are many commits which are divided almost equally between all teammmates
noproblem code commit frequency is good
noproblem the code seems to be following the examples in cookbook app
noproblem yes timely commits with comments
noproblem the code written was clear and i believe that it follows good ruby and rails coding practices to a certain extent
noproblem it is done well and i can say it is a indeed a good ruby and rails coding practice
noproblem yes
noproblem i have seen they keep updating the github
noproblem there were changes pushed to the branch throughout the project period
noproblem    no the initial commits were made the thursday before the 1st submission was do it is great to see additional commits since the 1st submission
noproblem the first commit for the project was made only 4 days before the deadline since then the team kept continuously pushing their changes
noproblem i can see 28 commits with a good distribution over the time span
noproblem yes we can see many pushes on git hence they have updated code
noproblem timely commits and elaborated readme file
noproblem the code is clear and concise it does follow good ruby and rails coding practices
noproblem yes the code does follow ruby and rails practices to an extent as i can see the use of many helper methods in the code
noproblem yes i am able to login into the system via the link provided
noproblem they have attached 2 other files saying what all they have implemented
noproblem everything was described properly in the readme file
noproblem yes  
noproblem all the   tests are auto generated
noproblem the team all had multiple commits throughout the course of the project
noproblem yes i could see multiple pushes   
noproblem the team has been pushing changes since around 12 days ago and the project structure feels well planned with some changes and testing required
noproblem they have 195 commits ui is great everything is running smoothly
noproblem the project was continuously updated during the past two weeks
noproblem git shows too many changes which are not required one can test thoroughly before submitting the changes
noproblem code commit frequency is fairly good
noproblem the code follows common ruby rails guidelines
noproblem have used dry principles follows good coding practices
noproblem yes the ui is good and easy for navigation usage
noproblem the ui is good and intuitive good use of colors and html features
noproblem yes there are many commits which added new features and fixed some bugs   
noproblem yes there are lot of commits over many days from multiple contributors
noproblem yeah they have done the project with even number of commits throughout the duration
noproblem yes tests are done for many models and controllers
noproblem the code seems to be following the examples in cookbook app
noproblem    the source code and project structure seems fine but most of it still looks scaffold generated ror conventions have been maintained
noproblem yes timely commits with comments
noproblem the code written was clear and i believe that it follows good ruby and rails coding practices to a certain extent
noproblem it is done well and i can say it is a indeed a good ruby and rails coding practice
noproblem i dd not find the link i viewed the code on github it seems work   
noproblem yes
noproblem i have seen they keep updating the github
noproblem there were changes pushed to the branch throughout the project period
noproblem    no the initial commits were made the thursday before the 1st submission was do it is great to see additional commits since the 1st submission
noproblem the first commit for the project was made only 4 days before the deadline since then the team kept continuously pushing their changes
noproblem i can see 28 commits with a good distribution over the time span
noproblem the app s indentation method names and line separation seem to match solid ruby style guidelines
noproblem decent coding practice
noproblem from what i see it seems to be following the practice we have been using in class
noproblem    yes the source code follows expected ror style the directory names and project structure also follow ror conventions good job
noproblem the code base is very well written and commented the code has been done with good coding practices the only point to note would be to update the readme to be more informative
noproblem good rails coding practice has been implemented in model as well controller we can see variables names that shows the relation to overall module and model   
noproblem the user interface is nice i suggest you move the search button in the houses screen to the left also yes and no would probably be more user friendly than true and false for the basement condition the new user window was very intuitive and powerful note i found a bug in this window changing the admin account with realtor checked causes an error the error screen was graceful however also please use radio buttons for hunter or realtor not checkboxes please also include the type of the user in the users window
noproblem    ui is easy to use but not well described in the readme please add brief test cases to demonstrate expected functionality
noproblem the interface is basic and no extra styling is done but overall the web application is easy and intuitive to use the read me   file of the github repo should be updated to make it more    detailed to use   
noproblem the interface is intuitive specially they have very good form structure for realtor as well as new users and house hunters   
noproblem no they have not they said they will for the final submission
noproblem the team used mutliple branches and many commits throughout the project to increment on the codebase
noproblem while the team did push changes to the project there are 95 commits which are unnecessary instead of pushing every change to the final project the team could have combined a few of the changes and pushed them all at once to make for better record of the changes made
noproblem teams looks fairly active but the project progress does not correspond to the number of commits made in the git repository
noproblem    they have a lot of commits so they were always working on it
noproblem yes it looks like sizable commits were made before the 24th
noproblem yes 95 commits   
noproblem the code is very well written and organised all the framework conventions have been followed such as the naming conventions comments have been added at appropriate places which improved the readability
noproblem yes code is written properly followed dry principle added comments where possible followed mvc with rails framework
noproblem it does well to follow the good ruby and rails coding practices it follows the dry code approach
noproblem the git code included almost everything that follows good coding practices using ruby and rails   
noproblem yes user interface is good and easy to access
noproblem excellent commit history contributions from all team members could be seen
noproblem yes the team kept pushing changes throughout the project period
noproblem the website did not seem to work at first now i was able to access it i also noticed some features that were included in the meantime like testing by adding house hunters overall the team did work on updating the site functionalities   
noproblem the code seems very good and the code is very clearly
noproblem the git code did follow the good coding practices using ruby and rails   
noproblem all files they provided are clearly structured especially for the routes file they provide clear routes for different conditions
noproblem for all user sign up and log in should at the same place
noproblem the ui had good directives between operations functionalities and was easy to use the admin profile was available in the readme file
noproblem yes it is
noproblem code seems to follow the ruby practices
noproblem code is written in a clean and readable way there are separete methods for separate tasks    good naming convention is followed throughout the project
noproblem recompany could have been just company
noproblem the team seems to have attempted to add to their functionality from the previous round they have attempted to use the devise gem for allowing multiple user logins it seems that they created a new git repo and started from the beginning which seems like a fair idea given that they wanted to use devise instead of implementing the user registration sessions   
noproblem yes they have keep commit to git as their project been working   
noproblem the team submitted their changes towards the end of the project they committed changes in round 2
noproblem yes there is a has_many relationship in company model and also realtor is able to create mutliple house in one company
noproblem the relationship between house hunter realtor and companies have been well established
noproblem the link submitted is not live as a result i could not test if the system is working as it is supposed to
noproblem edge cases are not handled but most of the logic will automatically handle edge cases
noproblem yes they have tested a lot like admin house and inquiries
noproblem testing has been done for users controller and model
noproblem yes the team has tested model and controller
noproblem code is well written and organised all the functions have been objectively defined and does only what it is supposed to do
noproblem code looks neat methods have only one functionality well organized
noproblem the earliest commit is dated around oct 4
noproblem yes they have been committing a bit regularly although the commits contribution are not equally distributed among the team members
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem all commits happened during round 2 but work was done before
noproblem started committing after round 1
noproblem yes the team kept commiting the changes throughout the project and also in round 2
noproblem yes feedback has been accepted and changes made in round 2
noproblem all the relationships have been properly defined in the models
noproblem yes they have properly defined the associations for every table and haven t missed on anything
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented each company has multiple realtors and each realtor can have multiple houses everything good here
noproblem by looking at their model files relationships are handled well
noproblem db mappings are done well cascading delete and cascading nullify implemented to handle delete cases
noproblem not many problem detected working to the expectations
noproblem all functionality seems to be present now
noproblem yes the system works fine and authors have fixed the problems found in the first round for an instance admin functionality and interest functionality were not present in round one but authors have implemented them now   
noproblem all feedback has been accepted and changes made to fix them
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if an admin tries to delete a house hunter with multiple inquiries all of his her inquiries are deleted as well
noproblem all deletion edge cases seem to be accounted for
noproblem yes all the edge cases are handled very well
noproblem not able to log in as admin incorrect credential of admin
noproblem the edge cases tested where handled properly with proper messages that shows which other entities will be affected by the change
noproblem models are not tested and controllers are partially tested
noproblem no they haven t tested
noproblem yes the team has thoroughly tested and did validations
noproblem tests for controllers look good need to include more tests for models
noproblem code naming convention done well
noproblem the code has been implemented as per the ruby standards of coding however there are few instances of code could be better handled such as the index function in admin controller   
noproblem 1 yes 2 no 3 no
noproblem commits performed during the course
noproblem all the code of the project has been pushed to github on a single day
noproblem only 8 commits were found the first commit was dated around oct 6 no changes were committed in round 2
noproblem didn t commit at regular intervals yes committed changes in round 2
noproblem the git repository was created on oct 6 after the round 1 was completed the commits were no regular during the complete course of the project all the commits happened on the day of final submission
noproblem handled 1 to n and n to n relationships succesfully
noproblem the team has handled all the associations between multiple entities quite well
noproblem the relationships are properly defined
noproblem follows the relationships properly
noproblem the basic functionalities work successfully
noproblem some edg cases are working
noproblem yes
noproblem test for model are missing basic test cases for controllers are present but the testing is not through
noproblem the code follows all design style guidelines for ruby good job all methods are well designed and serve only one function naming and structure is uniform across the project
noproblem the code is clean and readable and has been properly modularized
noproblem the code is clean and easy to understand    code modularization principles are followed didn t find any major code duplication issues   
noproblem yes code is clean and easy to read has followed coding standards there are separate functional calls for each task      
noproblem the team committed changes fairly frequently there are no commits for the first phase of the project however the project saw regular contributions after that during the round 2 overall good job could be more proactive during the first phase
noproblem they only had 30 commits which i think is a little low considering there were two phases of submission in my first phase my team had at least 30 commits
noproblem for the most part it looks like this group only committed changes in round two i know there was roughly one commit when i reviewed the first time and the remainder of the changes were between oct 6 10
noproblem yes they did keep pushing updates after round 1
noproblem yes the commit count has almost doubled from round 1 to round 2
noproblem yes the team had multiple changes committed through oct 6th through oct 10 in round 2        
noproblem the team has committed   regularly
noproblem the relationship realtor has many houses is not represented however all other edge cases are covered the db is well designed with clear relationships and field names this team is a pro
noproblem it looks like all the needed relationships were present in the schema
noproblem cardinal relationships have been defined in appropriate models  
noproblem 1 n and n n relationships are all properly defined
noproblem all basic functionalities work as expected you could have gone for the extra credit functionality such as the google login or the email part the email part was pretty easy you ve still done a great job with the overall design the best i ve seen thus far   
noproblem authors   delivered nearly all the functionality i could think to test    it was a little weird being referred to a totally different page to have to upload images to houses but not enough to deduct points
noproblem yes major changes and feature implementations are there after   1st round all basic functionalities are working properly
noproblem 1 admin can delete real estate companies with realtors attached to it 2 realtor is being able to delete any house 3 admin can delete house hunter with several enquires
noproblem all test cases are covered the readme doesn t cover how edge cases are covered but that s not an issue
noproblem 1 when the   company   of a realtor was changed realtor details got updated with this new company details but he could still edit update the houses that he she had listed for   the prev company they could send replies to inquiries also 2 a realtor could edit the details of all the houses 3 what will happen if the   admin tries to delete a house hunter who has submitted several inquiries cascade delete in working 4 other major edge cases are also working
noproblem could see default testcases
noproblem code naming convention done well
noproblem 1 yes 2 no 3 no
noproblem commits performed during the course
noproblem handled 1 to n and n to n relationships succesfully
noproblem the team has handled all the associations between multiple entities quite well
noproblem the relationships are properly defined
noproblem follows the relationships properly
noproblem the basic functionalities work successfully
noproblem the code is well written following the right ror coding practices
noproblem   
noproblem follows good coding practice at most places
noproblem code is written in an efficient clean and readable manner all the functions are lucid and defined properly in blocks a proper use of names for controllers migrations and views can be seen
noproblem yes the coding style was good
noproblem the committs have been done regularly throughout the development period even during the round 2
noproblem   
noproblem code has been submitted frequently
noproblem commit were done at a timely manner
noproblem the 1 n and n n relationships are properly handled   
noproblem handles most of the relationships properly      
noproblem   
noproblem all the relationships are correct also the houses table shows the time at which the house was created which is impressive additionally the real estate company also shows the number of realtors for each company good work on that
noproblem yes even constraints were defined well
noproblem relationships are implemented correctly   
noproblem there were issues with the admin functionalities in the first round they have been fixed
noproblem   
noproblem most issues were fixed
noproblem   
noproblem i think the code is well written the function calls are very well done it is neat and easily readable also there is no bad naming the project code very well follows the dry approach
noproblem the code is clean and easily understood a separate controller for adding the buyers to the potential buyer list is created overall the structure and naming of controllers and migration file is clear and the respective functionalities can be identified based on the names the team has done good work on that
noproblem function calls are added code is formatted and neat naming conventions are followed
noproblem several linear commits visible on the git most of the work done in round 2 is fixes and additional functionalities on top of the base that was finished before round 1
noproblem the team promptly handled the task by working on it regularly and committing changes frequently
noproblem i was unable to judge if this works there was no way for me to determine that the admin can not delete companies can not view edit or delete realtors or househunters also users cannot delete themselves    further the third party admin gem or module   used does not let me edit or delete users or companies either it gives an error on heroku    thus i was unable to determine if the edge cases work also readme does not specify anything
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem the team submitted the changes at equal intervals of time and the last commit was performed a day prior to the deadline which is commendable
noproblem this team continued to commit throughout the project
noproblem the test for real_estate_companies_controller and real_estate_company model are present
noproblem team has been consistent in pushing code changes
noproblem they have tested real_estate_company controller and model   
noproblem   
noproblem yes there are 60 commits well done
noproblem yes they have implemented unit tests as well as functional tests
noproblem    the team has done an impressive job in handling the tests for messages and real estate companies
noproblem yes i can see a variety of edge cases being tested
noproblem the code looks comprehensive to a good extent with the usage of comments and clear naming 1 adding the remove from wish list feature is a   plus   point 2 the naming is done well with attention to the singular and   plural nouns for models and controllers 3 no   problem with respect to the coding clarity   
noproblem the quality of the code is impeccable use of helper files and establishing a specific user through def current_user function in the application helper allowed the team to use a common user parameter throughout the application development and reduced the amount of   effort that would have been needed other wise   
noproblem    code is very much readable there are proper comments before the functions
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem code quality seems to be very good documentation aloong with instructions are present
noproblem mapping has been properly implemented
noproblem the database design is close to perfect the destroy and delete dependencies have also been well managed to allow deletion in cases where a house hunter gets deleted and all its inquiries are deleted automatically
noproblem    yes the system does handle the relationships and the mappings are clearly defined
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems   
noproblem this system handle the 1 to n and n to n relationships
noproblem the above case is covered
noproblem the realtors controller has been very well tested by the team
noproblem    the test cases are running fine clear steps for the same are given in the readme
noproblem excellent use of rspec
noproblem yes the team has tested thoroughly at least one model and one controller
noproblem there isnt any commit after the first submission
noproblem there are several linear commits to show progression of all the functionalities that were added to the project from the beginning the team had more or less finished their work before round 1 and fixed a few bugs that were not easily   discernible in round 2
noproblem    there are 136 commits i can see with clear commit messages
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well th
noproblem 67 commits by one   whereas 26 by the other two i was expecting an even number of commits
noproblem very good commiting by entire team project was handled well and not messy
noproblem the system has no perceivable issues
noproblem    functionalities are working fine they are well documented in a separate pdf file as well even the read me contains clear instructions for setup
noproblem almost every feature is working as it s supposed to
noproblem app as a whole works very well the look and feel of it is also very good contributes to a very good overall user experience
noproblem the system was able to pass all listed test cases all the views have been perfectly setup as well and have disabled buttons where needed
noproblem    there are enough edge cases tested and well documented in the attached pdf file could also view the some points to be taken care that are documented in specific cases
noproblem 1 if the admin tries to delete a real estate company which has some realtors and houses it would not delete the record because a dependent realtor exists 2 the realtor can change his real estate company and he won t be prohibited from removing houses 3 if   admin tries to delete a house hunter who has submitted several inquiries the inquiries will be deleted and house hunter will be removed from the buyers list
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem looks decent
noproblem coding standards are followed properly  
noproblem code is clear and concise with   explanatory commits
noproblem this team continued pushing changes throughout the project
noproblem only one person has committed throughout the project which looks strange to me however there have been regular commits by the person
noproblem the readme file is completed and explicit so great
noproblem the mappings are present and clearly defined
noproblem yes
noproblem the relationships appear to be documented correctly here
noproblem the functionalities are working fine the input fields in the forms have good explanations for some specific cases
noproblem yes it works perfectly fine
noproblem basic functionalities are working fine
noproblem validations are properly provided to handle edge cases
noproblem houses and inquiries controller seem to be thoroughly tested as do house inquiry search and user models
noproblem the code is well written following the right ror coding practices
noproblem follows good coding practice at most places
noproblem code is written in an efficient clean and readable manner all the functions are lucid and defined properly in blocks a proper use of names for controllers migrations and views can be seen
noproblem yes the coding style was good
noproblem the committs have been done regularly throughout the development period even during the round 2
noproblem   
noproblem the 1 n and n n relationships are properly handled   
noproblem handles most of the relationships properly      
noproblem   
noproblem all the relationships are correct also the houses table shows the time at which the house was created which is impressive additionally the real estate company also shows the number of realtors for each company good work on that
noproblem relationships are implemented correctly   
noproblem there were issues with the admin functionalities in the first round they have been fixed
noproblem   
noproblem most issues were fixed
noproblem   
noproblem code is compliant to rails coding style
noproblem yes they did
noproblem no lot of specified features still missing
noproblem no idea
noproblem the edge cases aren t testable because of the incompleteness of the project
noproblem some edg cases are working
noproblem yes
noproblem the code is clean and readable   
noproblem code looks quite readable
noproblem looks alright
noproblem the code is clean and well written the controllers and models are named accurately and each filename describes the desired functionality good work on that
noproblem the system properly handles the relationships where a real estate company can have multiple realtors also it supports a realtor to create multiple houses and the house hunters to add multiple houses to their interest list
noproblem yes 1st cut did not have heroku link this time apart from additional code link is present and may of non functional flows seems to be in place
noproblem code naming convention done well
noproblem commits performed during the course
noproblem handled 1 to n and n to n relationships succesfully
noproblem the team has handled all the associations between multiple entities quite well
noproblem the relationships are properly defined
noproblem follows the relationships properly
noproblem yes
noproblem the basic functionalities work successfully
noproblem different methods for different functionality no long methods    overall good job by the team on the structure of the project   
noproblem the code is clearly written and easy to understand the functionalities are separated and well defined   
noproblem commits aren t exactly spread evenly across the entire duration of the project but they have made changes in round 2 there have been significant improvements in the functionality   and overall code in the project from my previous review
noproblem with 108 commits te team has continuously pushed changes to git to keep the version control in tact
noproblem the team has been constantly submitting changes to the repository with each team member having considerable commits which says the work was divided equally among team members
noproblem yes i think the whole team has been participated in this project and kept on submitting changes throughout the project and they still keep on submitting changes in round 2 even though the deadline for round 2 has passed their last record of commitment is on oct 16
noproblem good job on the comments and description of the git commit    it makes the job of the product owner lead software to review your code
noproblem the commits were fairly frequent even in round 2
noproblem the project mentions the belongs_to and has_many parts of the problem specification in the right ruby files so they are handled correctly
noproblem yes authors have done a great job in this part and they handle the 1 to n and n to 1 relationships properly
noproblem good job on the db design mappings between model are good
noproblem relationships are properly defined and mapping is correct
noproblem yes i could not create another account with the same email    validations seem to be done on user level while creating account signing in etc
noproblem yes they did put effort on test part they have done a good job in testing model users
noproblem only basic test cases have been given for any cont
noproblem code in the files are auto generated every function is implemented in a clean and readable manner and performs only one task code on whole follows ruby on rails practices      
noproblem code is clean and readable 1 yes 2 no 3 no readme file is well written and descriptive   
noproblem some files like comment rb don t suggest what they are used for
noproblem the code is quite clearly written with all the good coding practices being followed
noproblem although there aren t too many commits the team does seem to have been updating their git in a continuous manner   
noproblem a total of 26 comments and recently updated also   
noproblem the team has committed changes in round 2
noproblem 26 commits overall with about 13 commits for round 2
noproblem yes    1 to n and n to n relationships are handled correctly tables are mapped correctly
noproblem most of the mappings are done correctly
noproblem the relationships have been set up properly in the model files as well as the schema however a destroy dependency in the model file would be a great addition       has_many   enquiries    dependent destroy
noproblem the code on github shows the 1 to n relationship between real estate company and realtor the realtor is also able to create real estate companies of his own
noproblem yes the mapping is done quite well
noproblem edge cases are handled good and the readme is effective enough to understand the entire code flow
noproblem no tests are added for any model or controller
noproblem no specific testing apart from scaffold generated tests seems to have been implemented by the team
noproblem only default tests are present
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem code is clear and concise with   explanatory commits
noproblem looks decent
noproblem coding standards are followed properly  
noproblem this team continued pushing changes throughout the project
noproblem the readme file is completed and explicit so great
noproblem the mappings are present and clearly defined
noproblem yes
noproblem the relationships appear to be documented correctly here
noproblem the functionalities are working fine the input fields in the forms have good explanations for some specific cases
noproblem yes it works perfectly fine
noproblem basic functionalities are working fine
noproblem could not test most of the edge cases as functionalities have not been implemented
noproblem validations are properly provided to handle edge cases
noproblem a realtor changing real estate company makes them unable to edit houses they ve listed with the previous company
noproblem houses and inquiries controller seem to be thoroughly tested as do house inquiry search and user models
noproblem not mentioned in readme file and couldnt   find any in code
noproblem    yes code is well structured overall interests and potential buyers functionality are separated from house hunter model view proper naming conventions are followed
noproblem    no issue found classes looks very clean and nicely naming
noproblem the quality of the code was efficient it allowed to use the system in an understandable manner it followed approach for clean coding using ruby and rails
noproblem the code is clean and easy to read
noproblem   
noproblem 30 commits during the last week  
noproblem yes the commit increased from 8 to 40
noproblem the team worked on a lot of things from the first stage this includes testing for admin and realtor functionalities allowing admin user to view and destroy the accounts of realtor and house hunter
noproblem 40 commit the last one was on oct 10
noproblem code quality is impressive every action has a different function call the methods are well defined to understand to purpose it serves
noproblem the code is clean naming conventions are followed
noproblem have followed good ruby coding practices with meaningful variable names single responsibility paradigm is well portrayed
noproblem the code is clean and solid easy to read
noproblem commits in the repo are consistent commits show some changes were made to improve the functionalities
noproblem this team pushed code in a few very bursty   times but they did push commits after the initial review
noproblem the team has committed the code continuously yes the team had made commits in round 2 also
noproblem they have consistently checked in code during the project duration even in phase 2
noproblem the last commit is in 10 10
noproblem yes code handles the mapping as mentioned in the given example
noproblem yes the db design looks to have the proper relationships
noproblem there are plenty of relations mentioned in the model files for the mentioned case as well
noproblem there is   a search rb which seems very vague and unused it has an extensive search logic it should be a method in the house rb file instead of a separate file of its own
noproblem enquiries hasnt been tested
noproblem tested for a realtor account the code handles the lifecycle   of the user pretty well   
noproblem yes they tested the user_controller and model
noproblem cant see a rspec folder
noproblem test cases in user model present
noproblem thorough testing has been done for user_test rb and controllers
noproblem they test 7 different controllers and 7 different models vert convincing work
noproblem code is well written all the conventions of the rails framework have been followed the functions have been properly defined and does only what it is supposed to do
noproblem the code follows the general guidelines for quality and concept of clean coding the models and controller were designed with general practice approach using ruby and rails coding methodologies
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem code looks neat and clean
noproblem the code was committed throughout the project and code was committed in the second round too
noproblem this team is keep on submitting their changes throughout the project and not only one or two members of the team but all of them are playing a role in this project besides they did commit changes in round 2
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem yes about 83 commits
noproblem the team improved upon certain aspects of their code this included establishing the admin functions and actions as adding new companies and to view various participants involved
noproblem found that company has many users missing house   has many inquiries and reply missing
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem seeing from the schema file the logic seems fine but unable to test it out
noproblem the code procedure and application justified the 1 to n and n to n relationships between the realtor and house hunter model as well as real estate company and realtor relationship mapped as 1 to n
noproblem i think the authors did a good job in developing the system the system is working as it is supposed to work
noproblem yes i feel the team has done pretty well in testing at least one model and one controller
noproblem the team thoroughly tested the admin model and controller the tests for admin performed checks for admin functionality to be able to view the list of houses created by the realtors as well as look up for realtors and house hunters information that are involved in application
noproblem yes the code is written in a clean and readable way only one task is handled by each method and in case of multiple tasks function calls have been implemented perfectly there is no bad naming in this project code in model and controller looks fine proper spacing of function and its block is done
noproblem   
noproblem the code looks comprehensive to a good extent with the usage of clear naming the naming is done well with attention to the singular and   plural nouns for models and controllers no   problem with respect to the coding clarity   
noproblem most of the code follows standards    but i was not able to verify the complex examples like adding house to interest list email when a reply is given by realtor as it is not working in   replies_controller rb avoid using class variable and use instance variable
noproblem code is well written
noproblem    the code was very easy to read and follow good coding practices
noproblem solid code easy to read
noproblem commits after the first review by all team members is seen
noproblem   
noproblem regular commits were not done everything was committed in one commit which should be discouraged think about working professionally you should be committing code asap and committing with proper commits and description commit also should not be all module at once but individual   
noproblem yes there are commits in phase 2 as well
noproblem 26 commits with about 10 commits after round 1
noproblem 26 commits last one on 11th oct
noproblem this relation is handled well
noproblem   
noproblem the company house inquiry user   etc mapping is done well and according to the functionalities
noproblem yes all the db relationships are handle properly
noproblem first round their login functionality wasnt working it is working now as expected
noproblem few edge cases not working
noproblem it seems some destroy function have some issue   
noproblem only auto generated test cases are present
noproblem none of the controller or model was tested
noproblem no test for any of the models
noproblem from what i can tell code quality in this application is good functions generally   look small and there is good use of rails utilities
noproblem code is written properly one method is covering only one functionality also for more features team has created new controllers hence i can conclude code is neat and readable      
noproblem the code is clean
noproblem great code writing habit
noproblem yes they did
noproblem yes
noproblem    all the mapping looks good nice job
noproblem yes the db design handles these relationships correctly
noproblem team has mapped house realtor company also house hunter inquiries well in the model   
noproblem the schema is very well defined most of the suggestions provide as part of initial review are incorporated the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record this ensures there is consistency
noproblem implemented the mappings properly
noproblem this system handles all relationships   properly by using has_many belongs_to constructs correctly and addition of relevant foreign key attributes in the appropriate tables
noproblem yes
noproblem the team has done a great job in testing admin controller is tested extensively with relevant concise comments   and rspec is used to test admin model with its validators
noproblem every action has a different definition written the code is well structured
noproblem code is written properly and followed dry each function is handling single task team understands mvc architecture very well but i could see controller for every functionality where in such functionalities could have been handled with mere methods in other main controllers      
noproblem no bad naming handles multiple tasks with multiple function calls
noproblem the code is in general clean and readable nearly all methods seen handle only one task or use function calls to handle other tasks naming seems appropriate in all of the files there are no overly nested blocks
noproblem the code is well written
noproblem the code looks clear and understandable
noproblem commits can be seen throughout the project duration
noproblem i could see a huge number of commits on the github but it is not evenly distributed
noproblem submitted changes throughout the project committed changes in round 2
noproblem the team did a good job of making consistent commits throughout the life of the project
noproblem the team kept committing   their changes throughout the project
noproblem the code frequency is pretty good   
noproblem mappings are mentioned appropriately
noproblem team has handled 1 to n and n to n relationship very cleanly not only in code but also the related functionalities are working great except few like i can not see realtor associated with any company   
noproblem handles all relationships
noproblem i think it does but i don t feel confident in my answer
noproblem the relation mapping is well made
noproblem models show good relation mapping
noproblem above listed test cases were handled
noproblem handles all edge cases
noproblem everything explained in readme    works great
noproblem all meaningful tests
noproblem yes    1 to n and n to n relationships properly are handled properly tables are mapped properly too i don t find any issue related to db
noproblem the corresponding ruby files maintain the belongs_to and has_many relationships to reflect this
noproblem potential buyers interest house and inquiry dependencies are not handled properly
noproblem    in the model classes and schema file each object has good relationship with each other
noproblem there is 1 to n realtionship between company and realtors
noproblem the system handles the 1 to n and n to n relationships properly the real estate company and realtor relationship mapped as 1 to n
noproblem all the basic functionalities have been implemented team as whole have worked really hard to make common functionality work
noproblem as a house hunter i am not  
noproblem the system performs almost all the functionalities that are described as part of the deliverables one specific issue that was suggested and resolved was mapping the realtor to a real estate company
noproblem corner cases like removing house from interest list have not been tested
noproblem   
noproblem the team has thoroughly tested each model and controller and the tests were performed to check realtor functionality works as described
noproblem thoroughly test the admin model
noproblem this system handle the 1 to n and n to n relationships
noproblem the quality of the code is impeccable use of helper files and establishing a specific user through def current_user function in the application helper allowed the team to use a common user parameter throughout the application development and reduced the amount of   effort that would have been needed other wise   
noproblem there are several linear commits to show progression of all the functionalities that were added to the project from the beginning the team had more or less finished their work before round 1 and fixed a few bugs that were not easily   discernible in round 2
noproblem the database design is close to perfect the destroy and delete dependencies have also been well managed to allow deletion in cases where a house hunter gets deleted and all its inquiries are deleted automatically
noproblem the system has no perceivable issues
noproblem the system was able to pass all listed test cases all the views have been perfectly setup as well and have disabled buttons where needed
noproblem the realtors controller has been very well tested by the team
noproblem code quality seems to be very good documentation aloong with instructions are present
noproblem very good commiting by entire team project was handled well and not messy
noproblem app as a whole works very well the look and feel of it is also very good contributes to a very good overall user experience
noproblem the code looks comprehensive to a good extent with the usage of comments and clear naming 1 adding the remove from wish list feature is a   plus   point 2 the naming is done well with attention to the singular and   plural nouns for models and controllers 3 no   problem with respect to the coding clarity   
noproblem mapping has been properly implemented
noproblem the above case is covered
noproblem almost every feature is working as it s supposed to
noproblem the team has done a good job in submitting changes throughout the project the team has not committed changes in round 2
noproblem excellent use of rspec
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well th
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems   
noproblem yes the team has tested thoroughly at least one model and one controller
noproblem    code is very much readable there are proper comments before the functions
noproblem    there are 136 commits i can see with clear commit messages
noproblem    yes the system does handle the relationships and the mappings are clearly defined
noproblem    functionalities are working fine they are well documented in a separate pdf file as well even the read me contains clear instructions for setup
noproblem    there are enough edge cases tested and well documented in the attached pdf file could also view the some points to be taken care that are documented in specific cases
noproblem    the test cases are running fine clear steps for the same are given in the readme
noproblem well written and able to follow however i see no branches created and hence pull requests merged all work is pushed direct to master
noproblem seems alright
noproblem yes the code written was clean and readable
noproblem code quality is good linked features are working fine like the one asked in question
noproblem good code writing   
noproblem good coding practices have been followed methods are crisp and single responsibility paradigm has been implemented
noproblem submitted well within deadline
noproblem yes they did
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem the team committed their changes throughout the project period consistently
noproblem yes the team has committed code changes in round2  
noproblem they added a few changes could ve listed more on readme
noproblem yes they still commited until yesterday
noproblem yes the team kept committing changes throughout the duration of the project
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem yes the relationships are handled properly 1 company multiple realtors etc no mapping table as such the schema handles it
noproblem i did not find any problems in the first phase testing all basic functionalities work as expected bonus points for the ui one of the best i have seen the web application is intuitive and guides the user in performing any function great job
noproblem first reviews comments were fixed   
noproblem they still have the problem i found in the first round
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if a house hunter is deleted all of his her inquiries are also deleted
noproblem i could not login as admin using username password combination provided in readme so edge cases could not be tested
noproblem the readme document clearly mentions the edge cases when a company is deleted what happens to the houses and realtors
noproblem edge cases like real estate company deletion are handled as deletions which is basically not handling it could ve done some case like transferring them to other user account or such
noproblem they did not very well dealing with the edge cases 1 nothing happens 2 nothing happens 3 nothing happens
noproblem edge cases are covered when a company is deleted the realtors and houses are also deleted along with it the readme md file also details how the edge cases are handled
noproblem not thoroughly test not enough test written for inquiries
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the inquiries controller is especially well tested all assert statements are well thought of
noproblem yes the team has thoroughly tested
noproblem the test only validates cases with valid attributes
noproblem most common cases are tested in controllers they are using fixtures for testing  
noproblem yes they used rspect to test the code
noproblem code quality is impressive every action has a different function call the methods are well defined to understand to purpose it serves
noproblem the code is clean naming conventions are followed
noproblem have followed good ruby coding practices with meaningful variable names single responsibility paradigm is well portrayed
noproblem the code is clean and solid easy to read
noproblem commits in the repo are consistent commits show some changes were made to improve the functionalities
noproblem the team has committed the code continuously yes the team had made commits in round 2 also
noproblem 108 commits quite impressive
noproblem they have consistently checked in code during the project duration even in phase 2
noproblem the last commit is in 10 10
noproblem yes code handles the mapping as mentioned in the given example
noproblem yes the db design looks to have the proper relationships
noproblem there are plenty of relations mentioned in the model files for the mentioned case as well
noproblem tested for a realtor account the code handles the lifecycle   of the user pretty well   
noproblem yes they tested the user_controller and model
noproblem test cases in user model present
noproblem thorough testing has been done for user_test rb and controllers
noproblem they test 7 different controllers and 7 different models vert convincing work
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem adopted good coding practices
noproblem code was very clear and concise implemented concepts of cohesion and coupling related functionalities were placed together
noproblem yes the code looks good code modularization principles are followed didn t find any major code duplication issues
noproblem the code is very well written with maximum functionalities   covered including adding a house to interest list as a hunter and showing that hunter as a potential buyer for that particular house well done
noproblem yes timely commits
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem the team has been using github for almost entire tenure of the project yes the team has made multiple changes during the round 2 the team has been making changes after the code submission as well till today s date      
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem 20 commits in round 2
noproblem team showed great consistency in committing changes changes increased in round 2
noproblem yes the commit count has almost doubled
noproblem 52 commits the team seems to be quite active throughout
noproblem code is pushed but frequency is very less
noproblem yes models are maintained properly
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem yes the team has handled all the   single and multiple   associations among all entities quite well all the relationships can be reviewed under the model of all the entities   
noproblem database was well designed so as to avoid redundancy
noproblem looks good all types of relationships are handled properly
noproblem yes the mapping of 1 to n for company realtor and company houses is correctly done
noproblem the design is well implemented relationships are well defined in models and edge cases are handled in schema itself   
noproblem the system seemed to handle test cases
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well
noproblem edge cases are well handled with the appropriate handling of dependencies between companies and users houses and their creators etc
noproblem test cases for the user have been implemented
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the user model is especially well tested
noproblem testing was done
noproblem the code is written in a clean way
noproblem the quality of the code is good clean and well readable multiple tasks are handled by function calls and a method handles only one task there is not many nested blocks or long methods there is no bad naming in this project and is well organised   
noproblem submitted changes throughout the project committed changes in round 2
noproblem yes timely commits
noproblem i   see 1 big commit with all the files which is the first commit and 19 very small other commits done in round 2   
noproblem there are some commits around 19hrs ago most commits are 6 7 days prior
noproblem compared to other teams that i have reviewed there are fewer commits here and some are recently committed on oct 15   
noproblem    relationship looks good in both models and schema
noproblem yes all relationships properly defined in the model
noproblem the db is well designed and relationship mappings are proper
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships   
noproblem no schema or relations are implemented
noproblem all db relation and validation are correct and complete    good job
noproblem the project is implemented incorrectly and is incomplete   
noproblem only ba
noproblem the tests are the normal ones generated by scaffold
noproblem tests are written for the controllers
noproblem the code is clean and readable   
noproblem code looks quite readable
noproblem looks alright
noproblem the code is clean and well written the controllers and models are named accurately and each filename describes the desired functionality good work on that
noproblem the commits were regularly   till round 2
noproblem i could see commits in round 2 as well
noproblem yes 67 commits
noproblem yes the team kept pushing their updates even in round 2
noproblem yes there are commits after round 1 review but by review 1 the project wasn t working and hence these commits are probably partially to make it work in the first place
noproblem the team has contributed to the repo regularly all the team members have contributed to the project in the second phase the system has improved a lot as compared to the previous version
noproblem yes lot of code has been checked in post 1st cut
noproblem since the last time they have improved a lot    the basic functionalites are working
noproblem yes 1st cut did not have heroku link this time apart from additional code link is present and may of non functional flows seems to be in place
noproblem as mentioned in the read me file the inquiry controller and the admin model have been tested thoroughly
noproblem no model or controller has been tested
noproblem they ve tested one controller thoroughly and one basic feature of admin model is tested  
noproblem the user and realtor roles are tested to prevent any abnormal occurrences during the sign up good work on that
noproblem the code is very well structured and written with good coding practice
noproblem the code quality is fairly standard    the code does follow   good ruby and rails coding practices no bad naming every file is properly named based on their functionalities i cannot find issues with coding one method handles only one task i could not find any bugs in the system and this works exactly how it is supposed to work
noproblem code is written in an efficient clean and readable manner proper use of data structures like hash maps are used wherever necessary a proper use of names for controllers migrations and views can be seen the names given for controllers properly signifies the tasks performed the readme file is thorough and provides all the functionalities implemented in the project
noproblem every method is handling only one task and the code is written in a clean and readable manner the naming conventions are maintained the code was also very modular the overall gui is user friendly
noproblem the code is written clearly
noproblem commits on the repo show updates of functionalities
noproblem yes the commits were very well spread out throughout the development cycle which was evident from the quality of the project that was delivered
noproblem checking git log the team kept submitting their changes throughout the project
noproblem yes the team kept on submitting changes throughout the project the commits also includes messages and descriptions about the changes made the team still committed changes in round 2
noproblem the team has worked hard on the project which is evident by the fact that i can see commits almost daily throughout the project period an excellent job on that end
noproblem they keep commit code until 10 10
noproblem all known mappings are present
noproblem the db was very well designed and successfully mapped all the required relations effectively
noproblem by looking at their model files relationships are handled well
noproblem this system handles the 1 n and n n relationships properly the relationships have been set up properly in the model files as well as the schema    they have also implemented the destroy dependency in the model hence no error pops out when the parent record is deleted   
noproblem the team has done praise worthy work in handling relationships in the system the real estate company can add multiple realtors as well as the authorization of a particular realtor changes with the change in company
noproblem 1 n and n n relationships are all properly defined between realtors company and users   
noproblem they added 1 to n and n to n relationship in the model
noproblem all functionalities working with a great ui
noproblem yes the system worked almost perfectly and there was a huge improvement from the first round almost all the issued pointed out after the first round were successfully resolved especially the bug fixing part and adding the new features the user experience was also considerably improved throughout the application
noproblem the system works without any glitches the team has been fixing bugs after the review 1 such that it works clean now i could not find any functionality that is still failing even after trying the edge cases   
noproblem edge cases handled well
noproblem all the edge cases pass well done
noproblem 1 the realtors and houses will also be deleted 2 nothing will happen 3 inquires will also be deleted
noproblem every functionality is working
noproblem the application seems to have been well tested almost all of the test cases have been appropriately and effectively written couldn t find bugs while testing the application too
noproblem the team has tested a model where user with email and first name should be valid to sign up or sign in the following tests are meaningful and have the potential to fail    1 when user uses same email to register twice    2 should not save user with password less than 6 chars 3 should not save user with invalid email 4 should not save user without email   
noproblem the code shows that most of the controllers and models were tested
noproblem yes they have tested a model and a controller   
noproblem yes
noproblem code is well written and organised all the functions have been objectively defined and does only what it is supposed to do
noproblem code looks neat methods have only one functionality well organized
noproblem the earliest commit is dated around oct 4
noproblem all commits happened during round 2 but work was done before
noproblem yes the team kept commiting the changes throughout the project and also in round 2
noproblem yes feedback has been accepted and changes made in round 2
noproblem all the relationships have been properly defined in the models
noproblem yes they have properly defined the associations for every table and haven t missed on anything
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented each company has multiple realtors and each realtor can have multiple houses everything good here
noproblem by looking at their model files relationships are handled well
noproblem db mappings are done well cascading delete and cascading nullify implemented to handle delete cases
noproblem not many problem detected working to the expectations
noproblem all functionality seems to be present now
noproblem excellent code very well commented and followed most of the ruby s standard code formate very well organized   
noproblem neat code and well arrangement of the views espaciallly the house_style view
noproblem code was committed throughout the project and during second round too   
noproblem all feedback has been accepted and changes made to fix them
noproblem yes committed are constantly updated till today readme file was updated 3 hours ago   
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if an admin tries to delete a house hunter with multiple inquiries all of his her inquiries are deleted as well
noproblem all deletion edge cases seem to be accounted for
noproblem yes
noproblem yes all the edge cases are handled very well
noproblem basic functionalities working fine
noproblem all functionalities works and can be successfully implemented   
noproblem good readme instructions provided functionalities working fine
noproblem 1 deletes 2 changes successfully 3 deletes 4 all cases works   
noproblem good test cases written
noproblem the edge cases tested where handled properly with proper messages that shows which other entities will be affected by the change
noproblem yes the team has thoroughly tested and did validations
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem code was committed throughout the project and during second round too   
noproblem yes committed are constantly updated till today readme file was updated 3 hours ago   
noproblem although the relationships have been properly handled i see in places with a belongs_to relationship optional true option is present which allows violation of the relationship and is a bad idea
noproblem the schema rb file should be in the repo from the models and the migrations the relationships appeared to be correct
noproblem db relationships looked fine new model was created for house style which could have been a parameter in house   model itself
noproblem can t login as admin in the redame flie
noproblem user model could have been subdivided into different roles models such as realtor and househunter   
noproblem the admin credentials provided don t work and hence no admin functionality can be tested
noproblem an exception occurred when replying to an inquiry an inquiry could not be deleted by a house hunter
noproblem basic functionalities working fine
noproblem the code has been written in a very clean and readable way it is very legible and properly indented i could not find and issues with the coding there is no bad naming in this project and is neatly organised with instructions one method handles only one specific task there are function calls for multiple tasks yes adding the user to the house s potential buyers is done by a separate method call on the whole the code quality is legit and i could not spot any long methods or too many nested blocks
noproblem all functionalities works and can be successfully implemented   
noproblem this project is very well organized and the code style is great
noproblem can not login as an admin
noproblem it s good to have the search logic in the model as opposed to the controller
noproblem 1 what will happen if the admin tries to delete a real estate company which has some realtors and houses can t be tested 2 what will happen if a realtor changes his her real estate company will s he be prohibited to remove the houses s he listed in the previous company no realtor is still allowed to delete houses 3 what will happen if admin tries to delete a house hunter who has submitted several inquiries will the inquiries be automatically deleted if this house hunter is a potential buyer of a house will s he be removed from the corresponding potential buyers list cannot be tested 4    delete a house in a house hunter s interest list and see if it still appears there works as expected
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem    really good commit record with good comments as to what was changed
noproblem 2 the realtor could only remove the houses he or she created regardless of his or her company the readme md was not very specific on how to handle edge cases
noproblem yes the number of commits have increased upto 110 commits
noproblem good readme instructions provided functionalities working fine
noproblem yes the team kept on submitting their changes throughout their project there are a total of 110 commits from the team and they still committed changes in round 2 they have made 28 commits int the week of oct 7 which is after the first round they have committed the changes with proper messages also
noproblem 1 deletes 2 changes successfully 3 deletes 4 all cases works   
noproblem i just see commits done on last few days by most teammates
noproblem this team kept committing through the end of the project
noproblem they have actively committed code during the project duration including round 2
noproblem the tests for the controllers and models were basic scaffold tests with not much meaning
noproblem good test cases written
noproblem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many relations are absent
noproblem    mapping checks out
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships   
noproblem house hunter and realtor can easily switch accounts
noproblem all of the relationships are handled properly in the code
noproblem the entity relationships have been established properly they have also implemented cascading delete
noproblem well done most of the functionality i commented on last time has been fixed with very intuitive ui the only thing i couldn t find still was being able to view all inquiries as an admin very good updates overall
noproblem all of these are well handled and documented in the readme good work
noproblem when a realtor changes real estate companies they are able to edit houses listed from the new real estate company but not from their old one when a user with inquiries gets deleted so do the inquiries
noproblem the edge cases are covered the readme file also details how these cases are handled   
noproblem test cases for the user have been implemented
noproblem the user model is tested as are multiple controllers
noproblem they have written proper test cases that check both positives and negatives
noproblem the code looks clean and neat couldn t   find any bad naming in the project
noproblem code is written properly with all dry principles methods are simple and clean every method   contains functions specific functionalities mvc are created where they are needed   
noproblem yes the code quality seems good team has taken care of keeping a good design
noproblem naming convention followed code is neat formatting is done function calls are included
noproblem 1
noproblem yes
noproblem yes the team has shown proper team collaboration two members of the team kept submitting   the changes throughout the projects and there are sufficient commits for round 2   
noproblem yes model and relationships are well designed and cover most of them   
noproblem test cases present for user controller
noproblem basic functional test cases are written for four controllers   
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem the code has been implemented as per the ruby standards of coding   
noproblem the code is written in a clean and readable way
noproblem cthe team has written code in a clean and readable manner the team has implemented individual functions for handling specific individual tasks the application uses proper naming convention and follows singular naming convention for all model classes the team has used singular and plural naming convention as per the standard ruby on rails convention which makes it easier for the reviewer to be able to read and understand the code   
noproblem proper naming standards and conventions are followed
noproblem code seems clean
noproblem the code is clean and readme file is also present explaining each and every implementation
noproblem one method handle one task and code is neat and understandable
noproblem the code looks clean and neat couldn t   find any bad naming in the project
noproblem code is written properly with all dry principles methods are simple and clean every method   contains functions specific functionalities mvc are created where they are needed   
noproblem yes the code quality seems good team has taken care of keeping a good design
noproblem naming convention followed code is neat formatting is done function calls are included
noproblem 1
noproblem the code was committed throughout the project the code was committed in the second round too
noproblem team continuously pushing changes into github i could not see distribution of work done equally i could see 46 commits with a neat and easy to understand readme file
noproblem yes
noproblem yes the team has shown proper team collaboration two members of the team kept submitting   the changes throughout the projects and there are sufficient commits for round 2   
noproblem yes model and relationships are well designed and cover most of them   
noproblem test cases present for user controller
noproblem basic functional test cases are written for four controllers   
noproblem the code is clean and readable   
noproblem code looks quite readable
noproblem looks alright
noproblem the code generally is simple and understandable blocks are simple but maybe its because few features are missing
noproblem the code is clean and well written the controllers and models are named accurately and each filename describes the desired functionality good work on that
noproblem the commits were regularly   till round 2
noproblem i could see commits in round 2 as well
noproblem yes 67 commits
noproblem yes the team kept pushing their updates even in round 2
noproblem yes there are commits after round 1 review but by review 1 the project wasn t working and hence these commits are probably partially to make it work in the first place
noproblem fewer commits compared to other teams that i have reviewed
noproblem the team has contributed to the repo regularly all the team members have contributed to the project in the second phase the system has improved a lot as compared to the previous version
noproblem yes lot of code has been checked in post 1st cut
noproblem the system properly handles the relationships where a real estate company can have multiple realtors also it supports a realtor to create multiple houses and the house hunters to add multiple houses to their interest list
noproblem since the last time they have improved a lot    the basic functionalites are working
noproblem admin requires a separate url to   login
noproblem yes 1st cut did not have heroku link this time apart from additional code link is present and may of non functional flows seems to be in place
noproblem the basic test cases mentioned in the read me work fine it does not cover the edge cases as mentioned above but some of the validations i tried seem to have worked
noproblem as mentioned in the read me file the inquiry controller and the admin model have been tested thoroughly
noproblem they ve tested one controller thoroughly and one basic feature of admin model is tested  
noproblem the user and realtor roles are tested to prevent any abnormal occurrences during the sign up good work on that
noproblem well written code clean and easy to read
noproblem checking the git log the team still committed changes in round 2
noproblem they committed quite many changes on the day of submission
noproblem handled perfectly well
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem the code written seems to follow nice
noproblem good coding practice used
noproblem commented code in view controller files
noproblem there were commits with required changes for the second submission commits from all team members could be seen showing their contribution
noproblem yaah frequent commits were done throughout the course of project
noproblem 157 commits
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem 157 commits
noproblem mapping has been properly implemented
noproblem no couldnt find 1to n relationships
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems   
noproblem the team has a well structured schema the team have defined the relationships between the tables properly the models have defined all the relations properly   
noproblem yes the team has rectified the errors from the earlier review and has implemented the needed changes additional functionalities like the not interested feature were also used
noproblem yes the problems found in first round were fixed
noproblem no null checks i can submit empty form
noproblem the authors did a good job in developing the system the system is working as it is supposed to work
noproblem    the web application seems to have implemented all the functionalities properly the team have updated the repository and implemented new features after the initial submission
noproblem addressed comment from 1st review   
noproblem edge cases are not handled
noproblem the following edge cases seem to have been handled and documented 1 on deleting a user the corresponding househunter and realtor accounts are deleted 2 on deleting a company corresponding houses are deleted and realtors with that company have their company set to null3 on deleting a househunter or house the corresponding entry in interest list is deleted 4 on deleting househunter or house corresponding inquiry is deleted
noproblem works great have mentioned in readme as well
noproblem the above case is covered
noproblem no test cases performed
noproblem tested multiple controllers but i don t see any models being tested
noproblem yes the team has done pretty well in testing at least one model and one controller
noproblem the team have implemented basic testing for basic crud functionalities for all the controllers and models these look like the automatically generated tests from scaffold in rails
noproblem couldn t find rspec file or any other test file
noproblem code follows most of the ruby good practices
noproblem the team seems to have followed proper naming conventions for naming all the classes as well as all the attributes the   team seems to have written a clean and readable code
noproblem the team committed throughout the project and during round 2
noproblem they have 181 commits
noproblem the team has a good history of commits and as can be seen from the github repository the trail of commits is well documented and each new feature added or bug fixed has a documented commit the team kept pushing commits throughout both the deadlines and were regular
noproblem yes a total of 181 comments and are continuously committed on the repo   
noproblem the database design is solid with join tables for the n n relationships
noproblem the rb files set the has_many and belongs_to relationships correctly
noproblem the team has a well designed schema and has defined all the relationships between the tables properly
noproblem the system is well designed and all the features have been correctly added and all the functionalities work the authors have fixed all the problems from the previous submission
noproblem the system works as it is supposed to for example the realtor the admin and the user can login and perform the related functionalities successfully   
noproblem the system was very strong through edge cases and the readme md was very detailed
noproblem the first edge case wherein a comp any is being deleted by the admin is handled perfectly and the associated listings and inquiries are deleted accordingly the house hunter deletion is also handled perfectly so that their inquiry are deleted accordingly also the readme md   explains the working and the functionalities of each role properly
noproblem 1 what will happen if the admin tries to delete a real estate company which has some realtors and houses it deletes it successfully          2 what will happen if a realtor changes his her real estate company will s he be prohibited to remove the houses s he listed in the previous company no houses are easily changed and can be deleted by realtors       3 what will happen if admin tries to delete a house hunter who has submitted several inquiries will the inquiries be automatically deleted if this house hunter is a potential buyer of a house will s he be removed from the corresponding potential buyers list    it cannot be removed if inquiries are pending       4 you can come up with more edge cases if the system fails in some edge cases explain with enough details most of the functionalities i checked such as creating a house putting inquiries removing various users looking back in different accounts if it removes such as inquiries if user has still submitted or pending inquiries all works fine   
noproblem the tests looked good
noproblem the team has tested the app using rspec and thoroughly tests the user module
noproblem good job on testing everything with rspec tests look concise and crisp
noproblem the team has implemented rspec testing and have thoroughly tested one model namely the users model with this also the team has used minitest to thoroughly test the users controller
noproblem test has been written for most of the functionalities and works well the test folder has the relevant files with well commented code   
noproblem all functionality seems to be there now
noproblem all deletion cases are taken care of   
noproblem tests are good
noproblem controller method testing is incomplete
noproblem there were 26 commits in total the team pushed some commits for the round 2
noproblem did not find such a relationship in the model did not find foreign key constraints as well
noproblem i found rspec tests written for inquiry and users
noproblem 1 the team has tested parts of different models and controllers partially but none of the models controllers is thoroughly tested for complete functional verification
noproblem yes by looking at their   commit history the team still commit changes in round 2
noproblem by looking at their model file they handle the relationship pretty well
noproblem no bad naming multiple calls for multiple tasks
noproblem submitted changes throughout the project made commits in round 2
noproblem from what i can tell code quality in this application is good functions generally   look small and there is good use of rails utilities
noproblem code is written properly one method is covering only one functionality also for more features team has created new controllers hence i can conclude code is neat and readable      
noproblem the code is clean
noproblem great code writing habit
noproblem yes they did
noproblem yes
noproblem    all the mapping looks good nice job
noproblem yes the db design handles these relationships correctly
noproblem team has mapped house realtor company also house hunter inquiries well in the model   
noproblem the schema is very well defined most of the suggestions provide as part of initial review are incorporated the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record this ensures there is consistency
noproblem implemented the mappings properly
noproblem yes
noproblem the team has done a great job in testing admin controller is tested extensively with relevant concise comments   and rspec is used to test admin model with its validators
noproblem from what i can tell code quality in this application is good functions generally   look small and there is good use of rails utilities
noproblem code is written properly one method is covering only one functionality also for more features team has created new controllers hence i can conclude code is neat and readable      
noproblem looks good there are some files which are misleading like realtors folder has edit_company file which is blank also the readme md file is missing the admin login details
noproblem the code is clean
noproblem great code writing habit
noproblem there are new commits however the quality of commit messsages is terrible commit message should have a short description of what was changed not just be random words like foo1 foo2 or hasdfsdsd
noproblem yes they did
noproblem yes
noproblem    all the mapping looks good nice job
noproblem yes the db design handles these relationships correctly
noproblem yes
noproblem this system handles all relationships   properly by using has_many belongs_to constructs correctly and addition of relevant foreign key attributes in the appropriate tables
noproblem implemented the mappings properly
noproblem the schema is very well defined most of the suggestions provide as part of initial review are incorporated the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record this ensures there is consistency
noproblem team has mapped house realtor company also house hunter inquiries well in the model   
noproblem the team has done a great job in testing admin controller is tested extensively with relevant concise comments   and rspec is used to test admin model with its validators
noproblem seems alright
noproblem yes the code written was clean and readable
noproblem code quality is good linked features are working fine like the one asked in question
noproblem good code writing   
noproblem good coding practices have been followed methods are crisp and single responsibility paradigm has been implemented
noproblem submitted well within deadline
noproblem yes they did
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem the team committed their changes throughout the project period consistently
noproblem yes the team has committed code changes in round2  
noproblem yes they still commited until yesterday
noproblem yes the team kept committing changes throughout the duration of the project
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem i did not find any problems in the first phase testing all basic functionalities work as expected bonus points for the ui one of the best i have seen the web application is intuitive and guides the user in performing any function great job
noproblem first reviews comments were fixed   
noproblem the readme document clearly mentions the edge cases when a company is deleted what happens to the houses and realtors
noproblem edge cases are covered when a company is deleted the realtors and houses are also deleted along with it the readme md file also details how the edge cases are handled
noproblem able to create two users with same email and if i try to login with that particular email error screen appears
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the inquiries controller is especially well tested all assert statements are well thought of
noproblem yes the team has thoroughly tested
noproblem most common cases are tested in controllers they are using fixtures for testing  
noproblem yes they used rspect to test the code
noproblem the code looks clean and neat couldn t   find any bad naming in the project
noproblem yes the code quality seems good team has taken care of keeping a good design
noproblem 1
noproblem naming convention followed code is neat formatting is done function calls are included
noproblem the code was committed throughout the project the code was committed in the second round too
noproblem team continuously pushing changes into github i could not see distribution of work done equally i could see 46 commits with a neat and easy to understand readme file
noproblem yes
noproblem yes the team has shown proper team collaboration two members of the team kept submitting   the changes throughout the projects and there are sufficient commits for round 2   
noproblem code is written properly with all dry principles methods are simple and clean every method   contains functions specific functionalities mvc are created where they are needed   
noproblem yes model and relationships are well designed and cover most of them   
noproblem readme does not talk about edge cases but it covers how to to access the website good thing is that most of the errors pointed out in the prior review have been taken care of    search is missing        
noproblem test cases present for user controller
noproblem basic functional test cases are written for four controllers   
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem adopted good coding practices
noproblem code was very clear and concise implemented concepts of cohesion and coupling related functionalities were placed together
noproblem yes the code looks good code modularization principles are followed didn t find any major code duplication issues
noproblem the code is very well written with maximum functionalities   covered including adding a house to interest list as a hunter and showing that hunter as a potential buyer for that particular house well done
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem yes timely commits
noproblem 20 commits in round 2
noproblem team showed great consistency in committing changes changes increased in round 2
noproblem yes the commit count has almost doubled
noproblem 52 commits the team seems to be quite active throughout
noproblem code is pushed but frequency is very less
noproblem yes the team has handled all the   single and multiple   associations among all entities quite well all the relationships can be reviewed under the model of all the entities   
noproblem yes models are maintained properly
noproblem database was well designed so as to avoid redundancy
noproblem looks good all types of relationships are handled properly
noproblem yes the mapping of 1 to n for company realtor and company houses is correctly done
noproblem the design is well implemented relationships are well defined in models and edge cases are handled in schema itself   
noproblem code in the files are auto generated every function is implemented in a clean and readable manner and performs only one task code on whole follows ruby on rails practices      
noproblem code is clean and readable 1 yes 2 no 3 no readme file is well written and descriptive   
noproblem the code is quite clearly written with all the good coding practices being followed
noproblem yes team kept on submitting their changes throughout the project only readme md file was updated in round 2
noproblem the commits are many and have been done in round 2 as well the commits weren t evenly spaced through the development cycle   
noproblem although there aren t too many commits the team does seem to have been updating their git in a continuous manner   
noproblem all commits on same day before submission
noproblem a total of 26 comments and recently updated also   
noproblem can see the commits in a single shot on few particular days yes the team has committed changes in round 2
noproblem the team has committed changes in round 2
noproblem 26 commits overall with about 13 commits for round 2
noproblem yes    1 to n and n to n relationships are handled correctly tables are mapped correctly
noproblem most of the mappings are done correctly
noproblem the code on github shows the 1 to n relationship between real estate company and realtor the realtor is also able to create real estate companies of his own
noproblem yes the mapping is done quite well
noproblem edge cases are handled good and the readme is effective enough to understand the entire code flow
noproblem only default tests are present
noproblem code in the files are auto generated every function is implemented in a clean and readable manner and performs only one task code on whole follows ruby on rails practices      
noproblem code is clean and readable 1 yes 2 no 3 no readme file is well written and descriptive   
noproblem the code is quite clearly written with all the good coding practices being followed
noproblem a total of 26 comments and recently updated also   
noproblem the team has committed changes in round 2
noproblem 26 commits overall with about 13 commits for round 2
noproblem yes    1 to n and n to n relationships are handled correctly tables are mapped correctly
noproblem most of the mappings are done correctly
noproblem the code on github shows the 1 to n relationship between real estate company and realtor the realtor is also able to create real estate companies of his own
noproblem yes the mapping is done quite well
noproblem edge cases are handled good and the readme is effective enough to understand the entire code flow
noproblem the testing was done
noproblem the system has been fully deployed and tests for the models and controllers are performed for the users involved in the system the team checked for the edge case wherein the admin deleted the real estate company
noproblem the code is clear and simple most functions have seperate   method calls
noproblem the code followed the basic practices for clean and effective programming using ruby and rails the methods and function calls were efficient in that they only performed the task it was assigned to do
noproblem a major portion of the project was completed in the first stage itself certain noticeable changes that the team implemented in this stage included setting up admin functionalities to view and destroy the realtor or househunter accounts
noproblem i think this team nailed the entity relationships with this application everything had the right relationships
noproblem the relationships between various entities is clear
noproblem the relationships of realtor to real estate company or realtor to house hunter justified proper mapping between them the system handled the 1 to n and n to n relationships properly
noproblem the basic functionalities in the system are working properly  
noproblem the user interface of the system helps to understand the general flow of the program it also supports sessions and enables user to navigate based on their tasks
noproblem 1 yes that is taken care of 2 no bad naming 3 questionable redirection   
noproblem code quality looks good standard conventions have been used it is also good to see that the team has used seeds rb for data generation      
noproblem group continued to revise and commit changes for the project throughout round two commits were clearly stated as to the purpose you can see the development process of the project through the changes applied
noproblem yes 22 commits in total and they have consistently kept on working on git throughout
noproblem 1 to n and n to n relationships are handled correctly the system utilizes foreign key columns in the database to achieve this for example 1 to n relationship between realtor and real estate company is achieved by adding a   company_id field to user table same utilized by houses table which are linked to one realtor and one company
noproblem the system now works as expected the common functionalities are working
noproblem most of the functionalities are added and seem to be working there are some breakages like realtor has a create inquiries option which should not be present and it breaks on clicking it search functionalities based on footage price location have not been added interest list for the user and potential buyers list for the realtor is not added
noproblem well written code clean and easy to read
noproblem clean code and readable 1 yes 2 no 3 none
noproblem very well written in the style of writing and the ruby mvc architecture is properly implemented    1 they have suitably defined methods to handle particular tasks following the appropriate mvc architecture and also following the correct session management    2 nothing is inappropriately named they have very smartly worked on it    3 coding style is absolutely conversant with the ruby on rails flavor of coding   
noproblem the code is very well written
noproblem code is clean and well written a task is handled by only one method there are no bad naming   in this project and is neatly organised with instructions    no issues with the code   
noproblem    the code is written in a clean and readable way
noproblem yes the team has been making commits through out the project tenure as well as round 2
noproblem the commits are visible through out yes commits have occurred in round 2
noproblem they have worked on the project a lot 120 commits each one being descriptive good job there
noproblem yes they did 118 commits
noproblem yes the changes were mostly evenly spread out throughout the development cycle this shows consistent efforts throughout
noproblem yes they have a total of 117 commits which shows the consistency shown by them in working through the project and updating the changes they have made a lot of vital changes in round 2   
noproblem yes there are commits continuously made to the code as latest as 5 hours ago during review
noproblem yes the team kept on submitting their changes throughout their project there are a total of 120 commits from the team and they still committed changes in round 2 they have committed the changes with proper messages also
noproblem the relationships in the db table have been carefully defined and they have taken care to relate 1 to n for houses house hunters inquiries and so on   
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships   
noproblem    by looking at their model   file they handled the relationship properly
noproblem perfectly functional and very well styled with the use of css and also the gui is very user friendly   
noproblem there seems to be a rudimentary test they have implemented as gathered by going through their file application_system_test this and the test file in the models shows that they have taken sufficient efforts to thoroughly examine their code   
noproblem of the functionality the team have tried to to implement the code quality is not poor however the arrangement of code is difficult to understand given that not all functionalities seem to have been implemented the def after_sign_in_path_for function in the applications controller used by the devise gem only takes realtor as a resource i would advise using an if or case condition within the function to allow other users to login also i was unable to find any implementation for making sure that only the inquiries specific to a real estate company be visible to a realtor and similarly only the inquiries posted by a house hunter themselves be visible to the house hunter on that specific house i would again suggest using some if or case statements in the show function of the inquiries controller to establish identity of current_user   
noproblem yes it is
noproblem changes to application continued throughout the second round of project submissions many of the commits deal with the adding additional functionality to the company controller as well as additions to the readme i can see that good work was made toward implementing missing functionality from the first round of submission
noproblem code seems to follow the ruby practices
noproblem code is written in a clean and readable way there are separete methods for separate tasks    good naming convention is followed throughout the project
noproblem recompany could have been just company
noproblem the team seems to have attempted to add to their functionality from the previous round they have attempted to use the devise gem for allowing multiple user logins it seems that they created a new git repo and started from the beginning which seems like a fair idea given that they wanted to use devise instead of implementing the user registration sessions   
noproblem yes they have keep commit to git as their project been working   
noproblem fewer commits on the project more towards the deadline date
noproblem most of the commits are within the last 2 days before submission of project yes commits for round 2 are provided properly
noproblem the team submitted their changes towards the end of the project they committed changes in round 2
noproblem checking the git log the team still committed changes in round 2
noproblem though the commits started late in the project s life there were commits frequently and also after round 1 the commit messages could have been a little more descriptive to fully comprehend the commit changes   
noproblem yes there is a has_many relationship in company model and also realtor is able to create mutliple house in one company
noproblem from the code db design looks fine they have handled most of the relationships properly although i believe having different tables for admins realtors hunters users roles and role maps is un necessary and just increases the complexity of the system   
noproblem the relationship between house hunter realtor and companies have been well established
noproblem they committed quite many changes on the day of submission
noproblem i cannot access the link provided by the team since this is hosted on aws i believe they have not opened the ip to public by mistake i have worked with aws before and this happens maybe they worked from library or their house and when you spawn an instance in aws it adds the ip from where the instance is spawned to the access list which is why i am not able to access this from my ip this can also be a problem with the proxy server setup in the instance and since you guys are maybe doing ssh into the server to deploy your code the default http request will go to port 80 and wont be forwarded to 8080 unless explicitly specified in apache nginx and will block the requests easier way would be to host the app on heroku which handles all this automatically and provides you with a dns entry
noproblem the link submitted is not live as a result i could not test if the system is working as it is supposed to
noproblem the given link does not work and gives the following error this site can   t be reached   18 224 197 227   refused to connect hence cannot comment on the functionalities
noproblem the app url provided didn t work
noproblem cannot access app
noproblem edge cases are not handled but most of the logic will automatically handle edge cases
noproblem the given link does not work and gives the following error this site can   t be reached   18 224 197 227   refused to connect hence cannot comment on the edge cases
noproblem the app url provided didn t work
noproblem there is no link to login as an admin the site went down so could not test further this site can   t be reached 18 224 197 227   refused to connect    search google for   224 197 227 8080 house hunters sign    err_connection_refused      
noproblem no model tests have been implemented basic controller tests generated by scaffold and devise are available
noproblem yes they have tested a lot like admin house and inquiries
noproblem testing has been done for users controller and model
noproblem yes the team has tested model and controller
noproblem some controllers are tested models are not tested thoroughly
noproblem the test scripts have been written however the scripts could have been written in a more elaborate way to include all the test cases and not just the high level tests for example the system accepts an invalid phone number which is less than 10 digits of length all these test cases could have been written and tested  
noproblem in general the code seemed to look fine there were some really long methods like in the users_controller class so i docked a star there was a separate method for adding to interest list
noproblem it looks like all the needed relationships were present in the schema
noproblem authors   delivered nearly all the functionality i could think to test    it was a little weird being referred to a totally different page to have to upload images to houses but not enough to deduct points
noproblem the code follows all design style guidelines for ruby good job all methods are well designed and serve only one function naming and structure is uniform across the project
noproblem all basic functionalities work as expected you could have gone for the extra credit functionality such as the google login or the email part the email part was pretty easy you ve still done a great job with the overall design the best i ve seen thus far   
noproblem 1 if admin deletes a company which has realtors and houses the realtor associated with it get deleted 2 realtor can change her company and she can delete the ad posts previously posted by her 3 admin can delete the house hunter who has several queries and inquiries get deleted automatically      
noproblem yes the commit count has almost doubled from round 1 to round 2
noproblem 1 n and n n relationships are all properly defined
noproblem code written well with all dry principles    methods are simple and clean every method   contains functions specific functionalities    methods are simple and clean every method   contains functions specific functionalities
noproblem the code has been written in a very clean and readable way it is very legible and properly indented i could not find and issues with the coding there is no bad naming in this project and is neatly organised with instructions one method handles only one specific task there are function calls for multiple tasks yes adding the user to the house s potential buyers is done by a separate method call on the whole the code quality is legit and i could not spot any long methods or too many nested blocks
noproblem this project is very well organized and the code style is great
noproblem it s good to have the search logic in the model as opposed to the controller
noproblem yes the team kept pushing commits through out the duration of the project the team even kept pushing commits during round 2 also all team mates seemed to have contributed equally
noproblem    really good commit record with good comments as to what was changed
noproblem yes the number of commits have increased upto 110 commits
noproblem yes the team kept on submitting their changes throughout their project there are a total of 110 commits from the team and they still committed changes in round 2 they have made 28 commits int the week of oct 7 which is after the first round they have committed the changes with proper messages also
noproblem this team kept committing through the end of the project
noproblem they have actively committed code during the project duration including round 2
noproblem    mapping checks out
noproblem this application handles 1 n and n n relationships properly company realtor has 1 n relationship in the mapping table i could not find any problem related to relationships   
noproblem house hunter and realtor can easily switch accounts
noproblem all of the relationships are handled properly in the code
noproblem the entity relationships have been established properly they have also implemented cascading delete
noproblem the search properties and addition of potential buyers needed to be improved and fixed after the first round the authors fixed all of it for round 2 the system works exactly how it is supposed to work i could not find any functionalities that are still failing they have added additional features like signing up with google and sending replies to enquiries via email   
noproblem all feedback has been fixed no pending issues
noproblem all of these are well handled and documented in the readme good work
noproblem 1 if the admin deletes a company all the related properties will be deleted and will remove the company name assigned to any realtor 2 if the realtor changed his or her company the realtor cannot make changes to old posts which they have posted for the previous company they worked for so they will not be able to edit add or remove the houses listed in previous company 3 if the house hunter is deleted by the admin all the inquiries by the house hunter will be deleted and their names in the potential buyers list is removed the readme md covers how the system handles all these edge cases
noproblem when a realtor changes real estate companies they are able to edit houses listed from the new real estate company but not from their old one when a user with inquiries gets deleted so do the inquiries
noproblem the edge cases are covered the readme file also details how these cases are handled   
noproblem test cases for the user have been implemented
noproblem still have lots of tests across all of the models and controllers but nothing super extensive that attempts to cover all possible cases
noproblem the team has tested both a model and controller the system can handle the following cases 1 when user uses same email to register twice    2 should not save user with password less than 6 chars 3 should not save user with invalid email 4 should not save user without email
noproblem the user model is tested as are multiple controllers
noproblem they have written proper test cases that check both positives and negatives
noproblem good coding practices have been followed methods are crisp and single responsibility paradigm has been implemented
noproblem good code writing   
noproblem code quality is good linked features are working fine like the one asked in question
noproblem yes the code written was clean and readable
noproblem well written and able to follow however i see no branches created and hence pull requests merged all work is pushed direct to master
noproblem seems alright
noproblem submitted well within deadline
noproblem yes they did
noproblem the team was regular in committing changes the team continued to work in round 2 and made regular progress all members contributed significantly great job could have started the project a bit earlier
noproblem the team committed their changes throughout the project period consistently
noproblem yes the team has committed code changes in round2  
noproblem yes they still commited until yesterday
noproblem yes the team kept committing changes throughout the duration of the project
noproblem all dependencies are well modeled and designed every model has correctly associated relationships and validations your team is a pro realtor to house and house to company other relationships are implemented
noproblem yes the relationships are handled properly 1 company multiple realtors etc no mapping table as such the schema handles it
noproblem i did not find any problems in the first phase testing all basic functionalities work as expected bonus points for the ui one of the best i have seen the web application is intuitive and guides the user in performing any function great job
noproblem first reviews comments were fixed   
noproblem yes they used rspect to test the code
noproblem most common cases are tested in controllers they are using fixtures for testing  
noproblem yes the team has thoroughly tested
noproblem models and controllers are well tested all edge cases are covered and tests are comprehensive the inquiries controller is especially well tested all assert statements are well thought of
noproblem when the admin tries to delete a real estate company which has some realtors and houses all the houses and realtors are deleted as well this is the expected functionality good job all other test cases work as well if a house hunter is deleted all of his her inquiries are also deleted
noproblem the readme document clearly mentions the edge cases when a company is deleted what happens to the houses and realtors
noproblem edge cases are covered when a company is deleted the realtors and houses are also deleted along with it the readme md file also details how the edge cases are handled
noproblem 1 readable code 2 separation of tasks
noproblem good coding standard
noproblem the code is pretty clean
noproblem yes this team did a lot of work after the initial set of reviews   
noproblem 1 yes timely commits on github
noproblem yes the team kept committing   changes in round 2
noproblem lot of commits and branches
noproblem 1 all   relationships are mentioned in the model
noproblem most of the relations holds good
noproblem user level vaildations   seem to do be correctly also i could not create an account with the same email id again
noproblem 1 readable code 2 separation of tasks
noproblem good coding standard
noproblem the code is pretty clean
noproblem the team has committed changes during round 2 though the changes haven t been spaced evenly most of them are close to the deadline also the changes haven t even spaced evenly the names of the commits were descriptive
noproblem yes this team did a lot of work after the initial set of reviews   
noproblem 1 yes timely commits on github
noproblem yes the team kept committing   changes in round 2
noproblem lot of commits and branches
noproblem 1 all   relationships are mentioned in the model
noproblem most of the relations holds good
noproblem user level vaildations   seem to do be correctly also i could not create an account with the same email id again
noproblem code follows most of the ruby good practices
noproblem the team seems to have followed proper naming conventions for naming all the classes as well as all the attributes the   team seems to have written a clean and readable code
noproblem the team committed throughout the project and during round 2
noproblem there are quite a lot of commits meaning that the team could have grouped some of the changes together into one commit instead of commiting every small modification to make them more meaningful
noproblem they have 181 commits
noproblem the team has a good history of commits and as can be seen from the github repository the trail of commits is well documented and each new feature added or bug fixed has a documented commit the team kept pushing commits throughout both the deadlines and were regular
noproblem yes a total of 181 comments and are continuously committed on the repo   
noproblem the database design is solid with join tables for the n n relationships
noproblem the rb files set the has_many and belongs_to relationships correctly
noproblem the team has a well designed schema and has defined all the relationships between the tables properly
noproblem the system is well designed and all the features have been correctly added and all the functionalities work the authors have fixed all the problems from the previous submission
noproblem the system works as it is supposed to for example the realtor the admin and the user can login and perform the related functionalities successfully   
noproblem the system was very strong through edge cases and the readme md was very detailed
noproblem the first edge case wherein a comp any is being deleted by the admin is handled perfectly and the associated listings and inquiries are deleted accordingly the house hunter deletion is also handled perfectly so that their inquiry are deleted accordingly also the readme md   explains the working and the functionalities of each role properly
noproblem the tests looked good
noproblem the team has tested the app using rspec and thoroughly tests the user module
noproblem good job on testing everything with rspec tests look concise and crisp
noproblem the team has implemented rspec testing and have thoroughly tested one model namely the users model with this also the team has used minitest to thoroughly test the users controller
noproblem test has been written for most of the functionalities and works well the test folder has the relevant files with well commented code   
noproblem code is well written all the conventions of the rails framework have been followed the functions have been properly defined and does only what it is supposed to do
noproblem code looks neat and clean
noproblem the code is well written it is neat and easily readable the function calls are very well done also there is no bad naming the project code very well follows the dry approach
noproblem code is clean and easy to understand some unused unimplemented empty function definitions are there in the files
noproblem the code follows the general guidelines for quality and concept of clean coding the models and controller were designed with general practice approach using ruby and rails coding methodologies
noproblem the code was committed throughout the project and code was committed in the second round too
noproblem this team is keep on submitting their changes throughout the project and not only one or two members of the team but all of them are playing a role in this project besides they did commit changes in round 2
noproblem by looking at their github page i could see they submitted their changes actively and also they continued submitting changes in round 2 as well
noproblem yes about 83 commits
noproblem the team improved upon certain aspects of their code this included establishing the admin functions and actions as adding new companies and to view various participants involved
noproblem i think the system handles the 1 to n and n to n relationships well the relationships are clearly defined with no problems
noproblem the code procedure and application justified the 1 to n and n to n relationships between the realtor and house hunter model as well as real estate company and realtor relationship mapped as 1 to n
noproblem i think the authors did a good job in developing the system the system is working as it is supposed to work
noproblem yes i feel the team has done pretty well in testing at least one model and one controller
noproblem the team thoroughly tested the admin model and controller the tests for admin performed checks for admin functionality to be able to view the list of houses created by the realtors as well as look up for realtors and house hunters information that are involved in application
noproblem there are no new variables etc the code looks fine and logical
noproblem extremely small change no bad naming in question
noproblem there aren t much big changes the changes have been crisp and self explanatory
noproblem 1 functions are of appropriate length and well structured with respect to the purpose in question    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and self explanatory making it easy to follow    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is consistent and to the point   
noproblem the added code is crisp and of required size there isn t much addition anyway to worry about it violating dry principles
noproblem extremely small change no problems found
noproblem all tests pass all descriptions in the test plan are just the test cases in the rspec file sooooooo yeah i guess they all exist
noproblem their   variables methods and class names are good  
noproblem rspec tests look just fine and descriptions are intuitive
noproblem the tests look fine it s easy to follow what the tests do
noproblem code is well written
noproblem the work takes care of all the edge cases accurately
noproblem yes their code works and some edge cases are also correct
noproblem the writeup clearly explains the problem statement
noproblem the wiki page has showed up what the expertiza is and some examples have show up what the task of the team is
noproblem i could understand what the project does however there are fewer examples of the test
noproblem this is not a fair ask as far as i can tell there is no document that says we should create a test plan
noproblem all test cases are currently passing
noproblem all the cases discussed in test plan have been converted into automated tests
noproblem yes unit tests rspec are provided
noproblem action mirror successfully implemented active record is also getting updated properly
noproblem there were some issues initially when i looked at the code but the professor has already made those suggestions about naming conventions and following the design pattern and to write appropriate methods in the right models or controllers looks good now
noproblem       no naming issues found
noproblem the method names variable names and class names are intuitive and suggestive of the functionality
noproblem code looks perfect follows standards
noproblem all ruby looping constructs followed to a good extent refactoring the code could be possible
noproblem follows most he good coding practices follows dry follows ruby style guide and has no error in code climate as well
noproblem the code follows dry principle none of the functions is very long more comments could be added but not required
noproblem code is not dry   
noproblem clear statement and well layout of the wiki page
noproblem all the features are implemented according to the wiki documentation submitted
noproblem edges cases are covered well in the tests
noproblem the features work as intended
noproblem fix is working good link is up
noproblem the features work as intended
noproblem the test has already covered edge cases
noproblem clearly mentions implementation details an the problem descriptions
noproblem documentation is concise and clear
noproblem the wiki document clearly explains what work is done one section for each issue the deadline reminder functionality explains what code is changed but overall what the use case is and what task needs to be performed could have been explained better
noproblem very well written wiki well explained with all the nitty gritty implementation details
noproblem the writeup is written very clearly gives good idea about the project
noproblem very detailed all the implementation details are clearly explained
noproblem the writeup is written really well the description about the functionality has been mentioned clearly good job
noproblem the writeup is clear
noproblem very clearly the authors provide sufficient information about improve the email function such as when become a participant
noproblem test plan is well thought out and thorough
noproblem yes conditions are tested well
noproblem maybe add the code to wiki
noproblem they do have clear testing section but not said as test plan
noproblem the report mentions all the required details like the problem statement the old version of the code and the improved version of the code and how well it is improved and implemented thus the report is also very well articulated
noproblem yes each topic description starts with what the current issue is what are the changes made and how is it impacted and what is the end result nicely articulated
noproblem the implementation strategy is clearly discussed in the writeup which is easy to follow
noproblem yes the bug to fix flow is very well explained comprehensive and easy to understand
noproblem the writeup explains the implementation approach for every functionality that they implemented   
noproblem yes
noproblem yes all the have done are shown in the github link
noproblem seems all variables and methods follow certain naming rules
noproblem the variable method and class names all seem to be reasonable and well written
noproblem the code seems dry and follows good design principles avoiding redundancy
noproblem can not run servo as i dont have the needed environment
noproblem the writeup was well written and explained what the mozilla project was about it also mentioned the purpose of the project along with the technology used to implement the same
noproblem the document is really well written specifying clearly the functionalities worked on
noproblem not any clue
noproblem the writeup details the work done by the authors and mentions how they approached implementing the offscreencanvas api
noproblem no they did write the test plan
noproblem all tests pass all descriptions in the test plan are just the test cases in the rspec file sooooooo yeah i guess they all exist
noproblem their   variables methods and class names are good  
noproblem rspec tests look just fine and descriptions are intuitive
noproblem some of the functions are too long such as delete function
noproblem the tests look fine it s easy to follow what the tests do
noproblem code is well written
noproblem the work takes care of all the edge cases accurately
noproblem yes their code works and some edge cases are also correct
noproblem the writeup clearly explains the problem statement
noproblem the wiki page has showed up what the expertiza is and some examples have show up what the task of the team is
noproblem there s basically no documentation outside the source code itself
noproblem this is semi passable the wiki is hosted on wikipedia so they clearly didn t read the directions i mean i get it though i wrote tests and was also unclear about what exactly the wiki should contain
noproblem i can not find the test plan
noproblem they don not have a test plan
noproblem no this writeup doesn t have a test plan section
noproblem test plan is missing
noproblem the test plan is not added as the part of writeup
noproblem the team does not show up any design patterms in the wiki page the authors did not explain how and why they did and what i can see is just the final code for some perticular exmples
noproblem all the cases discussed in the test plan have been implemented    well done in achieving 100 test coverage and passing all the tests
noproblem over 9000 i mean 90 great job testing participant y all
noproblem   
noproblem yes
noproblem several methods are missing in the document and the rspec file like   review_response_report import
noproblem yes and it all passes too
noproblem every test case that is provided on the wiki page is part of the automated test suite there are no cases of failing tests
noproblem yes they have automated test and all of them pass
noproblem names for variables classes and method are properly named and make sense
noproblem   
noproblem they kept working on it and did really impressive
noproblem it looks great everything is followed
noproblem yes there is no unreasonable function names and all method name are suggestive and apt
noproblem this was a testing project and the mocked objects were appropriate    the code is dry there is no redundancy in the code
noproblem so fresh and so clean clean this code is too neat to even be dry too hot to touch i m just still super impressed by the wiki and the video
noproblem   
noproblem all the code is in a single file as it tests a single model and it seems to cover it extensively it also looks like there s no dry issues
noproblem code seems to be concise and well written
noproblem the features work as intended they cover the test cases and edge cases as well
noproblem after working through several edge case side effects by hand up hill both ways it looks like all of their bases are covered and edge cases satisfied
noproblem   
noproblem the features work as intended
noproblem since coverage is 100 and the code looks good to me i am assuming it works fine
noproblem running the code manually   resulted in the   100 coverage of the   object under test
noproblem this wiki is very detailed and explains what is done for every tested method it also contains links to all resources one may require to understand the functionalities of the project great job guys
noproblem    this is easily the most clear of any testing write up that i have seen to date it is organized into meaningful sections that follow their test plan and show of their deliverables   
noproblem the wiki page   provides clear details about the work and very easy to understand
noproblem the writeup is clear and easy to understand
noproblem yes it is easy understand that it is a testing project and how it is done
noproblem looks like edge cases and invalid inputs are handled
noproblem the test plan look complete enough
noproblem the plan looks   good and it covers a lot of cases
noproblem the write up doesn t has a test   plan but looking at the code it seems they have check every edge case also since there coverage is coming to to be 100 everything should work
noproblem the test plan is comprehensive and fully covers all the methods and cases that are part of the object under test running the test suite yields 100 overall coverage
noproblem yes they have come up with all possible inputs edge cases and wrong data entries to check the system behaviour is not faulty
noproblem for every tested method they explain   what they did and why they did it
noproblem    they even wrote down their plan to accomplish the project i love it
noproblem it is a testing task i assume there is not any design needed
noproblem yes
noproblem it explains clearly what tests are missing and how the coverage is increased
noproblem yes   they have explained everything
noproblem they team has thought through efficiently to use design options that avoid test reruns and to dry out some mocks settings
noproblem all the variables and function names used are appropriate   
noproblem the variables names are well assigned
noproblem functions and variables are named aptly
noproblem the features work as intended edge cases are properly executed      
noproblem the code works
noproblem the write up addresses details of all the three problem statements along with the code changes done in every file and the files added the team has also added screenshots of the manual testing and the video demonstrating the functionality they added
noproblem the write up covers all the issues and is well organized including the code blocks and the screenshots
noproblem the documentation is well written and indicated clearly what was the problem tackled and how it was approached and solved
noproblem yes the team has clearly stated the problem statement and the changes they have done to provide solutions to the problem they have been given 3 problems to which they have clearly provided the names of the files and the part of the code which is changed the video explains the problem and the implemented solution perfectly without any ambiguity
noproblem the write up clearly explains about the modifications made in expertiza    it indicates the functionality of their work which is topic management and the problem statement is clearly elaborated it provides the files changed and also the code snippets in which the changes are made the write up also provides visual   representations of the changes made   
noproblem writeup   is very well written contains enough   screenshots and explanations   of the code
noproblem the team has explained the issue and the solution they chose with enough details to understand to way of implementation
noproblem yes all   the 17 test cases are automated they have reached the goal of 90 coverage   
noproblem test cases are present   
noproblem yes all 17 test cases are automated
noproblem everything in the wiki was a test
noproblem it seems you have cover 94 of the participant rb however all checks have failed in the pull request test
noproblem yes the admin has included the test plan cases in the automated tests
noproblem the authors have implemented every test case that is discussed in the test plan detailed explanations and code itself is provided in the project s wiki page
noproblem    all variables methods and class names look   reasonable
noproblem it follows the standard ruby practices all the variables methods and class name look reasonable the added tests looks very clean
noproblem naming conventions are followed test coverage has increased
noproblem coverage has increased by 7 percent overall
noproblem the added tests look very clean
noproblem pull request build passes well and there are no issues
noproblem funcyfunctionalare of correct length
noproblem does not apply as its a testing project with most testcases written in a single rspec file to test the functionality
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem video covers how to run the test cases which are clear and understandable
noproblem tests work
noproblem yes after testing the work manually i could see that their features are working as intended
noproblem the write is very descriptive and included code from both the model and the spec file
noproblem the writeup explains how the tests relate to their respective methods
noproblem very clearly writeup
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem yes the test appears complete as they have mentioned all from setting up the expertiza environment to the tests that they have implemented along with the plan of the they executed their project
noproblem yes the test plan looks complete and includes all the test cases and the actions
noproblem yes the have mentioned all of the required work and its related explanation they have reasoned out their exact methods and the issues to be considered while testing in the problem statement   
noproblem functionalities have been tested properly
noproblem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality they have put a video explanation of the same
noproblem yes it looks they have converted all the cases into the test plan
noproblem good work on including test cases the app works fine after testing
noproblem yes most of them but they have not added any automated integration tests unit testing has been done and is great to see such detailed tests
noproblem all the test plan is converted to automated testing
noproblem the variable and method names are apt
noproblem yes the variables have been very keenly named especially in the file _rubric html erb the variables are very accurately and effectively named as there could have been much confusion otherwise kudos for that
noproblem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality
noproblem the code follows standards   
noproblem the code follows the dry principle
noproblem 3
noproblem great work clearly understandable functions are of appropriate length codes are in appropriate   methods    code is very well commented code follows ruby style guide good naming   
noproblem they do work as intended
noproblem all of the features mentioned by the author works successfully in the demonstration as well as in the manual tests performed by me
noproblem could not detect any flaws works exactly as it has been been in the wiki good guidance   
noproblem tested in the links given the changes are working correct the server is up and i was able to reflect the steps mentioned   
noproblem i can find where is the bookmarks page but according to their screenshots i think their features work well
noproblem the write up is very clear and directs user to the main issue very well the flow is very structured in the sense that first it gives a high level view of what expertiza is it then tells about the book mark functionality and then tells the problem and how they came up with the solution one of the most professional wiki i ve reviewed
noproblem the writeup is clear it is easy to understand what the project does      
noproblem the write up was splendid all instructions were written thoroughly i did not face any problem in understanding also screenshots guided well
noproblem they have included a test model video in which all the test are passing it looks complete
noproblem yes the test plan is present in the writeup also the links to youtube videos for the demonstration was particularly helpful too
noproblem the authors considered different pre conditions edge cases invalid input values and other possibilities and i clearly well written test plan looks complete
noproblem yes i followed the youtube link to check the tests and they have tested the controllers   
noproblem testplen   looks exhaustive and is explained well
noproblem they don t have test plan section but they added some screenshots of the test result i can see they have pretty good path coverage but i can not know if they test edge cases or invalid input values without seeing their test plan
noproblem yes the problem statement was explained thoroughly also the team very aptly described why the issue needs to be fixed great work
noproblem the write up was splendid all instructions were written thoroughly i did not face any problem in understanding also screenshots guided well
noproblem yes the problem statement was explained thoroughly also the team very aptly described why the issue needs to be fixed great work
noproblem yes i followed the youtube link to check the tests and they have tested the controllers   
noproblem the code follows standards   
noproblem there was no test plan also all the test cases don t seem to have been written which is evident since the code coverage 46 percent
noproblem they have added rspec and unit tests
noproblem edge cases are covered as well
noproblem edge cases are covered as well
noproblem yes the admin has included the test plan cases in the automated tests    they have solved all the issues they were tasked with
noproblem yes the admin has included the test plan cases in the automated tests    they have solved all the issues they were tasked with
noproblem there was no test plan also all the test cases don t seem to have been written which is evident since the code coverage 46 percent
noproblem they have added rspec and unit tests
noproblem the build is passing the test coverage and the bullet points mentioned in the issues section have been properly implemented to achieve the desired result all the issues have been implemented as discussed   
noproblem all the cases in test plan are included in the automated tests
noproblem test not passed
noproblem the build is passing the test coverage and the bullet points mentioned in the issues section have been properly implemented to achieve the desired result all the issues have been implemented as discussed   
noproblem the chnages made by the author seemed to follow most of the guidelines that a professional prgrammer should follow the variable names were unambiguous and clearly stated what they stood for also the functions and classes did what they stated
noproblem pull request build passes well and there are no issues
noproblem test not passed
noproblem the chnages made by the author seemed to follow most of the guidelines that a professional prgrammer should follow the variable names were unambiguous and clearly stated what they stood for also the functions and classes did what they stated
noproblem pull request build passes well and there are no issues
noproblem the names are very intuitive and one can easily understand the reason for each of the variables from their names in addition the test coverage has increased however it is not very good
noproblem all the names suggest the functions well
noproblem the code for the export_file controller and models for question_advice are tested adequately with the questionnaires_controller sepc model file the variables methods and class names follow the general standard ruby practices   
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem the code overall seems dry the functions are to the point and the code follows ruby style guide
noproblem the code for the export_file controller and models for question_advice are tested adequately with the questionnaires_controller sepc model file the variables methods and class names follow the general standard ruby practices   
noproblem all the names suggest the functions well
noproblem yes after testing the work manually i could see that their features are working as intended
noproblem the features do work as expected the authors have implemented all that they claimed that they would do
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem the link for the work can not be accessed but according to the video they provided the features works well
noproblem the test cases written work as specified the features are working as intended and the functionality is getting implemented with minimal errors   
noproblem yes after testing the work manually i could see that their features are working as intended
noproblem the features do work as expected the authors have implemented all that they claimed that they would do
noproblem i think it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the wiki document provides the necessary details about the project and the tasks performed by the team it gives a general overview of the project implementations the functionality carried out by the team   
noproblem the test cases written work as specified the features are working as intended and the functionality is getting implemented with minimal errors   
noproblem the document clearly explains not only the problem statement but also what expertiza actually is it proceeds to explain how they solved the problem of the rubric criteria
noproblem the documentation is well done and gives a comprehensive overview of the project
noproblem the documentation is well done and gives a comprehensive overview of the project
noproblem i think it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the document clearly explains not only the problem statement but also what expertiza actually is it proceeds to explain how they solved the problem of the rubric criteria
noproblem yes the author did include test plans and test cases also the test cases seem sufficiently exhaustive to cover most of the edge cases
noproblem test plan is nicely written and implemented
noproblem the wiki document provides the necessary details about the project and the tasks performed by the team it gives a general overview of the project implementations the functionality carried out by the team   
noproblem the test plan along with the existing issues and its solution is given
noproblem no test plan even though they did have the task of testing the questionnaire controller
noproblem yes the author did include test plans and test cases also the test cases seem sufficiently exhaustive to cover most of the edge cases
noproblem test plan is nicely written and implemented
noproblem the test plan along with the existing issues and its solution is given
noproblem no test plan even though they did have the task of testing the questionnaire controller
noproblem the plan gives enough roles for the first issue to test if the code works well
noproblem the plan gives enough roles for the first issue to test if the code works well
noproblem yes as mentioned earlier this part was very aptly implemented by the author
noproblem explained clearly
noproblem explained clearly
noproblem the document explains the different files which they had to change along with why the previous version was not up to par then they show their implementation of the file
noproblem the document explains the different files which they had to change along with why the previous version was not up to par then they show their implementation of the file
noproblem the writeup describes the problem statements solutions and the why and how of the problem the screenshots were clear
noproblem the writeup enlists a thorough report from the environment setup to the project build it includes a proper check on the problem at hand the approach to achieve the goals and the solution implemented   
noproblem this is refractoring   project doesn t involve new test cases   
noproblem all the cases discussed in test plan have been converted into automated tests
noproblem the team has separated the existing methods of a class in 2 sub classes they have used meaningful names for same the team has not added any new functions as per the wiki description
noproblem variable and   method names seems to be appropriate
noproblem the variable method names and class names are intuitive and follow ruby standards
noproblem code adheres to the ruby coding standard the team has also implemented strategy design pattern
noproblem the code is more about the changes in the database and it does follow the standards
noproblem the code follows ruby style guide
noproblem refactoring   is done really well    there were no violation of dry principle
noproblem the code follows dry principle none of the methods needs to be broken down into separate components
noproblem code is concise as mentioned   methods are extracted into separate methods comments are sufficient i could understand it the code is as per ruby guide most of them are dry code
noproblem the features are working as per intended plan of work
noproblem couldn t test the   features as no information regarding logging in credentials were provided anywhere
noproblem most of the edge cases cover  
noproblem the write up addresses the problem statement and explains about the background of the functionality
noproblem writeup is clear and easy to understand    it covers all the work
noproblem very well written   
noproblem the writeup gives us enough clarity to understand what the project is about
noproblem the report is detailed enough to explain the approach taken to refactor the code   
noproblem very well written the purpose   was clear
noproblem yes the write up is concise  
noproblem yes it does explain the previous functionality and their changes will take affect the explanation is done with diagram as well as the query
noproblem yes explains well
noproblem clearly explained about the implementation and usage of the strategy pattern  
noproblem the authors clearly explain how they refactored the code   
noproblem they explained how they used strategy   pattern   and why they used it loved the walkthrough
noproblem i could see a clear description of the changes and good naming conventions  
noproblem yes it looks they have converted all the cases into the test plan
noproblem good work on including test cases the app works fine after testing
noproblem all the test plan is converted to automated testing
noproblem the variable and method names are apt
noproblem yes the variables have been very keenly named especially in the file _rubric html erb the variables are very accurately and effectively named as there could have been much confusion otherwise kudos for that
noproblem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality
noproblem the code follows standards   
noproblem everything seems to be working fine
noproblem existing test cases have been fixed for review feedback by a team instead of a team member
noproblem naming of classes and variables are apt
noproblem all method names are suggestive of the functionality they provide
noproblem the team has properly used the naming conventions for variables and functions the functionality could be easily interpreted by reading the name
noproblem the code follows the dry principle
noproblem 3
noproblem basic test cases are covered in the test plan
noproblem team has taken care of test plan with automated test cases as mention by team they have implemented capybara testing and has good understanding of it
noproblem all tests added pass
noproblem great work clearly understandable functions are of appropriate length codes are in appropriate   methods    code is very well commented code follows ruby style guide good naming   
noproblem yes the admin has included the test plan cases in the automated tests
noproblem include test cases for negative scenarios as well
noproblem up to standards with ruby coding practices
noproblem the code is well modularized and separate methods have been created to provide different functionality eg added get_feedback_assessment method to add feedback for a team
noproblem methods variables and class names are well defined as per the standards   
noproblem the code has all 5 of the following characteristics i is dry ii follows ruby style guide iii is commented iv does not contain long methods v variables and functions are properly named
noproblem they do work as intended
noproblem the team has done a good job of maintaining the code dry and as neat as possible no suggestions to improve
noproblem all of the features mentioned by the author works successfully in the demonstration as well as in the manual tests performed by me
noproblem could not detect any flaws works exactly as it has been been in the wiki good guidance   
noproblem variables methods and class names are given professionally with reasonable meaning the names very well indicate the functionality to be performed by the name variable   
noproblem the code added in the project uses intuitive naming conventions good job guys
noproblem pull request build passe well and there are no issues
noproblem yes    i suggestion since they deployed the code and video it would have been good if they put a view of the ui usage similar to what they have put as screen shots in the code      
noproblem tested in the links given the changes are working correct the server is up and i was able to reflect the steps mentioned   
noproblem features are working as intended
noproblem function names seemed to be clear enough and satisfactory
noproblem names are clearly used and defined as given def remove_administrator redirect_to action list_administrators def remove_instructor   
noproblem i can find where is the bookmarks page but according to their screenshots i think their features work well
noproblem functions are not long but are sufficient enough to understand what changes are made and how they are implemented
noproblem 1 function written are simple crisp and clear no long functions or dead lines of codes 2 team has taken care of modularization no part of code needs to be added as separate   method 3 code and names given to variable do help to understand the flow of the code 4 code follows ruby style guide 5 dry principle is followed very well within the two functions changed
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem the code seemed fine and follows the ruby guide style i could understand the flow of the code and what different functions did
noproblem they have explained about how they are using dry principles in wiki refactoring a new method like    def self destroy_helper params position in   users_controller rb clearly explains the dry method being used  
noproblem the write up is very clear and directs user to the main issue very well the flow is very structured in the sense that first it gives a high level view of what expertiza is it then tells about the book mark functionality and then tells the problem and how they came up with the solution one of the most professional wiki i ve reviewed
noproblem i have manually tested the changed functionalities and issues are taken care very well team has given justice to problem statement assigned to them but with in the scope of issue assigned also taken care of edge cases   
noproblem yes after testing the work manually i could see that their features are working as intended
noproblem code works
noproblem i could get things working
noproblem manually tested the functionality of teammate review working as expected
noproblem the features are working as expected in this project the views have changed to fit the new implementation
noproblem the write up provides adequate information along with before and after code which helps in better understanding of the issues and changes made
noproblem team has written a professional and understandable writeup formatting is good with good explanation of the approach taken to solve the issue creative way of writing before and after of the code snippet team could have added pictures to make it more relatable for users new with expertiza
noproblem the writeup is clearly and adequately defined it shows what the project is about what all changes the team have made all assumptions they have made and edge cases which they have ignored as they were out of the scope of the project
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem well explained add screenshot of the changes which can help understand the change visually
noproblem please add a guide in the wiki where to test if the features work or not initially found it difficult in the expertiza page where it has been modified    the software works as expected in most cases was able to check the following participant feedback displays author feedback view to   whole team checking feedback assessment give feedback and edit feedback functionalities in the review view
noproblem the writeup was written well enough to how and what the project does the only suggestion is to include screenshots that would make the write up even more easy to understand
noproblem couldn t log in to test the code as no credentials   were provided anywhere
noproblem the writeup is clear it is easy to understand what the project does      
noproblem it works fine for the cases tested
noproblem the write up was splendid all instructions were written thoroughly i did not face any problem in understanding also screenshots guided well
noproblem yes test plan is complete enough also team has explained the test plan technology to used to achieve it good knowledge of capybara testing team could have added test scenarios for each issue step by step rather than single lines
noproblem include the code snippet in the write up as well
noproblem test plan seems complete enough
noproblem they have included a test model video in which all the test are passing it looks complete
noproblem yes the test plan is present in the writeup also the links to youtube videos for the demonstration was particularly helpful too
noproblem written very well explained approach taken to solve the issue along with what was the actual problem existed previously in the system and how team has given a thought process the fix the issue no type of design pattern   is involved   
noproblem the authors concisely explain the work they did as a suggestion i would ask them to include the tests written in the wikipedia page as well the idea is for any reader to understand 100 what all happened in the project without looking at the code
noproblem the authors considered different pre conditions edge cases invalid input values and other possibilities and i clearly well written test plan looks complete
noproblem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality they have made an uml diagram as well
noproblem write clearly explains the changes done
noproblem    the team does explain how and what they did
noproblem the writeup includes their thinking methodology and why they arrived at that solution changes    under user deletion clearly explains what went wrong in the existing code and what should be added one suggestion would be instead of showing before and after they could have leveraged git s ui version of in red and green to have shown the differences but before after way worked too
noproblem yes i followed the youtube link to check the tests and they have tested the controllers   
noproblem testplen   looks exhaustive and is explained well
noproblem they don t have test plan section but they added some screenshots of the test result i can see they have pretty good path coverage but i can not know if they test edge cases or invalid input values without seeing their test plan
noproblem the writeup is well written but i feel there are some missing details about the project the team could elaborate on the issues in the project and the solution that they have implemented this way it would better in understanding how and why the authors did the work that they did
noproblem the write up only tells what is to be done and how it is done the rational behind choosing the approach is not mentioned neither are any of the principles mentioned    it has comparisons between the previous and new versions and why they made they made the necessary modifications
noproblem yes the problem statement was explained thoroughly also the team very aptly described why the issue needs to be fixed great work
noproblem nicely written wiki with screenshots describing some of the changes made
noproblem yes the purpose of the project is clearly explained
noproblem most of the edge cases seem   to be covered
noproblem unfortunately the write up does not include a test plan the team has included the following line in the testing section fixed the existing test cases for the review feedback by a team instead of a team member the team could improve this by adding the test cases to maybe to check whether the get_feedback_assessment method returns the proper assessment using teamid or not or check whether the summary reports navigation redirects the user to the correct page or not
noproblem all of the cases discussed in the test plan have been included in the test file and all of them are also passing very good
noproblem the tests have been properly converted into automated tests
noproblem the test cases are covered in the coded
noproblem they kept working on this test and improved it
noproblem the names are very intuitive the build doesn t seem to have been passed because of the indentation errors and failure to follow certain design guidelines
noproblem the code follows correct name structure for variables methods and class
noproblem all the names are used properly
noproblem code contribution of all team members the code doesn not smell dry
noproblem the code looks good it seems well ordered structured and dry
noproblem the function definition is of perfect size the code follows the ruby style guide
noproblem yes
noproblem no idea how to manually test the authors file
noproblem the tests all pass successfully
noproblem clearly
noproblem the wiki document was very clear with respect to the responsibilities of the group it also detailed their approach to writing the tests as well as explained the functionalities that the tests were written on well done
noproblem the write up is perfectly written it clearly describes what functionality the work is related to it gives information for each aspect of the project
noproblem test plan is well rounded
noproblem test cases are thorough
noproblem the test plan is accurate and checks for different pre conditions edge cases invalid input values i could not find any missed scenarios
noproblem for the methods that include different conditions they provided tests fo different kinds of conditions also for each method the team test various aspects of the method
noproblem well explained information about the design and the results
noproblem the write up is enough for me to understand
noproblem the document explained well the work and the approach to doing the work
noproblem the write up is clear with its goal it nicely explains how and why did the author work in a particular way   
noproblem pull request build passes well and there are no issues
noproblem the naming conventions are followed as per standards
noproblem follows ruby standard codes already implemented functions are changed and have stayed away from adding too many functionalities   
noproblem everything works fine according to me
noproblem yes the features which have been done till now work well
noproblem very precise write up with nice details on how the fixes were applied
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the write up is detailed all details are mentioned including files involved solution as well as test plan and how they have done or implemented the solution the code snippets also gives good idea of the project work the first part gives detailed background of the project   
noproblem enough details has been provided
noproblem i think the test plan is complete and most of the edge cases are covered
noproblem test plan is manual   
noproblem they have included test plan but few examples and screenshot of their work would have been a plus point
noproblem testing is done manually and there is mention of automated tests in the wiki but no files are seen it s better to provide all links like github code testing videos and wiki while submitting on expertiza   
noproblem i understood the write up pretty well i also liked to way the fix was implemented
noproblem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality they have not used any design principles or patterns   
noproblem yes team has explained why they worked in certain way
noproblem it explains their approach and issues they encountered like latin format storing html tags and how they fixed it
noproblem all the cases discussed in the test plan have been implemented
noproblem they have done all the 29 test case and test them throughly
noproblem the team has tested all the methods of the corresponding model file
noproblem well done in achieving 100 test coverage and passing all the tests
noproblem yes they have converted them
noproblem work as intended to be  
noproblem code style seems to be good
noproblem not find any   improper variable names or method names      
noproblem names for variables classes and method are properly named and make sense
noproblem the code is dry enough and the functions seem to be compact
noproblem this was a testing project and the mocked objects were appropriate
noproblem the code is dry there is no redundancy in the code
noproblem all the codes are of perfect length that is actually one of the best thing about the code it follows basic ruby style guide
noproblem code climate issues that were reported have been fixed
noproblem for every tested method they explain why they   created certain objects or did what they did
noproblem the writeup explains well the plan of work of the authors and the way in which they approached the task at hand
noproblem appropriate explanations are provided for the tests
noproblem yes the test plan part is pretty through they list all 29 test case they have done for the assignment_team rb
noproblem the test plan is detailed and comprehensive good job
noproblem no miss
noproblem this wiki is very detailed and explains what is done for every tested method
noproblem the write up is descriptive and very well written i could easily understand everything about this project good job   
noproblem from the document i could understand the functionality on which the tests were written
noproblem the writeup describes briefly and clearly what the assignmentteam class does in the expertiza project it has also given the details on the test plan test cases and explained the use of rspec testing framework and factories i would suggest to add a link to their video that shows the tests running in the wiki page all in all good work
noproblem the tests are very well written they clearly indicate what functionality they are checking for    the tests follow a language that is easy to follow
noproblem the writeup matches up very well with tests written and also describes in details what scenarios are tested
noproblem yes very clear
noproblem the features work as intended they cover the test cases and edge cases as well
noproblem all tests works fine   
noproblem it s a testing project and the video provided show that all test pass and they have at least 90 coverage
noproblem as mentioned above and also stated in the video and the pull request itself the author has covered up everything
noproblem   
noproblem hey variables follow all the stanard conventions that it needs to
noproblem yes the tests are automated also the command to run the test is given in the wiki
noproblem the test cases given by the team work as described the features are implemented accordingly the edge cases are considered while designing the mocks in general all the code for test cases works as specified
noproblem video seems fine covers all the cases with 100 coverage
noproblem the code follows ruby style guide the code does not contain long methods the variables and functions are properly named
noproblem they have covered all cases which they mentioned in the test plan
noproblem the writeup just simply explanin what is expertiza and the requirement for this program
noproblem    it has all the details about the testing for review_response_map class
noproblem since it is a test project their variables methods and class names are reasonable and easily understand
noproblem all the variables and function names used are appropriate   
noproblem regarding the writeup    i told the changes which i felt needed above the code looks comparatively neat a clear video showing the test cases running will be appreciated
noproblem write up provides all the necessary information needed to understand the project but a brief explanation about certain methods   would have been better   
noproblem the unit test cases were completely fine and covered almost all of the code
noproblem    it divides testing codes into parts and described purpose of each chunk of code
noproblem briefly covered all the possibilities
noproblem as mentioned above it lacks some depth in this
noproblem    for testing i don t think there are any design related thing
noproblem no team could have given some info on that
noproblem the variables names are well assigned
noproblem    the coding syle is good well versed
noproblem the code is written neatly and follows the suggested guidelines
noproblem the code is well written dry concepts are used
noproblem    test cases are effective with minimal statements there is maximum coverage
noproblem all the variables are defined with respect to the functionality like max_team_size get_participants_without_team
noproblem the code looks good
noproblem the code works fine for the listed functionalities all the cases along with the edge cases are considered   
noproblem the basic test cases are test well
noproblem functions and variables are named aptly
noproblem    the test cases work as expected and handles edge cases as well
noproblem the code works in the edge cases also for delete an other tests mentioned
noproblem def create function in assignments controller seems to be long and could have been refactored considering that they used most of the legacy code and most of their work was on ui their part on ruby changes werent much  
noproblem yes the code has all the possible test cases many of the edge cases are covered and listed in the wiki
noproblem i could not run it locally and hence i am not sure about the edge cases code looks clean and should not break in most of the cases
noproblem the youtube screenshare clearly shows the changes made and works perfectly since the edge cases arent defined not sure about the functionalities of edge cases in this case as it involves ui most of the time
noproblem the features work as intended edge cases are properly executed      
noproblem the code works
noproblem the writeup does bot explain how and why the authors did the work the way they did
noproblem the write up addresses details of all the three problem statements along with the code changes done in every file and the files added the team has also added screenshots of the manual testing and the video demonstrating the functionality they added
noproblem the write up covers all the issues and is well organized including the code blocks and the screenshots
noproblem the documentation is well written and indicated clearly what was the problem tackled and how it was approached and solved
noproblem yes the team has clearly stated the problem statement and the changes they have done to provide solutions to the problem they have been given 3 problems to which they have clearly provided the names of the files and the part of the code which is changed the video explains the problem and the implemented solution perfectly without any ambiguity
noproblem the write up clearly explains about the modifications made in expertiza    it indicates the functionality of their work which is topic management and the problem statement is clearly elaborated it provides the files changed and also the code snippets in which the changes are made the write up also provides visual   representations of the changes made   
noproblem writeup   is very well written contains enough   screenshots and explanations   of the code
noproblem there is no explicit test plan section but all the scenarios are covered with appropriate images
noproblem the team has explained the issue and the solution they chose with enough details to understand to way of implementation
noproblem the wiki for this project contains tons of useful information about testing and rspec i am not sure that some of it needs to be explained to the current extent   example what unit testing and tdd is or the environment set up they are nice to include but maybe less as the purpose of the project is not to educate on those topics overall this wiki did an outstanding job of describing the purpose of the project
noproblem they have clearly state what the platform is and what they have tested
noproblem this wiki is the most comprehensive one i ve come across right from the basics of expertiza to unit testing to developing and explaining the test cases everything has been done to perfection also the result and the explaination for choosing the test case is provided which is very much appreciated   
noproblem i think this team has done a nice job on the writeup of unit test which contains every functionality of their work and is easy to understand
noproblem    the writeup problem statement section is very clear about what their work related   to
noproblem the wiki document coherently specifies the overall procedure adopted by the team for the project from the page it is seen that the team have given a general overview of the project scope and additional functionality and references used towards the working of the project   
noproblem wonderful job with 100 coverage
noproblem all the tests passes with 100 test coverage great work
noproblem the team has worked well on changing magic numbers to reasonable variables for example 1 to item      
noproblem    all variables methods and class names look   reasonable
noproblem from the pull request it is clear that the team wrote test cases for the menu model and achieved a 100 coverage that checks for most of the edge cases the variables included the mock instance have been adequately used for testing the methods
noproblem good job
noproblem the code is dry enough with some before statement to prevent duplicate codes
noproblem code style is perfect
noproblem the code properly provides test cases for both the menu class and the node class in the message class the code follows the dry principle such that all the test cases use the variables and scenarios appropriately
noproblem    all the test passed
noproblem tested in the links given the changes are working correct the server is up and i was able to reflect the steps mentioned   
noproblem the write up is very clear and directs user to the main issue very well the flow is very structured in the sense that first it gives a high level view of what expertiza is it then tells about the book mark functionality and then tells the problem and how they came up with the solution one of the most professional wiki i ve reviewed
noproblem yes the test plan is present in the writeup also the links to youtube videos for the demonstration was particularly helpful too
noproblem yes the variables have been very keenly named especially in the file _rubric html erb the variables are very accurately and effectively named as there could have been much confusion otherwise kudos for that
noproblem all of the features mentioned by the author works successfully in the demonstration as well as in the manual tests performed by me
noproblem the writeup is clear it is easy to understand what the project does      
noproblem the write up only tells what is to be done and how it is done the rational behind choosing the approach is not mentioned neither are any of the principles mentioned    it has comparisons between the previous and new versions and why they made they made the necessary modifications
noproblem the authors considered different pre conditions edge cases invalid input values and other possibilities and i clearly well written test plan looks complete
noproblem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality
noproblem great work clearly understandable functions are of appropriate length codes are in appropriate   methods    code is very well commented code follows ruby style guide good naming   
noproblem good work on including test cases the app works fine after testing
noproblem could not detect any flaws works exactly as it has been been in the wiki good guidance   
noproblem testplen   looks exhaustive and is explained well
noproblem all the test plan is converted to automated testing
noproblem they have included a test model video in which all the test are passing it looks complete
noproblem yes it looks they have converted all the cases into the test plan
noproblem the variable and method names are apt
noproblem the code follows the dry principle
noproblem they do work as intended
noproblem all the cases are covered
noproblem testing isn t applicable to this assignment   
noproblem the authors have not converted test cases into automated tests however manual testing has been shown in the vedio   link attached
noproblem all provided variables are well assigned
noproblem good thing would be to increase the test coverage
noproblem variables and methods seemed intuitive enough
noproblem the functions added are not too long this is the minimal amount of code that had to be added to   implement the changes
noproblem the commits show contribution by only 1 author the code does not smell dry
noproblem as mentioned above and also stated in the video and the pull request itself the author has covered up everything
noproblem   
noproblem hey variables follow all the stanard conventions that it needs to
noproblem not possible to test work manually
noproblem i cannot find the code
noproblem the test cases given by the team work as described the features are implemented accordingly the edge cases are considered while designing the mocks in general all the code for test cases works as specified
noproblem the code is dry however certain sections of the code could be shortened further
noproblem video seems fine covers all the cases with 100 coverage
noproblem more comments are needed
noproblem    it has all the details about the testing for review_response_map class
noproblem the unit test cases were completely fine and covered almost all of the code
noproblem    it divides testing codes into parts and described purpose of each chunk of code
noproblem everything seems to be working fine
noproblem briefly covered all the possibilities
noproblem since the code is not deployed manually testing cannot be performed but the screencast shows that all the manual testing is passed
noproblem from the video it seems it should work fine with the edge cases as well
noproblem manual testing could not be performed as the link to the deployed application was not available however the vedio   link attached sufficiently demonstrates how the features work
noproblem all the scenarios including the corner cases are working fine no issues or problems were found with the functionality the only issue is related to the ci built which is failing at the moment the team needs to analyse the root cause related to the build failure and fix it other than that it was a great team effort   
noproblem the write up seems quite understandable   
noproblem the write up is well written and explain how and what is done in the project regarding all the issues    just one suggestion it would have been great if the screenshots were uploaded corresponding to the changes made but otherwise the writeup is understandable   
noproblem yes the project is to do 2 things 1 stop teams from dropping assignments very late close to deadline 2 have different deadlines when assignments are done at different periods the wiki should be created on expertiza page and not on wikipedia site
noproblem the write up is clear and clearly explains the issues corrected
noproblem the wiki is well written and contains all required information regarding the project the screenshots can be included in the wiki and the code pasted in the documentation could be formatted the team also need to inlcude the test plan section in the wiki apart from this the team did a great work      
noproblem good but lacks readability the code is directly copy pasted   in the approach   section you could have used the pseudo code with proper explanations the structure and formatting   should be improved
noproblem no test plan is included but it seems that team have covered all the scenarios properly
noproblem the write up does not have a test plan
noproblem i found the test cases to be sufficient no suggestion needed
noproblem i don t think there s any testing involved in this assignment
noproblem writeup doesn t has a test plan but in the video they have tested   a lot also please add audio as well in your video explaining what you are doing and why so that its easy for the user to understand otherwise watching 23 minutes silent videos is just to much
noproblem no proper test plan has been mentioned yet in the write up but a link to demo vedio   is available which includes the manual testing case
noproblem test plan section is missing
noproblem writeup clearly explains why the team followed the particular approach and additionally mentions all the steps followed thus defining the approach clearly
noproblem the writeup does talk about the changes and why the authors did it that way    rather than pasting the code without any indentation in the wiki page the authors could have pasted screenshots of the code this might have made it easier to comprehend      
noproblem the readme was sufficient to explain details about the idea and also both the videos explain stepwise how this is achieved and demonstrates it also   the bugs are fixed and droptopicdeadline has been integrated into the code of this assignment
noproblem it s hard to understand the code you have changed from writeup i saw   the changes in your pull request it looks good to me
noproblem not very comprehensive
noproblem yes the tests are automated also the command to run the test is given in the wiki
noproblem the code follows ruby style guide the code does not contain long methods the variables and functions are properly named
noproblem they have covered all cases which they mentioned in the test plan
noproblem since it is a test project their variables methods and class names are reasonable and easily understand
noproblem    the coding syle is good well versed
noproblem the code does follow the ruby style guide
noproblem the code is written neatly and follows the suggested guidelines
noproblem the code is well written dry concepts are used
noproblem    test cases are effective with minimal statements there is maximum coverage
noproblem the code looks good
noproblem the code works fine for the listed functionalities all the cases along with the edge cases are considered   
noproblem the basic test cases are test well
noproblem the code works in the edge cases also for delete an other tests mentioned
noproblem    the test cases work as expected and handles edge cases as well
noproblem yes the code has all the possible test cases many of the edge cases are covered and listed in the wiki
noproblem there are no changes to any files in the spec directory so there are no new tests
noproblem no tests were added
noproblem new method names and variables are fine however this team did not add a lot of new classes methods etc
noproblem 2 failed and 1 accepted   
noproblem their code changes are little though they have handled naming conventions in a good way as illustrated below def self handle_duplicate   
noproblem the work done is successfully implementing the required changes
noproblem all the code looks well written and dry to me
noproblem the handle_duplicates function has a lot of white space and print statements left in it it could ve been chopped up into tiny sub functions too hypothetically
noproblem 1 functions are of appropriate length and well structured with respect to the purpose in question    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and self explanatory making it easy to follow    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is consistent and to the point   
noproblem the code contribution is significant the function such as import_team_members shows good coding practice and following ruby code standards   
noproblem their code changes as per the pull request is less    they have done justice to the little code they changed
noproblem the code is well written following the concepts
noproblem worked as documented
noproblem minimal changes were made to the test suite and new tests were not written for the new code
noproblem no test plan don t know why this question is even asked
noproblem methods names etc are used according to the functionality as mentioned earlier half the code changes are explained
noproblem code is good enough
noproblem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality
noproblem the names seem to be appropriate to their functionality
noproblem well written
noproblem 1 functions are of appropriate length 2 codes are in appropriate   methods 3 code is very well commented overall great work clearly understandable
noproblem basic functionalities working  
noproblem workflows worked properly when i tried
noproblem the writeup is understandable
noproblem the write up is well made
noproblem wiki page is clearly and neatly written i could understand what the project does writeup also has code snippets which has been modified
noproblem the writeup is good and it clearly meantions   the issues to be fixed in the problem statement and the code modified is also displayed
noproblem write up is easy to understand and follow
noproblem no test plan required i suppose
noproblem yes the writeup mentions why the authors did the work the way they did it by clearly posting screenshots of the code modifications done by them
noproblem yes the team has efficiently detailed all the details about the projects and the need for their changes to providing code of their changes they have also attached coverage and test run screen shots for references
noproblem they team has thought through efficiently to use design options that avoid test reruns and to dry out some mocks settings
noproblem yes they have come up with all possible inputs edge cases and wrong data entries to check the system behaviour is not faulty
noproblem yes there is no unreasonable function names and all method name are suggestive and apt
noproblem yes they have automated test and all of them pass
noproblem the wiki clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of   their inner workings i would suggest removing parts like high level descriptions of expertiza and unit tests http wiki expertiza ncsu edu index php oss_e1852 rb unit_test_description because they are redundant in this context
noproblem the test plan is comprehensive and fully covers all the methods and cases that are part of the object under test running the test suite yields 100 overall coverage
noproblem every test case that is provided on the wiki page is part of the automated test suite there are no cases of failing tests
noproblem running the code manually   resulted in the   100 coverage of the   object under test
noproblem yes it is easy understand that it is a testing project and how it is done
noproblem it explains clearly what tests are missing and how the coverage is increased
noproblem the plan looks   good and it covers a lot of cases
noproblem all the code is in a single file as it tests a single model and it seems to cover it extensively it also looks like there s no dry issues
noproblem yes and it all passes too
noproblem yes   they have explained everything
noproblem it looks great everything is followed
noproblem code seems to be concise and well written
noproblem since coverage is 100 and the code looks good to me i am assuming it works fine
noproblem the writeup is clear and easy to understand
noproblem yes
noproblem the test plan look complete enough
noproblem they kept working on it and did really impressive
noproblem yes
noproblem the features work as intended
noproblem the wiki page   provides clear details about the work and very easy to understand
noproblem it is a testing task i assume there is not any design needed
noproblem looks like edge cases and invalid inputs are handled
noproblem   
noproblem   
noproblem   
noproblem   
noproblem for every tested method they explain   what they did and why they did it
noproblem names for variables classes and method are properly named and make sense
noproblem this was a testing project and the mocked objects were appropriate    the code is dry there is no redundancy in the code
noproblem all the cases discussed in the test plan have been implemented    well done in achieving 100 test coverage and passing all the tests
noproblem the features work as intended they cover the test cases and edge cases as well
noproblem    they even wrote down their plan to accomplish the project i love it
noproblem magic how did they know they needed a test plan they did a great job laying out how they created an environment to unit test participant with their design choice and chosen variables and factories
noproblem so fresh and so clean clean this code is too neat to even be dry too hot to touch i m just still super impressed by the wiki and the video
noproblem over 9000 i mean 90 great job testing participant y all
noproblem after working through several edge case side effects by hand up hill both ways it looks like all of their bases are covered and edge cases satisfied
noproblem not many functions defined only database changes made and inbuilt function used
noproblem pull request build passes well and there are no issues
noproblem the naming conventions are followed as per standards
noproblem i think the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem follows ruby standard codes already implemented functions are changed and have stayed away from adding too many functionalities   
noproblem everything works fine according to me
noproblem very precise write up with nice details on how the fixes were applied
noproblem the written explanation is good add few screenshots   of the change to be able to understand the changes done visually
noproblem the write up is detailed all details are mentioned including files involved solution as well as test plan and how they have done or implemented the solution the code snippets also gives good idea of the project work the first part gives detailed background of the project   
noproblem enough details has been provided
noproblem yes it explains with clarity the issue at hand utf 8 only support how that causes trouble also improper formatting of html tags
noproblem i think the test plan is complete and most of the edge cases are covered
noproblem testing was not part of the requirements team did manual testing
noproblem they have included test plan but few examples and screenshot of their work would have been a plus point
noproblem i understood the write up pretty well i also liked to way the fix was implemented
noproblem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality they have not used any design principles or patterns   
noproblem yes team has explained why they worked in certain way
noproblem it explains their approach and issues they encountered like latin format storing html tags and how they fixed it
noproblem there is no test plan section at this time however the authors did include some discussion of edge cases and the fact that the initialize function required testing of known success case and potential failure i think that this is sufficient without the inclusion of a test plan section i would suggest that since this rubric calls for the section to just rearrange the content of your current page also include the additional edge cases that you have already tested for in the other functions possibly with some specific examples this will allow for a more thorough test plan section
noproblem variable names and test cases are name appropriately test cases context describe and it statements are clear as to the division and purpose
noproblem the code is written very neat and follows suggest guidelines authors have done a great job with the dry principle and bringing out statements that would have been otherwise repetitive in the test cases
noproblem the authors seem to have considered most edge cases and pre conditions the section isn t explicitly named test plan but the necessary content is there
noproblem everything is described clearly and the functionality added is easy to understand
noproblem all code is formatted well and neatly with clear functionality
noproblem all tests designed were to be automated
noproblem nothing to manually test   
noproblem the write up is descriptive and shows code from the _spec file paired with explanation
noproblem the pseudo code test plan does a good job of explaining the functionality of the tests without being clogged up by implementation details i do suggest putting it closer to the top of the wiki page though
noproblem all tests pass and 100 coverage was attained
noproblem very nicely written document with test plan which explains each test case why it is written and what it tests n simple english language
noproblem very nicely articulated description of all 29   testcases
noproblem rspec code looks good proper comments and good variable name usage are 2 things i will suggest to improve very good work overall
noproblem yes all 29 test cases have been automated the youtube video describes it perfectly
noproblem the tests run successfully even when cloned and run in development environment on vcl
noproblem tried to cover maximum test cases and explained well in the document with the coverage and video
noproblem the write up explains the tasks adequately enough for a user to understand the expected outcome   
noproblem they have explained the tests that needed to be implemented   to verify the working of the functionality   
noproblem the test plan looks complete enough they have covered most of the cases the test coverage has increased a little bit
noproblem the write up is very clear methods and test case are explained in a neat way
noproblem    the procedure and intention for writing the test cases is clearly mentioned
noproblem    all the scenarios are covered even the branch cases
noproblem all of the above 5 criteria are met
noproblem yes most of the edge cases is checked
noproblem the writeup has documented all the changes they have done but could have been more elaborative on the exact functionality of menu rb   
noproblem no all method names and describe provided are apt and to the point
noproblem yes and all cases pass
noproblem their tests are very straight forward and can be extended to test few edge cases
noproblem authors explain the test destination vividly
noproblem yes
noproblem all variable names are reasonable and easy to understand
noproblem neat code and well established form of the test
noproblem yes
noproblem test plan looks very generic
noproblem test plan is given a appreciable thought and team has also implemented test scenarios mainly in   student_task_controller_spec rb would   suggest team to try and increase test coverage
noproblem good work on including test cases
noproblem the code changes are well organized and nothing is out of place
noproblem i could see commit performed by only single team member 1 functions are not too long or repeatative 2 no code needs to be extracted as a new function 3 yes team need to add more comments 4 team does follow ruby style guide 5 team understood rails and followed dry principle well   
noproblem i feel some comments can be added before every function for the code to be understood better
noproblem 1 functions are of appropriate length 2 codes are in approriate   methods 3 code is very well commented overall great work
noproblem the features added seem to be running good
noproblem the code works as it should
noproblem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to the project changes to the code have been described in paragraphs which could have been better if they could have updated with code snippets and screen shots of the tasks at hand
noproblem wiki has been well written with enough clarity and description
noproblem it is clear what the project does and why it does it
noproblem the writeup is clear it is easy to understand what the project does it would be better if you can put in more code details and major pieces that do the important logic
noproblem the writeup is pretty clear
noproblem the test plan section is present and it is covering all the scenarios
noproblem they seem to have included a testing plan have mentioned it in their report they seem to have considered edge cases and other possibilities
noproblem not much has been explained about the test plan the authors have however explained how they will be going about the testing in general an overview is provided which is clear to understand
noproblem more details are expected in the test plan like edge cases normal cases
noproblem the writeup explains everything regarding why and how the steps were carried out
noproblem wiki has been well written with enough clarity and description
noproblem they have explained how they have implemented each task by adding editing files
noproblem yes the writeup explains what the authors did
noproblem the team has created a new spec file to test all the issues of the pr
noproblem yes the cases discussed have been converted into appropriate tests   
noproblem adequate testing was performed using rspec tests for both the issues
noproblem they have converted the test cases mentioned in the test plan into automated tests the tests have been implemented as mentioned in the write up   
noproblem the team has made minimal changes in the code to fix the issues no new class function or variable has been added
noproblem all tests pass
noproblem yes
noproblem no automated tests but the fix seems to be working fine as per the test plan provided
noproblem no issues found
noproblem the newly added code adheres to ruby programming standards
noproblem the names used seem appropriate to their intended functionality
noproblem the variables methods and class names are named appropriately the variables used in the program suggest the functionality
noproblem there are no additions in terms of methods or any new implementation there are minuscule changes done so it still follows the existing standard   
noproblem there were not many big changes all the changes are crisp and to the point
noproblem the team has done well not to over complicate the issues and have resolved them with relatively few additions
noproblem the code follows ruby style guidelines and is dry
noproblem the code resolves all the issues as per the problem statement and the features work correctly
noproblem it works as expected
noproblem seems to be working
noproblem the features for the issues fixed work as intended
noproblem the team has explained the problem statement as well as the approach they has chosen with lot of details it makes it very easy for end user to understand details of the project   
noproblem write up is clearly understandable systematic approach taken to fix the issue
noproblem write up is quite impressive i was able to understand the project through write up
noproblem the write up is good and clearly mentions the issues to be corrected
noproblem the problem is explained clearly and the implementation plan is also described elaborately the explanation helps in understanding the project very well   
noproblem the team has included test plan as well as the screenshot of the manual testing
noproblem write up has test plan with clear steps and screenshots
noproblem they have covered few edge cases just a suggestion to include result before and after fixing the issue may be juxtapose it
noproblem yes the project deals with an issue related to names    such as not allowing whitespaces etc the test verify that the issues are now solved
noproblem the test plan looks good it includes both manual testing and automated testing by writing rspec tests
noproblem yes the team has done great job in the write up it is properly indexed and addresses details about each issue and its solution
noproblem write up explains about the problem and how it needs to be fixed which seemed logical
noproblem they standardized the team name generation and fixed the username without space for design patterns i think they didn t used it may be it wasn t needed
noproblem no write up available rn
noproblem the write up clearly mentions the issues to be fixed and the code changed to fix each issue
noproblem the write up explains   the approach used and the code used for implementation very clearly the test plan is also defined extensively screenshots help in understanding the implementation more they did not use any design patterns   
noproblem all test cases seem to be passed
noproblem ruby coding practice seem to be fine class and variable names are apt
noproblem method names and variables are used aptly which helps in easy understanding
noproblem the newly added variable methods class names are written properly the names indicates the functionality implemented by respective names      
noproblem function and variable names seemed to be appropriate enough the names suggested the functionality no suggestion is needed
noproblem all the names are intuitive and reasonable good job following naming conventions
noproblem the naming conventions are properly followed in case of ruby snake case has been properly used and in case of javascript code camel case is used   
noproblem 3
noproblem methods are not too long and each function is performed in the appropriate method
noproblem 1 functions and logic are written properly without long functions and dead or messy code 2 no team has provide good modularization no need to extract code further into more functions 3 code was understandable and easy to understand 4 code does follow ruby style guidelines 5 code and packages follow dry principle   
noproblem code seemed to follow the ruby style guide
noproblem none of the functions are too long    could find changes where dry principle was violated    the code follows ruby convention and guidelines    comments were included wherever necessary the code is easy to follow    good job
noproblem the code is well written the function length is also well within the required bounds comments adequately convey the info about the functionality that is implemented   
noproblem they have not provided a link for the deployed so cannot test anything but they have provided a video and according to that everything seems to be working
noproblem not deployed but the video provided which includes the demonstration of the fix
noproblem the manual testing done in the screencast seems fine the features work correctly
noproblem everything is explained in detail
noproblem issues explained properly and change as well the modifications are demonstrated using screenshots which helps in better understanding
noproblem the test plan seems to be complete enough no additional pre conditions and edge cases are required
noproblem issue 1 under solutions tab is actually the third point discussed in the fixes required it could be discussed as issue 3   rather issue 1 for better clarity only the solution for one issue is discussed the discussed solution is again well defined with adequate screenshots
noproblem one test case visible   
noproblem yes the functionality still holds good
noproblem decreased to 12   
noproblem the test coverage on the contrary decreased
noproblem the names are intuitive
noproblem the variable names look fine methods names are also meaningful
noproblem 1 some functions are of huge length and adequately structured with respect to the purpose in question but i am assuming the complexity of the question requires so    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and but are very   strange   and vague at some places suggesting an amateur approach    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is somewhat consistent and vaguely to the point   
noproblem not really clear lines have been changed no specific functions but it shows good coding skills
noproblem the project s purpose is to refactor the code hence the code has been separated into different files for better understanding
noproblem i can see a file changed and the code in it looks to follow the concepts which needs to be followed
noproblem the code follows ruby standards and dry principle
noproblem the code seemed   ok to me
noproblem the functionality does work some errors are visible as shown by git   
noproblem cant really know what exactly is completed
noproblem    some of the common edge cases work as per expected
noproblem they were not required to write automated tests as far as i know
noproblem the newly added code does adhere common html standards the only other change is to the db schema
noproblem variable methods and class names seems as per coding standards and variable   names are making it easy to understand the logic code hence names used are reasonable   
noproblem the only change this team had to do was add color codes for the various types of links that come up while reviewing this would be hard to mess up    and the team has not messed it up good job guys
noproblem the added code is easy to understand and not complex
noproblem the code added is extremely easy to read follow and understand
noproblem repeated style tags
noproblem looks good
noproblem the code follows ruby guidelines however since the project involved just adding colour to certain links there was no point of the code being dry in fact reviewing this project doesn t make sense since the project was literally just changing 3 lines of code not that it is the fault of the team
noproblem    the code is complete and does what it was intended to do
noproblem the implemented solutions work in the deployment
noproblem there are just the changes in the button colours required which are working as expected
noproblem yes team has resolve the issue very well and also taken care of edge cases
noproblem the changes in this project were simple enough to work for all edge cases
noproblem looks great
noproblem yes the team clearly indicates in the wiki what this project is related to and how they went about to complete the given task at hand i m not sure about this but maybe the heading for the wiki is incorrect this project is listed as e1828 in the list of oss projects but the team have named it as e1785 this may be a mistake on the team s part if so i would suggest them to correct it
noproblem the document is well described with details on expertiza its purpose it also details the files related to their assignment
noproblem explained very well
noproblem there is no scope of a test plan with changes made to the view
noproblem there is no explicit test plan mentioned in the wiki but for this project i don t believe one was needed
noproblem the writeup doesn t has a test plan but the work they have done is on ui i e colouring the links so there won t be any edge cases as such to fail in this project
noproblem they have explained   the changes they have done and why they have done them   
noproblem the project was to change the colour of certain links to depict certain statuses since the complexity of the project was not high there was no scope to use any design principles or patterns
noproblem    the write up explains each and every thing which they implemented
noproblem the code change seems simple enough that does not require any design principle or patterns whatever the code changes are explained properly and coding principles with required output
noproblem the write up does intend to capture the changes that have been made there isn t much for them to explain and thus the writeup seems short there isn t much scope for the team to have used design patterns in a project which involved making cosmetic changes to the views
noproblem the authors have implemented every test case that is discussed in the test plan detailed explanations and code itself is provided in the project s wiki page
noproblem the write is very descriptive and included code from both the model and the spec file
noproblem the writeup explains how the tests relate to their respective methods
noproblem the added tests look very clean
noproblem everything in the wiki was a test
noproblem    looks good explains what work is done and what is the corresponding output
noproblem coverage has increased by 7 percent overall
noproblem does not apply as its a testing project with most testcases written in a single rspec file to test the functionality
noproblem yes all 17 test cases are automated
noproblem tests work
noproblem very clearly writeup
noproblem functionalities have been tested properly
noproblem naming conventions are followed test coverage has increased
noproblem funcyfunctionalare of correct length
noproblem test cases are present   
noproblem video covers how to run the test cases which are clear and understandable
noproblem    all variables methods and class names look   reasonable
noproblem the document contains the whole information including the test plans and the the expertiza environment setup it is neatly documented as well which makes it more readable
noproblem yes the have mentioned all of the required work and its related explanation they have reasoned out their exact methods and the issues to be considered while testing in the problem statement   
noproblem yes the test appears complete as they have mentioned all from setting up the expertiza environment to the tests that they have implemented along with the plan of the they executed their project
noproblem it follows the standard ruby practices all the variables methods and class name look reasonable the added tests looks very clean
noproblem yes all   the 17 test cases are automated they have reached the goal of 90 coverage   
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem yes the writeup explains explains how the authors did their work and they have mentioned the steps behind each functionality they have put a video explanation of the same
noproblem yes the test plan looks complete and includes all the test cases and the actions
noproblem pull request build passes well and there are no issues
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem yes the admin has included the test plan cases in the automated tests
noproblem yes after testing the work manually i could see that their features are working as intended
noproblem again since their entire project is on rspec testing so this aspect has been well taken care of   
noproblem as mentioned by the team more code needs to be added for 90 coverage
noproblem the tests are included
noproblem the variable names seems good
noproblem it follows the dry principle
noproblem difficult to understand what are the changes
noproblem code written follows the ruby style guide
noproblem 1 functions are of appropriate length and well structured with respect to the purpose in question    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and self explanatory making it easy to follow    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is consistent and to the point   
noproblem very well written clean and concise
noproblem it seems to work well
noproblem manually tested the test code and 97 covered validated via coverage index file
noproblem all the tests pass successfully
noproblem yes i can understand the intention of the test nicely done
noproblem feel a pretty good job has been done
noproblem since their entire problem relies on the rspec testing framework itself they have implemented it in a good and a concise manner   
noproblem yes testing is thorough  
noproblem the writeup does a good job in explaining how the authors did the work they did   
noproblem yes
noproblem basic test missing
noproblem seems like some tests have failed
noproblem yes converted test plan into automated tests
noproblem the authors have converted all the cases discussed in   test plan   into automated tests
noproblem the names of variables and methods are aptly chosen and clearly understandable
noproblem all the method names variable names and class names are intuitive and according to ruby standards
noproblem all the names are intuitive and reasonable good job following naming conventions
noproblem no long functions no separate methods required follows ruby style guide
noproblem the code does follow   good ruby and rails coding practices no bad naming every file is properly named based on their functionalities i cannot find issues with coding one method handles only one task i could not find any bugs in the system and this works exactly how it is supposed to work
noproblem the code is concise with 3 functions in the controller sufficient comments are used to explain the logic the code follows the dry principle as there is no repetition seen in the code   
noproblem the code follows ruby style guise and follows dry principle none of the functions is too long
noproblem none of the functions are too long could find changes where dry principle was violated the code follows ruby convention and guidelines comments were included wherever necessary the code is easy to follow good job
noproblem yes works properly
noproblem test case implementation is not done
noproblem no bugs found works as intended    the system works without any glitches   
noproblem the features perfectly work as intended
noproblem explained clearly in the wiki
noproblem explains well consists of all sub topics
noproblem the wiki has been written in a very clean and readable way it is very legible and i could understand what the project does and how the project does what it does
noproblem the writeup is very nicely written by reading the background section anyone can understand the functionality the project is related to
noproblem the wiki is well written and contains all required information regarding the project the screenshots included in the wiki could be more specific with the details of what would the student view and default view apart from this the team did a great work   
noproblem yes considers all test cases
noproblem the test plan looks complete
noproblem the team did a great work in creating automated scripts for the cases related to the scenario the scripts are also included in the automated test plan      
noproblem write up is explained in detail
noproblem explained well
noproblem yes explains correctly
noproblem yes the team has clearly explained the code which is written to avoid the confusion due to the presence of two assignment tabs in the instructor view appropriate comments are provided to understand the logic behind the methods
noproblem nicely written write up explaining details about various issues fixes and tests
noproblem seems like test cases cover the edge cases
noproblem nicely written code
noproblem everything seems to be working fine for me
noproblem yes the writeup is pretty clear
noproblem the code looks good
noproblem yes lot of new tests added and the addition of the tests has 92 code coverage great job
noproblem pretty good at this part they list almost every testing case in the wiki talking about what condition it is and give the code
noproblem all of the codes seems dry enough have some each statement to prevent duplicate codes   
noproblem they did all of them
noproblem all the test case works
noproblem the writeup clearly explains what the team has implemented it is very clear and can easily be understood test case for each and every step is clearly explained
noproblem string passed in it clearly explains what the test case is going to do as it is a unit test there are not much variable that are named already assignd variables are used
noproblem none of the functions cases implemented are too long they are short which are easy to figure out what is actually being implemented the code is easy to understanf so there is not much need of comments but some should be added
noproblem excellent write up includes all important details it is one of the most intuitive write up so far i have reviewed   
noproblem few new names were added and they look fine
noproblem 2 failed and 1 accepted   
noproblem the work done is successfully implementing the required changes
noproblem there are many places where puts statements are used where a logger statement should be used there is also a set of if else blocks that check to see if a variable is of a certain type which could have been abstracted with an appropriate design pattern
noproblem 1 functions are of appropriate length and well structured with respect to the purpose in question    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and self explanatory making it easy to follow    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is consistent and to the point   
noproblem the code contribution is significant the function such as import_team_members shows good coding practice and following ruby code standards   
noproblem their code changes as per the pull request is less    they have done justice to the little code they changed
noproblem the code is well written following the concepts
noproblem the menu which they emphasized on seems complete and running
noproblem 1 functions are of appropriate length and well structured with respect to the purpose in question    2 all code has been suitably well put into the methods with their intended function and work cutout for them    3 no the comments have been well placed and self explanatory making it easy to follow    4 the code does follow the ruby style guidelines and is thorough in that regard    5 nope all code is consistent and to the point   
noproblem the writeup is extremely clear i understand each issue they address
noproblem this is refractoring   project doesn t involve new test cases   
noproblem all the cases discussed in test plan have been converted into automated tests
noproblem variable and   method names seems to be appropriate
noproblem the variable method names and class names are intuitive and follow ruby standards
noproblem code adheres to the ruby coding standard the team has also implemented strategy design pattern
noproblem the code is more about the changes in the database and it does follow the standards
noproblem the code follows ruby style guide
noproblem refactoring   is done really well    there were no violation of dry principle
noproblem the code follows dry principle none of the methods needs to be broken down into separate components
noproblem code is concise as mentioned   methods are extracted into separate methods comments are sufficient i could understand it the code is as per ruby guide most of them are dry code
noproblem the features are working as per intended plan of work
noproblem most of the edge cases cover  
noproblem the write up addresses the problem statement and explains about the background of the functionality
noproblem writeup is clear and easy to understand    it covers all the work
noproblem very well written   
noproblem the writeup gives us enough clarity to understand what the project is about
noproblem the report is detailed enough to explain the approach taken to refactor the code   
noproblem very well written the purpose   was clear
noproblem yes the write up is concise  
noproblem authors have converted test plan into an appropriate test case suggestion    the authors can improve the writeup if they elaborate more on the testing approach used for the newly added code
noproblem yes it does explain the previous functionality and their changes will take affect the explanation is done with diagram as well as the query
noproblem yes explains well
noproblem clearly explained about the implementation and usage of the strategy pattern  
noproblem the authors clearly explain how they refactored the code   
noproblem they explained how they used strategy   pattern   and why they used it loved the walkthrough
noproblem i could see a clear description of the changes and good naming conventions  
noproblem test plan is given a appreciable thought and team has also implemented test scenarios mainly in   student_task_controller_spec rb would   suggest team to try and increase test coverage
noproblem good work on including test cases
noproblem the variables methods and class names do seem to follow proper convention and are suggestive of the functionality they are being used for in some cases they could have used a liitle more desciptive names for variables for example inside app helpers student_task_helper rb   they could have used background_colour instead of rtn as a variable name in the due_date_color method it will become more readable for the reviewers to understand the functionalities
noproblem the variables methods and classnames are aptly named i could not find names which are not suggestive of functionaliy
noproblem the code changes are well organized and nothing is out of place
noproblem in due_date_color switch case would have been a better approach   then if else if block lots of code that is done in view   can be moved to the controller follow mvc architecture   
noproblem    the functions seem to be implemented in a good manner and the code seems to be dry in some cases though the authors could have improved as in the i app helpers student_task_helper rb   file in side the due_date_color method they could have used case expressions in ruby instead of the if else logic implemented as that would be a more ruby on rails way of doing it as it will reduce the lines of code as well as being a more elegant way of handling it
noproblem 1 functions are of appropriate length 2 codes are in approriate   methods 3 code is very well commented overall great work
noproblem the features added seem to be running good
noproblem the code works as it should
noproblem writeup is readable and written properly team could have added code snippet and pictures of changed or improved functionality also team could work upon formatting and could also add links and references
noproblem please include the code snippet that was changed and also a screenshot of the view before and after the change    also please provide the link to the pull request and not the repo created good written explanation of the changes done in wiki
noproblem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to the project changes to the code have been described in paragraphs which could have been better if they could have updated with code snippets and screen shots of the tasks at hand
noproblem wiki has been well written with enough clarity and description
noproblem it is clear what the project does and why it does it
noproblem the writeup is clear it is easy to understand what the project does it would be better if you can put in more code details and major pieces that do the important logic
noproblem the writeup is pretty clear
noproblem the test plan section is present and it is covering all the scenarios
noproblem they seem to have included a testing plan have mentioned it in their report they seem to have considered edge cases and other possibilities
noproblem not much has been explained about the test plan the authors have however explained how they will be going about the testing in general an overview is provided which is clear to understand
noproblem the writeup explains everything regarding why and how the steps were carried out
noproblem wiki has been well written with enough clarity and description
noproblem they have explained how they have implemented each task by adding editing files
noproblem it is better to state the change of the feature or added feature with diagram to show the difference to state what remains the same and what is added or update understand certain circumstances   
noproblem yes the writeup explains what the authors did
noproblem the team has created a new spec file to test all the issues of the pr
noproblem all tests pass
noproblem yes
noproblem yes the cases discussed have been converted into appropriate tests   
noproblem adequate testing was performed using rspec tests for both the issues
noproblem they have converted the test cases mentioned in the test plan into automated tests the tests have been implemented as mentioned in the write up   
noproblem the team has made minimal changes in the code to fix the issues no new class function or variable has been added
noproblem no issues found
noproblem the newly added code adheres to ruby programming standards
noproblem the names used seem appropriate to their intended functionality
noproblem the variables methods and class names are named appropriately the variables used in the program suggest the functionality
noproblem the code resolves all the issues as per the problem statement and the features work correctly
noproblem seems to be working
noproblem the features for the issues fixed work as intended
noproblem the team has explained the problem statement as well as the approach they has chosen with lot of details it makes it very easy for end user to understand details of the project   
noproblem write up is clearly understandable systematic approach taken to fix the issue
noproblem write up is quite impressive i was able to understand the project through write up
noproblem the write up is good and clearly mentions the issues to be corrected
noproblem the problem is explained clearly and the implementation plan is also described elaborately the explanation helps in understanding the project very well   
noproblem there are no additions in terms of methods or any new implementation there are minuscule changes done so it still follows the existing standard   
noproblem there were not many big changes all the changes are crisp and to the point
noproblem the team has done well not to over complicate the issues and have resolved them with relatively few additions
noproblem functions are named properly
noproblem the code follows ruby style guidelines and is dry
noproblem the team has included test plan as well as the screenshot of the manual testing
noproblem write up has test plan with clear steps and screenshots
noproblem they have covered few edge cases just a suggestion to include result before and after fixing the issue may be juxtapose it
noproblem yes the project deals with an issue related to names    such as not allowing whitespaces etc the test verify that the issues are now solved
noproblem the test plan looks good it includes both manual testing and automated testing by writing rspec tests
noproblem the write up explains   the approach used and the code used for implementation very clearly the test plan is also defined extensively screenshots help in understanding the implementation more they did not use any design patterns   
noproblem the write up clearly mentions the issues to be fixed and the code changed to fix each issue
noproblem they standardized the team name generation and fixed the username without space for design patterns i think they didn t used it may be it wasn t needed
noproblem write up explains about the problem and how it needs to be fixed which seemed logical
noproblem yes the team has done great job in the write up it is properly indexed and addresses details about each issue and its solution
noproblem all of the cases discussed in the test plan have been included in the test file and all of them are also passing very good
noproblem the tests have been properly converted into automated tests
noproblem the test cases are covered in the coded
noproblem they kept working on this test and improved it
noproblem the names are very intuitive the build doesn t seem to have been passed because of the indentation errors and failure to follow certain design guidelines
noproblem the code follows correct name structure for variables methods and class
noproblem all the names are used properly
noproblem code contribution of all team members the code doesn not smell dry
noproblem the code looks good it seems well ordered structured and dry
noproblem the function definition is of perfect size the code follows the ruby style guide
noproblem yes
noproblem no idea how to manually test the authors file
noproblem the tests all pass successfully
noproblem clearly
noproblem the wiki document was very clear with respect to the responsibilities of the group it also detailed their approach to writing the tests as well as explained the functionalities that the tests were written on well done
noproblem the write up is perfectly written it clearly describes what functionality the work is related to it gives information for each aspect of the project
noproblem test plan is well rounded
noproblem the test plan is accurate and checks for different pre conditions edge cases invalid input values i could not find any missed scenarios
noproblem test cases are thorough
noproblem for the methods that include different conditions they provided tests fo different kinds of conditions also for each method the team test various aspects of the method
noproblem well explained information about the design and the results
noproblem the write up is enough for me to understand
noproblem the document explained well the work and the approach to doing the work
noproblem the write up is clear with its goal it nicely explains how and why did the author work in a particular way   
noproblem all the cases are covered
noproblem testing isn t applicable to this assignment   
noproblem all the tests have been added as per the test plan and have been run successfully
noproblem all provided variables are well assigned
noproblem variables and methods seemed intuitive enough
noproblem the functions added are not too long this is the minimal amount of code that had to be added to   implement the changes
noproblem no rspec tests are written to test the changes
noproblem more comments are needed
noproblem everything seems to be working fine
noproblem from the video it seems it should work fine with the edge cases as well
noproblem the write up seems quite understandable   
noproblem the write up is well written and explain how and what is done in the project regarding all the issues    just one suggestion it would have been great if the screenshots were uploaded corresponding to the changes made but otherwise the writeup is understandable   
noproblem the code added in the pull request is reasonable
noproblem all the names are intuitive and reasonable good job following naming conventions   
noproblem the write up is clear and clearly explains the issues corrected
noproblem variable names methods and class names look fine to me
noproblem no test plan is included but it seems that team have covered all the scenarios properly
noproblem i found the test cases to be sufficient no suggestion needed
noproblem i don t think there s any testing involved in this assignment
noproblem the functions are small and well defined   
noproblem the code added appears to be dry
noproblem writeup clearly explains why the team followed the particular approach and additionally mentions all the steps followed thus defining the approach clearly
noproblem none of the functions are too long could find changes where dry principle was violated the code follows ruby convention and guidelines although the code is easy to follow the comments should be included for the created methods changes apart from that good job
noproblem the readme was sufficient to explain details about the idea and also both the videos explain stepwise how this is achieved and demonstrates it also   the bugs are fixed and droptopicdeadline has been integrated into the code of this assignment
noproblem the functions are not too long and the code does not need to be extracted to separate   methods comments could have been added for a better understanding of the code the code follows ruby lines and the lines are compressed for eg unless and if statements are compressed
noproblem the feature works as it is supposed to don t see any issues
noproblem could not do manual testing as the project was not deployed but screencasts shows the testing so can conclude that it passed all the manual test
noproblem the features have been implemented correctly and work well on all the edge cases
noproblem they did not provide the link for me to test only a video is provided according to the video their features work pretty well      
noproblem the write up clearly captures the functionality that the work is related to
noproblem very clear
noproblem well explained in the video file
noproblem the write up is good as i was able to understand the issue to be fixed and the implemented approach    i would like to suggest the team to standardize the size of their screenshots though
noproblem    the wiki documentation has been updated and is thorough all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to the project changes have been well documented with code snippets they have added screenshots of working functionalities that they have fixed which seems a good idea to convey the working functionality properly
noproblem the writeup is good and clearly mentions the issues to be solved
noproblem the writeup clearly explains the issues and the approach used to achieve the desired results suggestion the authors should try to include the rspec test documentation for the newly fixed issues
noproblem they wrote clear and adequate description and i can clearly understand what their project does
noproblem the test plan looks good enough for the fix they have provided
noproblem the authors have included a thorough test plan and they seem to have considered a lot of test cases the tests convey they entire flow properly and show that the bugs have been fixed
noproblem yes the test plan looks complete enough   and all the edge cases have been tested the document also includes the screenshots of the manual testing
noproblem the test plan is very good and there is also a video   file which clearly shows the manual testing being done
noproblem all the scenarios are explained in detailed the only edge cases which is missing from the documentations is the scenario where the ta is assigned to a instructor what will happen to the instructors impersonated students when the ta of the constructor login to the application the team should this scenarios and include the same as the part of the documentation and automated script in the test plan
noproblem they wrote many test cases i think they are enough but i didn t find edge cases or invalid input tests   
noproblem authors have clearly explained what needs to be done to fix the issue how it is done and why it is done
noproblem no design patterns were used the write up explains the implementation and screenshots of code explains the flow better
noproblem there s not really a rationale for why these particular tests are sufficient
noproblem rspec tests look just fine and descriptions are intuitive
noproblem the tests look fine it s easy to follow what the tests do
noproblem all tests pass all descriptions in the test plan are just the test cases in the rspec file sooooooo yeah i guess they all exist
noproblem code is well written
noproblem the wiki page has showed up what the expertiza is and some examples have show up what the task of the team is
noproblem the work takes care of all the edge cases accurately
noproblem the writeup clearly explains the problem statement
noproblem the test plan is not added as the part of writeup
noproblem this is not a fair ask as far as i can tell there is no document that says we should create a test plan
noproblem their   variables methods and class names are good  
noproblem yes their code works and some edge cases are also correct
noproblem all the variables and function names used are appropriate   
noproblem the variables names are well assigned
noproblem all the variables are defined with respect to the functionality like max_team_size get_participants_without_team
noproblem functions and variables are named aptly
noproblem this team used migrations effectively and generally had dry code but it still felt very ad hoc i couldn t find any patterns that drove the changes they made
noproblem the code is well structured could have added more comments for easy understanding of the code the functions are not long
noproblem functions are of appropriate length and code is in proper methods however no comments are provided what so ever   
noproblem i have not been supplied with a link to manually use an instance with their changes and i have not been able to find a link in their pr or write up
noproblem i could not run it locally and hence i am not sure about the edge cases code looks clean and should not break in most of the cases
noproblem the youtube screenshare clearly shows the changes made and works perfectly since the edge cases arent defined not sure about the functionalities of edge cases in this case as it involves ui most of the time
noproblem the features work as intended edge cases are properly executed      
noproblem the code works
noproblem no deployment is provided so   couldn t   test manually   
noproblem the write up addresses details of all the three problem statements along with the code changes done in every file and the files added the team has also added screenshots of the manual testing and the video demonstrating the functionality they added
noproblem the write up covers all the issues and is well organized including the code blocks and the screenshots
noproblem the documentation is well written and indicated clearly what was the problem tackled and how it was approached and solved
noproblem yes the team has clearly stated the problem statement and the changes they have done to provide solutions to the problem they have been given 3 problems to which they have clearly provided the names of the files and the part of the code which is changed the video explains the problem and the implemented solution perfectly without any ambiguity
noproblem the write up clearly explains about the modifications made in expertiza    it indicates the functionality of their work which is topic management and the problem statement is clearly elaborated it provides the files changed and also the code snippets in which the changes are made the write up also provides visual   representations of the changes made   
noproblem writeup   is very well written contains enough   screenshots and explanations   of the code
noproblem the write up is well explained but could have described more on the methods whey implemented and why did it implement   in a certain way
noproblem the team has explained the issue and the solution they chose with enough details to understand to way of implementation
noproblem they explained it well but there were no   larger design patterns they seemed to be following i did think that they used ajax in the appropriate way but it could be improved in the future
noproblem their solutions are well explained the way they have explained attaching a screenshot of a code snippet and telling this is where we made this change and this is how it works gives a better understanding of their project it could have been better if they could have compare and contrasted the previous codes where the features where not there that way the background of the why this feature could have been clear
noproblem writeup explains what was to be done and how they did it but does not give rationale behind the way they coded and any alternative approaches
noproblem code snippets are given but   need explanation   
noproblem all the cases discussed in the test plan have been implemented
noproblem they have done all the 29 test case and test them throughly
noproblem the team has tested all the methods of the corresponding model file
noproblem well done in achieving 100 test coverage and passing all the tests
noproblem yes they have converted them
noproblem work as intended to be  
noproblem code style seems to be good
noproblem not find any   improper variable names or method names      
noproblem names for variables classes and method are properly named and make sense
noproblem the test coverage has increased significantly from like one test to 100 kudos to the team the team s pull request hasn t passed due to inconsistencies in following ruby styling guidelines
noproblem the code is dry enough and the functions seem to be compact
noproblem this was a testing project and the mocked objects were appropriate
noproblem the code is dry there is no redundancy in the code
noproblem all the codes are of perfect length that is actually one of the best thing about the code it follows basic ruby style guide
noproblem code climate issues that were reported have been fixed
noproblem the features work as intended they cover the test cases and edge cases as well
noproblem all tests works fine   
noproblem it s a testing project and the video provided show that all test pass and they have at least 90 coverage
noproblem this wiki is very detailed and explains what is done for every tested method
noproblem the write up is descriptive and very well written i could easily understand everything about this project good job   
noproblem from the document i could understand the functionality on which the tests were written
noproblem the writeup describes briefly and clearly what the assignmentteam class does in the expertiza project it has also given the details on the test plan test cases and explained the use of rspec testing framework and factories i would suggest to add a link to their video that shows the tests running in the wiki page all in all good work
noproblem the tests are very well written they clearly indicate what functionality they are checking for    the tests follow a language that is easy to follow
noproblem the writeup matches up very well with tests written and also describes in details what scenarios are tested
noproblem yes very clear
noproblem yes the test plan part is pretty through they list all 29 test case they have done for the assignment_team rb
noproblem the test plan is detailed and comprehensive good job
noproblem no miss
noproblem for every tested method they explain why they   created certain objects or did what they did
noproblem the writeup explains well the plan of work of the authors and the way in which they approached the task at hand
noproblem appropriate explanations are provided for the tests
noproblem there were no testcases and since they provided a screenshot of the desired work i suppose it fulfills the requirement
noproblem few new names were added and they look fine
noproblem yes on manual testing it leads to realization that the code has been suitably written as required by the functionalities and also the doc they have provided is the results that i get on following the procedure although i would suggest that they look more into the test case 3 because how to go about testing it hasn t been explained by them   
noproblem the functionality works as explained in the design document   
noproblem the menu which they emphasized on seems complete and running
noproblem the writeup is extremely clear i understand each issue they address
noproblem the write up is written with enough explanation the headings shows clearly what the project is about and what kind of solution they have proposed the solution is shown with code snippets and functionality changes this gives further information to understand the proposed solution   
noproblem they have neatly organised the solution by the each problem the solution they provided and the screenshots of output which is useful in testing they have highlighted the changes and explained where exactly the change has been proposed down to the granularity level of each function call and each line which gives a clear idea of the code i can clearly see what the problem is and functionality the work is related to
noproblem great writup which contains all cases the task required and it s easy to understand since there are lots of screenshots to explain their task clearly
noproblem no test plan included but i feel that wasnt needed
noproblem the code is simple and easy to understand there are a lot of code climate suggested changes which needs to be completed before the code will be ready to merge   
noproblem yes the work is explained mentioning all the details
noproblem of course they lay all various details and highlight them using orange box which is easier to understand
noproblem yes very well done on adding tests   
noproblem the variable and method names are apt
noproblem the write up is well formed and structured the entire flow is explained along with files changed methods implemented in each stage could have described the approach a bit more
noproblem the code follows the dry principle
noproblem they do work as intended
noproblem did not find any problematic edge cases
noproblem the team have done a good job in explaining their work
noproblem the related functionality is mentioned
noproblem the wiki as well as a design document has been   created for the write up which   explains the   refactoring requirements the team has explained the technical aspects in a very detailed manner however it would be helpful for users if the team could add more details about the functional aspects so that a end user can test the impact on the existing functionality due to the changes done
noproblem perfectly explained write up along with the design document to get the better understanding of the issues and flow
noproblem write is clear and well written a trivial formatting mistake new implementation bullets but that is fine    problem statement is well define and the existing solution too problem statement does not need to state that rspec tests have been added      
noproblem the team has leveraged the existing test cases to align with the changes implemented it would have been more helpful to include the test cases in the write up as well
noproblem existing tests have been modified to changed to pass for the new implementation    news tests could have been added  
noproblem writeup explains in   brief how and why the functionality of sidekiq was implemented
noproblem the wiki has been documented with a lot of details explaining the problem statement as well as the approach
noproblem yes the authors explain the existing solution and explain the drawbacks for in them    i would have liked to see a point wise comparison on how their solution overcomes the existing drawbacks    i would suggest not to hard code the mail text subject in the code and use a config file instead this will be easy to modify in future i would have liked if the authors added why they took sidekiq and not rabbitmq or celery   
noproblem good work on including test cases
noproblem the variables methods and classnames are aptly named i could not find names which are not suggestive of functionaliy
noproblem the code changes are well organized and nothing is out of place
noproblem 1 functions are of appropriate length 2 codes are in approriate   methods 3 code is very well commented overall great work
noproblem the features added seem to be running good
noproblem the code works as it should
noproblem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to the project changes to the code have been described in paragraphs which could have been better if they could have updated with code snippets and screen shots of the tasks at hand
noproblem wiki has been well written with enough clarity and description
noproblem it is clear what the project does and why it does it
noproblem the writeup is pretty clear
noproblem the test plan section is present and it is covering all the scenarios
noproblem they seem to have included a testing plan have mentioned it in their report they seem to have considered edge cases and other possibilities
noproblem wiki has been well written with enough clarity and description
noproblem they have explained how they have implemented each task by adding editing files
noproblem yes the writeup explains what the authors did
noproblem mostly looks good can change names like this   is_selfreview_enabled to is_self_review_enabled and assignment_form_assignment_num_metareviews_allowed to assignment_form_assignment_num_meta_reviews_allowed selfreview shouldn t be a single string
noproblem the code seems to have been well written with the reasonable variable names
noproblem    their code is clear and reasonable
noproblem the code changes are majorly html changes and not ruby changes
noproblem the names suggest the functions properly
noproblem    maybe some more comments will be helpful
noproblem its nicely written and follows dry principle they have used existing functions where required
noproblem the code changes are majorly html changes and not ruby changes the dry principle explained in the document is clear and talks about dry being handled
noproblem the code is well written and follows dry principle
noproblem the features seem to work well
noproblem they haven t deployed it but have shown in the video and documentation the edge cases so i think it might just work
noproblem the features are working good as shown in the screencast
noproblem the codes work well as the team described in wiki
noproblem the project has been explained in great detail just feel instead of using issue numbers if the team had explained the issue in brief before elaborating on it that would have been great
noproblem the review is clear and explanatory they have discussed all the essential topics needed test plans mvc dry principles   
noproblem they have explained every aspect of the project really well plus the video also show the changes they have done one thing you can add is audio in your screencast videos telling what is being done so that its easy for the user to understand
noproblem    they explained the problem very well
noproblem the test plan seems to be good as they ve included test plan for every issue
noproblem good detail covering how you test different issues in the code
noproblem the test plan has covered various cases and completely explainable in simple terms small suggestion the first paragraph could have been itemized for easier understanding
noproblem yes they have explained everything in detail
noproblem    they showed their   work with screenshots   which contain some edge cases
noproblem the team has a good understanding of the code and issues they found there are two issues fill in the same category and gives good explanation of what jobs the code they have added do
noproblem yes the authors have done a great job in explaining their work with code snippets
noproblem good job explaining your work and talking about staying dry
noproblem they have discussed everything the way they have split the features and explained it one by one with the code is good
noproblem they have explained everything nicely i don t think any specific design pattern needs to be followed here and they have mentioned as well that they are not following any as such
noproblem the overall structure of the code looks good and all the coding standards have been followed
noproblem most code changes were on ui and written perfectly no commits after first deadline so same as first review   
noproblem    i think their code is well written
noproblem no new code was committed during the second round this could be due to the fact that the team finished their code at the end of the first round itself
noproblem no new commits
noproblem no but all the functionalities are working fine from 1st review itself
noproblem    there are no new commits
noproblem in the first round the team had only created the two web idl   files namely offscreencanvas webidl and offscreencanvasrenderingcontext2d webidl which are the interface files which define the implementation in the corresponding files offscreencanvas rs and offscreenrenderingcontext2d rs in this round the team has implemented the functionalities described in the two web idl files in offscreencanvas rs and offscreenrenderingcontext2d rs the offscreencanvas rs interacts with the javascript and hence has the constructor with attributes height and width a method getcontext to return the reference to offscreencanvasrenderingcontext2d and a reflector object for garbage collection the offscreenrenderingcontext2d rs file does not interact directly with javascript and does not have a constructor or reflector object it has the code to build the offscreencanvas object    on inspection the variable and method names used in the code are intuitive but the main issue is that the name of the webidl file offscreencanvasrenderingcontext2d webidl and corresponding rust file offscreenrenderingcontext2d rs don t match the team could have formatted the code appropriately for readable indentation there are not many comments that give a high level description of the code instead there are some instances of unnecessary code that has been commented the code is indeed dry
noproblem no new commits made during the second round as the functionality seems completed in the first round itself
noproblem there is no new commits during the 2nd round
noproblem the code seems to be good it follows the principle of good design even though i do not know rust the use of variable names was very intuitive
noproblem the code doesn t make sense to me someone who isn t familiar with this project but it does seem to be formatted well
noproblem there are only minor modifications and they are well written i don t think there is any other way it could be done   
noproblem the code changes are majorly on html files capybara could have been used to test the functionalities the code coverage has increased overall
noproblem    there is no new test and the coverage did not increase
noproblem yes there is  
noproblem tests have been thoroughly and very well performed also well documented   
noproblem the code seems to be written well the ruby style guide is followed
noproblem team added elaborate test plans and implementation for their test cases
noproblem some commits were made to rectify old errors and get an approved pull request
noproblem    everything works like expected
noproblem yes it works as intended from the video it seems everything is working fine
noproblem yes new code has been committed in the 2nd round the team has essentially implemented the offscreencanvas rs and offscreenrenderingcontext2d rs offscreencanvas rs is respondible for implementing the offscreencanvas webidl this interacts directly with javascript and when a new instance of offscreencanvas is created it calls the constructor with arguments height and width which in turn calls the new method defined in this file it also contains the reflector object that tells the javascript garbage collector to ignore the canvas object while clearing memory additionally it has the implementation of the getcontext method that returns a weak reference to offscreencanvasrenderingcontext2d which is responsible for doing background rendering task offscreenrenderingcontext2d rs has the implementation of offscreencanvasrenderingcontext2d it does not interact directly with javascript so it does not have the constructor or reflector the functionality to build an offscreencanvas object has been implemented in this file   
noproblem yes there new commits in round 2
noproblem the writeup has been pretty well written by the team introduction to the problem statement the implementation details and the test plans have been stated   
noproblem the writeup is accurate and sufficient the team gives clear explanations for the whole project and the process to realize it for the point that is not easy to understand they provided some examples and use mathematics method to support the explantation which makes the read easily
noproblem several new commits were added during the second round
noproblem the writeup is elaborate well written with proper description of the test cases with screenshots and steps for each issue
noproblem    overall i think the write up is good and clear
noproblem well documented and explained with good amount of screenshots also the video length has been reduced to only whatever needs to be shown which is great
noproblem the authors have improved the writeup based on the suggestions from first review    it is more precise and self explanatory the background is lot clear after the first review
noproblem the team has made a great improvement with respect to the previous submission the code is brief and easy to understand
noproblem i do feel the code can be deployed to the production server once a few test cases have been implemented by the team
noproblem test cases are yet to be added
noproblem the changes can be deployed to production server
noproblem yes it works as intended and code follows the ruby guidelines the documentation is well explanatory
noproblem    i think this code is ready to be deployed onto the server
noproblem the team have done a great job and passed all their tests
noproblem the team has suggested 2 methods to test the first and the recommended method is using the existing automated tests for offscreencanvas feature a new offscreen canvas directory was added to tests and a new ini file enables the new preference the second approach is writing own test cases and a sample html file can be used to test if the offscreencanvas is rendered
noproblem travis ci has passed
noproblem every thing has passed there is no conflict or build fail
noproblem no test cases as this wasn t a testing project
noproblem    yes the build pass in travis ci
noproblem the build passed with no conflicts in travis ci
noproblem the build passes
noproblem in the test plan section and on git also i found no test cases written there is testing done however it is not what was desired
noproblem the code was well written even in the first round
noproblem the present test cases appear to be written fine
noproblem no the authors didn t improve the code
noproblem to test the system operation the project has to be built and run the sample html file was used to render a test canvas as given in the wiki
noproblem when tested the project does what was desired to be done
noproblem the authors made a solid attempt at improving the writeup however there are still some issues dom was left undefined and the code was separated from the descriptions
noproblem write up is good    with code flow diagram and test plan pull request
noproblem    no new code was committed during the 2nd round of resubmission
noproblem the wiki is pretty much strong with plenty of info
noproblem yes since it was a unit test assignment tests have been added and overall coverage has increased
noproblem coverage went up by 8 4 according to coveralls
noproblem the write up is lucid and has now incorporated the changes that were made in the round 2 it starts off by introducing servo rust offscreencanvas web worker web idl the authors then describe the code flow using a flow chart which was really appealing i especially liked the under the hood section which elucidated the files offscreencanvas webidl offscreencanvasrenderingcontext2d webidl offscreencanvas rs and offscreenrenderingcontext2d rs that they modified created in this project and their functionalities concisely the write up then includes the code from the above four files and finally ends with the test plan with 2 approaches links to pull request and references
noproblem the write up is good i liked the use of the flow chart to explain the flow of their code and explain the functionality i think that this was the first write up that used a flowchart
noproblem    they added all the test cases there is so much coverage now
noproblem overall coverage was increased by 8 percentage   
noproblem the writeup is the best part about the project it describes clearly what and how the work is done one can clearly understand their working strategy from the writeup
noproblem the tests cover all the scenarios given that the problem statement is pretty open ended the changes fulfil the purpose
noproblem yes it works
noproblem i think it covers all of the scenarios but don t quote me i don t have a great understanding of review response map
noproblem since it is a unit test project with well written tests i don t see any issues why it can t be deployed to production
noproblem the test examples they showed are good   
noproblem the build is passing successfully
noproblem yes i feel the code is written in a good format i checked the changes made by the authors and didn t find any bad naming or anything else
noproblem the code was well written in the first round itself the method names variabble names and class names are intuitive and suggestive of the functionality
noproblem the code is well written no issues with naming conventions coding style
noproblem impressed by the coding and the way the solution was implemented they implemented a complex feature in simple lines of code coding standard has been followed naming conventions are followed and code is formatted   
noproblem the code is written really well the professor frequently advised the team to improve the naming conventions as seen from the comments in the pull request suggestions i still feel that the function   review_reminder_email   is a bit longer   
noproblem yes new code was committed during the second round
noproblem there are 2 commits
noproblem two commits were done during the 2nd round
noproblem 2 new commits to add additional features
noproblem no new commits as fix was delivered in first round
noproblem no commits were found the last commit was 15 days back    suggestion i feel that there should have been some commits as the pull request shows merge issues the travis ci build fails and the code climate is also not able to analyse the code there should have been commits related to resolving these things   
noproblem there is code committed during 2nd round
noproblem they have added the test cases with context as when participant is added to the assignment using csv and the test case covers the required functionality that was intended to be   implemented
noproblem team has added tests for assignment_participant model which they have changed as the requirement was just testing one component this is sufficient however testing the controller would have been a more through integration test
noproblem yes team has added the test cases and they cover the portion tp check whether the email has been sent to or not
noproblem the team has added test cases the test coverage has increased
noproblem yes
noproblem yes everything is working as intended
noproblem yes this does work properly
noproblem the system operation works well as intended
noproblem yes it looks fine to me
noproblem the functionality works fine good job team no suggestions
noproblem the write up is well documented and covers all the needed information covering problem statement a detailed explanation of how the functionality is implemented with what changes have been made to the different files and test case that they have added
noproblem the write up is clear concise and explains the work done properly some screen shots would have been handy though
noproblem the writeup was written very nicely in the first round itself   
noproblem very detailed great job
noproblem yes i think that the code can be deployed
noproblem yes it works perfectly  
noproblem the test plan is added and rspec test has been added overall testing seems good
noproblem no there were no conflicts and do not need to be resolved
noproblem i couldn t test manually but the videos show proper operation
noproblem as per their screencast shared on the gdrive   link the feature seems to be working locally there is no heroku deployment or a link to the vcl present
noproblem the code is almost completed only a few final touches will make it ready to be deployed onto the production server maybe the future team can also work on it to achieve some more enhanced features
noproblem this is not an expertiza project
noproblem the ui and system operation works as intended the video provided clearly shows the issues that the team has handled
noproblem according to their video their code works well   
noproblem the write up has seen significant improvement flow diagram has been made and screen casts have been added to show the flow screen casts have been added for both bugs and functionality very good job
noproblem extremely well written wiki page thorough and to the point with enough technical content and relevant screenshots pertaining to the before and after scenarios of the problem statements    moreover its a considerable improvement from the last submission where in they had nothing of the sort   
noproblem the write up is comprehensive and clearly mentions the filenames where the changes have been made moreover the team has explained the logic behind the code in the video provided which is really helpful the team has done a good job with respect to that they have added an flowchart image explaining the logic behind checkbox this adds up to the readability of the project
noproblem the writeup is detailed and the authors have done a nice job it covers issue their solution explanation of the solution and test plan
noproblem yes there are only minor modifications and they are well justified
noproblem the code seemed to be well written in the first round but i dont see changes done in round 2 the github link provided shows last commit for oct 21 though i see that there are change made in the wiki which were required and are done well
noproblem the code was well written even in the first round
noproblem i don not think their code is good because they did not solve the problems existing in the first round
noproblem the present test cases appear to be written fine
noproblem no the authors didn t improve the code
noproblem seems at par with the coding standards
noproblem did not find problems in the code in the first round follows ruby style guide commented and good naming very well written
noproblem no new commits have been made in the 2nd round
noproblem the latest commit is on 2nd of nov
noproblem no they did not commit new code
noproblem no new commits in the second round
noproblem    no new code was committed during the 2nd round of resubmission
noproblem yes since it was a unit test assignment tests have been added and overall coverage has increased
noproblem i cannot find any new test cases
noproblem last commit seems to be 11 days ago
noproblem no new commits have been made all changes are in the documentation only
noproblem no they did not add new test case
noproblem i don t see any new commits for round 2 mostly nothing was needed
noproblem no new code was committed during the second round
noproblem no new commits
noproblem unfortunately there was no new commit added the latest commit is 10 days ago
noproblem coverage went up by 8 4 according to coveralls
noproblem no new test were added but earlier tests are working
noproblem    no the team did not add any new test cases coverage is low
noproblem    they added all the test cases there is so much coverage now
noproblem overall coverage was increased by 8 percentage   
noproblem the tests cover all the scenarios given that the problem statement is pretty open ended the changes fulfil the purpose
noproblem yes it works
noproblem the code was well written dry was not violated
noproblem the code seems to be dry and i had no issues with it in the 1st round
noproblem it looks as good as round 1
noproblem naming looks good they had already added comment to the code in the first review
noproblem don t see any dry issues well written test code
noproblem the code is well written    no suggestions
noproblem the team has added test cases 1 to check that if there is no rejoinder for the review then it redirects to new author feedback page 2 to check that the other teammate is able to edit 3 to check if the page is redirecting back to review 4 to check if the rejoinder by a participant of a team is saved properly    the overall coverage decreased from 48 to 47 601 it decreased by 0 04
noproblem no there had been no bad names or wrong conventions used even in round 1 so no change there the   team has made few modifications to beautify the code by using ternary conditions   which did make the code elegant no new comments added
noproblem    no changes made from last review
noproblem commits for code climate changes were pushed in
noproblem i think it covers all of the scenarios but don t quote me i don t have a great understanding of review response map
noproblem the team added new commits in the second round as well to improve their code style improve codeclimate issues and changes other reviewer s suggested very few teams have done this great work
noproblem several commits were made to decrease the code climate warnings
noproblem yes they are updating code to fix code climate issues
noproblem yes there are   new codes committed during the 2nd round
noproblem the number of commits since the 1st round is impressive    significant improvements have been done pertaining to naming indentation and overall code climate issues
noproblem no new commits with respect to code or functionality just few indentations    comment changes and code beautifications done
noproblem the system operation from ui works as expected by the project i was able to verify that the rejoinder is given by the team instead of team member the rejoinder is also made easily available to the user by providing easy navigation options to give feedback to reviewers hence making the ui more user friendly the author feedback section contains the team s collective feedback to reviewers of particular assignments most of the task is to refactor code so that it complies with the new requirement of team rejoinders and the features work as expected
noproblem the projects works as intended some of the issues in the problem statement covers refactoring which has been properly handled by the team
noproblem test cases were added overall increase in the coverage range observed
noproblem yes the team added relevant test cases which increased the overall coverage
noproblem no unit tests were added during the resubmission but they had an initially high coverage
noproblem they achieve 100 during first round so i don t think there are any new test need to be added
noproblem yes they coverage is 100
noproblem yes the project was about testing and coverage has increased
noproblem nicely written wiki   
noproblem the coverall showed that the overall coverage increased 3 2 to   39 999 the coverage of the participant rb file is 100 so great job team no suggestions
noproblem the write up is simple and understandable it starts off by describing about expertiza motivation behind the project the tasks to do list of classes that are modified and impacted by the change i like how the authors have screenshots of both the existing code that is removed and the new code that is added in the pull request which juxtaposes them and highlights the tasks in the problem statement and goals of the project the write up then ends with the test plan which lists the test cases handled
noproblem the code coverage was 100 in the   1st round
noproblem yes the project was a test project and the team has managed to achieve 100 coverage of the model there was no increase in coverage from round 1 to round 2
noproblem the project works as intended test cases are showing a positive impact on the results
noproblem yes the tests cover all the scenarios one should check for great work
noproblem everything is good here
noproblem edge cases are tested and all scenarios for each method are tested
noproblem yes they coverage is 100
noproblem yes a lot of cases concerning a participant has been added
noproblem yes 100 coverage has been achieved as shown in the video
noproblem y all did the least possible work and put it on wikipedia instead of the expertiza wiki
noproblem the tests specified in the participant rb file run perfectly well the same has been demonstrated in the video mentioned above no suggestions
noproblem the code coverage is 100 every test case passes after a manual check
noproblem the writeup was significantly well written almost all the changes were covered
noproblem the team has written their wiki page in a very detailed manner they even added the video links which were missing in the first round as suggested thank you and good job
noproblem easily one of the most clearly documented projects i have reviewed in this class so far i liked their organization of the test plan within the write up
noproblem the wiki page provides clear details about the work and very easy to understand just like round 1
noproblem it is crisp and to the point there are no clarity issues either
noproblem well explained all the test cases have been explained and are self explanatory as well
noproblem well written
noproblem the writeup is really well written and has covered all the desired aspects along with the test plan no suggestions
noproblem the   writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings
noproblem the write up and screen cast were both very explanatory it included detailed code the need for the test of partipant rb and the use of the model there was no change required from the initial write up
noproblem the code is well organized and written ready to be merged into the production server
noproblem no test plan
noproblem since it is a unit test project with well written tests i don t see any issues why it can t be deployed to production
noproblem the test examples they showed are good   
noproblem the tests are good and it can be merged to the main line
noproblem still 25 issues checked by   codeclimate to fix
noproblem    the build does not pass also the coverage is very low not many testcases
noproblem the biggest concern are the simple code climate issues
noproblem the build is passing successfully
noproblem commits were made in second round  
noproblem the write was good and well written however it would have been better if some screenshots were also present in the writeup may be juxtaposing the screenshots of before and after of fixing the issues that would have made the write up easier to understand
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code was well written following the principles
noproblem yes code is well written
noproblem the code is well written and follows all the dry problems    the team has changed the files based on previous reviews and to make it more dry comments before the methods that they created gave a better understanding what each code does function for showing warning when number of slots is set as zero    changing the names that suited the functionality more is appreciated addcreatetopicsection appendcreatetopicsection   
noproblem there does not seem any issues with the code the team has properly used the naming convention and has provided comments wherever necessary
noproblem few new commits are made
noproblem there has been 2 commits made in second round one for adding comments and another one for fixing   issue 926 the sorting of topics by topic number in assignments
noproblem 3 new commits
noproblem properly   done in round 2 also
noproblem the team has done few commits one was on few sort fixes while they other was on refactoring
noproblem the team has added some new commits which are about the added comments the team has picked up the suggestion from the previous review to add comments for better readability which is commendable
noproblem a commit was done in second round addressing issues from reviews
noproblem tests have been thoroughly and very well performed also well documented   
noproblem yes the features work as described in the problem statement the team has done good job and has fixed all the below issues issue 971 change create topic ui into ajax issue 926 we need a way to sort topics by topic number in assignment edit page issue 718 we should allow instructors to give feedback when accepting or rejecting topic suggestions
noproblem the code works as required
noproblem the new features work as expected
noproblem the working is perfect everything works as intended the team has explained this in a brief manner in their youtube video
noproblem system works as expected and this is evidenced by tests and videos
noproblem the write up is informative and provides all necessary details of the changes made
noproblem the write up is impressive and very detailed it has been documented well which helps to understand about the project and the code implementation it also provides detailed test plan which makes it easier for end user to do ui testing
noproblem the writeup is well organized and well documented
noproblem writeup is very detailed and well written it is supplemented by enough code pieces and reasoning and good amount of pictures and videos to explain what the team   has done in detail
noproblem yes the code can be deployed to production
noproblem the code is well written tested and documented and hence i think it should be ready to be deployed   
noproblem yes the travis ci build is passing successfully   
noproblem no conflicts and build passes
noproblem yes no conflicts at all which needs to be resolved
noproblem yes the travis ci has passed
noproblem the build has passed in travis ci and no conflicts have occured
noproblem the code follows ruby style guide
noproblem the code is very well written and follows good coding practice
noproblem project was on implementing test cases the test cases are well written and the code coverage has increased
noproblem the code is both succinct and very carefully i have not done the code check in the first round but for this time there s no bad names functions are standardly named good alignment and commenting
noproblem code makes good use of rspec s describe and context options and manages to achieve 95 code coverage
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem yes code was committed to follow clean code practices based on first review
noproblem code was cleaned up 5 days ago
noproblem yes new code was committed in the 2nd round
noproblem test coverage remains the same at 94 hence my suggestion opinion is same as the previous review
noproblem yes they have added test case and it has increased the coverage by 3 and has increased the coverage to 39 721
noproblem project was writing unit test cases and the newly written test cases has increased the test cases
noproblem test coverage for assignment_participant model increased to 94 percent
noproblem coverage increased by 3
noproblem yes the team has added test cases and the team has covered every functionality
noproblem i m afraid no test cases were added in round 2
noproblem yes the test case covers all the required test cases along with the edge cases
noproblem project was on writing test cases and the newly written test cases has increased the coverage
noproblem since it s unit test it seems there s hardly a way to veirify   with ui
noproblem all the test cases pass majority of test scenarios described in document is covered and automated
noproblem video demonstrates working and passing tests
noproblem the code coverage is 94 which passes the required threshold
noproblem the writeup seems to be well written it is concise and to the point
noproblem the write up is very well documented as it explains the test plans and also what changes have been made along with the reference to the files which have been modified
noproblem very clearly writeup
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the writeup is comprehensive and fully covers given functionality there were no significant issues that needed to be fixed from the first round   
noproblem the writeup is complete and well organized and it also mentions the corresponding change in origin code
noproblem yes as the test   case increase the test coverage and the build pass is 100 thus the code is ready to be merged
noproblem yes it is a good code
noproblem after resolving the issues with travis tests and adding comments to the code it is ready to be merged with master branch production deployment in not applicable
noproblem travis cl build failed
noproblem yes the travis ci build was passed the conflicts could be seen resolved
noproblem the overall structure of the code looks good and all the coding standards have been followed
noproblem yes coding practices seem upto standards
noproblem the code is well written and well commented and follows ruby style guide
noproblem they don t have code problem for the first round
noproblem no the new code was not committed during the second round this could be due to the fact that the team finished their code at the end of the first round itself
noproblem doesn t seem to have new commits in round 2 last commit was on 2nd november
noproblem the last commits were 12 days earlier hence no new commits were made during the second round
noproblem no new code was committed in the second round
noproblem no new code was added nor was any necessary
noproblem yes they were made
noproblem no new commits last commit was on nov 2nd before the first review
noproblem yes 1 checkin was done on nov 2nd     
noproblem the code was already delivered in the first round hence no commits this round the author has regularly pushed commits   
noproblem no new commits   
noproblem no new commit during second round
noproblem yes the team did add test cases to test their changes and their overall test coverage has increased
noproblem the code seems to same as before nothing new has been added
noproblem the team has added test cases and they cover all the required functionality the code coverage has increased by a small amount
noproblem many test cases were added with overall test coverage increasing for the project
noproblem overall coverage increased 0 3 to   37 074 good work on including test cases the app works fine after testing the newly added tests cover the scope of this project very well
noproblem team has added many tests coverage has increased from 1 to 38 which is impressive   
noproblem the testing has been implemented and looks well implemented
noproblem yes they add test cases and the coverage is the same as the first round
noproblem yes everything does seem to work properly   
noproblem yes the project did work as intended the video demonstration and manual testing were enough to prove this fact
noproblem the system works well all the functionality has been implemented i ran the project and it worked as intended the back button issue in ui has been fixed
noproblem yes it works as intended
noproblem yes  
noproblem yes as mentioned in the problem statement the solution is delivered it works fine   
noproblem the functionality works and is evidenced by the video
noproblem yes everything works
noproblem the writeup written well the team could have included snippets of their code instead of screenshots
noproblem the write up was very good in the sense that it mentioned the high level view of the tasks first and then dug deeper under the hood but it only showed what files they changed and what it produced as a result they could have also shown what is that they changed or provided a link in the wiki yes one can deduce that from the pull request too but having a link or the content itself on the wiki is a big boon
noproblem the writeup is well written and self explanatory   
noproblem the writeup is great in first round they did not have a test plan part but they added it in the second part
noproblem the code looks good
noproblem no its not as the coverage is increases by small amount
noproblem the build did not pass in travis ci there were no conflicts that needed to be resolved
noproblem travis test has failed i can see it in pull request page conflict has not been resolved   
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem code looks good well formatted and naming conventions are followed   
noproblem the code was well written and implemented the functionalities needed it made good use of naming conventions and the team worked on improving the code layout by following the ruby style guide and dry principles
noproblem all the names are used properly and the team adds some comments after last round
noproblem no no new committed were added during the second round the last commit was around 13 days back and no new code has been pushed since then
noproblem some new commits improves the code a bit
noproblem yes 2 commits were done in the second round
noproblem no new commits
noproblem no no new committed were added during the second round the last commit was around 13 days back and no new code has been pushed since then
noproblem there were a good number if commits in 2nd round
noproblem some new commits improves the code a bit
noproblem commits were done long ago and commits are regular no new commits as changes were fixed in earlier round commit titles are well written and not ambiguous
noproblem there were a good number if commits in 2nd round
noproblem the team did not make any commits from their first round they had successfully fixed the issues in the first round stage itself
noproblem no new commits
noproblem the team add some comments and test cases during the 2nd round
noproblem yes 2 commits were done in the second round
noproblem yes the team has indeed added test case and made a test plan for both the issues that they have resolved   
noproblem commits were done long ago and commits are regular no new commits as changes were fixed in earlier round commit titles are well written and not ambiguous
noproblem 11 coverage increased good job
noproblem yes the team has added adequate test cases
noproblem the team did not make any commits from their first round they had successfully fixed the issues in the first round stage itself
noproblem yes the coverage has increased
noproblem the team add some comments and test cases during the 2nd round
noproblem yes the team has indeed added test case and made a test plan for both the issues that they have resolved   
noproblem 11 coverage increased good job
noproblem the team did not add any test cases and the coverage remained the same
noproblem yes the team has added adequate test cases
noproblem the team added test cases for test_case rb and the coverage has increased which makes the overall coverage increases relatively a large extent
noproblem yes the coverage has increased
noproblem they have added test cases but very limited the code coverage was just 14 percent
noproblem yes the team has added tests i am not sure of the increase in coverage as it is not mentioned in the doc however the team has very well explained how the tests were done and what areas they have tested
noproblem the team did not add any test cases and the coverage remained the same
noproblem the feature implementation was good the ta can t edit the rubric of the instructor but the test cases are very limited
noproblem the team added test cases for test_case rb and the coverage has increased which makes the overall coverage increases relatively a large extent
noproblem following the steps i can see the changes implemented
noproblem yes everything that the project required to do works there were a few things which caused issues in the pull request but none of it related to the functionality of the product to be tested but rather related to the code complexity even the video demonstration clearly shows the changes implemented
noproblem i think it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the team vastly improved on the writeup from the first stage by giving a general overview of the tasks taken up and the list of issues present and resolved during the project   
noproblem the team didn t no provide the link for the deployment but according to the video they provided the features worked well
noproblem the code seems ready for merge
noproblem yes it is ready
noproblem if it works just like in the video then definitely yes
noproblem the feature implementation was good the ta can t edit the rubric of the instructor but the test cases are very limited
noproblem since the changes are reflecting it looks good to be merged
noproblem the test cases covers the required test scenarios and the system operates as intended the video file submitted though seems to crash a link could have helped
noproblem yes the code can be deployed on the production server as it passes the needed build of travis ci the project would work as required to
noproblem i think it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem travis ci passes
noproblem yes the build request has been passed
noproblem i could not find travis ci
noproblem travis tests have passed there were some initial failures but the team has fixed it there are no lingering failures
noproblem the build passes
noproblem the code is almost perfect apart from the code complexity issues which in my view isn t very tough to fix the project need not be done from scratch and it is certainly a good starting place for future teams to pick up
noproblem the code seems ready for merge
noproblem the team gave fixtures for the issues exist but to make deployment it is better to add more tests to make sure the function work properly
noproblem yes the code can be deployed on the production server as it passes the needed build of travis ci the project would work as required to
noproblem since the changes are reflecting it looks good to be merged
noproblem excellent work but the codeclimate   build has failed
noproblem if it works just like in the video then definitely yes
noproblem yes it is ready
noproblem travis ci passes
noproblem yes the build request has been passed
noproblem i could not find travis ci
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code follows dry principles
noproblem there was no complicated functions code strictly followed dry principle
noproblem no changes in the code from the last time code is written properly
noproblem code was well written dry and intuitively done easy to follow the functionality implemented
noproblem no new commits have been made in round 2
noproblem all the commits were completed by oct 31
noproblem no commits were done in 2nd round
noproblem the last commit i see is from oct 31st i m assuming they did not have to   change much in the 2nd round
noproblem no commit
noproblem a small amount of new code was committed in the second round
noproblem no new commits were made during the second round
noproblem no new commits have been made since the last round however there is nothing significant as just codeclimate fixes are remaining
noproblem i couldn t   any new   commits in the second submission though the functionality   seemed to be fulfilled in the first round itself
noproblem yes the coverage has increased and has almost reached to 50
noproblem this project is refactoring and there were not much of functionality changes i see that teams have changed the existing tests make sure there is no coverage miss
noproblem the test coverage seems to have increased slightly since this is a refactoring project i wouldn t expect testing to be the focus so that s pretty good even though the added test case most likely doesn t cover all the work done here
noproblem the team had added a test case in the last round which i think was sufficient to test basic functionality    there have been no additions to test cases in the second round
noproblem team added several test cases and the coverage was seen to increase
noproblem yes the code addresses all issues
noproblem yes refactoring   did not impact on the existing operation at all
noproblem the system operation works as intended
noproblem yes this is a refactoring project and the ui works as it is supposed to after their code changes all the functionalities seem to be intact good job there
noproblem the system operation works as intended from the link provided
noproblem the team has explained the issue and the solution they chose with enough      details to understand to way of implementation
noproblem overall it is well written they can add reference section where they can put the link to the project etc
noproblem the write up is to the point and explains their approach neatly the team has made efforts to update the write up with the provided suggestions and it has improved the write up
noproblem the writeup was elaborate and fully elucidated the test added and the removed methods and sql lines and their scope   
noproblem i strongly believe that this code is ready for production server
noproblem changes are working perfectly
noproblem i think this code is ready to go because it is better organized and structured than it used to be
noproblem i think that it is a neatly written code and once the integration issues have been resolved it should be ready to be deployed on th production server    the code being readable can be easily picked up by the future team
noproblem build is passing on travis ci there are no pending conflicts
noproblem ignoring this question since it is an oss project
noproblem though there were several build fails during the first round which seem to have been triggered   on bundle exec the final build passes in travis ci
noproblem the code is not altered much but it follows the standards and not changed in the second round
noproblem code is written well with simplified approach naming conventions are standard without long functions dry principle is followed
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem new code commit was not made in second round
noproblem could not see any commits after the last submission as functionalities were working fine but team could have worked upon improving test coverage
noproblem no no new code was committed during 2nd round
noproblem no commits
noproblem no new code was committed during the 2nd round
noproblem team s last commit was on oct 31st which was the first deadline
noproblem good job on the test cases
noproblem yes test cases were written for admin_controller and roles_controller the test cases increased the coverage as well every method in these files are tested and covers a good range of this project
noproblem when open from the ui working fine and as expected no refactoring required   
noproblem yes the system operation works well all the functionalities mentioned work properly
noproblem code works
noproblem yes the system works fine and as intended the features work as they are supposed to
noproblem they had to create a superuser who has a right to delete other users when checked these functionalities were working upto 80 expectation the tests written do cover the portion assigned to them and the tests are thorough
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem very well written
noproblem the write up is well organized but it would have been better if some screenshots were uploaded along with the steps that would have made the document easier to understand
noproblem the writeup is short and precise has everything that is needed for testing and understanding and kept the writeup small for better understanding they have mentioned about their dry principle within changes itself mentioning it as a separate sub topic will give more visibility is what i felt other than that everything is self explanatory
noproblem the writeup is well written it covers almost all the work done however one suggestion would be to include more details about hoe the tests were done i just one small portion dedicated to explanation of rspec and not the work implemented
noproblem no it should go through more edge cases testing
noproblem as mentioned above the functionalities work well so yeah this can deployed on the production server
noproblem after fixing the issues suggested by code climate the code can be deployed
noproblem pull request build passed well and there are no issues
noproblem the pull request has passed the travis ci
noproblem the overall structure of the code looks good and all the coding standards have been followed
noproblem yes coding practices seem upto standards
noproblem yes it can be deployed and is a good starting point for teams in the future
noproblem i think the code can be merged all the test cases seem to cover the edge cases and my testing shows that the things function as expected
noproblem the code is well written and well commented and follows ruby style guide
noproblem yes it is ready to be deployed
noproblem code looks okay suggestions for improvements not done    build still fails     
noproblem they don t have code problem for the first round
noproblem no the new code was not committed during the second round this could be due to the fact that the team finished their code at the end of the first round itself
noproblem doesn t seem to have new commits in round 2 last commit was on 2nd november
noproblem the last commits were 12 days earlier hence no new commits were made during the second round
noproblem no new code was committed in the second round
noproblem no new code was added nor was any necessary
noproblem yes they were made
noproblem no new commits last commit was on nov 2nd before the first review
noproblem yes 1 checkin was done on nov 2nd     
noproblem the code was already delivered in the first round hence no commits this round the author has regularly pushed commits   
noproblem no new commits   
noproblem travis ci says tests have failed but these don t include the tests written by the team
noproblem no new commit during second round
noproblem the travis ci build passed the code does not have any conflicts with the master initially stage 1 a lot of changes were made so that the travis ci build would pass kudos for effort
noproblem yes the team did add test cases to test their changes and their overall test coverage has increased
noproblem the code seems to same as before nothing new has been added
noproblem the code has passed the travis ci build has passed the danger build has also passed with one warning because of more that 500 lines of code on the other hand the codeclimate build has failed with 7 issues to fix    1 there is a method get_feedback_assessments_for which has a cognitive complexity of 9 which exceeds 5 and must be refactored 2 the model class team contains 21 methods which is more than the 20 allowed and hence has to be refactored 3 the method view_heatgrid has 28 lines of code that exceeds the allowed 20 and hence has to be refactored 4 the method set_content has a cognitive complexity of 6 which exceeds the allowed 5 and hence has to be refactored 5 presence of an unescaped model attribute in the file app views response view html erb 6 assignment branch condition size for get_feedback_assessments_for is too high 7 indentation issues in app models assignment_participant rb there are no conflicts with the base branch
noproblem yes the team did add test cases and the coverage increased too but the team didn t put any efforts after the initial review round since the failed tests are still failed and there are no new commits since 12 days
noproblem the build has passed and there have not been any conflicts
noproblem the team has added test cases and they cover all the required functionality the code coverage has increased by a small amount
noproblem the ci build has passed and there are no conflicts
noproblem many test cases were added with overall test coverage increasing for the project
noproblem they did add the test cases but the coverage only increased by 3
noproblem overall coverage increased 0 3 to   37 074 good work on including test cases the app works fine after testing the newly added tests cover the scope of this project very well
noproblem team has added many tests coverage has increased from 1 to 38 which is impressive   
noproblem the testing has been implemented and looks well implemented
noproblem yes they add test cases and the coverage is the same as the first round
noproblem yes everything does seem to work properly   
noproblem seems to be working as intended but all the features have not been implemented the documentation mentions future work but no new code has been added
noproblem yes the project did work as intended the video demonstration and manual testing were enough to prove this fact
noproblem the system works well all the functionality has been implemented i ran the project and it worked as intended the back button issue in ui has been fixed
noproblem yes it works as intended
noproblem yes  
noproblem yes as mentioned in the problem statement the solution is delivered it works fine   
noproblem yes everything works
noproblem the functionality works and is evidenced by the video
noproblem a lot of outdated approaches were used refactoring was needed
noproblem the code was written pretty well
noproblem no commits needed after first review
noproblem no new commits no new bug fixed
noproblem    the last commit was 12 days ago i believe that this team had finished their work well before round 1 itself i think they had planned the work well in advance and followed that plan as well
noproblem there were really few commits in the 2nd round the only commit i could see was on 30th october the only suggestion i would give is to continuously update their work on git   
noproblem there is no new commit during the 2nd round
noproblem no new test cases added but the existing ones had a good coverage too
noproblem overall test coverage   was decreased by 35
noproblem no need for adding new test cases as the previous submission already achieved 100 coverage i apologize for not being certain how to accurately answer this question
noproblem they didn t add test cases but the test coverage is always above 90
noproblem there are no new tests and that is because the team had already completed their work before deadline 1 and the coverage was 100 on the deadline one itself so there is basically no scope for improvement for this team
noproblem the team did add test cases they achieved a little more than the desired coverage even that means they have done a great work
noproblem the team added test cases for menu rb and the coverage increases but the overall coverage seems decrease due to that
noproblem from the video the functionality works well
noproblem n a this is a unit test project
noproblem yes the tests cover all the scenarios
noproblem the tests cover most of the scenarios as is evident from their mutant killing capabilities
noproblem the team was asked to write test cases and get a coverage of around 90 the team did a really good job in writing test cases for all the methods present in the assigned files
noproblem the project has a good coverage of the codes  
noproblem the writeup is well documented
noproblem the write up is very informative and clearly shows the impact and result of the project tests it would have been a great addition to have included more discussion on the design choices of your testcases and how it was implemented overall a great wiki
noproblem the writeup is pretty good and easy to follow
noproblem i loved the write up write from the beginning to explaining expertiza to explaining their task and the test plan which was very detailed and methodical i also like that they had included a screen shot of the mutant test which shows the thoroughness of their tests overall an impressive job by the authors
noproblem the writeup is well written and clearly tells the flow and method of working it shows clearly what all work is done and how it is done it mentions specifically the explanation of each functionality and how it is checked
noproblem the writeup gives an easy understanding introduction of the two classes the team needed to test also there is detailed test plan is provided the wiki also shows how the test cases are designed and the results however for the motivation part it is a little bit general which needs to add more things specific for this project
noproblem a lot of refactoring is required before the code goes on to production server
noproblem the team gives a good guidelines for how to test and what to test for the two classes
noproblem travis ci failed
noproblem the travis ci build failed
noproblem i think the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem    the code is extremly well written
noproblem videos and code explained very well
noproblem yes some of the issues were fixed
noproblem the code was written clearly dry and intuitive to follow the intended functionality
noproblem yes rspec   and few changes were committed
noproblem yes a lot of commits were made mostly to fix the issues pointed out by the ci tools
noproblem yes there were many parts of the code committed during round 2
noproblem 5 new commits were made during second round
noproblem yes
noproblem the team has a really good job of committing their code on a regular basis there has been some code commits even in the 2nd round   
noproblem yes there were few new commits
noproblem yes the team actively committed to the project during the second round
noproblem the team seems to have thoroughly tested the use case and the coverage has increased
noproblem yes the team has added test cases and it covers all the functionalities and issues
noproblem video showing test cases passed good job
noproblem yes the team has included the relevant test cases to test their changes and the overall coverage has increased by 0 04 which i think covers the scope of this project
noproblem coverage increased by 0 04
noproblem yes the team did add test cases that increased coverage they are appropriate for the scope of the project
noproblem my testing shows things seem to be working as expected and documented
noproblem the deployment link hasn t been provided though they have put videos for the same
noproblem it works as intended
noproblem yes code works
noproblem from the video links that have been shared it is very clear that the features are working as they were supposed to even the test cases are passing i see no issues with this part
noproblem looking from videos all the intended features work
noproblem yes the code works has expected it accepts the utf 8 codes now and also parses html tags in reviews like expected
noproblem the write up is well written explaining all the steps undertaken to make desired changes and displaying how the system works after   the changes have been made with screenshots they have also added test plans in the wiki page
noproblem pretty nicely written wiki test plan also describes how various tests were performed
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem yes the write up is good if they were able to host it d have been better for checking the work   
noproblem the write up is well written elaborate and clearly elucidates both the manual test cases considered as well as the automated tests implemented screenshots of both cases were also included as well steps for manual testing were clearly written
noproblem the team has considerably improved the write up the write up was very inefficient and dint provide details of the code base also the video was encoded and impossible to view in round 1 the team has rectified all these issues with round 2 they have documented their fixed more clearly with screen shots and code this time   
noproblem it can be deployed but first it should be tested thoroughly   
noproblem i think the changes are tested nicely and seem to cover all the necessary cases this can be merged into the master branch and is ready for production use
noproblem its ready to be merged
noproblem in my opinion this team has done pretty good work and the code looks like ready to be deployed on the production server
noproblem yes just fix the few issues present and that should be fine for it to be merged into main line as the feature seems to work and there isn t any major code issue
noproblem pull request build passes well and there are issues
noproblem the build has successfully passed the travis ci test and there are no merge conflicts present in the pull request however there were a few code climate issues which i think can be easily fixed
noproblem the travis ci test passes
noproblem the build passed in travis ci with no conflicts
noproblem the write up is good contains lots of pictures to show the added functionality i found the test steps a bit confusing and it made validation hard
noproblem the writeup is well written and self explanatory   
noproblem documentation mentions the steps problem statement solutions and screenshots the description are detailed however i feel there is no need to give screenshots for tests written   
noproblem the writeup is great in first round they did not have a test plan part but they added it in the second part
noproblem the code looks good
noproblem no its not as the coverage is increases by small amount
noproblem build fails that needs to be investigated once that is done i dont see why the project cannot be merged with the mail branch loot of good work has been done and merge with the main branch would bring the work to fruition   
noproblem code is short variables and functions are well named
noproblem the code is very well written there are no bad names long functions or any lack of comments the code written by the team is self explanatory
noproblem the code follows the dry principles correctly
noproblem the variables methods and class names are aptly named i could not find names which are not suggestive of functionality i the writeup is well written and easy to read and well commented ii it is adequately descriptive of the work done iii explanation of reasons for the style of code and problem solving approach is lacking
noproblem the code is concise and easy to understand the team has provided comments to explain the logic of the new function created which really helps
noproblem the code was well written in the first round itself and followed good coding standards
noproblem the code was already well written no changes were suggested in the first round the team did a great work in following coding best practices   
noproblem a few bug fixes were made after the first round of submissions
noproblem there were only 2 commits made during the second round however the team had mostly implemented most of the functionality during the first round maybe due to which there are less commits in the second round
noproblem the ui and system operations works well as intended they newly added features works perfectly as they are supposed to do
noproblem everything works as expected except for the case mentioned above
noproblem some of the functionalities have been implemented but the pull request is yet to be merged with the master branch
noproblem the write up clearly mentions how to check test the work done by the team it includes almost everything the team has changed during their project    it clearly mentions the filenames where the changes have been made all the references are also included in the write up   
noproblem the team has provided an excellent write up with proper explanation of the problem statement and the solutions they have provided the team has also included   a video which make things really easy to understand the team has shown navigation structure of the expertiza menu which makes the workflow clear
noproblem nice work
noproblem all passed
noproblem yes they have passed the travis ci
noproblem very nice code easy to read and understand
noproblem the code written by the team satisfies the basic functionality expected the team followed the comments from previous round of using good naming conventions for certain variables
noproblem yes new code committed during the 2nd round
noproblem yes new commit is done for second review
noproblem yes the team covered 100 of the code they had to test also the video given in the link was very informative and helped to understand the implications of the work done by the team to a far greater extent
noproblem the coverage is 100 since the first round it seems there s no newly added tests
noproblem 100 percent coverage
noproblem coverage was already at 100
noproblem they reached 100 at first round
noproblem yes the team covered all the scenarios i could have come up with i specially appreciate the work that they ve put into the import functionality they have come with with more scenarios than i could   have even thought of and tested it pretty thoroughly   
noproblem the project successfully covered all the scenarios
noproblem nil test were added all scenarios are covered
noproblem very nice writeup
noproblem the write up is well written in my thought it is clear and understandable
noproblem the team has presented a working deployment to be possible it passes most of the builds and can be deployed on the production server   
noproblem yes the travis ci is passed no conflict that are remain do be resolved
noproblem the build passed in travis ci
noproblem travis build passed
noproblem the code looks good with the standards followed the changes are explained in the wiki for the same also the video has been uploaded but doesnt seem to have the audio with it
noproblem the code is perfect right now
noproblem yes through their commit record i have seen some improvement
noproblem well written code
noproblem yes they have improved after the last review
noproblem yes the code is perfectly fine and is a great start for the team which would come in the future to follow up with the work on this
noproblem i dont seem many commits for round 2 but yes the video has been added for explanation also the wiki is pretty well explained with the code
noproblem yes there s new commits
noproblem yes new code committed during the second round
noproblem yes if must be they must need more test cases ot cover some edge cases
noproblem yes according to the commit record they have commit new code during the 2nd round
noproblem yes
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the second commit is perfect it got perfect coverage but it seems that the 100 coverage was so since the first round but the new commited   code as better code style and no more indentation issue
noproblem 100 percent coverage
noproblem the code was well written following the principles
noproblem yes they have added some test cases and coverage increased
noproblem 100 coverage achieved great work
noproblem the team did a great job in   increasing the test coverage to 100
noproblem the code coverage is 100 every test case passes after a manual check
noproblem yes code is well written
noproblem yes it works as intended   
noproblem this is a testing project the tests have covered all the scenarios possible
noproblem the code is well written and follows all the dry problems    the team has changed the files based on previous reviews and to make it more dry comments before the methods that they created gave a better understanding what each code does function for showing warning when number of slots is set as zero    changing the names that suited the functionality more is appreciated addcreatetopicsection appendcreatetopicsection   
noproblem great writeup
noproblem the document is well written with all the required details
noproblem meaningful test
noproblem there does not seem any issues with the code the team has properly used the naming convention and has provided comments wherever necessary
noproblem the build can be definitely deployed once the travis ci issue has been fixed suggestion rectify the travis ci issue
noproblem few new commits are made
noproblem there has been 2 commits made in second round one for adding comments and another one for fixing   issue 926 the sorting of topics by topic number in assignments
noproblem fantastic wiki extremely informative about your project   
noproblem 3 new commits
noproblem properly   done in round 2 also
noproblem the team has done few commits one was on few sort fixes while they other was on refactoring
noproblem the team has added some new commits which are about the added comments the team has picked up the suggestion from the previous review to add comments for better readability which is commendable
noproblem a commit was done in second round addressing issues from reviews
noproblem yes for production code itself is perfect
noproblem the overall coverage decreased but not significantly it reduced by 0 01
noproblem the writeup is complete and comprehensive in that it fully covers the given functionality it clearly and adequately indicates the working functionality
noproblem no new tests were written for this functionality   
noproblem no new tests
noproblem the writeup is written in a verbose manner the test plan is also mentioned    no suggestions   
noproblem yes team has added the test case
noproblem written up is also a brilliant work
noproblem as mentioned above the team did a really good job at this the writeup talks in detail what all tests did the team implement and from the pull request we can make out that the team was pretty consistent with their efforts   
noproblem yes it works as intended
noproblem unfortunately i could not see any code written by the team for testing however the team has provided a description on how some of the edge cases have been handled according to coveralls the overall test has decreased by 0 01 this could be one of the major topics for improvements with regards to this issue
noproblem tests have been thoroughly and very well performed also well documented   
noproblem yes the features work as described in the problem statement the team has done good job and has fixed all the below issues issue 971 change create topic ui into ajax issue 926 we need a way to sort topics by topic number in assignment edit page issue 718 we should allow instructors to give feedback when accepting or rejecting topic suggestions
noproblem the code works as required
noproblem the new features work as expected
noproblem as explained in the video the build seems to work fine
noproblem yes it passed all the pull requests
noproblem the working is perfect everything works as intended the team has explained this in a brief manner in their youtube video
noproblem system works as expected and this is evidenced by tests and videos
noproblem the build successfully passes travis ci
noproblem the write up is informative and provides all necessary details of the changes made
noproblem yes everything works well done
noproblem all scenarios mentioned in the writeup are properly covered
noproblem    they covered all the scenarios
noproblem the write up is impressive and very detailed it has been documented well which helps to understand about the project and the code implementation it also provides detailed test plan which makes it easier for end user to do ui testing
noproblem the code coverage of 100 satisfies the minimum criteria it works as intended which can be seen in the video the tests covers all the scenarios for passing them   
noproblem the tests execute perfectly well and this has been demonstrated by the video no suggestions
noproblem cover all
noproblem the writeup is well organized and well documented
noproblem this team already had full coverage i am not sure how to answer this question as new tests were not needed   
noproblem yes the team did added test cases which have been clearly mentioned in the write up although the results image isn t clearly visible but it is still enough to figure out the team passed 100 of the test cases
noproblem yes they have add some test cases and the coverage increased
noproblem the commits show equal contribution by all team members
noproblem the team s project is unit testing the menu rb model file hence they added rspec test code in spec models menu_spec rb the pull request indicates that the overall coverage increased by a significant 5 5 the report tells cites that 5779 lines have been covered and 13673 lines are relevant
noproblem well written with understandable content
noproblem the code was very well written and up to to servo standards
noproblem writeup is very detailed and well written it is supplemented by enough code pieces and reasoning and good amount of pictures and videos to explain what the team   has done in detail
noproblem this code seems to be well structured and written
noproblem    i think with proper testing this code is ready to be deployed onto the production server
noproblem commits were made in second round  
noproblem yes it was committed and the changes were merged
noproblem yes new code was added and committed during the 2nd round that implements oscillator node example to exercise different oscillator types and generate triangle waveform
noproblem the code has passed the travis test and has addressed   all the issues of the change request the code should be production ready after adding few more edge test case scenarios      
noproblem yes new commits were made during the second round
noproblem no new test cases were added
noproblem yes the code can be deployed to production
noproblem i don t see any tests in this project
noproblem the team s test plan includes running the oscillator binary file using the command oscillator this will run the oscillator rs where various oscillator nodes corresponding to sine square sawtooth and triangle waveforms are generated hence the user will be able to listen to these waves after a definite interval
noproblem it s working
noproblem apart from some code climate change the code seems to be ready to merged
noproblem i m not really sure how to categorize this project but it seems to be structured and implemented properly
noproblem the writeup was really well explained
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem well written and self explanatory
noproblem the writeup starts off by introducing servo mozilla s experimental high performance browser engine and rust which is a systems programming language with memory safety and concurrency used to build servo it then moves over to web audio api for handling audio operations inside audio context and allow modular routing and a workflow for implementing web audio was clearly listed it then flows into the scope of the project and the implementation the graphical and mathematical representation of the sine square sawtooth and triangle waveform gave a solid conceptual foundation the code snippet of the changes done in oscillator_node rs and the new file oscillator rs created by the team has also been included the section build that explains the procedure to install dependencies rust step by step procedure for building and running the build was very useful to explore the project the team had included the build instructions for windows and debian based linux they could have augmented the build instructions for mac os x which might save mac users from reading verbose instructions on the official documentation and instead refer to a single source the wiki the authors end the wiki by providing the test plan with examples of generated sine square sawtooth and triangle waveforms as audio files pull request and references
noproblem no new added tests but the team had managed to get 100 test coverage in first round
noproblem yes the travis ci build is passing successfully   
noproblem the commits show equal contribution by all team members
noproblem well written with understandable content
noproblem the code was very well written and up to to servo standards
noproblem the writeup is very detailed and gave me a good idea of what was going on with this project
noproblem this code seems to be well structured and written
noproblem commits were made in second round  
noproblem yes it was committed and the changes were merged
noproblem yes new code was added and committed during the 2nd round that implements oscillator node example to exercise different oscillator types and generate triangle waveform
noproblem yes new commits were made during the second round
noproblem no conflicts and build passes
noproblem    they add test cases for the first round and the coverage increases however they did not add more in second round
noproblem it is already deployed on the production server
noproblem no test cases present but test plan covers it
noproblem the project is in great shape and has already been merged to the servo repository on github which means that it is production ready the team has fixed the few formatting issues pointed by a servo team member    the approach taken up by the team is in line with what is expected of them and it is a good start to advance the webaudio api of the servo browser engine in the future
noproblem yes no conflicts at all which needs to be resolved
noproblem i believe this code is ready to be deployed and if it isn t it can definitely be picked up in the future
noproblem the team did not add or improve any team cases from the first round the full path coverage of 100 was already achieved in the first stage
noproblem yes the travis ci has passed
noproblem the build has passed in travis ci and no conflicts have occured
noproblem the build passes and there are only minor warnings and issues which can safely be ignored
noproblem coveralls shows the following overall coverage increased 5 5 to   42 266 the coverage of menu rb has increased to 100 great job team no suggestions
noproblem the team s test plan includes running the oscillator binary file using the command oscillator this will run the oscillator rs where various oscillator nodes corresponding to sine square sawtooth and triangle waveforms are generated hence the user will be able to listen to these waves after a definite interval
noproblem it s working
noproblem 100 coverage
noproblem this project doesn t involve the ui it focusses on audio processing by fixing the missing audio nodes in servo s webaudio standard precisely it generates the sine square sawtooth and triangle waveforms the code that was modified and included from scratch works as intended   
noproblem 2 commit during 2nd round
noproblem i m not really sure how to categorize this project but it seems to be structured and implemented properly
noproblem as mentioned earlier no new commits were added by the author
noproblem yes this team has been keeping push new commits during the 2nd round
noproblem there was a commit during the 2nd round this was made after the user codeclimate pointed out a few issues with respect to the indentation and lengthy code   
noproblem yes new commits were added in the second round to fix the code climate issue
noproblem yes the code climate issues were resolved
noproblem no new commits were found but this was because the project was already done and did not need any changes    no suggestions
noproblem the writeup is very detailed and gave me a good idea of what was going on with this project
noproblem modify some to make it drier
noproblem there are some new commits in the 2nd round
noproblem their code is pretty good and they solved most of the problems
noproblem well done 100 cover   
noproblem the writeup was really well explained
noproblem the code is well written no suggestions
noproblem the code follows the ruby style guide and makes good use of the better specs documentation for writing rspec test the team has also made an extensive use of the describe and construct contexts which helps to understand the code written
noproblem    they do not have these problems in the first round               
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem well written and self explanatory
noproblem i believe this code is ready to be deployed and if it isn t it can definitely be picked up in the future
noproblem the project is in great shape and has already been merged to the servo repository on github which means that it is production ready the team has fixed the few formatting issues pointed by a servo team member    the approach taken up by the team is in line with what is expected of them and it is a good start to advance the webaudio api of the servo browser engine in the future
noproblem it is already deployed on the production server
noproblem this is not an expertiza project but the pull request does pass
noproblem not an expertiza project
noproblem the code was not much changed after the first round they added a few more sanitation check and rspec functions are not long enough and understandable
noproblem i think the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem    the code is extremly well written
noproblem videos and code explained very well
noproblem yes some of the issues were fixed
noproblem the code was written clearly dry and intuitive to follow the intended functionality
noproblem yes rspec   and few changes were committed
noproblem yes a lot of commits were made mostly to fix the issues pointed out by the ci tools
noproblem yes there were many parts of the code committed during round 2
noproblem 5 new commits were made during second round
noproblem yes
noproblem the team has a really good job of committing their code on a regular basis there has been some code commits even in the 2nd round   
noproblem yes there were few new commits
noproblem yes there were some commits fixing the travis and code climate issues
noproblem yes the team actively committed to the project during the second round
noproblem the team seems to have thoroughly tested the use case and the coverage has increased
noproblem yes the team has added test cases and it covers all the functionalities and issues
noproblem no new test cases were added
noproblem video showing test cases passed good job
noproblem yes the team has included the relevant test cases to test their changes and the overall coverage has increased by 0 04 which i think covers the scope of this project
noproblem coverage increased by 0 04
noproblem automated and manual tests have been added and coverage has increased by a very tiny amount
noproblem yes the team did add test cases that increased coverage they are appropriate for the scope of the project
noproblem yes the team has added test for the utf encoding acceptance the coverage is not 100 and not tested with varied inputs but i believe would suffice for sanity check although the description of test in rspec file is ambiguous not clearly mentioning what exactly the test is expected to do there is no test available for the issue 2 documented
noproblem videos provided and the project is not deployed so cannot test from ui but the issues are fixed and the system is working as expected   
noproblem my testing shows things seem to be working as expected and documented
noproblem the deployment link hasn t been provided though they have put videos for the same
noproblem it works as intended
noproblem yes code works
noproblem from the video links that have been shared it is very clear that the features are working as they were supposed to even the test cases are passing i see no issues with this part
noproblem looking from videos all the intended features work
noproblem yes the code works has expected it accepts the utf 8 codes now and also parses html tags in reviews like expected
noproblem the write up is well written explaining all the steps undertaken to make desired changes and displaying how the system works after   the changes have been made with screenshots they have also added test plans in the wiki page
noproblem pretty nicely written wiki test plan also describes how various tests were performed
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem properly explained write up with old and new changes
noproblem the writeup i must say has been one of the best i have seen   so far it clearly mentions all the issues that they were facing and were asked to tackle the solutions are well documented as well the screenshots help in understanding the problems that they fixed
noproblem yes the write up is good if they were able to host it d have been better for checking the work   
noproblem the write up is well written elaborate and clearly elucidates both the manual test cases considered as well as the automated tests implemented screenshots of both cases were also included as well steps for manual testing were clearly written
noproblem the team has considerably improved the write up the write up was very inefficient and dint provide details of the code base also the video was encoded and impossible to view in round 1 the team has rectified all these issues with round 2 they have documented their fixed more clearly with screen shots and code this time   
noproblem it can be deployed but first it should be tested thoroughly   
noproblem i think the changes are tested nicely and seem to cover all the necessary cases this can be merged into the master branch and is ready for production use
noproblem watching the videos i feel it is ready but no deployment link
noproblem as it did not pass the test it is not ready for a future team end of this project should be a good starting place
noproblem its ready to be merged
noproblem in my opinion this team has done pretty good work and the code looks like ready to be deployed on the production server
noproblem according to write up it s good to go but since there is no deployed link i couldn t manually check
noproblem yes just fix the few issues present and that should be fine for it to be merged into main line as the feature seems to work and there isn t any major code issue
noproblem i believe this change that affects the system as a whole needs more test to be performed in all affected tables and functions to be sure no other part of the system is broken my opinion is that once all parts of the system test is done corresponding to this centralized db change the code can be deployed to production
noproblem build did pass successfully could have written version specific code to avoid errors
noproblem pull request build passes well and there are issues
noproblem no it did not pass travis ci and there are many conflicts that must be resolved
noproblem few minor issues with the build which can be ignored
noproblem the travis ci test passes
noproblem the build passed in travis ci with no conflicts
noproblem not all changes has been verified successfully few code climates rejects has happened as well   
noproblem the code was already delivered in the first round hence no commits this round the author has regularly pushed commits   
noproblem team has added many tests coverage has increased from 1 to 38 which is impressive   
noproblem yes as mentioned in the problem statement the solution is delivered it works fine   
noproblem the last commits were 12 days earlier hence no new commits were made during the second round
noproblem yes the team did add test cases and the coverage increased too but the team didn t put any efforts after the initial review round since the failed tests are still failed and there are no new commits since 12 days
noproblem yes the project did work as intended the video demonstration and manual testing were enough to prove this fact
noproblem the code is well written and well commented and follows ruby style guide
noproblem very good guidance works as intended this project is about enhancing juniper bookmarks the features work as they are supposed to automated rspec tests were added could have described the automated tests in the wiki
noproblem no issues codewise can add test cases and after thorough testing it can be deployed yes other team can take up and fix the minor issues and build pass
noproblem the write up is very detailed with comparisons between previous and new versions as to what features have been implemented but lacks on explaining how they are implemented it can be improved by adding how the features have been implemented why they chose this logic to implement the features
noproblem they don t have code problem for the first round
noproblem no new commit during second round
noproblem yes everything works
noproblem the writeup is great in first round they did not have a test plan part but they added it in the second part
noproblem no new commits   
noproblem the testing has been implemented and looks well implemented
noproblem the functionality works and is evidenced by the video
noproblem no i do not think the code is ready to be deployed i found the code change hard to understand there are no comments and neither has the logic or rationale behind the new changed code been given in the wiki besides the build fails and there are a host of issues that   need to be fixed    although all this might only be trivial issues and can be fixed rather easily the code as of now is not deployment ready   according to me   
noproblem yes 1 checkin was done on nov 2nd     
noproblem yes  
noproblem no new code was committed in the second round
noproblem the writeup needs significant improvement no clear explanation is given as to which files are edited for which reason only file names are stated along with changes made why the changes were made and what do those changes correct is not given this review was given by me last time and no improvement has been made in this regard
noproblem yes coding practices seem upto standards
noproblem doesn t seem to have new commits in round 2 last commit was on 2nd november
noproblem seems to be working as intended but all the features have not been implemented the documentation mentions future work but no new code has been added
noproblem no all the features have not been implemented e g 1 a reviewer can be recognized or credited if he added useful bookmarks i e if the author has made use of the bookmark 2 a function to add badges automatically if a participant had submitted more than threshold number of useful bookmarks plus build did not pass as well
noproblem overall the quality of code is great there some variable which does not follow naming convection
noproblem yes they were made
noproblem yes there is one conflict that must be resolved to go ahead reported by travis ci
noproblem they did add the test cases but the coverage only increased by 3
noproblem yes it works as intended
noproblem the writeup is well written and self explanatory   
noproblem no its not as the coverage is increases by small amount
noproblem yes everything does seem to work properly   
noproblem since the travis   test has failed merging the code would not be a good idea the project doesn t need to be redone from scratch some modifications to the existing work   could make the project ready for deployment
noproblem there are a few issues regarding code repetition and extra white space especially in the controller rspec file
noproblem no new code was added nor was any necessary
noproblem many test cases were added with overall test coverage increasing for the project
noproblem it seems that everything works though it was hard confusing to find everything as per the instructions on the write up
noproblem the code looks good
noproblem very nice code easy to read and understand
noproblem the code written by the team satisfies the basic functionality expected the team followed the comments from previous round of using good naming conventions for certain variables
noproblem travis build passed
noproblem the build passed in travis ci
noproblem yes the travis ci is passed no conflict that are remain do be resolved
noproblem the team has presented a working deployment to be possible it passes most of the builds and can be deployed on the production server   
noproblem yes apart from the 7 issues of minor severity from codeclimate the code is perfectly well to integrate with the project no the project need not be planned and executed from scratch it is implemented well enough
noproblem the team has worked on improving the wiki document the writeup now includes the test plan section   that was suggested in the first round specifying the how the team setup an expertiza environment the model functions used and the mock instance built for testing the model file   
noproblem the write up is well written in my thought it is clear and understandable
noproblem very nice writeup
noproblem the system operation is verified and works as intended as demonstrated from the video    also all the test scenarios are covered
noproblem nil test were added all scenarios are covered
noproblem the project successfully covered all the scenarios
noproblem yes the team covered all the scenarios i could have come up with i specially appreciate the work that they ve put into the import functionality they have come with with more scenarios than i could   have even thought of and tested it pretty thoroughly   
noproblem build says the overall coverage decreased but the coverage of the   test has increased
noproblem the team did not add any test cases since they had achieved a 100 coverage in the first round itself however certain changes made to the test cases included using proper naming conventions for attributes and following the dry principle effectively throughout the model file
noproblem they reached 100 at first round
noproblem coverage was already at 100
noproblem 100 percent coverage
noproblem the coverage is 100 since the first round it seems there s no newly added tests
noproblem yes the team covered 100 of the code they had to test also the video given in the link was very informative and helped to understand the implications of the work done by the team to a far greater extent
noproblem yes new commit is done for second review
noproblem involves fixing code climate issues   
noproblem yes new code committed during the 2nd round
noproblem there s no upload for the local folder it seems that no new pull requests has been committed during the 2nd round so i would guess no new code being committed for the 2nd round
noproblem yes the authors have improved the code the team has worked on the issue which i mentioned in the previous review the code doesn t seems to be confusing now but it still needs proper commenting to be done   
noproblem they haven t made any change since round 1 review haven t changed the naming as well eg   topic_id1 doesn t seem right to me but other than 1 or 2 names everything else looks clean also you haven t added comments to you code you should add comments when working in a open source project
noproblem a few comments could be included in code to make it more clear
noproblem suggested changes related to naming convention are not included in the 2nd round    variable names rop_topic_deadline1 topic_id1 puts statements are not removed p topic_id1    other than this the code is properly written following coding best practices   
noproblem the code is well written i did not see any bad naming conventions or bad coding style   
noproblem there is only one commit made during the entire project there is no new code added during the 2nd round
noproblem there has been only one commit for the entire project
noproblem commits were made in second round  
noproblem no there was a single commit throughout the project period and that was during the 1st round
noproblem no commits were done in round 2
noproblem nothing changed since round 1 haven t added a shorter video or a video with sound haven t made naming changes
noproblem no the code was last committed   on oct 31st
noproblem there were no new commits in the 2nd round
noproblem i don t see any code changes after the first round
noproblem no need for test cases 1 for mentioning it in the wiki
noproblem no test cases present but test plan covers it
noproblem no the team did not add any test cases and the coverage did not increase the overall decrease was 13 6 to 34 007
noproblem no new tests were added and coverage has also reduced some ui testing could ve been done
noproblem they have mentioned that its ui   change and has been discussed that testing isn t required in there documentation but i think you should still have mentioned something there steps to follow to check how your changes work   
noproblem not required
noproblem test cases were not required for this project
noproblem the test cases were required as the chnages were related to ui the team mentioned the same in the wiki
noproblem yes the ui operations works as intended the features fixed now works as intended
noproblem it s working
noproblem since the project was deployed hence manual testing could not be done but the screenshots show that the project works as intended
noproblem the feature works as per the video shown
noproblem fro video it seems to work as intended
noproblem the link to the deployed application was not available so testing could not be performed
noproblem the video explains the new functionality and the functionality is working as expected good job
noproblem yes it works as expected
noproblem writeup has been improved after the first review the codes now look more comprehensive
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem the write was good and well written however it would have been better if some screenshots were also present in the writeup may be juxtaposing the screenshots of before and after of fixing the issues that would have made the write up easier to understand
noproblem the deployed link application again goes to video only if deployment isn t done they could ve removed the link
noproblem write up isn t good they have just added there code in the write up without explaining anything plus no comments in code code snippets in writeup are going off the page
noproblem the writeup is good and clearly explains the issues faced however instead of putting   in the code changed i feel it would be better to have screenshots of git commit history where we can see both the previous code and new code to get a good idea of what actually was changed
noproblem the write up is well written and organised everything looks fine the team should have mentioned about the approach taken to solve the mentioned problem statement which will make the implementation easier to understand also the team could have included few screen shots in the write up   
noproblem some improvements are required to deployed the code onto the production server the code should included proper commenting so that if the future team picks up from this project they could know what exactly the code is doing
noproblem it might be good to move the long function to smaller functions but the code looks clean and understandable
noproblem in my opinion the project is ready to be deployed and does not need to adopt a different approach
noproblem the feature seems ok but it can t be deployed yet with all pending issues
noproblem since the code coverage has decreased and the video demonstrates   a proper working
noproblem the deployed application was not available so it cannot be accurately predicted if the code functions as intended however the vedio   links in the google drive show that the issues have been resolved through existing code   
noproblem ll the checks are failing currently the changes have a lot of robocop issues as well which should be fixed also the ci build is failing at the moment some of the tests are failing because of the change   
noproblem code looks fine but build issue has to be fixed
noproblem the build is still failing and there are issues which needs the team s attention there is one warning and 1 error which needs to be fixed by the issue according to the error team should remove the debug code from the pull request
noproblem travis ci build is not passed though this was a bit common even for the second review the codeclimate issues are still showing
noproblem no the build did not pass in travis ci several checks had failed but there was no conflict
noproblem none of the tests travis ci code climate have passed
noproblem everything is failing code climate has 56 issues build is failing haven t made a change since round 1
noproblem the travis   test has failed and overall coverage has also decreased there were many errors in the build log of travis
noproblem all the checks including the ci build is failing
noproblem build is failing in travis ci
noproblem the code is perfect right now
noproblem yes through their commit record i have seen some improvement
noproblem well written code
noproblem yes there s new commits
noproblem yes new code committed during the second round
noproblem yes according to the commit record they have commit new code during the 2nd round
noproblem yes
noproblem the second commit is perfect it got perfect coverage but it seems that the 100 coverage was so since the first round but the new commited   code as better code style and no more indentation issue
noproblem 100 percent coverage
noproblem yes they have added some test cases and coverage increased
noproblem 100 coverage achieved great work
noproblem the team did a great job in   increasing the test coverage to 100
noproblem this is a testing project the tests have covered all the scenarios possible
noproblem yes it works as intended   
noproblem the code coverage is 100 every test case passes after a manual check
noproblem great writeup
noproblem the document is well written with all the required details
noproblem yes for production code itself is perfect
noproblem as explained in the video the build seems to work fine
noproblem yes it passed all the pull requests
noproblem the build successfully passes travis ci
noproblem the code seems to be good it follows the principle of good design even though i do not know rust the use of variable names was very intuitive
noproblem the code doesn t make sense to me someone who isn t familiar with this project but it does seem to be formatted well
noproblem some commits were made to rectify old errors and get an approved pull request
noproblem yes there is  
noproblem yes there new commits in round 2
noproblem several new commits were added during the second round
noproblem i don t see any tests added by this team although they do mention that their code additions were not particularly testable except with the existing automatic tests which they enabled
noproblem this is not an expertiza project
noproblem to test the system operation the project has to be built and run the sample html file was used to render a test canvas as given in the wiki
noproblem when tested the project does what was desired to be done
noproblem this system doesn t have a ui i can view as it seems to be a browser add on
noproblem write up is good    with code flow diagram and test plan pull request
noproblem the wiki is pretty much strong with plenty of info
noproblem the write up is lucid and has now incorporated the changes that were made in the round 2 it starts off by introducing servo rust offscreencanvas web worker web idl the authors then describe the code flow using a flow chart which was really appealing i especially liked the under the hood section which elucidated the files offscreencanvas webidl offscreencanvasrenderingcontext2d webidl offscreencanvas rs and offscreenrenderingcontext2d rs that they modified created in this project and their functionalities concisely the write up then includes the code from the above four files and finally ends with the test plan with 2 approaches links to pull request and references
noproblem the write up is good i liked the use of the flow chart to explain the flow of their code and explain the functionality i think that this was the first write up that used a flowchart
noproblem the writeup is the best part about the project it describes clearly what and how the work is done one can clearly understand their working strategy from the writeup
noproblem i m unable to get a really good idea of exactly what was done here for this project other than that it can be used as a display and rendering port and that it improves fail safeness of browsers
noproblem the code implementation is correct so with more edge test cases and after resolving the warnings in the travis test the code would be production ready
noproblem the code is well modularized and appropriate names are used for methods   
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem first review comment weren t addressed
noproblem new code was comitted
noproblem few commits can be seen during 2nd phase mostly are for test plans
noproblem yes new commits were added during the second round
noproblem no the last commit was on oct 21st
noproblem the code was committed frequently during the second round   
noproblem yes lot of code has been checked in most oct 31 good work  
noproblem the team added many tests they seem like they would have high coverage but with the failing build this cannot be confirmed easily
noproblem sufficient test cases added   
noproblem not able to get coverage from the log https coveralls io jobs 41685719
noproblem ui works as intended
noproblem the project is about improving email notifications    yes it works as intended screenshots of the code and changes made have been clearly described the tests cover all the scenarios      
noproblem the features work as intended and the emails are sent to the concerned party
noproblem the write up is good and it clearly explains what each portion of the changed   code is intended for
noproblem it is good starting place for future team to pickup
noproblem the code is ready to be deployed onto the production server and in fact    the project was even partially merged
noproblem no new test cases were added from the previous submit test cases already had full coverage so there was no need for additional testing i was unsure how to answer this question as the rubric says any new test cases added
noproblem all code is good a variable name was even improved during the second round
noproblem a small change was made but there wasn t a need for drastic additions   
noproblem all necessary code is passing the build
noproblem the video makes it clear that the tests work and are covering all aspects necessary   
noproblem the write up is still good
noproblem the code is quite good
noproblem the coverage was already at 100 but they did update it to pass the build
noproblem yes variable name changes suggestion was incorporated
noproblem travis tests have failed no conflicts the overall test coverage has improved
noproblem it is a testing project the overall test coverage has improved the tests thoroughly test the menu bar and the sub tress of menu bar sub menu options as per the requirements
noproblem no ui or functional changes are applicable all the 29 tests run successfully
noproblem it is very well documented no changes were required even during the first review
noproblem it improves the test coverage so once the travis tests pass it is ready to be merged with the master branch however no production deployment is applicable for test coverage improvement
noproblem nicely written   test cases
noproblem did not pass travis ci
noproblem not deployed
noproblem there is one new commit in round 2
noproblem yes the coverage is 100 already
noproblem the code written follows the ruby on rails best practices   
noproblem yes the team has made one commit during the second round they updated an ambiguous variable name
noproblem no the pull request didn t pass the travis   ci build but it doesn t have any conflicts with the base branch   
noproblem yes the team has added plenty of tests the test coverage increased to   100 whereas the overall coverage has increased by 11 4   
noproblem yes the test covers all the scenarios including testing values of variables   in the menu node and null case scenarios
noproblem the team has corrected a single bad name used in the tests there has been no change done to dry the code yet there test as mentioned earlier has few segments repeated throughout each test for ex the instantiation of menu object there has been no comments added for the code yet
noproblem yes there has been one commit in round 2 rectifying the bad name used
noproblem the code is well written the way the list function was split into multiple modular functions is appreciable a great amount of effort has gone into fixing the issues
noproblem new code added is written well with dry and no long or complicated functions i could see file updated has changes on line such as tab and space team could work upon indentation   
noproblem the code is well written no issues with naming conventions or coding style
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem the code is clean
noproblem overall only 3 commits are made during the entire project no new code was committed during the second round
noproblem the last commit is on 10 31
noproblem no new commits in the second round
noproblem no new commits
noproblem could not see any new commits after last change also commits distribution is not equal
noproblem no changes were committed in round 2
noproblem yes
noproblem no new test cases are written
noproblem test plan could be described better
noproblem team could have added test plan in wiki along with test covered and test description also could have worked upon increasing test coverage
noproblem test are written  
noproblem the team has added testcases but lacks coverage the overall coverage decreased by 10 6 to 37 063
noproblem no test cases are added by the team and overall coverage of the project is decreased by 10 6
noproblem the operations work as intended but need to have automated test cases
noproblem i could not get a deployment link or watch a video that demonstrates the work done so i m unable to test
noproblem i could neither test it manually nor there were any videos to check the functionality
noproblem write up is explained pretty well
noproblem i think the code need some amount of refactoring before it can be merged with the expertiza master and pushed to production some of the functions implemented by the team seem quite long and they should try and restrict the functionality implemented in each function to just one
noproblem the code seems very well written and approach seems correct if they improve the documentation and add test cases after thorough testing it should be good to be deployed as it stands another team in future can pickup the code and implement these improvements
noproblem yes the code has been written aptly and to the point the intention is clear
noproblem the travis ci build has failed
noproblem pull request is not passed as well as travis ci is also failed   
noproblem travis ci build is failing other things are fine
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code added during this project adheres dry principles   
noproblem the code was written at it s best
noproblem yes the code is well written
noproblem yes code is well written
noproblem the team has followed rails best practices while writing the code   
noproblem all coding principles are followed add more comments
noproblem no new changes were committed during the second round
noproblem no new commits were made during the second round
noproblem no they were no commits during round 2
noproblem no new commits
noproblem yes there are few commits after round 1
noproblem no the team hasn t committed   any changes during the second round the last commit was on 31st october 2018
noproblem no there were no commits made after oct 31st
noproblem the team did add test cases covering the functionality the overall coverage increased by 0 004    to 47 652
noproblem yes they did add the test cases and the coverage increased to 80
noproblem coverage is same  
noproblem yes it increases the coverage too
noproblem changes are covered with new test cases
noproblem i followed the steps as mentioned in the wiki and it works as expected
noproblem yes everything works perfectly fine
noproblem works properly
noproblem yes the ui changes according to the specified conditions after logging in as   a   student we can see the team name being displayed at the top of the page
noproblem the features for the issues fixed work as intended
noproblem everything looks fine to me
noproblem the writeup is great i was able to understand the issue and do manual testing
noproblem it was very well written and self explanatory
noproblem the wiki page has been written concisely the team has used screenshots which ease the understanding of the work they ve done   
noproblem the write up clearly explains the issues faced and the code fixes used to solve them
noproblem comprehensive
noproblem yes the code changes are simple and to the point i don t see any other way it could be done   
noproblem the user name issue seems to not have been resolved when tested manually the code may be deployable and would not cause a problem since there are not many complicated changes
noproblem yes the changes have passed all the   checks and can be deployed in production   
noproblem excellent   work
noproblem in good state
noproblem yes the build passes travis ci
noproblem the travis builds on both pull request have passed
noproblem no the test failed
noproblem there are no conflicts
noproblem yes the pull request has passed the travis ci build test and does not contain any conflict with the base branch
noproblem yes the travis build is passing
noproblem the code is well written and understandable   
noproblem the code is well written and has proper functions to handle each action not too long functions and names are aptly defined
noproblem the code seemed to be well written and properly commented comments made it very easy to understand the code
noproblem overall the code is written really well snake casing has been thoroughly followed and in case of javascript the camel casing is followed    no additional suggestions
noproblem yes code has been committed in round 2
noproblem last commit was on nov 6
noproblem few commits made in 2nd round  
noproblem no link provided but the videos shows that everything is working well
noproblem 2 issues are resolved and when checked from ui    features   are working as expected seems like no code refactoring is required   
noproblem manual testing could not be performed due to lack of project deployment but the screencasts show that everything works fine
noproblem the ui seems to work as it should at least from the writeup   
noproblem the writeup is great and descriptive i could find all the info i needed
noproblem the writeup is very explanatory with all the screenshots attached which helps in better understanding
noproblem the write up is well written and explain the features that the team has implemented in a verbose manner    the writeup mentions solution description which gives a walk through about what steps were taken to implement the functionality    no suggestions
noproblem the team has definitely resolved one issue this could be a starting point for future teams
noproblem yes the code is written aptly and to the point i don t see any issues
noproblem yes just a few test plans needed and the code can be deployed on production server   
noproblem this code can be deployed after solving the issues generated by travis ci
noproblem the approach seems to be correct and the writeup ready to be deployed
noproblem this is a code and project that has been honed into perfection the team has shown due diligence and taken care of long and complicated functions and somewhat shaky coding style from the last submission they have refactored the code to perfection thus fulfilling all their objectives   
noproblem the overall structure of the code looks good and all the coding standards have been followed i feel like there could have been more comments to support the large amounts of changes that have been made
noproblem the code follows the general guidelines for standard rspec practices and also keeps the dry principle in check it makes a good use of names to specify what each attribute is assigned for
noproblem no new commits were committed for the second round it was cleaned up 13 days ago
noproblem no new commits were made during the second round the latest commit was on october   31st
noproblem there was   a substantial amount of commits done in the first   phase of the project but i don t see any commits in the second phase this could very possibly be because the team might have completed the requirement in the first phase itself
noproblem yes an excellent job in that regard they have first explained their test plans then even provided links to their rspec tests which i checked then they have run and shown their screenshots of the rspec tests going through successfully   
noproblem according to the screenshots uploaded by the authors the features work as they are supposed to new questionnaires   have been successfully created
noproblem yes the code has been refactored to cover all the intended scenarios and the tests have been very well document along with testing the edge cases as per their approach the first segregated   the tests for questionnaires_controller into two test files questionnaires_controller_spec and quiz_questionnaires_controller_spec and separated the tests for crud operations of quiz_questionnaires_controller into the quiz_questionnaires_controller_spec renaming them from view_quiz create_quiz and the like to view and create    this in my opinion is a thorough   enough   test   
noproblem the system works as intended the project required to make the features work such as removing hardcoded parameters as save_choice method replacing switch statements with subclass methods and creating models for the subclasses   
noproblem extremely well written wiki page thorough and to the point with enough technical content and relevant screenshots pertaining to the before and after scenarios of the problem statements   
noproblem the writeup has been pretty well written by the team introduction to the problem statement the implementation details and the test plans have been stated      
noproblem the writeup gives a gist of the work carried out by team throughout the project the team added the test plan section describing the testing procedures carried out it is also structured nicely allowing the reader to understand the project in it s entirety
noproblem surely once the code is sufficiently tested by the tas then it is can surely be implemented as a change even so the travis ci and the overall coverage should be verified first going by their page it is a finished project and hence no use giving it to the next semester as a project   
noproblem the code has been working fine and once the integration conflict is solved seems ready to be deployed the future team will be able to pick up from where the current team has left
noproblem there is significant improvement in the write up after the first round it gives good idea of the project
noproblem the code changes seem to be fine i do not see any problems regarding the code as it is pretty well explained in the wiki as well
noproblem overall the code was well written as mentioned earlier the only change the team had to make was add color codes hence no mistake was made in the first round itself good job
noproblem everything seems good
noproblem css snippets are still written inline no changes were made after round 1
noproblem code looks good there weren t many changes and mostly are html changes so no commenting is required as such as well   
noproblem the code was very well written however that should be a given considering the complexity of the project which wasn t a whole lot
noproblem code is still using dry principles
noproblem no new commits were made during round 2
noproblem the last commit was made 9 days ago as per the given link there were not many changes required so seems fine
noproblem i can not see any new commits in second submission as the functionality was working properly in first submission itself
noproblem new commits were not added in the 2nd round in my opinion they were not required as well as the team completed their task in the first round itself
noproblem no new content was necessary during the second round
noproblem no there were no new commits due to the fact that were no changes to be made
noproblem yes
noproblem no new commits
noproblem no test cases were added no real scope for the test cases to be added to test changes made to html code
noproblem the test cases are added with good explanation it does increase the code coverage the thing i liked that the screenshots itself speak for the test cases
noproblem as mentioned in wiki page by team color change does not affect button functionality hence no test plan is required hence giving full points here
noproblem um somehow your commits increase the overall coverage of the project and as mentioned in the write up test cases aren t possible   
noproblem it s ui project testing isn t required as such they have still mentioned in there documentation
noproblem there are no test cases as it is an ui specific project
noproblem no tests were added as part of the project just minimal ui changes
noproblem the code consists of small methods that mostly test one thing this results in high readability the team has made an extensive use of context constructs which further enhance the code documentation moreover the team has improved the sort_by_name method making it cleaner and easier to follow this was   complemented by the fix of bad   names that   were present   in the first round e g stu1 p1 etc one suggestion pertaining to the scores block would be to use specific assertions of fields instead of testing the object via inspect method and comparing it to the string value
noproblem the code coverage is 94 which passes the required threshold
noproblem the writeup is comprehensive and fully covers given functionality there were no significant issues that needed to be fixed from the first round   
noproblem code was cleaned up 5 days ago
noproblem code makes good use of rspec s describe and context options and manages to achieve 95 code coverage
noproblem coverage increased by 3
noproblem video demonstrates working and passing tests
noproblem well written
noproblem documentation is well written instructions is given problem statement and solutions are provided screenshots are given
noproblem yes new commits were done in the 2nd round
noproblem there are minor fixes related to code style
noproblem the team makes several commits during the 2nd round to make improvement
noproblem yes the team added test cases and the overall test coverage has increased the team has added a lot of tests and i do feel it does cover the range of this project
noproblem it is a testing project so test cases are added the coverage has increased to 97 5 percent for vm question response model
noproblem yes the coverage has increased and test cases have been added coverage is more than 50
noproblem coverage has increased from 11 to 97 it is impressive great job the team has achieved what they were looking for
noproblem the team added new test cases and make the coverage increase also the overall coverage for the whole system has increased
noproblem there wasn t any link provided to check if the ui was working fine but there was a youtube video showing the tests successfully running and also the tests did seem to cover almost all the scenarios
noproblem yes almost all scenarios for vm_question_response model is covered good work
noproblem this testing project covers all the scenario as required
noproblem since these are unit tests no ui test needed
noproblem the write up explains what functionality is tested and why the coverage is also mentioned along with code snippets which is good
noproblem writeup is well written and gives explanation for all the requirements
noproblem the code is well written the way the list function was split into multiple modular functions is appreciable a great amount of effort has gone into fixing the issues
noproblem code is written very well comments are detailed and functions and variables are named appropriately would just like to point out in student_task_helper rb due_date_color the variable rtn could ve been named better
noproblem new code added is written well with dry and no long or complicated functions i could see file updated has changes on line such as tab and space team could work upon indentation   
noproblem the code is well written no issues with naming conventions or coding style
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem the code is clean
noproblem the last commit is on 10 31
noproblem test are written  
noproblem the team has implemented there testing plan and have been very thorough with there test cases they seem to have considered a lot of cases and have implemented them in rspec the only thing that they should do is use different commits for adding test cases
noproblem well the code looks good and very much follows the ruby style guide the code also is dry it looks well written and does not any changes
noproblem it is given in wiki that most of your test cases depend on checking the output however like i mentioned in my last review several test cases like the ones mentioned below can be automated this is especially true as tdd is explicitly mentioned in your problem statement write the required tests before implementing refactoring the methods in the above mentioned classes add past due assignments to the student   s task list on student view check for correction in due dates of assignments when an assignment   s due date is edited it should be appropriately moved from the    past assignments   list to the    current assignments   list if needed on student task page separate the list of teamed with students from the current tasks box
noproblem yes
noproblem the code is both succinct and very carefully i have not done the code check in the first round but for this time there s no bad names functions are standardly named good alignment and commenting
noproblem project was on implementing test cases the test cases are well written and the code coverage has increased
noproblem the code is very well written and follows good coding practice
noproblem the code follows ruby style guide
noproblem yes it works as intended it would be better if you could add a video recording of the flow screenshots of the flow in the test plan   
noproblem yes new code was committed in the 2nd round
noproblem yes code was committed to follow clean code practices based on first review
noproblem write up is explained pretty well
noproblem the wiki documentation has been updated all the information has been documented in a neat and logical manner the write up adequately provides what functionality the work is related to they havent updated any part of the wiki documentation but overall their documentation is concise and to the point
noproblem before deploying the project onto the production server this projects asks   for some attention new test cases should be added to the project i can t say much on that
noproblem yes the code has been written aptly and to the point the intention is clear
noproblem test coverage remains the same at 94 hence my suggestion opinion is same as the previous review
noproblem yes they have added test case and it has increased the coverage by 3 and has increased the coverage to 39 721
noproblem project was writing unit test cases and the newly written test cases has increased the test cases
noproblem test coverage for assignment_participant model increased to 94 percent
noproblem yes the team has added test cases and the team has covered every functionality
noproblem the code seems very well written and approach seems correct if they improve the documentation and add test cases after thorough testing it should be good to be deployed as it stands another team in future can pickup the code and implement these improvements
noproblem yes the test case covers all the required test cases along with the edge cases
noproblem project was on writing test cases and the newly written test cases has increased the coverage
noproblem all the test cases pass majority of test scenarios described in document is covered and automated
noproblem the writeup seems to be well written it is concise and to the point
noproblem the write up is very well documented as it explains the test plans and also what changes have been made along with the reference to the files which have been modified
noproblem very clearly writeup
noproblem it is well written quite understandable it clearly and adequately indicates the working functionality i can understand what the project is about
noproblem the writeup is complete and well organized and it also mentions the corresponding change in origin code
noproblem yes as the test   case increase the test coverage and the build pass is 100 thus the code is ready to be merged
noproblem yes it is a good code
noproblem yes the travis ci build was passed the conflicts could be seen resolved
noproblem yes no conflict that s not resolved
noproblem the code is very well written there are no bad names long functions or any lack of comments the code written by the team is self explanatory
noproblem code is short variables and functions are well named
noproblem the code follows the dry principles correctly
noproblem yes improved the code
noproblem the code is concise and easy to understand the team has provided comments to explain the logic of the new function created which really helps
noproblem the code was well written in the first round itself and followed good coding standards
noproblem the code was already well written no changes were suggested in the first round the team did a great work in following coding best practices   
noproblem yes    2 commits were made in round 2
noproblem a few bug fixes were made after the first round of submissions
noproblem yes new commits were done
noproblem yes
noproblem yes twice during the second round
noproblem there were only 2 commits made during the second round however the team had mostly implemented most of the functionality during the first round maybe due to which there are less commits in the second round
noproblem there are no new commits during second round
noproblem the team did change the project as there are 2 new commits the ci build is still failing
noproblem yes the team had added 2 test cases and the coverage increase is there as well newly added tests are enough to cover the range of project
noproblem this feature doesn t say the view is of which student looking at   student_task list page is confusing since i don t know who am i which student
noproblem the team has added test cases but the coverage did not increase   by much
noproblem coverage has increased
noproblem coverage increased by a good margin
noproblem no new test cases are written from the previous review    the authors have converted all the cases discussed in   test plan   into automated tests overall coverage increased 6 3 to   43 07
noproblem the team has added test cases and increased the test coverage
noproblem the team has added new testcases in the new submission the code coverage has also increased good work with the testcases
noproblem the ui and system operations works well as intended they newly added features works perfectly as they are supposed to do
noproblem everything works as expected except for the case mentioned above
noproblem no credential provided for login hence couldn t check
noproblem works as intended features work as they are supposed to tests cover all scenarios   
noproblem the system works perfectly as intended
noproblem the system works as intended
noproblem the video explains the new functionality and the functionality is working as expected all the scenarios are covered in the rspec test as well good job
noproblem the write up clearly mentions how to check test the work done by the team it includes almost everything the team has changed during their project    it clearly mentions the filenames where the changes have been made all the references are also included in the write up   
noproblem overall it is well written
noproblem the writeup   has adequate screenshots to help understand the problem statement
noproblem contains all the required explanation
noproblem very good i go by what i said in the first review it is very legible and i could understand what the project does and how the project does what it does
noproblem yes the code is ready to be deployed onto the server this is a good starting place for future team to pick up
noproblem looks fine my biggest concern however is which student s view opens here    add the feature of impersonation to this and we get two identical views of student_task list page one with this particular feature and the other with impersonation feature what is the difference between these views
noproblem the code has mast elements ready but there can be more test cases generated with better test coverage the code need not be rewritten from scratch it just needs to include some more of the expected   functionality
noproblem according to write up and video yes but since i couldn t manually check i would say no
noproblem the build fails and there is one warning and one error which needs to be fixed
noproblem there were some build issues raised by travis ci which have not been handled yet however there are no merge conflicts with the master branch
noproblem no pull request link is provided  
noproblem travis failed
noproblem the color scheme added during this project is working when tested through the ui
noproblem with the link provided operation from ui are working as expected no refactoring is required for the code change made
noproblem yes as per the scope of the project all works beautifully well great job team
noproblem works as intended
noproblem yes the color change is as per project no new tests or re factoring done as part of the project
noproblem the writeup is extremely well written in the earlier round i gave the team a suggestion to add the steps needed to check out their changes they have added this part into the wiki now thank you and well done
noproblem write up is written a neat and understandable with system screenshots and steps to test system manually
noproblem the writing is good and completely covers the scope of the project
noproblem writeup is good explains everything they have done and how they have implemented
noproblem no significant change from last round but the writeup was good elaborative with screenshot of code and ui it clearly mentioned the need for the change but no approach mention but to be fair the scope of the project doesnt call for it
noproblem yes the changes made are very basic and should not affect the functionality of the application in any away apart from the cosmetic changes made during the project
noproblem yes code seems ready to deploy also the approach taken is simple and very much acceptable
noproblem i have no concerns regarding merging this into production
noproblem since there are ui changes they seem pretty improved
noproblem i believe the code is the best that it can ever be and should be merged with the expertiza
noproblem the build request passed
noproblem well the build technically failed but seeing as how that s practically impossible for this project i ll give it a pass
noproblem the build has passed and the changes are also well explained in the wiki as expected the screenshots of the test cases are also displayed
noproblem the team has changed a model and a html page but there are no new test cases attached to the changes
noproblem coverage increased by a good margin
noproblem no new test cases are written from the previous review    the authors have converted all the cases discussed in   test plan   into automated tests overall coverage increased 6 3 to   43 07
noproblem the coverage has increased by 6 3 the team has added new tests that check whether assignments is absent in the menu in default view and there is an option to open student view the tests also check whether there is a close button present when the instructor is in the students view also it checks whether the assignment is present by default in the student view or not
noproblem the team has added test cases and increased the test coverage
noproblem the team has added new testcases in the new submission the code coverage has also increased good work with the testcases
noproblem very good i go by what i said in the first review it is very legible and i could understand what the project does and how the project does what it does
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code follows dry principles
noproblem bad names like review_num have been used
noproblem there was no complicated functions code strictly followed dry principle
noproblem no changes in the code from the last time code is written properly
noproblem the code is well written and follows good programming style has good naming and is dry the team has not implemented any suggested changes since there has been no commit after first round
noproblem code was well written dry and intuitively done easy to follow the functionality implemented
noproblem no new commits have been made in round 2
noproblem the last commit i see was 23 days ago which seems that there wernt many changes done in the seond round the wiki mentions the suggestions at the end so it would have been good to have the code changes and tests for the same
noproblem all the commits were completed by oct 31
noproblem no commits were done in 2nd round
noproblem the last commit i see is from oct 31st i m assuming they did not have to   change much in the 2nd round
noproblem no commit
noproblem a small amount of new code was committed in the second round
noproblem no new commits were made during the second round
noproblem no new commits have been made since the last round however there is nothing significant as just codeclimate fixes are remaining
noproblem i couldn t   any new   commits in the second submission though the functionality   seemed to be fulfilled in the first round itself
noproblem yes the team has added test cases
noproblem yes the coverage has increased and has almost reached to 50
noproblem this project is refactoring and there were not much of functionality changes i see that teams have changed the existing tests make sure there is no coverage miss
noproblem the test coverage seems to have increased slightly since this is a refactoring project i wouldn t expect testing to be the focus so that s pretty good even though the added test case most likely doesn t cover all the work done here
noproblem the team had added a test case in the last round which i think was sufficient to test basic functionality    there have been no additions to test cases in the second round
noproblem team added several test cases and the coverage was seen to increase
noproblem yes the code addresses all issues
noproblem most of the functionalities that were required have been implemented but the final changes haven t been merged due to some build issues on travis ci the tests are quite comprehensive
noproblem yes refactoring   did not impact on the existing operation at all
noproblem the system operation works as intended
noproblem yes this is a refactoring project and the ui works as it is supposed to after their code changes all the functionalities seem to be intact good job there
noproblem the system operation works as intended from the link provided
noproblem the team has explained the issue and the solution they chose with enough      details to understand to way of implementation
noproblem the authors should have added screenshots for the changes made in the code otherwise the purpose and work done has been explained well
noproblem overall it is well written they can add reference section where they can put the link to the project etc
noproblem the write up is to the point and explains their approach neatly the team has made efforts to update the write up with the provided suggestions and it has improved the write up
noproblem the writeup was elaborate and fully elucidated the test added and the removed methods and sql lines and their scope   
noproblem yes   i think with additional testing it can be deployed
noproblem i feel there are more number of test cases that need to be covered before deploying this in prod
noproblem i strongly believe that this code is ready for production server
noproblem changes are working perfectly
noproblem i think this code is ready to go because it is better organized and structured than it used to be
noproblem i think that it is a neatly written code and once the integration issues have been resolved it should be ready to be deployed on th production server    the code being readable can be easily picked up by the future team
noproblem travis ci test has been failed on github
noproblem build is passing on travis ci there are no pending conflicts
noproblem few issues with the build but i feel they are trivial
noproblem the pull request did not pass the automatic build requirements it seems as though this team worked very hard to try to fix the build errors
noproblem ignoring this question since it is an oss project
noproblem though there were several build fails during the first round which seem to have been triggered   on bundle exec the final build passes in travis ci
noproblem the code was well written dry was not violated
noproblem the code seems to be dry and i had no issues with it in the 1st round
noproblem it looks as good as round 1
noproblem naming looks good they had already added comment to the code in the first review
noproblem don t see any dry issues well written test code
noproblem the code is well written    no suggestions
noproblem no there had been no bad names or wrong conventions used even in round 1 so no change there the   team has made few modifications to beautify the code by using ternary conditions   which did make the code elegant no new comments added
noproblem commits for code climate changes were pushed in
noproblem the team added new commits in the second round as well to improve their code style improve codeclimate issues and changes other reviewer s suggested very few teams have done this great work
noproblem several commits were made to decrease the code climate warnings
noproblem yes they are updating code to fix code climate issues
noproblem yes there are   new codes committed during the 2nd round
noproblem yes commits are done to fix the code climate issues
noproblem i found many commits related to the code climate fixes    no suggestions
noproblem the number of commits since the 1st round is impressive    significant improvements have been done pertaining to naming indentation and overall code climate issues
noproblem test cases were added overall increase in the coverage range observed
noproblem yes the team added relevant test cases which increased the overall coverage
noproblem they achieve 100 during first round so i don t think there are any new test need to be added
noproblem yes they coverage is 100
noproblem yes the project was about testing and coverage has increased
noproblem 100 coverage is achieved
noproblem the coverall showed that the overall coverage increased 3 2 to   39 999 the coverage of the participant rb file is 100 so great job team no suggestions
noproblem the code coverage was 100 in the   1st round
noproblem yes the project was a test project and the team has managed to achieve 100 coverage of the model there was no increase in coverage from round 1 to round 2
noproblem the project works as intended test cases are showing a positive impact on the results
noproblem yes the tests cover all the scenarios one should check for great work
noproblem edge cases are tested and all scenarios for each method are tested
noproblem yes they coverage is 100
noproblem yes a lot of cases concerning a participant has been added
noproblem yes 100 coverage has been achieved as shown in the video
noproblem the tests specified in the participant rb file run perfectly well the same has been demonstrated in the video mentioned above no suggestions
noproblem the code coverage is 100 every test case passes after a manual check
noproblem the writeup was significantly well written almost all the changes were covered
noproblem the team has written their wiki page in a very detailed manner they even added the video links which were missing in the first round as suggested thank you and good job
noproblem easily one of the most clearly documented projects i have reviewed in this class so far i liked their organization of the test plan within the write up
noproblem the wiki page provides clear details about the work and very easy to understand just like round 1
noproblem it is crisp and to the point there are no clarity issues either
noproblem well explained all the test cases have been explained and are self explanatory as well
noproblem well written
noproblem the writeup is really well written and has covered all the desired aspects along with the test plan no suggestions
noproblem the   writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings
noproblem the write up and screen cast were both very explanatory it included detailed code the need for the test of partipant rb and the use of the model there was no change required from the initial write up
noproblem the code is well organized and written ready to be merged into the production server
noproblem the tests are good and it can be merged to the main line
noproblem did not find problems in the code in the first round follows ruby style guide commented and good naming very well written
noproblem the last commit was 21 days ago so i fear that that there are no commits being made in round 2 could have done a commit in round two just to confirm that there were no changes required in round 2 so that the reviewer may be certain about it
noproblem i don t see any new commits for round 2 mostly nothing was needed
noproblem no new commits
noproblem the team has added test cases 1 to check that if there is no rejoinder for the review then it redirects to new author feedback page 2 to check that the other teammate is able to edit 3 to check if the page is redirecting back to review 4 to check if the rejoinder by a participant of a team is saved properly    the overall coverage decreased from 48 to 47 601 it decreased by 0 04
noproblem the coverage has decreased by 0 04 the team has added some tests which were not present in the initial submission 44 9 of the changed lines are covered
noproblem everything is working
noproblem the team has not provided steps for manual testing even though this was requested during round 1 review
noproblem nicely written wiki   
noproblem i think the code can be merged all the test cases seem to cover the edge cases and my testing shows that the things function as expected
noproblem yes it is ready to be deployed
noproblem travis ci says tests have failed but these don t include the tests written by the team
noproblem build passed codeclimate 7 issues to fix 2 3 checks were passed issues seem trivial
noproblem the ci build has passed and there are no conflicts
noproblem yes the travis build is passing
noproblem yes the pull request has passed the travis ci build test and does not contain any conflict with the base branch
noproblem there are no conflicts
noproblem the travis builds on both pull request have passed
noproblem yes the build passes travis ci
noproblem yes the code changes are simple and to the point i don t see any other way it could be done   
noproblem yes the changes have passed all the   checks and can be deployed in production   
noproblem excellent   work
noproblem in good state
noproblem the writeup is great i was able to understand the issue and do manual testing
noproblem it was very well written and self explanatory
noproblem the wiki page has been written concisely the team has used screenshots which ease the understanding of the work they ve done   
noproblem the write up clearly explains the issues faced and the code fixes used to solve them
noproblem comprehensive
noproblem i followed the steps as mentioned in the wiki and it works as expected
noproblem yes everything works perfectly fine
noproblem works properly
noproblem yes the ui changes according to the specified conditions after logging in as   a   student we can see the team name being displayed at the top of the page
noproblem the features for the issues fixed work as intended
noproblem everything looks fine to me
noproblem the team did add test cases covering the functionality the overall coverage increased by 0 004    to 47 652
noproblem the team have added adequate tests
noproblem yes they did add the test cases and the coverage increased to 80
noproblem coverage is same  
noproblem yes it increases the coverage too
noproblem changes are covered with new test cases
noproblem no new commits
noproblem yes there are few commits after round 1
noproblem no there were no commits made after oct 31st
noproblem the code has been written as per the coding standard the code written by the team adheres to dry principle
noproblem the code added during this project adheres dry principles   
noproblem the code was written at it s best
noproblem yes the code is well written
noproblem yes code is well written
noproblem the team has followed rails best practices while writing the code   
noproblem the code was written pretty well
noproblem no commits needed after first review
noproblem the last commit was listed as 12 days prior to this review but the code looks to be in great shape so there was no need for new additions
noproblem no new commits no new bug fixed
noproblem    the last commit was 12 days ago i believe that this team had finished their work well before round 1 itself i think they had planned the work well in advance and followed that plan as well
noproblem there were really few commits in the 2nd round the only commit i could see was on 30th october the only suggestion i would give is to continuously update their work on git   
noproblem there is no new commit during the 2nd round
noproblem no need for adding new test cases as the previous submission already achieved 100 coverage i apologize for not being certain how to accurately answer this question
noproblem they didn t add test cases but the test coverage is always above 90
noproblem there are no new tests and that is because the team had already completed their work before deadline 1 and the coverage was 100 on the deadline one itself so there is basically no scope for improvement for this team
noproblem the team did add test cases they achieved a little more than the desired coverage even that means they have done a great work
noproblem from the video the functionality works well
noproblem n a this is a unit test project
noproblem yes the tests cover all the scenarios
noproblem the tests cover most of the scenarios as is evident from their mutant killing capabilities
noproblem the team was asked to write test cases and get a coverage of around 90 the team did a really good job in writing test cases for all the methods present in the assigned files
noproblem the project has a good coverage of the codes  
noproblem the writeup is well documented
noproblem the write up is very informative and clearly shows the impact and result of the project tests it would have been a great addition to have included more discussion on the design choices of your testcases and how it was implemented overall a great wiki
noproblem the writeup is pretty good and easy to follow
noproblem i loved the write up write from the beginning to explaining expertiza to explaining their task and the test plan which was very detailed and methodical i also like that they had included a screen shot of the mutant test which shows the thoroughness of their tests overall an impressive job by the authors
noproblem the writeup is well written and clearly tells the flow and method of working it shows clearly what all work is done and how it is done it mentions specifically the explanation of each functionality and how it is checked
noproblem as mentioned above they can make it better by fixing some issues
noproblem the project is almost on the stage that it can be deployed on the production server however there are few test cases that are failing as shown on the git if these minor flaws are fixed then the code is good to go
noproblem the team gives a good guidelines for how to test and what to test for the two classes
noproblem the code is well written i did not see any bad naming conventions or bad coding style   
noproblem no need for test cases 1 for mentioning it in the wiki
noproblem no test cases present but test plan covers it
noproblem not required
noproblem test cases were not required for this project
noproblem the test cases were required as the chnages were related to ui the team mentioned the same in the wiki
noproblem yes the ui operations works as intended the features fixed now works as intended
noproblem it s working
noproblem the feature works as per the video shown
noproblem fro video it seems to work as intended
noproblem the video explains the new functionality and the functionality is working as expected good job
noproblem yes it works as expected
noproblem writeup has been improved after the first review the codes now look more comprehensive
noproblem writeup is good and understandable test plan is written well indicating the steps clearly in what needs to be done to test
noproblem in my opinion the project is ready to be deployed and does not need to adopt a different approach
noproblem the number of commits since the 1st round is impressive    significant improvements have been done pertaining to naming indentation and overall code climate issues
noproblem the code coverage was 100 in the   1st round
noproblem the   writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings
noproblem yes commits are done to fix the code climate issues
noproblem yes the project was about testing and coverage has increased
noproblem yes a lot of cases concerning a participant has been added
noproblem it is crisp and to the point there are no clarity issues either
noproblem the tests are good and it can be merged to the main line
noproblem don t see any dry issues well written test code
noproblem the code is well written    the variable and method names look clean and concise the functions are small and well defined
noproblem well written
noproblem the code is well commented i did not see any bad naming conventions or bad coding style
noproblem yes the   code seems well written and there was no issue with the naming or functions used however a few comments could be added to impersonating_as_admin
noproblem naming looks good they had already added comment to the code in the first review
noproblem the code was already well written no changes were suggested in the first round the team did a great work in following coding best practices
noproblem code has no problem
noproblem 100 coverage is achieved
noproblem yes 100 coverage has been achieved as shown in the video
noproblem well explained all the test cases have been explained and are self explanatory as well
noproblem there doesn t seem to be any new code added in the github but overall has a good history of commits which is documented well through commit messages
noproblem yes there are   new codes committed during the 2nd round
noproblem yes they coverage is 100
noproblem yes they coverage is 100
noproblem the code was well written dry was not violated
noproblem commits for code climate changes were pushed in
noproblem test cases were added overall increase in the coverage range observed
noproblem the project works as intended test cases are showing a positive impact on the results
noproblem the writeup was significantly well written almost all the changes were covered
noproblem the code is well organized and written ready to be merged into the production server
noproblem it looks as good as round 1
noproblem yes they are updating code to fix code climate issues
noproblem they achieve 100 during first round so i don t think there are any new test need to be added
noproblem edge cases are tested and all scenarios for each method are tested
noproblem the wiki page provides clear details about the work and very easy to understand just like round 1
noproblem the team added new commits in the second round as well to improve their code style improve codeclimate issues and changes other reviewer s suggested very few teams have done this great work
noproblem yes the team added relevant test cases which increased the overall coverage
noproblem the team has written their wiki page in a very detailed manner they even added the video links which were missing in the first round as suggested thank you and good job
noproblem there were no such commits during round 1 all are done in round 2
noproblem there have been no new commits since the last round of review the integration with master branch still has conflicts to be fixed
noproblem as i explained in my first review the test plan is well written and all of these are tested manually there are no separate automated cases written
noproblem the team did add test cases covering the functionality the overall coverage increased   by 6 6 to 43 356
noproblem yes team has written test cases in a proper manner which increases the coverage also
noproblem the code seems to be dry and i had no issues with it in the 1st round
noproblem the team did not add an automated test plan but manual testing   was clearly demonstrated using screenshots
noproblem several commits were made to decrease the code climate warnings
noproblem no there have been no new additions to the test cases since last round of review the code coverage still remains the same as before with an increase of 6 6
noproblem no unit tests were added during the resubmission but they had an initially high coverage
noproblem everything is good here
noproblem easily one of the most clearly documented projects i have reviewed in this class so far i liked their organization of the test plan within the write up
noproblem the code is well written    no suggestions
noproblem i found many commits related to the code climate fixes    no suggestions
noproblem the coverall showed that the overall coverage increased 3 2 to   39 999 the coverage of the participant rb file is 100 so great job team no suggestions
noproblem the tests specified in the participant rb file run perfectly well the same has been demonstrated in the video mentioned above no suggestions
noproblem the writeup is really well written and has covered all the desired aspects along with the test plan no suggestions
noproblem the present test cases appear to be written fine
noproblem passed travis but had many lingering codeclimate failures
noproblem coverage went up by 8 4 according to coveralls
noproblem the latest commit is on 2nd of nov
noproblem the test examples they showed are good   
noproblem the build is passing successfully
noproblem yes since it was a unit test assignment tests have been added and overall coverage has increased
noproblem the tests cover all the scenarios given that the problem statement is pretty open ended the changes fulfil the purpose
noproblem overall coverage was increased by 8 percentage   
noproblem    they added all the test cases there is so much coverage now
noproblem i think it covers all of the scenarios but don t quote me i don t have a great understanding of review response map
noproblem yes it works
noproblem the code was well written even in the first round
noproblem ui is working correctly   there are no features broken  
noproblem yes it works perfectly fine also the screencast they uploaded makes it more easy and convenient for me to understand the portion of changes implemented
noproblem the video explains the new functionality and the functionality is working as expected good job
noproblem the write up clearly captures the functionality that the work is related to
noproblem well written document my suggestion   is put the cropped version of images or even links to images is also fine   
noproblem the write up is well written and self explanatory    it would have been better if the screenshots were of standard size but that is not a problem since the purpose of the document is just to explain the project
noproblem the authors have documented the steps they did to solve the issues in a clean manner although they haven t mentioned any particular design principles or design thinking that went on in solving the issues they have explained all the functionalities of each file they have modified and stated why they have modified the particular file one thing they could have added were class diagrams and dependency maps or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea it doesn t seem like the authors have updated their writeups since the last submission
noproblem very well written and elaborated
noproblem the write up is well written and organised everything looks fine great work with the write up   
noproblem the write up has been improvised by the authors and they have added the reasoning for the approach they chose this increases the understanding of their solution    they have also modified their test plan steps
noproblem since the code coverage has decreased i don t think this code should be deployed on production however it is a good starting place for a new team to pickup
noproblem this code is ready for server
noproblem yes i think the project is ready to be deployed at the production server since all the required functionalities are implemented
noproblem i think the authors have done a good job in fixing the issues but they should have added tests to check if their code does handle all the possible edge cases and does not break any other code functionalities i think this is a good starting place for a future team to pick up this project and implement some testing specs regarding the functionalities that the authors have fixed
noproblem yes i believe this code is ready to be deployed as it seems perfeclty fin   
noproblem the link to the deployed application was not available so the project could not be tested
noproblem travis ci is passed there is no issues with the build
noproblem no i don t find any conflicts in the work which needs to be resolved
noproblem the code was well written following the principles
noproblem yes code is well written
noproblem few new commits are made
noproblem there has been 2 commits made in second round one for adding comments and another one for fixing   issue 926 the sorting of topics by topic number in assignments
noproblem 3 new commits
noproblem properly   done in round 2 also
noproblem the team has done few commits one was on few sort fixes while they other was on refactoring
noproblem a commit was done in second round addressing issues from reviews
noproblem the coverage is actually decreased
noproblem no new tests were written for this functionality   
noproblem yes team has added the test case
noproblem tests have been thoroughly and very well performed also well documented   
noproblem no deployment   provided so can t be verified
noproblem the code works as required
noproblem the working is perfect everything works as intended the team has explained this in a brief manner in their youtube video
noproblem system works as expected and this is evidenced by tests and videos
noproblem the write up is informative and provides all necessary details of the changes made
noproblem the write up is impressive and very detailed it has been documented well which helps to understand about the project and the code implementation it also provides detailed test plan which makes it easier for end user to do ui testing
noproblem the writeup is well organized and well documented
noproblem writeup is very detailed and well written it is supplemented by enough code pieces and reasoning and good amount of pictures and videos to explain what the team   has done in detail
noproblem    i think with proper testing this code is ready to be deployed onto the production server
noproblem yes the code can be deployed to production
noproblem the code is well written tested and documented and hence i think it should be ready to be deployed   
noproblem yes the travis ci build is passing successfully   
noproblem the build has passed the are only 2 syntactical issues due to version difference
noproblem no conflicts and build passes
noproblem yes no conflicts at all which needs to be resolved
noproblem yes the travis ci has passed
noproblem the build has passed in travis ci and no conflicts have occured
noproblem code style is good and ruby style guidelines are followed
noproblem it was unit tests code
noproblem rspec code looks good descriptive context and it statements and good variable name usage very good work overall
noproblem the coding style is good the test cases have been written properly also i have seen from the code that the team has covered different cases and not stuck to the common one
noproblem there were no commits in second round but this is due to the fact that they achieved a 100 coverage in round 1 itself
noproblem nope but they already did pretty well
noproblem there were quite a few commits in the second round the team worked hard to improve the existing test cases as well as add new ones even the mentor zhewei approved of their work
noproblem the last commit was on october 30 however the team had already achieved 100 test coverage
noproblem i can see no latest commits the last commit was on 31st october
noproblem project was already completed in round 1
noproblem yes
noproblem the coverage is 100 already
noproblem 100 coverage by the tests
noproblem for a testing project increasing the coverage is important doesnt seem like the coverage was increased to a good extant   
noproblem yes the team had added the test cases and this did increase the coverage of the corresponding model file
noproblem the team has not added any test cases but they had already achieved 100 test coverage in the first round
noproblem yes the team has added test cases the coverage is however only 48   
noproblem improved
noproblem the tests cover all the scenarios hence they also possess 100 coverage
noproblem they did unit tests
noproblem as stated above the tests cover most of the scenarios
noproblem yes the test covers all the scenarios   
noproblem cover all
noproblem the test cases are well written and do test many of the methods and functionalities it is able to achieve around 60 of the task assigned to them
noproblem extremely well written and verbose   
noproblem very detailed
noproblem the documentation is detailed covering all the test cases
noproblem the doc is very descriptive and well written good job
noproblem i would describe the write as being 1 very meaningful 2 concise 3 precise te authors do explain the assignment rb file as well as their test plan in veryyyy much a detailed way
noproblem the writeup has a brief explanation on the role of the assignmentteam in the expertiza   project they have given the details on the test plan and test cases i think it is a good writeup
noproblem the writeup is perfectly written clearly indicating the work done it nicely shows how the work was done and what approach as followed
noproblem there are no errors in the build the travis ci build has passed and 100 coverage you are good to go
noproblem the code is easy to read as one places the model file along side the test code it very much makes sense as to why they wrote each line
noproblem the team has successfully managed to pass all test cases with 100 test coverage
noproblem good job done here you are the only team among the ones i reviewed for whom the travis build has passed
noproblem all passed
noproblem it was unit tests
noproblem no issues good job resolving all the issues
noproblem there were just 3 conflicts with respect to codeclimate that needed to be resolved but the mentor seeing their good work had decided to dismiss those
noproblem all checks have passed without any conflicts well done
noproblem passed
noproblem no new commits
noproblem the pull request was not updated in fact i can t see any of the changes in the linked repo
noproblem nope the last commit still shows from 12 days ago which is the time period even before the first submission overall the branch is 3 commits ahead and 20 commits behind the expertiza master even so conclusively going by their git hub their last commit was before the first submission and hence no commits in the second submission
noproblem the commits were done before the first deadline but unfortunately i don t see any commits during the second round or the pull request might not have been updated
noproblem no new commits after the first submission
noproblem no new test cases
noproblem i don t think that writing the test cases was in the scope of this project three files were changes overall which two were rb   files and one was db   file
noproblem the team has changed a model and a html page but there are no new test cases attached to the changes
noproblem works
noproblem as said above no visible testing scenarios have been implemented or even covered in their doc that they have given moreover no changes have even been made since the last submission so answer to all the above questions is no   
noproblem the writeup is good i can clearly understand the problems and the fixes
noproblem the write up is very well written and documented it is aided well with the the help of screenshots and proper labelling the only small thing that i would like to suggest is the steps to reproduce or something similar so that the person not familiar with the expertiza   can also reach to the desired place
noproblem yeah the build has passed the travis ci test and there were no conflicts found on the pull request
noproblem the travis ci has passed
noproblem yeah the ui and everything else looks as it is supposed to and the functionalities work as well
noproblem code looks good well formatted and naming conventions are followed   
noproblem the code was well written and implemented the functionalities needed it made good use of naming conventions and the team worked on improving the code layout by following the ruby style guide and dry principles
noproblem overall the write up was not bad here were some of the things i believe that could be improved problem statement seems to be wrong i believe it should be included in the background as it merely describes the files that they are supposed to work on
noproblem travis tests have passed there were some initial failures but the team has fixed it there are no lingering failures
noproblem the code passes for the travis build as well as danger bot however it fails for code climate with 3 issues yet to be fixed in totality the pull request does satisfy the need to pass the required builds
noproblem the build passes
noproblem the overall structure of the code looks good and all the coding standards have been followed i feel like there could have been more comments to support the large amounts of changes that have been made
noproblem the project follows most of the dry principles
noproblem yes the code has been well written and very ruby like the usage of existing gems is good functions have were good i did not find many issues with the first review so authors have kept it the same very well done    i wanted few more comment in code but thats okay   
noproblem no new commits
noproblem no the new code was not committed during the second round this could be due to the fact that the team finished their code at the end of the first round itself
noproblem the team has not made any new commits in round 2 because they did the code implementation in round 1
noproblem the last commit was made on oct 31
noproblem no new code or improvements have been done in round 2 only documentation has been edited the code could have been improved a little after the suggestions were given
noproblem no new code was necessary
noproblem no new commits in 2nd phase
noproblem no new commits during the second round
noproblem test cases were added to increase the coverage
noproblem the team has added 2 test cases in the   sidekiq_mail_worker_spec more test cases could be added to fully test the functionality   
noproblem coverage is present slightly increases the overall project coverage
noproblem yes the team added the test cases 45 69 new lines have been covered in the   tests good work but i feel that they could have added additional ve test cases   
noproblem yes everything does seem to work properly since this was a refactoring project every feature worked as it was supposed to
noproblem features work as expected
noproblem this project is based on emails which cannot be tested in test environment
noproblem the team has implemented most of the required functionalities
noproblem the features work as they are supposed to only problem is with the code using excessive if else like structure code is brittle in this sense could have made functions and passed parameters to make it more flexible
noproblem functionality seems correct
noproblem yes  
noproblem the refactored mailer with the use of sidekiq works as intended
noproblem the writeup has been pretty well written by the team introduction to the problem statement the implementation details and the test plans have been stated   
noproblem the write up addresses details of all the three problem statements along with the code changes done in every file and the files added the team has also added screenshots of the manual testing
noproblem the writeup   is comprehensive and includes code that was added so it is easy to understand
noproblem lots of improvement over the last phase many recommendations have been implemented the write up is well formed and structured the entire flow is explained along with files changed methods implemented in each stage some formatting issues so 1
noproblem the test section has been improved with more detail
noproblem authors have added a new doc in addition to wiki i think that is not required they could have simply added that in the wiki    as in review 1 would have liked a link to the issue in problem statement   2    more details in why this sidekiq was used and not other message queue
noproblem write up is elaborate and elucidates the test cases and tests well
noproblem the code is ready to be deployed in my opinion to the production server the team could improve the quality of their code by visiting the code climate tests
noproblem code can be deployed on production server as necessary test cases and implementation has been carried out succesfully
noproblem the code implementation is correct so with more edge test cases and after resolving the warnings in the travis test the code would be production ready
noproblem the code is written well but there are some small build issues as pointed out by travis ci which need to be rectified for it to be deployed
noproblem code is ready to be deployed in production if it is refactored and broken down into smaller chunks maintenance might me tough on this one functionality wise works great
noproblem there s a lot of changes made to the project to incorporate sidekiq but assuming that s fine the project is ready for merge
noproblem the code has been merged in a good way and there have been no merge conflicts the build did pass the travis ci the code climate test failed but those were small issues which can easily fixed by just revisiting the code also the team have added a debug code which will need to be removed
noproblem the build has passed and has no conflicts with the base branch
noproblem travis ci runs smoothly and no errors occurred no conflicts occurred
noproblem everything checks out
noproblem yes build passed but there are many code climate warnings that can be easily cleaned up such as tips for refactoring and unassigned variables a more careful look at the tool warnings was required
noproblem code build passed the travis ci build with some warnings thrown by the other tests
noproblem yes improved the code
noproblem yes    2 commits were made in round 2
noproblem yes new commits were done
noproblem yes
noproblem yes twice during the second round
noproblem coverage has increased
noproblem works as intended features work as they are supposed to tests cover all scenarios   
noproblem the system works perfectly as intended
noproblem the system works as intended
noproblem the video explains the new functionality and the functionality is working as expected all the scenarios are covered in the rspec test as well good job
noproblem the writeup   has adequate screenshots to help understand the problem statement
noproblem overall it is well written
noproblem contains all the required explanation
noproblem the code is well written the way the list function was split into multiple modular functions is appreciable a great amount of effort has gone into fixing the issues
noproblem code is written very well comments are detailed and functions and variables are named appropriately would just like to point out in student_task_helper rb due_date_color the variable rtn could ve been named better
noproblem the code is well written no issues with naming conventions or coding style
noproblem the code is very well written and comments are properly given also the variables are descriptive and ruby guidelines are followed
noproblem the code is clean
noproblem test are written  
noproblem yes
noproblem write up is explained pretty well
noproblem yes the code has been written aptly and to the point the intention is clear
noproblem codewise no issues build issue has to be fixed
noproblem the code seems very well written and approach seems correct if they improve the documentation and add test cases after thorough testing it should be good to be deployed as it stands another team in future can pickup the code and implement these improvements
noproblem code is well written dry
noproblem the names and the structures of the functions are all used properly besides the team gave comments on the codes which makes it is easier to understand
noproblem the document is well written in   properly   segmented sections
noproblem very well written doc with all the necessary details
noproblem the plan is very well documented i see a lot of brain storming happening
noproblem the team s design   includes   all the models required for incorporating the functionalities the have depicted a high level design in diagram as well   
noproblem the design section of the writeup gives a very high level view of the design the team has planned to implement so not much can be deduced until the teams drills down further regarding the same
noproblem the design plan seems to encompass everything required by the project
noproblem yes it does  
noproblem yes they have everything that a good doc requires except the empty sections of implementation design and testing these in my opinion should be a part of a very important focus      
noproblem yes the team seems to have incorporated all the functionality needed      
noproblem the team did a great work in understanding the requirements and have included the design for all the requirement mentioned in the requirement document
noproblem yes they talk about all the functionality to be implemented
noproblem the authors has discussed the functionality implementation in detail it justifies the approach they would be using
noproblem the explaiantions were the best part of the writeup the author has kept in mind that the reviewer might not be familiar with the basics of expertiza and hence gives a very lucid explaianation
noproblem the proposed changes look good
noproblem team suggested that usage of decorator pattern is the key solution to the improvement also approach   on dryness will be handled later
noproblem explanations are given adequately   
noproblem i liked the idea of putting the important files for reference this is extremely useful and makes it really easy to understand what is being done
noproblem the team has explained the implementation design strategy in detail the design was explained with all the required details and was very easy to understand
noproblem amazing documentation with diagrams and proper explanation
noproblem the design proposed by the author of reusing   lotterycontroller just like in topic bidding   seems reasonable to address the bidding implementation in peer review
noproblem i feel new design will not add any additional overhead in response
noproblem good application workflow and analysis appears to be sound
noproblem the authors are aware of the principles and are yet to figure out a way to reuse the methods to implement the functionalities no new methods were proposed in the documentation the idea of implementation looks fine and the new design seems seems to follow the already written code structure and design patterns the design doesn t pose any threat to time complexity
noproblem not much has been talked about the methods or classes the changes will be done to but they are clear with their job      
noproblem diagrams on peer review assignment   have been included in the design by the team
noproblem the current umls are great make sure to include more of these visual aids in the implementation section of your document it will be a wonderful writeup
noproblem excellent use of class diagrams
noproblem design doc has diagram explanation for working process  
noproblem proper visual aids and uml like diagrams are provided in the document for better understanding of the implementation
noproblem well represented
noproblem the design document is well done with proper visual aids and explains the problem being tackled and the proposed solution very well
noproblem yes very easy to follow just by looking once
noproblem the design doc looks complete with all of the necessary details being covered
noproblem    they showed all the details which were asked for
noproblem brilliantly written code document consisting of background problem statement and the implementation plan   
noproblem the authors have dine a good job of detailing the issues at hand and their proposed solution uml diagrams like a flowchart could have been used to further clarify the working of the proposed design
noproblem the design incorporates   all the functionalities that needs to be implemented no suggestions are required      
noproblem the suggested fix would address all the functionalities which is required to be implemented for the problem statement
noproblem    yes the design include all the required functionalities as their design plan the problem statement specifies 3 task one is related to the admin panel and two are related to the instructor panel in their plan they have specified their approach and which all files need modification
noproblem the document outlines all the required functionalities along with the design and implementation plan stated     
noproblem all the requirements have been covered
noproblem yes most of the functionality are included besides they also got detailed explanations
noproblem yes it incorporates all the functionality required by this project
noproblem yes the design doc covers all of the required functionalities
noproblem it seems that the design incorporates all of the necessary functionality it also mentions details of how the team is going to implement said functionality
noproblem    some more specific details could be added
noproblem yes functionalities mentioned are covered in the doc
noproblem yes it covers everything
noproblem yes
noproblem yes the authors have a great job of including all the needed functionality   
noproblem the team has provided enough explanation about how they are going to work on this project overall quality of explanation is good    suggestion include the purpose of implementing these functions changes
noproblem the team has proposed reasonable changes to address the problem statement in detail the explanation justifies every change they have suggested
noproblem    the changes that the author has proposed is quite inclined with the task that are expected to be completed the author explains the the changes properly by mentioning the files that needs to updated along with the screenshots of the flow
noproblem the explanation is clear to follow but it could also include some more of the abstract design like uml diagrams explanation of the use cases etc   
noproblem looks like the team spent some time looking at the code and coming up with the solution good job
noproblem their explanation is adequate and easy to understand
noproblem the authors have given adequate explanation in terms of the following what is existing currently what needs to be changed the have also explained with a diagram the exact place where they would be adding elements to the ui also the files required to be changed are also mentioned   
noproblem    the suggested changes seem to be appropriate explanation was also easy to follow
noproblem the overall quality of explanations is very detailed and good i might even take few ideas from here to improve my own design doc
noproblem    they have explained adequately
noproblem yes very well done in explanation of changes and what needs to be done screen shots are helpful good work  
noproblem comprehensive
noproblem detailed implementation plan provided including which files they expect to change and what the output should look like
noproblem the authors have done a pretty good job with explaining the proposed design they have used wire frames to show us exactly where the changes are to be made adding a flow chart would make things much clearer
noproblem the design   seems to be precise the description of the changes are provided in detail team has clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it   
noproblem    as the project is more of adding features to the user interface of the website the design plan is covering all the necessary steps that needs to be implemented
noproblem the code design appears to be sound the ui implementation as shown on the screenshot   looks intuitive however the final implementation is necessary to say definitively that the code is not smelly  
noproblem design is good there might be some changes when they start implementing it but its a good starting point
noproblem the design appear to be good specific gems are also mentioned eg paginate that would divide the document into discrete pages
noproblem the design changes as described seem sound
noproblem i don t see any trace of smells or redundancy in the proposed solution
noproblem the design seems to be sound i would like more details on the database of the bacui projects seeing as most of us don t know what they look like given that most of us have worked on expertiza projects so a short description of the different tables the project is going to interact with along with any and all modifications would really help understand if there will be any possibility that the design would turn out to be non dry or smelly i think the team is good on what gems are to be used
noproblem no potential smells or problems found
noproblem screenshot explains the functionality of project very well it is really easier to understand how the end product will look like suggestion    the team   should include a flowchart depicting the flow of the functionality   
noproblem they have added a screenshot for each of the problem they plan to tackle
noproblem they show their design page as their visual aids and their are helpful for readers to understand what their designs look like
noproblem uml diagrams are not mentioned but since these are ui changes the changes are sufficiently explained with the help of representation of ui in terms of images
noproblem the whole document is easy to understand and well written suggestion it would be better to include what tools and technologies would be used in the project
noproblem there were ample of visual aids to explain and walk through the proposed solution i liked it
noproblem good that you have used screenshots to explain the approach include use case and activity flow diagrams also
noproblem ui enhancements are provided here
noproblem they authors have used visual aids to their benefit even though they could have added a flow diagram the wire frames and other screenshots they have used serve the purpose and add to the clarity of the explanation
noproblem    this was excellently specific and succinct very nice work
noproblem    its fine i have the gist of it but most of the text in the document is cut and pasted from the project description the uml is a nice touch albeit super bare
noproblem well structured i think everything is covered
noproblem the document explains well how the team is planning to approach the refactoring
noproblem the team has incorporated all of the functionality required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy   in this case
noproblem    in a way yes because it copied the project description and illuminated which models they wanted to create in the refactor
noproblem    the design document includes all the functionality the team is hoping to achieve they have explained clearly what they plan to work and modify
noproblem it has most of the functional features available
noproblem as the project is on refactoring not many functionalities to considered given the problem statement it clearly indicates the design should be able to incorporate the requested changes
noproblem yes the design incorporates all of the functionality required
noproblem all the functionality is given for review_mapping_controller rb   along with the design pattern   
noproblem the explanation is easy to follow i am able to get a complete idea of what changes the team intend to make
noproblem expectations look attainable the changes proposed are concise and crisp team should be able to do a good job with this implementation
noproblem    again its fine i don t understand the changes too well but i also don t understand mvc and expertiza very well either but maybe they could have tried harder i do feel there is a strong need to refactor and improve the code quality of expertiza
noproblem the explanation is decent and comprehensible  
noproblem i don t see any of the above mentioned problems happening since the design matches perfectly with the objective the topic itself is to move unnecessary   code out of review_mapping_controller and hence according to the design the code will actually become cleaner   and better
noproblem the proposed design seems reasonable before proceeding with the project team should also look at other references to those functions and do it accordingly
noproblem the implementation planned by the team seems to follow all ruby on rails guidelines and does seem to follow the dry principle      
noproblem no problem   i could observe  
noproblem the uml class diagram helps to understand the reports involved their attributes and functionalities it provides a general overview about the interrelation of the seven different reports
noproblem the authors provide a uml diagram to explain the relationship between the classes and a screenshot to show where they are going to add a button which are really helpful
noproblem    this was excellently specific and succinct very nice work
noproblem well structured i think everything is covered
noproblem the team has incorporated all of the functionality required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy   in this case
noproblem the document explains well how the team is planning to approach the refactoring
noproblem    in a way yes because it copied the project description and illuminated which models they wanted to create in the refactor
noproblem    the design document includes all the functionality the team is hoping to achieve they have explained clearly what they plan to work and modify
noproblem it has most of the functional features available
noproblem as the project is on refactoring not many functionalities to considered given the problem statement it clearly indicates the design should be able to incorporate the requested changes
noproblem yes the design incorporates all of the functionality required
noproblem all the functionality is given for review_mapping_controller rb   along with the design pattern   
noproblem the explanation is easy to follow i am able to get a complete idea of what changes the team intend to make
noproblem expectations look attainable the changes proposed are concise and crisp team should be able to do a good job with this implementation
noproblem the explanation is decent and comprehensible  
noproblem i don t see any of the above mentioned problems happening since the design matches perfectly with the objective the topic itself is to move unnecessary   code out of review_mapping_controller and hence according to the design the code will actually become cleaner   and better
noproblem    not enough implementation description to provide adequate feedback on this question
noproblem the implementation planned by the team seems to follow all ruby on rails guidelines and does seem to follow the dry principle      
noproblem the design proposed by the team specifies an addition of a new button to the buttons tray from the existing ui the button when clicked must bring a menu of additional reports this functionality should consider the mapping to the review_mapping controller file that will implement the given features
noproblem no problem   i could observe  
noproblem the team has done a good job with the uml diagram however in my opinion it would be better if they can add details for all the classes in the diagram
noproblem the uml diagram shows the various subclasses clearly it would have been better if it had also explained a few attributes methods
noproblem the uml diagram is having the correct contents but needs the rough names of class methods
noproblem the uml class diagram helps to understand the reports involved their attributes and functionalities it provides a general overview about the interrelation of the seven different reports
noproblem the authors provide a uml diagram to explain the relationship between the classes and a screenshot to show where they are going to add a button which are really helpful
noproblem a brief   description for the class level implementation would be better
noproblem everything has been described well and in details
noproblem at current state the design doc has project problem project solution and design diagram and each section has detailed description of the project
noproblem the document is well structured and provides all required information   
noproblem the document explains what was asked for
noproblem yes everything is incorporated
noproblem all functions required are stated in the design document which include search for user assignment questionnaire and reviews
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem yes it does they have explained the propose solution as well for each issue
noproblem the design incorporates all the basic functionality
noproblem yes almost all types of search functionalities are covered
noproblem the design implements all the defined functionality elaborately
noproblem yes the design incorporates all of the functionality required and also gives the possible solutions
noproblem the quality of explanation is good and adequate
noproblem the proposed search features are good if all of them are implemented it should more than suffice
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem good explanations easy to follow
noproblem overall    the design   proposed seems good
noproblem yes the changes are completely feasible
noproblem the authors have added the methods in the right classes the new design is properly refactored and the gems are relevantly used the new design might potentially increase the response time of the system because of advanced search option
noproblem yes they have provided an uml diagram which follows convention and explains their approach
noproblem the team has added sufficient diagrams for the reader
noproblem the diagrams are succinct and well understood
noproblem the er diagram is very well done it encompasses all the classes and their attributes also the use of different shapes like diamond square etc is great   
noproblem not required for this project
noproblem the e r diagram seems to deliver the task
noproblem there is an er diagram which defines the relationships in the system
noproblem wrtie up clearly explains the project purpose what changes needs to be made however including a mock test plan would have been better
noproblem most of parts are included but they should include more details in their doc
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach  
noproblem the design doc contains project purpose project design and testing plan in the wiki the wiki contains mock visualizations which make it easy to understand the project proposal and how are they planning to do the design flow as a flow chart adds to the ease of understanding the test plan explains about the technologies that they are planning to use for testing suggestion    the test plan could say what should be done in testing than just the technologies to be used for a particular part of code for ed we plan to have a dummy small data and see if the graphs output the visualizations correctly if the sum id being counted to 100 of the class participation etc the stacked version could also have been represented for better understanding
noproblem the document shows the flow of work really well however i would like to suggest to put more of test planning and the tools and technologies that will be used this will enhance the quality of the document to a great extent
noproblem the design doc is good and provides a clear picture about the objective of the project however it would also be nice to know what features would be tested in the test plan
noproblem all necessary sections are present
noproblem yes the design incorporates all of the functionalities
noproblem incorporates intended functionality
noproblem yes their design has all of the functionality that are required
noproblem the design document has included all the functionality that is required by the project description
noproblem yes
noproblem the design incorporates and clearly explains flow of diagram for class performance but not much is included for integration of review performance suggestion the topic of integration of review performance can be talked about in brief
noproblem the design has a good design flow diagram which is clear and concise
noproblem the design follows the basic functionality expected by proposing a bar graph solution for the select criteria it could incorporate the rubrics that the team are planning to target the flow in general does help to understand the project
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions   
noproblem yes
noproblem the explanation is quite well documented such as including the flow chart kind of bar graphs they would prefer and the files that they will update adding of screenshots of the flow of the website would make it more easy to understand for a leyman
noproblem changes suggested look good
noproblem the overall quality of the explanations are good but they should include more details about their design which may not be easy to understand
noproblem the team has mentioned all the files that will be changed and have also written a paragraph stating what are the proposed changes the team could also document the changes that are being made to individual code files stating the changes done using code snippets and the reason why the changes are being made also they can talk about what design patterns principle are being used to incorporate the functionality that is being proposed the team could also use crc cards to depict the proposed code changes this will not only help readers understand the report better but also help the team in dividing work between the team members and fast tracking the completion of project
noproblem the changes proposed for the class performance is adequate and explains the files to be changed what changes from the controller perspective and views perspective no particular suggestions proposed
noproblem the team proposed to add a bar graph to give a pictorial view of the scores and indicate the performance of students
noproblem the changes proposed by the team include implementing a bar chart stacked or single based upon the project description it is advised that the team look for other alternatives like pie chart that would help to span the   results   with a minimal look            
noproblem a simple enough explanation has been provided for the functionality    no suggestions
noproblem for now the design proposed looks perfect
noproblem design flow looks good
noproblem the authors seem to have studied the code well and have thought of a good plan to implement the project they also seem to follow dry principles while adding and changing code also the new design flow is quite simple and easy to understand which can be implemented without any high degree of convoluted code
noproblem the design changes as described are sound they are mostly on javascript for the visualization and dont potentially make the code smelly
noproblem the team has given a design flow that underlines the basic way in which they are planning to target the issue at hand it can make use by giving an example as to how the output might look and the document must also describe the tools that would be used for achieving the task
noproblem the design looks good enough it mostly deals with html erb files to accommodate the graph and some database filtering in the controllers i do not think that the design will increase the responses time of the system suggestion if the details regarding how the graph will be implemented or any gem will be used should have been given i did not find any details regarding about any methods that will be used to implement the functionality that too would have been useful   
noproblem the uml diagram included here is a flow chart diagram which explains the process of how the instructor will be able to see the visualization and is easy to understand the flow
noproblem design flow diagram is included indicating the flow which is good
noproblem the uml diagrams is great which is clear and easy to understand
noproblem the have included a detailed design flow representation and have also included the visualizations the could have added lo fi ui cards to depict changes to views which will help them visualize the changes and also help instructors in suggesting improvements at an early stage which will help reduce unnecessary code changes in latter stages of the project
noproblem the team has attached a bar chart for visualization which helps in understanding their purpose suggestion more visual aids could have been added the stacked bar chart as mentioned earlier more mockups could have been added
noproblem the design diagram is good and it would also be helpful to have a few screenshots of the current expertiza   view
noproblem the team has provided a flow diagram that helps to infer the structural outline of the project the scope of the project can be perceived from the diagram
noproblem a flowchart and graph has been shown in the documentation    suggestions i feel that there should have been mockups of the screens where the functionality will actually appear team should have shown how the solution would look like on the expertiza page there could have been use case diagrams too   
noproblem two graphs provided provide a good understanding of the   process and what expected visualization should be more diagrams would have been helpful
noproblem design document looks complete with problem statement files that needs to be modified a lo fi diagram to indicate the flow
noproblem clear understanding   of what needs to be done
noproblem this is a very innovative idea well explained design document files needed to be changes are also mentioned
noproblem the design docs looks complete with all of the details being covered
noproblem yes it states the plan design well testing can be better represented in terms of whether its ui testing or automated tests etc
noproblem the design document is well done with proper visual aids and explains the problem being tackled and the proposed solution very well
noproblem the document is well written just that a uml   diagram or something   similar   could have been included to make it clearer and easier for the reader to understand
noproblem good work on problem statement and implementation ideas however screenshots could have added lofi sketches and flowcharts missing   
noproblem the design doc is well designed and complete
noproblem the design doc looks complete with all of the necessary details being covered
noproblem completed both the project purpose and design
noproblem the purpose of the project seems quite clear the team has explicitly mentioned all the requirements that has been expected of them along with the ways to implement said requirements there is no testing plan however they should include that and then the document would be good to go
noproblem    they showed all the details which were asked for
noproblem brilliantly written code document consisting of background problem statement and the implementation plan   
noproblem the design incorporates   all the functionalities that needs to be implemented no suggestions are required      
noproblem the suggested fix would address all the functionalities which is required to be implemented for the problem statement
noproblem it incorporates most of the functionality
noproblem    yes the design include all the required functionalities as their design plan the problem statement specifies 3 task one is related to the admin panel and two are related to the instructor panel in their plan they have specified their approach and which all files need modification
noproblem all the functionality has been covered in the wiki issues are described in detail and files to be modified are also mentioned
noproblem the document outlines all the required functionalities along with the design and implementation plan stated     
noproblem all the requirements have been covered
noproblem yes most of the functionality are included besides they also got detailed explanations
noproblem yes it incorporates all the functionality required by this project
noproblem the document addresses everything mentioned in the problem statement
noproblem yes i think the design included all functionality
noproblem yes it does
noproblem yes design doc cover all of the functionaliites
noproblem    yes the design seems to incorporate all the functionalities required
noproblem yes the design doc covers all of the required functionalities
noproblem yes all the requirements are stated and   an implementation plan is given   
noproblem yes they have included everything mentioned to implement
noproblem it seems that the design incorporates all of the necessary functionality it also mentions details of how the team is going to implement said functionality
noproblem yes functionalities mentioned are covered in the doc
noproblem yes it covers everything
noproblem yes
noproblem yes the authors have a great job of including all the needed functionality   
noproblem the team has proposed reasonable changes to address the problem statement in detail the explanation justifies every change they have suggested
noproblem    the changes that the author has proposed is quite inclined with the task that are expected to be completed the author explains the the changes properly by mentioning the files that needs to updated along with the screenshots of the flow
noproblem looks like the team spent some time looking at the code and coming up with the solution good job
noproblem their explanation is adequate and easy to understand
noproblem the authors have given adequate explanation in terms of the following what is existing currently what needs to be changed the have also explained with a diagram the exact place where they would be adding elements to the ui also the files required to be changed are also mentioned   
noproblem    the suggested changes seem to be appropriate explanation was also easy to follow
noproblem the overall quality of explanations is very detailed and good i might even take few ideas from here to improve my own design doc
noproblem    they have explained adequately
noproblem yes very well done in explanation of changes and what needs to be done screen shots are helpful good work  
noproblem comprehensive
noproblem detailed implementation plan provided including which files they expect to change and what the output should look like
noproblem the authors have done a pretty good job with explaining the proposed design they have used wire frames to show us exactly where the changes are to be made adding a flow chart would make things much clearer
noproblem the design   seems to be precise the description of the changes are provided in detail team has clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it   
noproblem the team has not proposed any design for the suggested changes
noproblem    as the project is more of adding features to the user interface of the website the design plan is covering all the necessary steps that needs to be implemented
noproblem the code design appears to be sound the ui implementation as shown on the screenshot   looks intuitive however the final implementation is necessary to say definitively that the code is not smelly  
noproblem design is good there might be some changes when they start implementing it but its a good starting point
noproblem the design appear to be good specific gems are also mentioned eg paginate that would divide the document into discrete pages
noproblem the design changes as described seem sound
noproblem i don t see any trace of smells or redundancy in the proposed solution
noproblem no potential smells or problems found
noproblem there are adequate screenshots to show the required functionalities and how they would look after implementation though there aren t any uml diagrams to explain the use cases
noproblem they have added a screenshot for each of the problem they plan to tackle
noproblem they show their design page as their visual aids and their are helpful for readers to understand what their designs look like
noproblem the whole document is easy to understand and well written suggestion it would be better to include what tools and technologies would be used in the project
noproblem there were ample of visual aids to explain and walk through the proposed solution i liked it
noproblem yes screen shots are helpful but the document missing flow control diagrams  
noproblem good that you have used screenshots to explain the approach include use case and activity flow diagrams also
noproblem ui enhancements are provided here
noproblem they authors have used visual aids to their benefit even though they could have added a flow diagram the wire frames and other screenshots they have used serve the purpose and add to the clarity of the explanation
noproblem changes along with the screen mockup   are provided     
noproblem explanations are easy to follow
noproblem well the proposed solution looks satisfactory
noproblem explained the objectives very well also the criteria for completion are also explained
noproblem i liked the overall quality of the expalnation
noproblem it explains in an overall sense what the issue is and how its going to be solved   
noproblem really like the graph you guys   drawing
noproblem changes suggested look good
noproblem they are trying to leverage the existing screen and adding additonal   fucntionality thus it wouldn t impact the existing code
noproblem new design approach is pretty straight   forward   
noproblem all the proposed changes look like exactly what needs to be implemented in this project
noproblem they seem to have a clear idea of what they are going to do
noproblem according to the solution suggested team should be able to implement it
noproblem included a kind of mock ui lo fi diagram to shown how the uiwould like which is great
noproblem they have added notes explaining   the mockup   diagrams  
noproblem the hand drawn diagrams are good enough to explain the problem to others next time they can update it with   the actual page once its done
noproblem good ui mockups   
noproblem they give the graph of the ui design which is good and explicit
noproblem the design doc is well designed and complete
noproblem they give the graph of the ui design which is good and explicit
noproblem clear understanding   of what needs to be done
noproblem changes along with the screen mockup   are provided     
noproblem they are trying to leverage the existing screen and adding additonal   fucntionality thus it wouldn t impact the existing code
noproblem explained the objectives very well also the criteria for completion are also explained
noproblem yes it does
noproblem for now explainations   are in preliminary state i m hoping that team will fillout   this as they progress in project
noproblem new design approach is pretty straight   forward   
noproblem they have added notes explaining   the mockup   diagrams  
noproblem design document looks complete with problem statement files that needs to be modified a lo fi diagram to indicate the flow
noproblem it incorporates most of the functionality
noproblem changes suggested look good
noproblem the document addresses everything mentioned in the problem statement
noproblem explanations are easy to follow
noproblem based on the mockups it seems like the designs will fit in well with th expertiza system i d like to see more professional mockups or descriptions of the new uis but i understand that might not be feasible yet
noproblem completed both the project purpose and design
noproblem really like the graph you guys   drawing
noproblem yes all the requirements are stated and   an implementation plan is given   
noproblem it explains in an overall sense what the issue is and how its going to be solved   
noproblem yes i think the design included all functionality
noproblem well the proposed solution looks satisfactory
noproblem according to the solution suggested team should be able to implement it
noproblem good ui mockups   
noproblem yes they have included everything mentioned to implement
noproblem they seem to have a clear idea of what they are going to do
noproblem the design docs looks complete with all of the details being covered
noproblem yes design doc cover all of the functionaliites
noproblem i liked the overall quality of the expalnation
noproblem all the proposed changes look like exactly what needs to be implemented in this project
noproblem please add more details about the solution
noproblem it includes all the sections
noproblem i don t think they need any visual aids
noproblem nothing specified
noproblem problem design and test plan are all here tres bien
noproblem this design cod is fully completed including project purpose project design and testing plan
noproblem all necessary parts of design document are included
noproblem yes they include project purpose project design and testing plan it s detailed and easy to understand
noproblem the team has included everything which is required in the documentation in a comprehensive manner the team has also included test plan for two scenarios
noproblem the project purpose design and test plan are all explicit and detailed just one suggestion that the structure can be more centralized for example the 2 3 and 3 3 may better be together like overview and details which i think may be more specific
noproblem all the required parts are in their design
noproblem yes the team have incorporated all the functionality required
noproblem yes the design document mentions all the necessary steps and the design ideas for the implementation of them  
noproblem explained the requiremnts   well and their plan but what they will be changing is vague
noproblem design appears to account for all needed functionality
noproblem yes they did a great job incorporate all of the functionality required
noproblem yes all functionalities mentioned in the requirement are listed
noproblem yes
noproblem yes they include all the functionality in the wiki page
noproblem the team has included solutions to all the functionalities   to be implemented   
noproblem their design contains all the functionality required
noproblem yes it includes all the functionality mentioned
noproblem it has incorporated all the functionality
noproblem there is adequate explanation for the changes proposed along with screenshots to explain the output
noproblem nice explanation with step by step   implementation plan it is very easy to follow the design document
noproblem they explain the changes step by step very detailed and easy to read
noproblem the team has given a proper explanation by including the workflow steps that need to be achieved to solve the given issue this shows that the team has an organized plan to implement the solutions this will help the team in the later stages of the project
noproblem an explanation for each functionality provided
noproblem the explanation is complete and easy to understand
noproblem design appears to be sound i would do the same
noproblem no question there from my point of view the implementation design is nice
noproblem from the steps taken by each tasks i guess they can perform all the functionalities well
noproblem the design they have right now looks good to me i did not find any   inappropriate design in it
noproblem the desigin has many details which from my point of view is in the right direction
noproblem images were very useful in understanding need intent for the project
noproblem they have included a diagram it do help me understand how they are going to implement this project
noproblem there are screenshots that can help in understanding the purpose
noproblem the entire project flow is well documented along with the basic structural requirements the document aligns with the plan of action and showcases the exact purpose of the project
noproblem the project design doc is complete and specifies both issues and prospective solutions
noproblem the doc mentions the changes to be made in a detailed way along with a proper stepwise explanation of the solution or the approach to be taken plus the screenshots which help in better understanding
noproblem good work good documentation
noproblem the document clearly specifies the problem statement it seems good enough they have mentioned the api they are planning to use as well as the files to be modified however i would like more details on this api and how they plan to integrate it into their project
noproblem the document is almost complete includes proper planning and demonstration only suggestion would be to include more about how the implementation would be done   
noproblem the design document states all the required things right from project design to test plan the doc also specifies what all files will be changes along with how the functionality will look like once the project is deployed    suggestion i feel like the test plan should have been a bit more elaborate the team did mention one scenario i feel like there could have been many more but as all the required things are present i am giving this post full stars   
noproblem yes i believe they have included all of the required functionality   
noproblem the design   encompasses all the features in the specification it only indicates supporting one more language though whereas the design document specifies any language it seems out of the scope of the project but what if you used the   google s cloud translation api to translate the static strings   at run time then you could support almost any language there might be licensing issues though
noproblem yes the design document contains all parts of the functionality ensuring that nothing is missed out
noproblem yes it covers all the functionalities
noproblem implementation looks just like what the requirement asked for no   removing of english code
noproblem implemented major of them
noproblem the design does incorporate all of the necessary functionality
noproblem yes the required functionality is adequately explained good work in that  
noproblem the design incorporates everything that the project document has specified about the project    no suggestions
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely
noproblem the changes are apt and easy to follow it makes sense
noproblem good explanations for all solutions
noproblem the wireframes themselves make the project self explanatory that being said enough explanation about how the team will tackle the problem statement has been given things like what api will be used to achieve the objective has been mentioned no suggestions
noproblem the design seemed good
noproblem the design looks solid but it s hard to tell without sufficient detail if anything causing every static string reference to be encapsulated into an object that uses the current language to return the correct string is more dry and maintainable than what we have now i wonder if dynamic translation gems are out there or would work the claim that dynamic translation should not be done in this project should be defended e g it would take too much time
noproblem looking at the doc it seems like the design is precise the description of the changes are provided in details ensuring the satisfaction of the reader
noproblem the design proposed is the natural way anyone would go around solving those issues for example creating separate yaml files for different languages and then picking up the strings from there   
noproblem looks good only view files are involving the changes
noproblem well designed
noproblem the design seems sound the team plans to add all translations of the static variables in a separate folder i think that this could potentially increase the response time of the system i would like to see this design in action before making a judgement
noproblem the document does not go much into the technical details the limited details provided sounds right however more research will generate better understanding
noproblem the team have showed what they plan to do in the diagrams
noproblem the diagrams describe the functioning of the project exceptionally
noproblem screenshots are helpful to understand the flow and their work
noproblem screen mock up s are good   
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem    this wiki is dope they analyze the requirements for the github metrics they would need and walked the reader through their design considerations it seems like they have a thorough understanding about how to do this project
noproblem well done on adding almost everything   
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job  
noproblem all the required part is in the document
noproblem i think the diagrams shown include where you intend to add the metrics but not how all the metrics will be incorporated in the next phase make sure to include details for each of these total number of commits number of files changed lines of code added lines of code modified lines of code deleted locs that survived until final submission exclude from mvp due to the complexity and lower priority
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem yes
noproblem includes all the functionality   
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc   
noproblem    the design contains   all of the functionality required
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens  
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together   
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed      
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem uses uml diagrams and images to explain where the changes will be made
noproblem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem well written
noproblem i think they have done a great job on this doc it complete and detailed
noproblem very robust nearly cover every thing
noproblem yes i believe they have included all of the required functionality   
noproblem the design document addresses all the functionalities and even the implementation details in the specification
noproblem    looks good
noproblem most of them are included
noproblem the document does say what they re going to do and that fits fully with the project description
noproblem yes
noproblem the team have given a proper explanation of how the things will be implemented by specifying the files that needs to be modified the team have written it in a good manner which is easy to understand
noproblem their explanations are detailed and easy to understand
noproblem the authors have proposed changes in the   offscreencanvascontextrendering2d webidl by implementing it similar to   htmlcanvascontextrendering2d implement blob api and support webgl contexts as in   webglrenderingcontext the explanations are quite convincing though a little more detail including background specifications would have made the documentation more cogent   
noproblem the explanation is nicely written
noproblem nearly perfect
noproblem yes the designs appears to be good to me
noproblem uml diagram is clear
noproblem the design doc is clean and neat it specifies the issues and prospective solutions which are easy to follow
noproblem the design looks almost complete in terms of solution wise details covered
noproblem yes it incorporates all the functionalities
noproblem yes it incorporates all of the functionality required
noproblem they have covered mostly all the problems mentioned and given a tentative solution
noproblem yes the design doc incorporates all of the required functionalities
noproblem the design incorporates all of the functionality required some edge cases are also listed good job
noproblem the explanations are adequate and easy to follow
noproblem explanations are satisfactory and they they have provided multiple solutions for each problem which is good
noproblem    the explanations given for the design are quite succinct and dont go into much details they are just giving a high level overview of the system some of the explanations are thorough in nature kudos
noproblem thye provided a lot of solutions which is great
noproblem adequate explanation is provided for each problem   
noproblem since they have not come up with a perfect solution it seems they have been working on that
noproblem changes are adequately explained easy to follow
noproblem though the solutions proposed are at a very high level it does make sense i can t comment on the actual implementation because there isn t much info on that
noproblem no problem found
noproblem it looks more or less right in the sense that the proposed changes are exactly what is required to be done in the project
noproblem the flow seems feasible
noproblem as the project is in the initial stage there is no technical description however i see from the document that their thought process is on the right track   
noproblem the new design seems to take into account decreasing response time
noproblem everything has been described well and in details
noproblem at current state the design doc has project problem project solution and design diagram and each section has detailed description of the project
noproblem the document is well structured and provides all required information   
noproblem the document explains what was asked for
noproblem yes everything is incorporated
noproblem all functions required are stated in the design document which include search for user assignment questionnaire and reviews
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem yes it does they have explained the propose solution as well for each issue
noproblem yes almost everything seems perfect only a little more explaination is required
noproblem the design incorporates all the basic functionality
noproblem yes almost all types of search functionalities are covered
noproblem the design implements all the defined functionality elaborately
noproblem yes the design incorporates all of the functionality required and also gives the possible solutions
noproblem the quality of explanation is good and adequate
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem good explanations easy to follow
noproblem overall    the design   proposed seems good
noproblem yes the changes are completely feasible
noproblem did not see much info on the files or classes the changes proposed so its hard to comment here
noproblem code level details are not covered in this doc but the high level approach looks fine to me
noproblem yes they have provided an uml diagram which follows convention and explains their approach
noproblem the team has added sufficient diagrams for the reader
noproblem the diagrams are succinct and well understood
noproblem the er diagram is very well done it encompasses all the classes and their attributes also the use of different shapes like diamond square etc is great   
noproblem uml is missing but er diagram is given you can add a uml diagram it explains things better   
noproblem the e r diagram seems to deliver the task
noproblem not required for this project
noproblem they have depicted their working strategy through an er diagram however i would suggest them to include more uml diagrams to enhance understandability also the er diagram is somewhat incomplete
noproblem there is an er diagram which defines the relationships in the system
noproblem document is very well written and contains all the details like problem statement solution files to be modified testing plan
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a use case diagram will be useful to add
noproblem design doc contains everything in clear explanation
noproblem it incorporates all the functionalites
noproblem the wiki is detailed enough that it mentions all the functinoalities required in the project the team has made sure to not miss out on any functionality and they even took out time to list the column names in each report they would add the sort feature to good work guys
noproblem i think the authors have incorporated most of the functionality in the design document
noproblem design document contains all the functionality required
noproblem the design document   lists every issue that is being addressed in the project providing comprehensive details on the functionality that is required for each one
noproblem changes look good
noproblem it is easy to follow the changes that the authors have proposed
noproblem adequate explanation was given
noproblem the explanations can be more detailed overall understandable
noproblem team have shared the link for the tablesorter which explains the functionality
noproblem need some diagram or prototype   
noproblem mainly needs html files to be changed and they have mentioned them which looks good  
noproblem the design proposed by the authors appears to be sound since this project is only to sort the views there will be no code added to either the models or controllers i hope the team only adds one sorting function per view and allows that one function to handle sorting for different columns in that view
noproblem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly the team is using one of the existing gems in their design
noproblem the solution looks like it doesnt add any overhead and the doesnt make the code smelly
noproblem the solution seems right
noproblem the team has not mentioned about how they are planning to do the changes
noproblem the design data includes most of the important information required to understand the teams plan
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a uml diagram may prove to be useful
noproblem good job on ui and test cases kindly add uml diagram
noproblem the project documentation looks complete with clear details about the purpose to enable the students to better analyze their review based on the suggestion metrics like   volume sentiment suggestion praise and criticism metrics they have delineated the design that includes the files that the team proposes to change the view    app views response response html erb and the partial app views submitted_content _self_review html erb the screenshot of the existing ui of the review section and how the ui would look after the project with the inclusion of a button to analyze and they have specified that a popup displaying the suggestion metrics will emerge when the button is clicked    i specifically like how the test plan includes their feature in the connextra format they have mentioned 2 scenarios one where the student clicks the button without entering text in which case the popup alerts the reviewer saying no text for analysis and the regular scenario when the user clicks the analyze button after entering text in which case the popup displays the suggestion metrics i wish to suggest an additional scenario where the user can intuitively test the quality of the suggestion metrics based on the review input like for example there can be test cases which show that the suggestion algorithm detects generic reviews that might be seemingly relevant to the topic but add no customization to the project being reviewed like how some reviewers menially copy paste the same format of the review to all projects with just minor changes overall the team has done a great job with the documentation and i look forward to see the implementation of this project in the upcoming review   
noproblem the design doc is clean and neat it specifies the issues and prospective solutions which are easy to follow
noproblem yes the documentation looks complete   and states the project purpose and solution are stated the project design could be described in more detail
noproblem i cannot find any project purpose but they did provide a lot of solutions to problems
noproblem the design looks almost complete in terms of solution wise details covered
noproblem yes it incorporates all the functionalities
noproblem yes it incorporates all of the functionality required
noproblem they have covered mostly all the problems mentioned and given a tentative solution
noproblem yes
noproblem yes the design doc incorporates all of the required functionalities
noproblem the design incorporates all of the functionality required some edge cases are also listed good job
noproblem the explanations are adequate and easy to follow
noproblem explanations are satisfactory and they they have provided multiple solutions for each problem which is good
noproblem    the explanations given for the design are quite succinct and dont go into much details they are just giving a high level overview of the system some of the explanations are thorough in nature kudos
noproblem thye provided a lot of solutions which is great
noproblem adequate explanation is provided for each problem   
noproblem changes are adequately explained easy to follow
noproblem no problem found
noproblem it looks more or less right in the sense that the proposed changes are exactly what is required to be done in the project
noproblem the flow seems feasible
noproblem as the project is in the initial stage there is no technical description however i see from the document that their thought process is on the right track   
noproblem the new design seems to take into account decreasing response time
noproblem the design doc is complete and clearly indicates the project objectives the test plan indicates what aspects are to be tested and screenshots of the proposed analyze button are also posted
noproblem the document is complete and very clear
noproblem the doc is complete and everything is included very well written
noproblem the design document gives details about the problem statement and gives an idea about what is to be done in the project it specifies what files will be modified and the test plan also contains 2 scenarios mentioned no suggestions   
noproblem yes i think the document includes everything as expected
noproblem    yes the wiki appears to incorporate all of the required functionality we want students to know if they re giving helpful feedback and we want the nlp algorithm to be local to the expertiza project to decrease its reaction time they have at least shown that they are going to add buttons
noproblem i could not spot the problem statement of the proposed project in the google doc containing the list of problem statements but on reading the team s design documentation on the wiki page i m quite satisfied with the functionality that they plan to include in addition to elucidating the main functional requirement of the project namely the implementation of the suggestion algorithm the team has also proposed a non functional requirement of improving the performance and response time of the time it takes to generate the suggestion through the web service
noproblem yes the design document incorporates the   plan to implement the functionalities as stated in the problem statement
noproblem yes all changes are incorporated and explained well
noproblem the design incorporates most of the functionality required it would be nice to have a design diagram
noproblem yes they have discussed about all the functionality
noproblem yes   
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions   
noproblem the authors have mentioned including analyze buttons for sentiment analysis of different parts of the comments i think the rationale for this is very good because if they were to send all of the comments at once as input to the api the results would be a mix of the sentiments of all the different comments and would therefore not be accurate also this way i think that the response time of the system would not be affected by a whole lot
noproblem the explanation   is good and clearly indicates the project objectives
noproblem i am able to understand the purpose of the project
noproblem please add more information on the nlp algorithm team is trying to use
noproblem the team has has listed the 2 files that they propose to change namely    the view    app views response response html erb and the partial app views submitted_content _self_review html erb however they could have described what these files currently do and their purpose in the documentation the authors have embedded screenshots of how the ui of the review page will look after the analyze button will be included they have specified that a pop up showing the suggestion metrics pertaining to a review namely    volume sentiment suggestion praise and criticism metrics will be generated once the button is clicked
noproblem the explanation   is pretty good i particularly found the images explaining what all they are going to add pretty intuitive
noproblem changes are explained well suggestion detection algorithm an be explained a bit more or how exactly you will be using it probably some code snippets would help explaining that
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem the explanations are lucid
noproblem the design seems to be following dry principle   
noproblem i don t think the authors plan to add methods to a wrong class they seem to be working on the right class namely review and its associated view page review html erb that exactly pertains to their project the response time might potentially increase with this new feature but fortunately the team has proposed to work on optimizing the suggestion algorithm so that it does not take forever to execute the team has done a good job on the design documentation
noproblem the design appears to be sound and wouldn t conflict with the existing classes or methods   
noproblem 2 html files require change i don t think it will affect anything
noproblem yes it completes functionality
noproblem yes the design seems to follow all of the functionalities required it looks like they have gone through the project description in a good manner
noproblem the design incorporates all of the functionality required
noproblem the team has done a good job in explaining the project and its purpose with the design and files that need to be changed however    test plan is provided
noproblem nice flow chart
noproblem the design has pretty much covered all the functionalities in the doc
noproblem yes    design incorporates almost all the functionalities that should be tackled as per problem statement   
noproblem yes they are trying to incorporate all the requirements
noproblem yes it   incorporates all of the functionality required
noproblem yes
noproblem no design provided use case diagrams have the functionality explained
noproblem the team did a great work in understanding the requirements and have included the design for all the requirement mentioned in the requirement document
noproblem the design has pretty much covered all the requested functionality   
noproblem the chart is very clear
noproblem no changes proposed
noproblem the team has explained the implementation design strategy in detail the design was explained with all the required details and was very easy to understand   
noproblem not everything
noproblem yes it looks good
noproblem yes document incorporate all the functionalities mentioned in the problem statement assign   
noproblem 1 team technically understand the change and proposed solution does not lead to adding methods in wrong classes 2 new design should not make the code smelly 3 changes are logical and proposed solution is reasonable enough no gem required 4 it should not increase response time 5 no the plan is nice and should be taken forward   
noproblem the design document contains all the functionality required
noproblem the design does incorporate the functionalities required it is descriptive and easy to understand
noproblem no problem   found
noproblem the design incorporates all the functionality which are required   
noproblem no design proposed
noproblem the screenshots posted give a clear picture of the intended output it would be nice to have a design diagram
noproblem it would be better to add more diagrams
noproblem changes proposed by authors are viable
noproblem it was easy to follow   
noproblem can t comment on it right now
noproblem adequate diagrams are given explanation of problem statement done well
noproblem looks fine
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach  
noproblem all necessary sections are present
noproblem yes the uml diagram have been correctly implemented and help in understanding their approach
noproblem yes gives clear understanding   using the use case diagram
noproblem uml diagrams are drawn well to explain the flow so the diagrams help in explaining the project flow
noproblem screenshots which were included was explanatory more figures such as logic flow wireframes etc can be added for better understanding
noproblem visual aids   are great
noproblem yes the design incorporates all of the functionalities
noproblem incorporates intended functionality
noproblem the team has submitted diagrams and screenshots that explain what is expected from the solutions      
noproblem yes their design has all of the functionality that are required
noproblem the document contains a   flow diagram that analyzes the system s requirements and expected flow however it can certainly make use of other uml diagrams in the expected flow section   to give more clarity about the requirements and the sequence of actions   
noproblem the team did a great work in explaining the requirement with the help of flow chart which helped in better understanding of the requirements and proposed design
noproblem the diagrams are clear enough to help me understand the flow of the project   
noproblem yes
noproblem the design has a good design flow diagram which is clear and concise
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions   
noproblem yes
noproblem it would be better to add some uml diagrams
noproblem changes suggested look good
noproblem the changes proposed for the class performance is adequate and explains the files to be changed what changes from the controller perspective and views perspective no particular suggestions proposed
noproblem the team proposed to add a bar graph to give a pictorial view of the scores and indicate the performance of students
noproblem the changes proposed by the team include implementing a bar chart stacked or single based upon the project description it is advised that the team look for other alternatives like pie chart that would help to span the   results   with a minimal look            
noproblem a simple enough explanation has been provided for the functionality    no suggestions
noproblem for now the design proposed looks perfect
noproblem design flow looks good
noproblem the authors seem to have studied the code well and have thought of a good plan to implement the project they also seem to follow dry principles while adding and changing code also the new design flow is quite simple and easy to understand which can be implemented without any high degree of convoluted code
noproblem the design changes as described are sound they are mostly on javascript for the visualization and dont potentially make the code smelly
noproblem the uml diagram included here is a flow chart diagram which explains the process of how the instructor will be able to see the visualization and is easy to understand the flow
noproblem design flow diagram is included indicating the flow which is good
noproblem the uml diagrams is great which is clear and easy to understand
noproblem the team has provided a flow diagram that helps to infer the structural outline of the project the scope of the project can be perceived from the diagram
noproblem two graphs provided provide a good understanding of the   process and what expected visualization should be more diagrams would have been helpful
noproblem the team has presented a detailed explanation of   all the topics in the documentation
noproblem following can be added project introduction motivation description of project
noproblem the document includes the problem statements and proposed solutions of all the issues all the proposed solutions have test plans as well
noproblem the design does corporate all the functionalities required
noproblem yes the doc covers every functionality   and detailed description of the approach to deal with the issue   
noproblem the design proposes solutions for all the issues every issue is well described and flow diagrams are provided for the solutions
noproblem they have each listed bug explained at the very least and most have a resolution pathway a
noproblem the document incorporates all of the functionalities as mentioned in the google design document the team have made sure to list explain and provide proposed solutions for each bug to be fixed good job guys
noproblem yes i think it includes everything all the functionalities required   
noproblem the design incorporates all the functionality required suggestion including screenshots or screen mockups would make the document easier to understand
noproblem yes they have incorporated everything they have explained the solutions as well
noproblem it lists out all the functionalities in the problem solution and looks very clear and very elaborate with codes and diagrams
noproblem the team has included all the 5 issues as stated in the project description google doc the team has provided solutions for all these issues as well the solutions are descriptive and easy to follow
noproblem the design document separately   describes   every distinct issue and in some cases even provides possible finalized fixes to the source code
noproblem the authors have listed all the proposed changes in the problem solution i was able to understand it without any trouble    overall quality of the proposals is good
noproblem the document is very impressive and provides detailed description of all the proposed changes explanations and steps given are easy to follow no suggestions
noproblem well after reading all the proposed solutions i think they look good and the explanation behind all of them are satisfactory as well
noproblem for the bugs which have explanations the proposed fixes and explanations of the problem are sound i d like more info on bugs 1017 and 1072 as they only have the flow
noproblem the good thing about this wiki is that the proposed solution sections is brilliantly explained the team have clearly mentioned all filenames where they propose to make changes drawn diagrams to illustrate the flow control and added snippets of code where necessary brilliant
noproblem the explanations are well written and describe the workflow well there could have been a little more detail in the explanation as some of the statements are very high level
noproblem the changes mentioned seems to be well thought and written as they are well explanatory with adequate description the doc covers all the issues
noproblem the designs proposed makes some sense as they are backed up with diagrams to make them very clear of their approach
noproblem honestly in my opinion the team has given a lot of thought into how to fix the bugs the design proposed solutions look completely logical and should fix the bugs with no least redundancy it also looks like the team has already managed to fix a few bugs as well kudos to them
noproblem the proposed solution would be the best approach to tackle the issues in my opinion they would not make the code smelly or complicated
noproblem for now design plan looks good enough
noproblem it appears to be sound      
noproblem the diagrams that are provided in the document visualize the workflows of different actors that pertain to the given issues they are definitely helpful for the reader to understand the scope of the problem that is being addressed
noproblem the team has provided flowcharts which makes it easier to understand their solution the provided diagrams seem enough for the reader to understand the solution
noproblem visual aids are used properly and very helpful in understanding uml diagrams follow the convention everything looks proper
noproblem uml looks good explains whats happening
noproblem they have included flowcharts for each proposed solution the flowcharts can clearly explain the work flow
noproblem all the diagrams are great and none feel extraneous
noproblem the diagrams provided clearly explain the flow control of the proposed solutions the team even mentions preconditions needed for the flow control the only suggestion i have is that the team could also add a low fi sketch or screenshot of how the view would like after before after issue 1008 is fixed
noproblem flow diagrams are well thought of and explain the workflow well adequate details are given for each diagram
noproblem diagrams are proper precise and detailed to understand the behaviour of the system currently and after making changes good effort in making the diagram and wiki
noproblem the design looks fine but no explanation as to why this is done is it already existing or is this a new feature
noproblem the uml is good liked the way they have clearly mentioned the functions
noproblem the step by step instructions are detailed and is good
noproblem yes the design looks complete
noproblem implementation details haven t been added yet but that s fine as it hasn t been started yet
noproblem a very nice uml diagram is added explaining the cases
noproblem yes the design document incorporates all the functionalities stated in problem statement   
noproblem document is explained well also the flow of document is good team can add screenshots of existing documents also some diagram to explain the solution well
noproblem 1 authors solution do not seem to create methods to wrong classes 2 new design code does not make the code smelly 3 no new gem required explained solution is adequate 4 proposed design should not hamper system performance 5 well efforts expended on the design   
noproblem the team has   done a commendable job in creating a very detailed   uml diagram and explaining the case of every user very well
noproblem test   plan is to be added but the purpose and the design are coherent and easy to follow
noproblem includes everything as far as i can tell
noproblem the proposed flows and project tasks are sufficiently detailed that i can understand the relationship between the issue and how they re going to solve it in each step
noproblem i don t have any issues with the design looking forward to seeing some code snippets to understand it better
noproblem the high level design which is needed to start with the work looks prominent as the project proceeds few intricacies resulting due to design conflicts scalability need to be addressed as and when required but the team has laid out a solid foundation to begin with
noproblem the authors have explained the workflow very well with respect to the different types of users involved in the particular feature the language is simple to follow
noproblem use case diagram adds extra weight to the design since the visuals always help the reader to relate the project well
noproblem the design does incorporate the functionality required of making reviews public allowing the students to toggle the visibility of review submitted it is descriptive and easy to understand
noproblem the proposals given by the team are reasonable and adequately cover the features to be established during the course of the project the changes suggested follow the desired requirements   
noproblem as mentioned in their approach section the team decided on adding some functionalities like checkboxes and views i find these changes perfect for the problem statement given
noproblem they have used a use case diagram to explain flow i found it quite understandable and all the steps are clearly drawn out in the diagram it clearly explains the steps required to approach a situation
noproblem the explanations are very clear and easy to follow they give the idea of how team intends to approach the feature
noproblem i think overall it looks good however a bit more low level details may give better insight about such issues
noproblem yes it does
noproblem created a great visual aid which helps us explain the plan
noproblem document is very well written and contains all the details like problem statement solution files to be modified testing plan
noproblem the write up is very minimal i think it should elaborate made  
noproblem it says what they will do but it seems high level would appreciate some diagrams or mockups
noproblem design doc contains everything in clear explanation
noproblem it incorporates all the functionalites
noproblem though the pull request has been passed but the writeup does not explain the details of the implementation like what sorting algorithm the team has implemented using jquery etc the design part of the writeup is very hollow and needs further refinement
noproblem the wiki is detailed enough that it mentions all the functinoalities required in the project the team has made sure to not miss out on any functionality and they even took out time to list the column names in each report they would add the sort feature to good work guys
noproblem i think the authors have incorporated most of the functionality in the design document
noproblem design document contains all the functionality required
noproblem please add more details about the solution how to code for that functionality is yet to be thought of
noproblem yes as per the solution provided it does seem that the design incorporates the required functionality it considers sorting on all the specified fields suggestions since you have mentioned the use of jquery tablesorte you may also add explanation as to what is tablesorter and try explaining atleast for one field e g name as to how does it work to sort the entries      
noproblem the design document   lists every issue that is being addressed in the project providing comprehensive details on the functionality that is required for each one
noproblem changes look good
noproblem could use more detail
noproblem it is easy to follow the changes that the authors have proposed
noproblem adequate explanation was given
noproblem solutions have been proposed how they are going to do that is not mentioned
noproblem team have shared the link for the tablesorter which explains the functionality
noproblem the authors provide a list of files that will be modified in the scope of this project and a high level overview of what needs to be done the rationale behind using a   tablesorter jquery library and defining the code in the script seems reasonable but the team needs to discuss more   details to further clarity   the solution   
noproblem need some diagram or prototype   
noproblem mainly needs html files to be changed and they have mentioned them which looks good  
noproblem as mentioned above the design part is pretty weak for a writeup and needs to be further worked upon
noproblem the design proposed by the authors appears to be sound since this project is only to sort the views there will be no code added to either the models or controllers i hope the team only adds one sorting function per view and allows that one function to handle sorting for different columns in that view
noproblem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly the team is using one of the existing gems in their design
noproblem the solution looks like it doesnt add any overhead and the doesnt make the code smelly
noproblem the solution seems right
noproblem the team has not mentioned about how they are planning to do the changes
noproblem wrtie up clearly explains the project purpose what changes needs to be made however including a mock test plan would have been better
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem    this wiki is dope they analyze the requirements for the github metrics they would need and walked the reader through their design considerations it seems like they have a thorough understanding about how to do this project
noproblem well done on adding almost everything   
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job  
noproblem all the required part is in the document
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem get the github pull metrics and show em to a person that person being an instructor
noproblem yes
noproblem includes all the functionality   
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc   
noproblem    the design contains   all of the functionality required
noproblem the explanation was perfectly organized and flowing    could not have been any better a sample request response of github metric api would ve made it more amazing
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem the explanation given by the authors was pretty straightforward looking at the explanations it looks like the authors have thought about different aspects of the problem statement and also of different ways to implement the github metrics integration feature along with the side effects of implementing it in a particular way e g one would think that adding the metrics to the database would be a sound solution but given the nature of an open source project and the fact that students would commit beyond the deadline the authors have thought not to add the metrics to the database which is sound and reasonable
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens  
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together   
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed      
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem uses uml diagrams and images to explain where the changes will be made
noproblem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem the design document states all the required things right from project design to test plan files that will be changed along with how functionality will work flow are included in the doc clearly    suggestion great work no suggestions required
noproblem the design doc is complete all the relevant sections have been added
noproblem document looks complete
noproblem the design doc clearly explains the project purpose project design and the test plan
noproblem design is very nicely explained with flowchart makes the design flow very clear suggestion if a screenshot of actual screen where the change needs to be made is added that would be perfect
noproblem the document is quite comprehensive in its descriptions of the design proposal
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach  
noproblem the design documents contain all required part
noproblem impressive write up flow charts and uml diagrams are well explained detailed explanation of problem statement and solution to be implemented
noproblem yes the document incorporates all the functionality ensuring nothing is missed
noproblem the design incorporates all the required functionality to a good extent
noproblem yes it does
noproblem yes the design incorporates all the functionality required all the issues are explained clearly and their required solutions are also given
noproblem yes all the issues mentioned in the project description are covered along with their proposed solution good job
noproblem design document   has outlined the project requirement and issues they have proposed a solution to each problem they have even figured the files and methods to be modified overall it looks good
noproblem the design contains all of the functionality that required
noproblem yes it is complete
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely no suggestions
noproblem very clear very well organized
noproblem the flowchart makes it very clear
noproblem everything is explained well and easy to understand
noproblem the team has explained the solution with flow charts and code snippets they have even considered the feasibility of their solution which is a good thing as this is a big project so feasibility is a big factor   
noproblem they explained   their plan very well both the visual aid and the word they use are very clear
noproblem adequate information given on implementing the solution flow charts are impressive
noproblem great efforts have been taken to convey what is to be done and how the team will do it the design will definitely increase the response time suggestion information about the methods that will be implemented is not given in the design document availability of such info would have been helpful
noproblem though i couldn t follow everything overall the design seems to do the right thing
noproblem as stated above all the references needs to be checked as signup sheet controller is populating the database and every field should be available to maintain consistency
noproblem there is nothing wrong in current design looks good suggestion however since i have already worked on a similar assignment so i know that similar issue has already been resolved for drop topic deadline you can reuse the entire code and just change deadline type have a look at oss project topic 1843    check with the professor once
noproblem all proposed changes seem to be in line with good coding practices and the expertiza system guidelines
noproblem their solution sounds good   
noproblem the design they have right now looks good to me it does not have any issue
noproblem not show which method
noproblem the use of flowcharts   describe the functioning of the project exceptionally suggestion including screen mockups to your doc will add more weight to it
noproblem clearly defined uml 1
noproblem uml diagrams mentioned are excellent and to the mark
noproblem diagrams are very clear and well explained
noproblem no diagrams shown
noproblem one of the best wikis i have reviewed with good diagrams and explanations the flow diagrams are really good kudos
noproblem the flowcharts used are very good and do a great job of conveying the intended purpose of each solution presented
noproblem they have used uml diagram and flowcharts which aided in understanding their approach and the logic
noproblem their visual aid is well designed and high quality it helps the reader understand their total design very well
noproblem uml diagrams are well formed flow charts are easy to understand looks like the team has thoroughly understood the problem statement   
noproblem no such things like uml
noproblem the design document looks really good all sections are properly described screenshots included a possible uml or workflow diagram would have been appreciated
noproblem all the features are mentioned in the design document it explains the background and the approach that they are going to take to create the view aggregating all the information
noproblem very well maintained and explained
noproblem the document is complete and well structured they have also incorporated the prototype comments and mentor s feedback   
noproblem this documentation is the first one to clearly give a background for the project out of all the documentations that i have reviewed until now kudos to the team for taking that extra mile they have clarified the purpose of this project under the task heading as to provide a holistic insight into the performance of each student in a class as an objective the project design includes the view and controller section that projects the requirements of the project i like how the team has listed all the information to be presented in the grade summary the documentation finally contains the test plan where they propose to do controller tests to check if the correct model method is called and if the objects of appropriate datatype are returned and also if the correct view is rendered they have also listed 2 feature tests to see if the correct information is being rendered on the view the team could have added more such tests like to test if the sorting functionality works fine
noproblem the document is well made with necessary snapshots
noproblem the design doc submitted is pretty neat and contains all the necessary information   to understand the requirements of the project
noproblem the design doc is clear and well written the authors have done a great job explaining the project s purpose and their design plan with the use of lofi sketch and prototype for the required view i would suggest the team to include files that are involved for this project overall good work
noproblem the design doc is complete and clearly includes all details about the project
noproblem complete and well explained impressed by background paragraph also the screenshot of problem statement and solution is thorough
noproblem this design documentation is very crisp and clear explained in detail and well organized
noproblem yes the design document does incorporate all the functionality there are proposed test plans so expecting more screenshots with test cases in it
noproblem yes it includes all the functionality
noproblem yes it incorporates   with the functionality  
noproblem yes
noproblem the design does incorporate all of the functionalities one suggestion that i can give in the context of the design is that the documentation could have covered the list of files that they plan to work on and the current version of that code they could have shown a uml diagram of the flow of activities for a lucid understandability  
noproblem yes according to the given link the design has incorporated all the requirements and mentioned their test plan as well
noproblem the design incorporates all the primary functionality however adding a uml diagram would make it much better
noproblem yes i do not find any information missing
noproblem the authors have incorporated all the functionalities required
noproblem the proposed changes look good explanations are clear also mentioned the continuous talk with mentor to come up with a prototype suggest you to include screenshots of some positive and negative tests in the future submissions   
noproblem adequate explanation is provided they also mention what tests are feasible to be performed
noproblem yes all of them are implemented with good quality of explanation
noproblem explanations are very clear and simple to understand
noproblem the proposed implementation design is elaborate and clearly defines what the team plans on doing   
noproblem the explanation   is good and more information on which files would be changed would be more helpful
noproblem very well explained solution with lofi sketch
noproblem the explanation is very detailed and easy to understand   
noproblem design appears to be good   
noproblem well designed
noproblem proper design as well as test features are mentioned
noproblem according to me the given design incorporates all the expected outcomes without disturbing the current functionality
noproblem looks like a lot of effort will go into the view
noproblem the document explains where the changes will be made and also gives screenshots of the appropriate views
noproblem screenshots are helpful to understand the flow
noproblem screenshots and visual ques are provided to the user
noproblem the screenshots posted on the wiki page provide a clear picture of what the team seeks to achieve
noproblem very well explained with sketches and uml diagrams the diagrams are detailed and easy to understand
noproblem even thought there aren t any uml diagrams the team has added a wire frame design of the proposed page and it has helped in visualizing the solution
noproblem yes
noproblem the project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application
noproblem no everything is properly described
noproblem the doc is very succinct and well written      
noproblem the team has included all the topics required for the documentation
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem the explanation is descriptive and explains the logic behind the solution which is think should work however i believe that team should can add the explanation about the files and classes they tend to make changes in the team can now focus on implementation of the code
noproblem yes it incorporates all the required functionalities along with the test cases
noproblem yes the required functionality is covered with details in the document
noproblem yes i believe they have included all of the required functionality   
noproblem yes their sections method to calculate composite score and application flow sections have a flow chart as well as at least a targeted section of the code which they have planned to work upon   
noproblem no not all but major of all functionalities
noproblem the design incorporates all of the functionality required
noproblem the team has suggested reasonable changes to address the problem statement and has given explanation for each solution they have proposed for the implementation
noproblem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
noproblem the project purpose is well defined and clearly explains what this project aims to do the team also identifies the strategies they wish to adopt to fix the issue this explanation is clear and concise however i would also suggest the team to add a basic test plan on how they would test the functionality they add also i suggest them to list down the list of files they would be changing
noproblem the authors propose changes in an extremely concise manner the idea that the team proposes to follow seems logical but i would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well such as this 1 review x is submitted 2 loop through review 1 n if abs review n score review x score some value store review n url in list   
noproblem the authors propose a sound logic to improve the functionality required however i would suggest the team to think about looping over each and every review this may increase the response time of the system perhaps more interaction with the instructors could help the team come up with a less complex solution
noproblem the changes are much that is required just some calculated approach of the score which the author has mentioned and seems will be working
noproblem the document seems complete
noproblem could be more specific especially with test plan
noproblem just overview is presented which is explained properly the technical design is not explained in depth
noproblem the design is rather straightforward incorporates all the functionality required
noproblem changes are suggested in a well manner but could have been explained in more details
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the changes are clearly stated and represented   
noproblem yes they include project purpose project design and testing plan it s a little short it s suggested that add more details   
noproblem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
noproblem the design appears to be complete
noproblem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
noproblem the design appears to be perfect for now   except for the flow diagram
noproblem this design is good there are no visual aids maybe they can consider use it to make it more detailed
noproblem the design gives a proper explanation of the behavior of the system functionality
noproblem the design covers the functionalities but there seem to be no concrete solutions for the same some more explanations is expected
noproblem although it looks like a good start the team can still improve on the design by adding a uml diagram and a test plan there is a need for a low level design explanation   so that others can understand the technical details of the implementation
noproblem have explained the project as according to the given description
noproblem no uml diagram is provided so cant comment
noproblem yes the designs appears to be good to me i believe the diagram shown in wiki helped me to understand their understanding
noproblem the design looks reasonable for me
noproblem the application plan diagram has been shown it distinguishes between instructor and student
noproblem i really like the flow graphs the helped me understand what you are aiming to do
noproblem the flow diagrams are well written and it is easy to understand just looking at them
noproblem the document seems complete
noproblem not explained properly
noproblem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
noproblem the design is rather straightforward incorporates all the functionality required
noproblem have explained the project as according to the given description
noproblem no changes
noproblem not much described to rate over
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem it looks to me from the document that the authors are clear about their implementation suggestion they can elaborate more by specifying how do they intend to store the urls to the reviews how are they identifying the two distinctly different reviews they can also add a basic flow of their proposed solution this will enhance the explanation
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the design appears to be complete
noproblem the explanation is descriptive and explains the logic behind the solution which is think should work however i believe that team should can add the explanation about the files and classes they tend to make changes in the team can now focus on implementation of the code
noproblem the team has done a fantastic job in explaining the design in the initial stage they have the current scenario and what they plan to do in the project
noproblem it is extremely detailed eagerly awaiting updates on implementation and on code snippets as and when they happen
noproblem nice wiki page
noproblem the design doc is fulfilled and written pretty well
noproblem the design doc is completed and gives exact information on what authors are gonna do
noproblem    this wiki is dope they analyze the requirements for the github metrics they would need and walked the reader through their design considerations it seems like they have a thorough understanding about how to do this project
noproblem well done on adding almost everything   
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job  
noproblem all the required part is in the document
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem get the github pull metrics and show em to a person that person being an instructor
noproblem yes
noproblem includes all the functionality   
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc   
noproblem    the design contains   all of the functionality required
noproblem the explanation was perfectly organized and flowing    could not have been any better a sample request response of github metric api would ve made it more amazing
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem very good explanation and good work on giving alternatives it would have been great if the team had added db design as well but the work done is sufficient   
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem the explanation given by the authors was pretty straightforward looking at the explanations it looks like the authors have thought about different aspects of the problem statement and also of different ways to implement the github metrics integration feature along with the side effects of implementing it in a particular way e g one would think that adding the metrics to the database would be a sound solution but given the nature of an open source project and the fact that students would commit beyond the deadline the authors have thought not to add the metrics to the database which is sound and reasonable
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens  
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together   
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed      
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem proper use case diagram have been added for next submission team can add uml diagrams
noproblem uses uml diagrams and images to explain where the changes will be made
noproblem there are different diagrams being used 1 use case diagram which describes the flow of how different users would navigate to the github metric pages 2 mockup of their implementation which details the presence of a separate tab for github metrics integration they also plan to add some graphs which i think would be very useful to the instructors
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem well done on adding almost everything   
noproblem the document is complete the authors have mentioned each functionality in detail also the test plan in explained thoroughly
noproblem a very well written document great job  
noproblem all the required part is in the document
noproblem yes detailed ui mockups were very impressive the use case diagrams and explanations are well written
noproblem yes the document covers very required functionality
noproblem yes
noproblem yes it does
noproblem yes
noproblem includes all the functionality   
noproblem yes as far as i understand the document cover all the functionality given mentioned all the github metrics mentioned in the requirements doc   
noproblem the design doc does mention all of the functionality that the team is supposed to implement along with the different ways they can implement the same
noproblem    the design contains   all of the functionality required
noproblem the explanation was perfectly organized and flowing    could not have been any better a sample request response of github metric api would ve made it more amazing
noproblem the authors proposed in a great detail
noproblem explanation   is quite easy to understand
noproblem    they clearly understand this software design process and expertiza than me so i trust their judgement
noproblem very good explanation and good work on giving alternatives it would have been great if the team had added db design as well but the work done is sufficient   
noproblem they authors have explained it well they have also mentioned which gems eg oktokit ruby toolkit for github api that they plan on using
noproblem very good authors have provided all explanations with adequate screen shots and now and after screens  
noproblem    the team explained   them design very well it is easy to follow their idea
noproblem no problem found they are trying to implement the dry principle
noproblem as far as i can tell it does not appear that the authors will add unnecessary classes and potentially smell up the code base
noproblem design is good
noproblem    all the design looks reasonable   right now
noproblem the team has done a wonderful job in including uml diagrams and visual aids
noproblem the visual aids have been well put together   
noproblem the chart is also in a great detail
noproblem visual aids are present which perfectly helps us explain the plan authors have proposed      
noproblem    super legit use case diagrams some of their pictures even had colours i liked that
noproblem yes the doc has use case diagrams and screen shots this is very good and eases understanding
noproblem    both the use case diagram and the screenshot they provide helped me understand their purpose
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach  
noproblem the design doc contains project purpose project design and testing plan in the wiki the wiki contains mock visualizations which make it easy to understand the project proposal and how are they planning to do the design flow as a flow chart adds to the ease of understanding the test plan explains about the technologies that they are planning to use for testing suggestion    the test plan could say what should be done in testing than just the technologies to be used for a particular part of code for ed we plan to have a dummy small data and see if the graphs output the visualizations correctly if the sum id being counted to 100 of the class participation etc the stacked version could also have been represented for better understanding
noproblem the document shows the flow of work really well however i would like to suggest to put more of test planning and the tools and technologies that will be used this will enhance the quality of the document to a great extent
noproblem the design doc is good and provides a clear picture about the objective of the project however it would also be nice to know what features would be tested in the test plan
noproblem all necessary sections are present
noproblem yes the design incorporates all of the functionalities
noproblem incorporates intended functionality
noproblem yes their design has all of the functionality that are required
noproblem the design document has included all the functionality that is required by the project description
noproblem yes
noproblem the design has a good design flow diagram which is clear and concise
noproblem the design follows the basic functionality expected by proposing a bar graph solution for the select criteria it could incorporate the rubrics that the team are planning to target the flow in general does help to understand the project
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions   
noproblem yes
noproblem changes suggested look good
noproblem the team has mentioned all the files that will be changed and have also written a paragraph stating what are the proposed changes the team could also document the changes that are being made to individual code files stating the changes done using code snippets and the reason why the changes are being made also they can talk about what design patterns principle are being used to incorporate the functionality that is being proposed the team could also use crc cards to depict the proposed code changes this will not only help readers understand the report better but also help the team in dividing work between the team members and fast tracking the completion of project
noproblem the changes proposed for the class performance is adequate and explains the files to be changed what changes from the controller perspective and views perspective no particular suggestions proposed
noproblem the team proposed to add a bar graph to give a pictorial view of the scores and indicate the performance of students
noproblem more explanation around only those two graphs are being considered is needed while its early in the project at least what changes will be made to a file could have been mentioned
noproblem proposed changes needs more explanation at the files and system specifically what files needs to be changed and how
noproblem the changes proposed by the team include implementing a bar chart stacked or single based upon the project description it is advised that the team look for other alternatives like pie chart that would help to span the   results   with a minimal look            
noproblem a simple enough explanation has been provided for the functionality    no suggestions
noproblem for now the design proposed looks perfect
noproblem design flow looks good
noproblem the authors seem to have studied the code well and have thought of a good plan to implement the project they also seem to follow dry principles while adding and changing code also the new design flow is quite simple and easy to understand which can be implemented without any high degree of convoluted code
noproblem the design changes as described are sound they are mostly on javascript for the visualization and dont potentially make the code smelly
noproblem the design looks good enough it mostly deals with html erb files to accommodate the graph and some database filtering in the controllers i do not think that the design will increase the responses time of the system suggestion if the details regarding how the graph will be implemented or any gem will be used should have been given i did not find any details regarding about any methods that will be used to implement the functionality that too would have been useful   
noproblem the uml diagram included here is a flow chart diagram which explains the process of how the instructor will be able to see the visualization and is easy to understand the flow
noproblem the uml diagrams is great which is clear and easy to understand
noproblem the design diagram is good and it would also be helpful to have a few screenshots of the current expertiza   view
noproblem the team has provided a flow diagram that helps to infer the structural outline of the project the scope of the project can be perceived from the diagram
noproblem a flowchart and graph has been shown in the documentation    suggestions i feel that there should have been mockups of the screens where the functionality will actually appear team should have shown how the solution would look like on the expertiza page there could have been use case diagrams too   
noproblem two graphs provided provide a good understanding of the   process and what expected visualization should be more diagrams would have been helpful
noproblem the design document gives a clear picture of the intended functionality of the project but it should have included test cases or what would be tested
noproblem yes everything is incorporated
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem the quality of explanation is good and adequate
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem overall    the design   proposed seems good
noproblem the authors do not talk much about the technical aspects of how they are going to implement their work the new design they proposed however seem to go on the right track however not much research is done till now
noproblem just one er diagram add use case and activity flow diagrams
noproblem there is an er diagram helps the reviewer understand the relationship between different sets maybe more screenshot can be provided to show where is the search bar etc
noproblem the entire project flow is well documented along with the basic structural requirements the document aligns with the plan of action and showcases the exact purpose of the project
noproblem the project design doc is complete and specifies both issues and prospective solutions
noproblem the doc mentions the changes to be made in a detailed way along with a proper stepwise explanation of the solution or the approach to be taken plus the screenshots which help in better understanding
noproblem good work good documentation
noproblem the document seems complete
noproblem yes they include project purpose project design and testing plan it s a little short it s suggested that add more details   
noproblem could have been explained more
noproblem the team has included all the topics required for the documentation
noproblem yes in my opinion the team has understood the topic well and clearly listed all the functionality as described in the design document good job
noproblem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
noproblem the design is rather straightforward incorporates all the functionality required
noproblem have explained the project as according to the given description
noproblem the authors propose changes in an extremely concise manner the idea that the team proposes to follow seems logical but i would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well such as this 1 review x is submitted 2 loop through review 1 n if abs review n score review x score some value store review n url in list   
noproblem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
noproblem not much described to rate over
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem it looks to me from the document that the authors are clear about their implementation suggestion they can elaborate more by specifying how do they intend to store the urls to the reviews how are they identifying the two distinctly different reviews they can also add a basic flow of their proposed solution this will enhance the explanation
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the authors propose a sound logic to improve the functionality required however i would suggest the team to think about looping over each and every review this may increase the response time of the system perhaps more interaction with the instructors could help the team come up with a less complex solution
noproblem the design appears to be complete
noproblem needs to work a bit on the plan
noproblem the explanation is descriptive and explains the logic behind the solution which is think should work however i believe that team should can add the explanation about the files and classes they tend to make changes in the team can now focus on implementation of the code
noproblem some screenshots of actual emails sent and proposed format of the new email would be helpful
noproblem the design data includes most of the important information required to understand the teams plan
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a uml diagram may prove to be useful
noproblem good job on ui and test cases kindly add uml diagram
noproblem the project documentation looks complete with clear details about the purpose to enable the students to better analyze their review based on the suggestion metrics like   volume sentiment suggestion praise and criticism metrics they have delineated the design that includes the files that the team proposes to change the view    app views response response html erb and the partial app views submitted_content _self_review html erb the screenshot of the existing ui of the review section and how the ui would look after the project with the inclusion of a button to analyze and they have specified that a popup displaying the suggestion metrics will emerge when the button is clicked    i specifically like how the test plan includes their feature in the connextra format they have mentioned 2 scenarios one where the student clicks the button without entering text in which case the popup alerts the reviewer saying no text for analysis and the regular scenario when the user clicks the analyze button after entering text in which case the popup displays the suggestion metrics i wish to suggest an additional scenario where the user can intuitively test the quality of the suggestion metrics based on the review input like for example there can be test cases which show that the suggestion algorithm detects generic reviews that might be seemingly relevant to the topic but add no customization to the project being reviewed like how some reviewers menially copy paste the same format of the review to all projects with just minor changes overall the team has done a great job with the documentation and i look forward to see the implementation of this project in the upcoming review   
noproblem looks great test plan screenshots are all given uml is missing but i don t think its required as the changes are in html
noproblem the design doc is complete and clearly indicates the project objectives the test plan indicates what aspects are to be tested and screenshots of the proposed analyze button are also posted
noproblem the document is complete and very clear
noproblem the design document gives details about the problem statement and gives an idea about what is to be done in the project it specifies what files will be modified and the test plan also contains 2 scenarios mentioned no suggestions   
noproblem yes i think the document includes everything as expected
noproblem    yes the wiki appears to incorporate all of the required functionality we want students to know if they re giving helpful feedback and we want the nlp algorithm to be local to the expertiza project to decrease its reaction time they have at least shown that they are going to add buttons
noproblem i could not spot the problem statement of the proposed project in the google doc containing the list of problem statements but on reading the team s design documentation on the wiki page i m quite satisfied with the functionality that they plan to include in addition to elucidating the main functional requirement of the project namely the implementation of the suggestion algorithm the team has also proposed a non functional requirement of improving the performance and response time of the time it takes to generate the suggestion through the web service
noproblem yes the design document incorporates the   plan to implement the functionalities as stated in the problem statement
noproblem yes all changes are incorporated and explained well
noproblem the design incorporates most of the functionality required it would be nice to have a design diagram
noproblem yes they have discussed about all the functionality
noproblem yes   
noproblem the design document incorporated all the functionalities that the project is supposed to be implementing    no suggestions   
noproblem i am able to understand the purpose of the project
noproblem    add a button to these questions to analyze them for their helpfulness seems clear to me
noproblem please add more information on the nlp algorithm team is trying to use
noproblem the explanation   is pretty good i particularly found the images explaining what all they are going to add pretty intuitive
noproblem changes are explained well suggestion detection algorithm an be explained a bit more or how exactly you will be using it probably some code snippets would help explaining that
noproblem the authors have mentioned including analyze buttons for sentiment analysis of different parts of the comments i think the rationale for this is very good because if they were to send all of the comments at once as input to the api the results would be a mix of the sentiments of all the different comments and would therefore not be accurate also this way i think that the response time of the system would not be affected by a whole lot
noproblem the explanation   is good and clearly indicates the project objectives
noproblem the authors have not specified any code changes as of now so i can t comment on it suggestion you might want to add any api adapter class you plan to implement to generalize the solution for any future api implementations   
noproblem the explanations are lucid
noproblem the design is likely to increase the response time since api requests take time it is essential to implement a system that keeps track of these api responses and disables this functionality when the api is unresponsive beyond and unreasonable time
noproblem the design seems to be following dry principle   
noproblem the design appears to be sound and wouldn t conflict with the existing classes or methods   
noproblem 2 html files require change i don t think it will affect anything
noproblem no design has been yet proposed by the author however i feel the author is on track to make the right changes by looking at the files intended to be modified
noproblem not much has been talked about the methods to be added but the files specified seems right
noproblem i do not think that the design will increase the response time of the system suggestion i did not find any details regarding about any methods that will be used to implement the functionality that would have been useful the test plan does mention      viewsuggestionmetricsforreviewsegment though if this is the method name then it does not follow snake casing   
noproblem the authors have provided a mock up of their final design which seems pretty good however what s missing is uml diagrams something that would help understand the flow of functionality would be useful
noproblem the screenshots posted give a clear picture of the intended output it would be nice to have a design diagram
noproblem it would be better to add more diagrams
noproblem adequate diagrams are given explanation of problem statement done well
noproblem the design has pretty much covered all the functionalities in the doc
noproblem hard to tell as very little explanation given
noproblem yes    design incorporates almost all the functionalities that should be tackled as per problem statement   
noproblem yes they are trying to incorporate all the requirements
noproblem yes it   incorporates all of the functionality required
noproblem yes
noproblem no design provided use case diagrams have the functionality explained
noproblem the team did a great work in understanding the requirements and have included the design for all the requirement mentioned in the requirement document
noproblem the design has pretty much covered all the requested functionality   
noproblem the chart is very clear
noproblem the team has explained the implementation design strategy in detail the design was explained with all the required details and was very easy to understand   
noproblem the project design has not really been expanded upon so not able to tell
noproblem the reuse of the questionaire class is smart to reduce duplication otherwise the minimal explanations make it hard to judge
noproblem 1 team technically understand the change and proposed solution does not lead to adding methods in wrong classes 2 new design should not make the code smelly 3 changes are logical and proposed solution is reasonable enough no gem required 4 it should not increase response time 5 no the plan is nice and should be taken forward   
noproblem try to give a class diagram inorder to explain   your implementation
noproblem no problem   found
noproblem yes the uml diagram have been correctly implemented and help in understanding their approach
noproblem yes gives clear understanding   using the use case diagram
noproblem uml diagrams are drawn well to explain the flow so the diagrams help in explaining the project flow
noproblem visual aids   are great
noproblem the team did a great work in explaining the requirement with the help of flow chart which helped in better understanding of the requirements and proposed design
noproblem the diagrams are clear enough to help me understand the flow of the project   
noproblem everything has been described well and in details
noproblem at current state the design doc has project problem project solution and design diagram and each section has detailed description of the project
noproblem the document is well structured and provides all required information   
noproblem the document explains what was asked for
noproblem yes everything is incorporated
noproblem all functions required are stated in the design document which include search for user assignment questionnaire and reviews
noproblem yes
noproblem yes they ve included all functionalities
noproblem the design document covers all the possible cases and should be fine
noproblem yes it does they have explained the propose solution as well for each issue
noproblem the design incorporates all the basic functionality
noproblem yes almost all types of search functionalities are covered
noproblem the design implements all the defined functionality elaborately
noproblem yes the design incorporates all of the functionality required and also gives the possible solutions
noproblem the quality of explanation is good and adequate
noproblem the proposed search features are good if all of them are implemented it should more than suffice
noproblem the changes proposed are good and clearly meet the objectives of the project
noproblem good explanations easy to follow
noproblem overall    the design   proposed seems good
noproblem yes the changes are completely feasible
noproblem yes they have provided an uml diagram which follows convention and explains their approach
noproblem the team has added sufficient diagrams for the reader
noproblem the diagrams are succinct and well understood
noproblem the er diagram is very well done it encompasses all the classes and their attributes also the use of different shapes like diamond square etc is great   
noproblem the e r diagram seems to deliver the task
noproblem not required for this project
noproblem there is an er diagram which defines the relationships in the system
noproblem no everything is properly described
noproblem the doc is very succinct and well written      
noproblem the project is complete and sound enough in its approach and the implementations and the test plan has been well devised and just shy of application
noproblem the design incorporates all of the functionality required
noproblem yes their sections method to calculate composite score and application flow sections have a flow chart as well as at least a targeted section of the code which they have planned to work upon   
noproblem yes it incorporates all the required functionalities along with the test cases
noproblem yes the required functionality is covered with details in the document
noproblem yes i believe they have included all of the required functionality   
noproblem the changes are clearly stated and represented   
noproblem the team has suggested reasonable changes to address the problem statement and has given explanation for each solution they have proposed for the implementation
noproblem the author has given a proper explanation of how the things will be implemented by specifying the files that needs to be modified along with how they are going to merge the grades
noproblem the design document states all the required things right from project design to test plan files that will be changed along with how functionality will work flow are included in the doc clearly    suggestion great work no suggestions required
noproblem the design doc is complete all the relevant sections have been added
noproblem document looks complete
noproblem the wiki explains the problem statement very well along with the proposed solution which seems reasonable but the wiki does not include any test plans as of now there are a few test cases which can be used to write the test plan for eg not adding drop deadline for the assignment itself and assigning each topic a drop deadline and check the behaviour of the system
noproblem the design doc clearly explains the project purpose project design and the test plan
noproblem the document is quite comprehensive in its descriptions of the design proposal
noproblem design document has all the necessary information like project design test plan the team has gone through their topic deeply and can be seen by their illustration of their implementation also they have included code snippets which   show thoroughness of their approach  
noproblem the design documents contain all required part
noproblem yes the document incorporates all the functionality ensuring nothing is missed
noproblem the design incorporates all the required functionality to a good extent
noproblem yes it does
noproblem yes the design incorporates all the functionality required all the issues are explained clearly and their required solutions are also given
noproblem yes all the issues mentioned in the project description are covered along with their proposed solution good job
noproblem design document   has outlined the project requirement and issues they have proposed a solution to each problem they have even figured the files and methods to be modified overall it looks good
noproblem the design contains all of the functionality that required
noproblem yes it is complete
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely no suggestions
noproblem very clear very well organized
noproblem the flowchart makes it very clear
noproblem everything is explained well and easy to understand
noproblem the team has explained the solution with flow charts and code snippets they have even considered the feasibility of their solution which is a good thing as this is a big project so feasibility is a big factor   
noproblem they explained   their plan very well both the visual aid and the word they use are very clear
noproblem adequate information given on implementing the solution flow charts are impressive
noproblem though i couldn t follow everything overall the design seems to do the right thing
noproblem all proposed changes seem to be in line with good coding practices and the expertiza system guidelines
noproblem their solution sounds good   
noproblem the design they have right now looks good to me it does not have any issue
noproblem not show which method
noproblem clearly defined uml 1
noproblem uml diagrams mentioned are excellent and to the mark
noproblem diagrams are very clear and well explained
noproblem one of the best wikis i have reviewed with good diagrams and explanations the flow diagrams are really good kudos
noproblem the flowcharts used are very good and do a great job of conveying the intended purpose of each solution presented
noproblem they have used uml diagram and flowcharts which aided in understanding their approach and the logic
noproblem their visual aid is well designed and high quality it helps the reader understand their total design very well
noproblem uml diagrams are well formed flow charts are easy to understand looks like the team has thoroughly understood the problem statement   
noproblem yes i believe they have included all of the required functionality   
noproblem the design   encompasses all the features in the specification it only indicates supporting one more language though whereas the design document specifies any language it seems out of the scope of the project but what if you used the   google s cloud translation api to translate the static strings   at run time then you could support almost any language there might be licensing issues though
noproblem yes the design document contains all parts of the functionality ensuring that nothing is missed out
noproblem yes it covers all the functionalities
noproblem implementation looks just like what the requirement asked for no   removing of english code
noproblem implemented major of them
noproblem the entire project flow is well documented along with the basic structural requirements the document aligns with the plan of action and showcases the exact purpose of the project
noproblem the project design doc is complete and specifies both issues and prospective solutions
noproblem yes the required functionality is adequately explained good work in that  
noproblem the design incorporates everything that the project document has specified about the project    no suggestions
noproblem the doc mentions the changes to be made in a detailed way along with a proper stepwise explanation of the solution or the approach to be taken plus the screenshots which help in better understanding
noproblem the team have suggested reasonable changes to address the problem   statement but have not given explanation for each solution they have proposed for the implementation
noproblem good work good documentation
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely
noproblem the changes are apt and easy to follow it makes sense
noproblem good explanations for all solutions
noproblem the explanations given are succinct and clear the flow of implementation seems very clear however as mentioned before i would like more details on the api
noproblem the design seemed good
noproblem yes i believe they have included all of the required functionality   
noproblem looking at the doc it seems like the design is precise the description of the changes are provided in details ensuring the satisfaction of the reader
noproblem the design proposed is the natural way anyone would go around solving those issues for example creating separate yaml files for different languages and then picking up the strings from there   
noproblem yes the design document contains all parts of the functionality ensuring that nothing is missed out
noproblem yes it covers all the functionalities
noproblem looks good only view files are involving the changes
noproblem well designed
noproblem the functionality scope is restricted because of the topic but the design doc covers everything what all is required to be done in the project
noproblem implementation looks just like what the requirement asked for no   removing of english code
noproblem implemented major of them
noproblem the design does incorporate all of the necessary functionality
noproblem yes the required functionality is adequately explained good work in that  
noproblem the team have showed what they plan to do in the diagrams
noproblem the design incorporates everything that the project document has specified about the project    no suggestions
noproblem the diagrams describe the functioning of the project exceptionally
noproblem screenshots are helpful to understand the flow and their work
noproblem the explanation provided is on point to the requirement of the project all the steps piece up the project completely
noproblem the changes are apt and easy to follow it makes sense
noproblem screen mock up s are good   
noproblem good explanations for all solutions
noproblem the wireframes themselves make the project self explanatory that being said enough explanation about how the team will tackle the problem statement has been given things like what api will be used to achieve the objective has been mentioned no suggestions
noproblem the design seemed good
noproblem looking at the doc it seems like the design is precise the description of the changes are provided in details ensuring the satisfaction of the reader
noproblem the design proposed is the natural way anyone would go around solving those issues for example creating separate yaml files for different languages and then picking up the strings from there   
noproblem looks good only view files are involving the changes
noproblem well designed
noproblem the team have showed what they plan to do in the diagrams
noproblem the diagrams describe the functioning of the project exceptionally
noproblem screenshots are helpful to understand the flow and their work
noproblem screen mock up s are good   
noproblem no clarification
noproblem the changes are much that is required just some calculated approach of the score which the author has mentioned and seems will be working
noproblem changes are not proposed to a suitable extent as they have mostly elaborated on the problem statement it yet remains for them to implement them and explain in explicit details their action plan to arrive at the solution   
noproblem the design gives a proper explanation of the behavior of the system functionality
noproblem the design looks reasonable for me
noproblem yes the designs appears to be good to me i believe the diagram shown in wiki helped me to understand their understanding
noproblem i really like the flow graphs the helped me understand what you are aiming to do
noproblem the flow diagrams are well written and it is easy to understand just looking at them
noproblem diagrams are explanatory but few but i think they are sufficient
noproblem the application plan diagram has been shown it distinguishes between instructor and student
noproblem the team has included all the topics required for the documentation
noproblem no uml diagram is provided so cant comment
noproblem it includes all the sections
noproblem no implementation details given so cannot say how they  
noproblem no their sections solution design is blank saying everything of importance will be be provided in the final design doc only good thing is that they have at least a targeted section of the code which they have planned to work upon      
noproblem no changes proposed
noproblem yes the functionality required is stated but the idea about how to code for that functionality is yet to be thought of
noproblem i don t think they need any visual aids
noproblem not explained properly
noproblem no many functionality are missing in their design
noproblem yes they include all the functionality in the wiki page they can work it better if they add more details and some visual aids
noproblem not descriptive
noproblem the authors have provided a brief design approach of storing the url and looping it into an email notification so that instructor would be able to identify which review has been mapped to it improvisation you can try adding information about new functions you wish to add and if yes which of the files identified by the mentor do you want to add the function to this will increase the depth of your design document
noproblem the design is rather straightforward incorporates all the functionality required
noproblem have explained the project as according to the given description
noproblem just few   high level details very generic are provided which makes it hard to visualize a solution
noproblem no changes
noproblem the authors propose changes in an extremely concise manner the idea that the team proposes to follow seems logical but i would suggest them to include a dummy example or sample pseudocode so that the english explanantion is backed up with an idea of the code as well such as this 1 review x is submitted 2 loop through review 1 n if abs review n score review x score some value store review n url in list   
noproblem they did explain what they want to do it s easy to understand and seems reasonable they can make it more explicit and clear by making it step by step
noproblem not much described to rate over
noproblem the authors have explained the changes in a brief manner which are easy to understand
noproblem it looks to me from the document that the authors are clear about their implementation suggestion they can elaborate more by specifying how do they intend to store the urls to the reviews how are they identifying the two distinctly different reviews they can also add a basic flow of their proposed solution this will enhance the explanation
noproblem the explanations are brief and to the point thought that seems to be due to the nature of the problem statement itself
noproblem the design appears to be complete
noproblem the new design does not talk about any methods or class definitions thus i cannot comment on this suggestion you can add more information on methods or any usage of design patterns in order to make the review effective and useful
noproblem the new design loops through all existing reviews to compare new review scores with the original ones and stores the url of a specific iteration if its limit is exceeded by waiting for all reviews to be looped in before sending email it may increase the response time of the system
noproblem design document explains the entire project flow very well the   objectives goals are clearly stated in the doc along with the approach which team will be following in future the   flowchart explains the functionality very well overall the doc is easy to understand    suggestion team should include test plan in the doc
noproblem the design document is well planned and does not miss any of the significant details
noproblem the document seems to be generally well designed however i believe that they have glossed over how a link is said to be closed    they properly described the additional functionality   and the challenges they will likely face
noproblem all basic elements are included
noproblem the design document seems to be well written and detailed with respect to the objectives that need to be achieved the team explains well the purpose and project design they have included the database tables which will be modified the team could add a testing plan to make the design document look complete
noproblem the design doc is well written and the points to be completed are clearly expressed
noproblem the design document is very thorough indicating what s the problem how system works and proposed soluion
noproblem yes they ve decided to   do all there is in the scope of the project
noproblem yes the design tries to cover all the requested features
noproblem yes the functionality is explained
noproblem enough explanation about how the team will tackle the problem statement has been given overall explanation is good   
noproblem the explanations provided are granular and do not leave any lingering questions in the readers mind
noproblem the explanation given is quite easy to understand and explains the solution to the point
noproblem the design   seems to be precise the description of the changes are provided in detail the team also has mentioned about the api that they will use    they have clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it   
noproblem the design appears to be sound considering the expected outcomes of the project and it doesn t seem that it will create any dependency mismatch as well
noproblem the design document is well planned and does not miss any of the significant details
noproblem all basic elements are included
noproblem the design doc is well written and the points to be completed are clearly expressed
noproblem no testing plan or tests are specified   
noproblem the design document is very thorough indicating what s the problem how system works and proposed soluion
noproblem yes the design incorporates all the functionalities that are required
noproblem the document incorporates all the functionality required and explains the   same with an ever so accurate reasoning
noproblem yes the design is having also the functionalities that is been required it mentions also mentions a proper proposed solution for all the required tasks
noproblem yes i believe so they discuss what they need to track during a review and what they need display after a review is complete
noproblem yes the design tries to cover all the requested features
noproblem yes the functionality is explained
noproblem yes
noproblem enough explanation about how the team will tackle the problem statement has been given overall explanation is good   
noproblem the explanations provided are granular and do not leave any lingering questions in the readers mind
noproblem the explanation given is quite easy to understand and explains the solution to the point
noproblem the expected outcomes of the project have been clearly explained and requirements well understood
noproblem the given flow chart describes the flow of the project and how the implemented system will work
noproblem authors have proposed solutions in detail and is understandable
noproblem the design   seems to be precise the description of the changes are provided in detail the team also has mentioned about the api that they will use    they have clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it   
noproblem the design is accurate the changes suggested are minimal and ensure that dry is followed
noproblem i think the writing could be done better with more explanation on why the solutions mentioned in the last paragraph are taken and what other approaches were considered or an explanation of why no alternative exists with regard to design explained in detail in a previous comment
noproblem the design is properly designed
noproblem the flow diagram is good makes understanding easier
noproblem uml looks good follows the convention
noproblem enough visual aids used to make understanding   the project easier
noproblem the design appears to be sound considering the expected outcomes of the project and it doesn t seem that it will create any dependency mismatch as well
noproblem they have specified the files they ll be making the changes to and it looks good
noproblem the changes provided appear to be sound
noproblem the provided flow diagram and db table are enough the explain the functionality of the project   
noproblem the visual aids used are precise and explain the in depth functionality of the project the diagrams and flowcharts ensure there is no ambiguity in the functioning of the project
noproblem the uml diagram mentioned her is a flow chart representing the flow of the functionality it is designed in details   which explains the flow of the functionality quite well   
noproblem visual aids are very nice especially for the flow diagram
noproblem good use of both diagrams and tables
noproblem the given flow chart describes the flow of the project and how the implemented system will work
noproblem the flow diagram is good makes understanding easier
noproblem enough visual aids used to make understanding   the project easier
noproblem only the issues problem statement is included in the documentation as of now the tea did mention that they will be adding the detailed design in the upcoming submissions
noproblem the doc clearly explains the agenda of the whole project seems like the team still needs time to understand and devise a plan to tackle the issues identified
noproblem team have decided to give all details after final submission a design doc should be available before starting the project i would recommend to provide few details on project design classes involved in the project or application flow etc
noproblem it includes all the sections
noproblem all functionalities required are in the design doc but no content is provided
noproblem please add more details about the solution
noproblem no their sections solution design is blank saying everything of importance will be be provided in the final design doc only good thing is that they have at least a targeted section of the code which they have planned to work upon      
noproblem yes the functionality required is stated but the idea about how to code for that functionality is yet to be thought of
noproblem team have decided to give all details after final submission a design doc should be available before starting the project i would recommend to provide few details on project design classes involved in the project or application flow etc
noproblem only the issues problem statement is included in the documentation as of now the tea did mention that they will be adding the detailed design in the upcoming submissions
noproblem have covered almost all the issues it would have been better if an implementation plan was provided
noproblem clearly defined bugs and problem statements but no implementation details given so it is hard to judge this criterion
noproblem did not find much info on the design
noproblem the team has not mentioned about how they are planning to do the changes
noproblem did not find much info on the design
noproblem no plan or uml design is given
noproblem this couldn t be reviewed as the design doc is incomplete
noproblem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
noproblem i don t think they need any visual aids
noproblem no visual aids in the design document
noproblem no uml diagram
noproblem there were no flow or uml diagrams
noproblem nothing specified
noproblem did not find much info on the design
noproblem the design document is well planned and does not miss any of the significant details
noproblem all basic elements are included
noproblem the design document seems to be well written and detailed with respect to the objectives that need to be achieved the team explains well the purpose and project design they have included the database tables which will be modified the team could add a testing plan to make the design document look complete
noproblem the design doc is well written and the points to be completed are clearly expressed
noproblem the design document is very thorough indicating what s the problem how system works and proposed soluion
noproblem yes the design incorporates all the functionalities that are required
noproblem the document incorporates all the functionality required and explains the   same with an ever so accurate reasoning
noproblem yes the design is having also the functionalities that is been required it mentions also mentions a proper proposed solution for all the required tasks
noproblem yes i believe so they discuss what they need to track during a review and what they need display after a review is complete
noproblem yes they ve decided to   do all there is in the scope of the project
noproblem yes the design tries to cover all the requested features
noproblem yes the functionality is explained
noproblem yes
noproblem enough explanation about how the team will tackle the problem statement has been given overall explanation is good   
noproblem the explanations provided are granular and do not leave any lingering questions in the readers mind
noproblem the explanation given is quite easy to understand and explains the solution to the point
noproblem the authors propose two changes and have mentioned in detail about the flow in which they will make changes they could benefit from drawing simple lofi ui cards to illustrate how the new review page might look like which will benefit them in improving their ui design and proper representation of data before they actually spend the man hours in coding it overall the have explained the process in detail   and clean fashion
noproblem the expected outcomes of the project have been clearly explained and requirements well understood
noproblem explanation is good and easy to understand proposed solution looks good as well design and implement a solution that handle github hasn t been explained
noproblem authors have proposed solutions in detail and is understandable
noproblem the design   seems to be precise the description of the changes are provided in detail the team also has mentioned about the api that they will use    they have clearly mentioned about the approach that they will use    enough efforts have been taken by the team to convey what is to be done and how the team will do it   
noproblem the design is accurate the changes suggested are minimal and ensure that dry is followed
noproblem i think the writing could be done better with more explanation on why the solutions mentioned in the last paragraph are taken and what other approaches were considered or an explanation of why no alternative exists with regard to design explained in detail in a previous comment
noproblem the design is properly designed
noproblem these changes seem to be appropriate   for the objectives they have only a small set of files are being changed and the functionality is isolated well my only feedback here is that there is likely a place to create helpers or utilities for time tracking
noproblem the authors seem to have understood the project and know what changes need to be made to what files the changes seem to be targeted to the correct classes and preliminary investigation reveals that it does seem to follow dry principles they might want to make their design diagram more simplified which will not only help in making it look readable and also help in implementing the code effectively this will help in reducing convoluted code
noproblem the design appears to be sound considering the expected outcomes of the project and it doesn t seem that it will create any dependency mismatch as well
noproblem they have specified the files they ll be making the changes to and it looks good
noproblem the changes provided appear to be sound
noproblem the provided flow diagram and db table are enough the explain the functionality of the project   
noproblem the visual aids used are precise and explain the in depth functionality of the project the diagrams and flowcharts ensure there is no ambiguity in the functioning of the project
noproblem the uml diagram mentioned her is a flow chart representing the flow of the functionality it is designed in details   which explains the flow of the functionality quite well   
noproblem good use of both diagrams and tables
noproblem visual aids are very nice especially for the flow diagram
noproblem the given flow chart describes the flow of the project and how the implemented system will work
noproblem the flow diagram is good makes understanding easier
noproblem uml looks good follows the convention
noproblem enough visual aids used to make understanding   the project easier
noproblem document is very well written and contains all the details like problem statement solution files to be modified testing plan
noproblem it says what they will do but it seems high level would appreciate some diagrams or mockups
noproblem the doc seems complete all aspects of the   problem statement are covered and test plan is also included a use case diagram will be useful to add
noproblem the authors can add the project s purpose why this feature is important helpful the authors have mentioned the plan to use tablesorter jquery to sort the table but no design plan is included i suggest the team to remove the introduction to expertiza   since it was clearly mentioned in the requirements to not include it
noproblem design doc contains everything in clear explanation
noproblem the document mentions the tools of jquery sorting table in fact which api or any sample code that can be referenced to is expected in the document also this project seems to focus on the view part of expertiza so the test plan should be more detailed cover more edge case   
noproblem there are no diagrams present it would have been great if a screenshot of a test case or flow diagram was given
noproblem unfortunately the team has missed out on adding any visual aids to the document i would suggest that where you list all the column names which would be sorted in each view also add a screenshot of how that view looks at the present moment and a low fi sketch of how the view would look after the changes have been implemented
noproblem the author has not used any uml diagram nor any other forms of pictorial representation   
noproblem although the textual explanation is succinct and nice there s not yet diagrams or other visual aids available i think a diagram that depicts the workflow might be very helpful
noproblem 1             the team has already identified the files to be changed which is a good thing it looks like all changes will be handled in the client side so not applicable 2             i assume as it is nowhere mentioned they would be writing a custom js file the team plans to repeat some of the custom written code if same functionality is required in 2 different file which could violate dry team might need to consider such possibility 3             no the team is already optimizing by leverage some javascript libraries 4             it would as user opts to sort but here it seems to be a necessary evil 5             yes the team can elaborate more on their design approach and provide visual aids to help reader understand the sorting intended better      
noproblem the authors talk about adding the tablesorter class to the html table and using javascript scripts for further action there are no apparent problems with this strategy however i would suggest for the team to elaborate and provide more details on the implementation for example it is not possible to understand what the javascript part will look like how many functions will be used or how they will interact with html
noproblem mainly needs html files to be changed and they have mentioned them which looks good  
noproblem the design proposed by the authors appears to be sound since this project is only to sort the views there will be no code added to either the models or controllers i hope the team only adds one sorting function per view and allows that one function to handle sorting for different columns in that view
noproblem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly the team is using one of the existing gems in their design
noproblem the solution looks like it doesnt add any overhead and the doesnt make the code smelly
noproblem the solution seems right
noproblem i think that the authors have identified changes in the html erb files which looks right to me as it only deals with the sorted view of instructor reports the changes must go in the views part of the application    suggestion you can try to add a bit of information on whether your changes include addition of new code deletion of existing code or just slightly modifying or extending the existing code and justify it query do you plan on creating   a drop down like option to choose from which type of sorting is to be performed if yes it is an add on user friendly feature
noproblem team have shared the link for the tablesorter which explains the functionality
noproblem the explanations can be more detailed overall understandable
noproblem adequate explanation was given
noproblem it is easy to follow the changes that the authors have proposed
noproblem changes look good
noproblem the design document   lists every issue that is being addressed in the project providing comprehensive details on the functionality that is required for each one
noproblem yes as per the solution provided it does seem that the design incorporates the required functionality it considers sorting on all the specified fields suggestions since you have mentioned the use of jquery tablesorte you may also add explanation as to what is tablesorter and try explaining atleast for one field e g name as to how does it work to sort the entries      
noproblem the wiki is detailed enough that it mentions all the functinoalities required in the project the team has made sure to not miss out on any functionality and they even took out time to list the column names in each report they would add the sort feature to good work guys
noproblem i think the authors have incorporated most of the functionality in the design document
noproblem design document contains all the functionality required
noproblem it incorporates all the functionalites
noproblem it includes all the sections
noproblem except for the test plan the design doc seems to have all the important details the team should add a test plan before starting in order to go for a test driven development   
noproblem test   plan is to be added but the purpose and the design are coherent and easy to follow
noproblem the test plan is not yet done rest i could see that the document is very much complete
noproblem yes the design looks complete
noproblem so far the idea is clearly articulated few things which are not   defined are explicitly stated in the doc
noproblem yes it does
noproblem includes everything as far as i can tell
noproblem yes the design document incorporates all the functionalities stated in problem statement   
noproblem the design has not been stated explicitly so its difficult to comment only with the flow and uml diagrams whether it is appropriate and the best way to address the issue
noproblem authors have a clear idea of what details need to be included to make the audience understand the purpose of the project the design document is sufficient to get the basic idea and implementation
noproblem the design does incorporate the functionality required of making reviews public allowing the students to toggle the visibility of review submitted it is descriptive and easy to understand
noproblem it s not a great explanation
noproblem document is explained well also the flow of document is good team can add screenshots of existing documents also some diagram to explain the solution well
noproblem the proposed flows and project tasks are sufficiently detailed that i can understand the relationship between the issue and how they re going to solve it in each step
noproblem the step by step instructions are detailed and is good
noproblem the authors have explained the workflow very well with respect to the different types of users involved in the particular feature the language is simple to follow
noproblem the proposals given by the team are reasonable and adequately cover the features to be established during the course of the project the changes suggested follow the desired requirements   
noproblem the team has not addressed the project design approach and the proposed implementation details in the documentation
noproblem 1 authors solution do not seem to create methods to wrong classes 2 new design code does not make the code smelly 3 no new gem required explained solution is adequate 4 proposed design should not hamper system performance 5 well efforts expended on the design   
noproblem i don t have any issues with the design looking forward to seeing some code snippets to understand it better
noproblem as mentioned in their approach section the team decided on adding some functionalities like checkboxes and views i find these changes perfect for the problem statement given
noproblem implementation details haven t been added yet but that s fine as it hasn t been started yet
noproblem the design looks fine but no explanation as to why this is done is it already existing or is this a new feature
noproblem i think the uml diagram can be improved further by adding the classes that are related to the use cases separately   
noproblem the team has   done a commendable job in creating a very detailed   uml diagram and explaining the case of every user very well
noproblem no uml diagrams
noproblem only a single uml diagram is present but i d have appreciated a couple of flow charts to accompany the expected   flows
noproblem they have used a use case diagram to explain flow i found it quite understandable and all the steps are clearly drawn out in the diagram it clearly explains the steps required to approach a situation
noproblem the document contains a uml use case diagram that analyze the system s requirements and describes the actors involved and the relationship between them it helps to understand the overview of the project details however it can certainly make use of a flow diagram in the expected flow section that gives more clarity about the sequence of actions the flow diagram can follow from the use case diagram to show the tasks performed by the actors in a serial order      
noproblem the authors have explained the changes to be made to the system including screenshots of the tables uml diagrams as well as all the files that will be modified suggestion although all the details are explained well in the document by writing the changes proposed to the files in bullet points or by using a diagram the document will be easier to read
noproblem they made clear explanation about their task for example their provide pictures to show what they need to do      
noproblem yes the team has elaborated their design approach and changes to system in detail they have mentioned all the file changes and also provided sample code for reader understanding
noproblem the design document clearly specifies all the issues that are going to be addressed by this project ui views are provided which help the reader to better understand the scope of the requirements moreover the authors list the files that are going to be modified and the authors comprehensively describe how the jquery tablesorter 2 0 library will be used for three types of sorting one minor improvement would be to highlight the parts associated with introduced changes that link html table with the library for better readability
noproblem great improvements compared to the previous submission now its a   very well written document good job team
noproblem the team has added uml diagrams images of related web pages and provided details on jquery tablesorter that explains well the changes the team plans to make
noproblem the authors have explained enough about the changes
noproblem the wiki is detailed enough that it mentions all the functionalities required in the project the team has made sure to   explain all the changes they wish to make to the system they list all columns that need to be sorted and how they will implement the sorting
noproblem yes the authors have significantly improved the writeup and very adequately explained the changes that they ve made
noproblem the design is very efficient and follows the standardized software engineering practices   
noproblem the design is sound and easy to understand the design proposed also sounds logical i e to sort team names alphabetically and grades numerically to sort by both ascending and descending order
noproblem yes the design seems to be sound
noproblem the authors have justified the use of jquery table sorter by   listing its advantages
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement   
noproblem the design appears to be specific to the requirements for this they have used a uml design which basically explains the flow of the use case they have not used any principles or design patterns however there does not seem a need to use any as their changes are limited to the html view and making a call to the tablesorter using jquery as per the document the design does not make any redundant changes or unnecessary changes to the code thus they have done a good job by optimizing the changes
noproblem the authors have improved the part of the document that describes the interactions between html and javascript parts   since the 1st round while this assignment does not require an extensive   discussion about the design principles or patterns it would be better   if the document explicitly addressed this topic
noproblem yes as its sorting not much scope on design approach yet the team has documented well on their approach regarding multi level sortings that they are undertaking in few pages they have also considered cross browser compatibility of their jquery library which is a common design miss during client side changes
noproblem this project is not very difficult so they don t need to follow some principles or patterns
noproblem this their design is very simple and clear
noproblem yes the design is as simple as it can be the current scenario is explained with adequate screenshots and the changes are explained   by stating the field to be used for sorting the table a mock up screen of the expected output would have made it even better to understand however reading the material is sufficient as well the changes are not complex as they interact with a single view at a time the tablesorter function is also called for each view e g view_submissions layout
noproblem yes the design is very simple to understand and also the implementation is pretty clear and effective
noproblem yes the solution proposed is simple by using the   jquery tablesorter gem
noproblem the design is extremely simple and easy to understand good work guys
noproblem the screenshots of the expected result and the uml diagram are good but the screenshots can be smaller to make the page more user friendly the uml diagram can be better if it s designed as a design plan diagram instead of a user diagram which simply states how the reader is to approach this or it could be better if we have both
noproblem the changes are mentioned but not in a concise section which i suggest would make the documentation easier to read
noproblem the document is clear    and they added changes   that have been pointed out in the previous review good job team
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have given proper uml diagrams and then showcased in the new model new controller and new views section   
noproblem the changes to be made are clearly stated and explained
noproblem the doc explains the entire project agenda very clearly   
noproblem the team has included all the details required to implement the given requirement the wiki has complete details related to requirements analysis of current designs and changes required to achieve the required functionality overall great job
noproblem the design is well considered and design principles are being considered when implementing the design
noproblem the design is the strong point and it is easily understandable    new model table idea is good
noproblem the design is perfectly well depicted in the form of the diagram and   they have been thorough in pointing out the application flow in the workflow and models section so as to elucidate the problem statement
noproblem it s good
noproblem the design is sound with appropriate principles and patterns
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done
noproblem yes from a perspective of an outsider the design seems to be simple enough easy to understand and efficient to implement
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem the team has taken enough efforts to make it as simple as possible to explain the design
noproblem the design appears to be simple and is derived from the existing modules designs the workflow is easy to understand
noproblem great visualization on existing   expertiza system i would love to see how the system is going to change after your implementation
noproblem the team has added enough diagrams to explain their design
noproblem most of the edge cases are identified
noproblem add screenshots    uml diagrams are very helpful when viewers walk through the design
noproblem yes the authors have clearly explained the changes to be made to the system document is simple succinct and easy to understand great use of flow charts uml diagrams and mockups to visually represent the information is done   
noproblem    yes the author has provided a sufficient explanation of what changes needs to be done to the system by giving flow diagrams and screenshots about what changes they are going to incorporate in their system
noproblem team has added all the diagrams and screenshots the document is well explained and looks complete
noproblem yes their explanations are adequately explained the changes
noproblem 1 the authors have clearly explained the changes to be made to the system 2 they also have given the files to be modified added for each change   
noproblem i think that the authors have done a really good job of explaining and covering all the changes to be made overall this is the best document i have seen so far
noproblem the authors have explained all the changes to be made very clearly and concisely each change is supplemented with sufficient diagrams and mock ups so as to make the final task of visualization easier
noproblem yes one of the best design docs of project 4
noproblem the document was very well written previously too and they have improved it with diagrams and test nice work
noproblem the authors have considerably improved on the document uml diagrams as requested have been added
noproblem the team has adequately explained all of the changes required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy in this case
noproblem yes since the previous round of reviews i can see significant and positive progress
noproblem well done adding a lot of detail since your last submission
noproblem the document explains the problem and the approach the team is planning to take clearly
noproblem the explanations are good and the project goals are easily readable
noproblem    refactor the report_formatter_helper into a reports_controller where the reports_controller implements a strategy pattern to help it figure out how it should handle a given report if that is correct then yes their explanation is great
noproblem yes the design follows appropriate principles and patterns suggestions not required
noproblem    as the project is based upon making changes to the ui of the system thus there is no such specific pattern being followed however the design that they have made available in the form of screenshots appear very much inclined with the functionalities that they need to implement
noproblem design is good
noproblem yes their design is very sound and principles and patterns are used appropriately
noproblem the project involves refactoring of the review mappings controller and the authors have proposed a clear action plan they have added a b very detailed testing plan and also a detailed uml diagram the authors have updated their uml diagram and also updated their testing plan after the first submission
noproblem 1 the design appears to be sound 2 also follows proper design principles eg for making changes to nomination and review questions inheritance is used inheriting methods from questions parent class
noproblem the authors have done a very good job at writing the design document their requirements and proposed solutions are properly aligned and their approach takes all the factors into consideration viz listing the major areas that need refactoring changing the code modifying the ui making sure that the refactoring does not affect the existing functionalities    they have explained each of these phases with ample explanation
noproblem the design seems to be appropriate and sound it follows appropriate principles
noproblem yes the design appears to be very sound and follows all the principles that i know i loved the format of the documentation as well
noproblem they have explained very well
noproblem the document enlisted the crucial aspects of the project in the first stage the team has made improvements in this stage by including a test plan section that lists the set of test cases to deal with the retrieval issue and plan on including a new controller for the next stages   
noproblem the team has adequately explained all of the changes required for segregation including the exact reports and functions to be removed out of   review_mapping_controller rb   along with the design pattern to be followed strategy in this case
noproblem yes the design follows simple rails concepts and is pretty straightforward i would like to see if the team uses existing gems available to speed up implementation and re use      
noproblem yes looks clean any design patterns used
noproblem yes since the previous round of reviews i can see significant and positive progress
noproblem yes the design appears to be sound and well made   
noproblem yes the plan is clear and easy to read
noproblem well done adding a lot of detail since your last submission
noproblem have updated the test plan good job
noproblem yes the design appears to be sound there could be some rearrangement in the mock up layout e g text box for email address and add button could have the same horizontal alignment for a better user interface
noproblem the document explains the problem and the approach the team is planning to take clearly
noproblem the design looks clear and complete and is using a strategy pattern for implementation
noproblem the design   seems to be very simple i think the team has avoided unnecessary complications and are doing minimal changes to existing system to solve issues given to them
noproblem the explanations are good and the project goals are easily readable
noproblem the design approach seems justified and inline with the functionalities required to be implemented they have mentioned step wise details for all the changes they are going to take done a good job no rework required
noproblem they have used the design patterns well and made a good choice in explaining the class hierarchy with the class diagram however i m not quite sure whether it s right to call the diagram as a uml diagram
noproblem design looks well thought out
noproblem    refactor the report_formatter_helper into a reports_controller where the reports_controller implements a strategy pattern to help it figure out how it should handle a given report if that is correct then yes their explanation is great
noproblem    yes the design is presented in a much simpler form which gives a very clear picture of how the changes are going to be implemented and which functionalities would be witnessing the changes also as they have provide the screenshots it enhances the understanding about the project more
noproblem good design principles are being used for this project
noproblem yes their design is simple and clear enough to read and understand
noproblem refactor functionality from a controller helper into its own controller where that controller will implement the strategy pattern it seems sounds to me
noproblem the project involves refactoring of the review mappings controller and the authors have proposed a clear action plan they have added a b very detailed testing plan and also a detailed uml diagram the authors have updated their uml diagram and also updated their testing plan after the first submission
noproblem 1 the design is simple and well modularized 2 each method is implementing only one task as it should
noproblem the design does appear to be as simple as possible the team have not unnecessarily complicated the project
noproblem yes the design is pretty simple and to the point the design proposed is very clear and talk why each change is necessary
noproblem    the design is straightforward and as simple as possible the team has thought this project out very clearly and laid the same in the form of flowcharts and mock ups this has greatly reduced the complexity of the project and helped decrease the chances of clutter and confusion
noproblem the authors have done a very good job at writing the design document their requirements and proposed solutions are properly aligned and their approach takes all the factors into consideration viz listing the major areas that need refactoring changing the code modifying the ui making sure that the refactoring does not affect the existing functionalities    they have explained each of these phases with ample explanation
noproblem the authors have understood the requirements of each report generation clearly they have converted report generation into a single step by providing a drop down menu for 8 reports for this they have used generatereport method the design uses a strategy pattern to generate a particular type of report the sub classes strategy classes use only required subset of class variables and it seems as an efficient design the strategy pattern is a good example of dry principle
noproblem yes adequate amount of details present
noproblem the design follows the apt principles and patterns in that the refactored version is planned to be implemented using the strategy pattern by working on the eight different report categories
noproblem yes the design principles incorporated is quite impressive they have thought through the best way to accommodate the changes and wrap it up as a good design      
noproblem yes    the requirements are simple and the design plan clearly explains all the points
noproblem the document enlisted the crucial aspects of the project in the first stage the team has made improvements in this stage by including a test plan section that lists the set of test cases to deal with the retrieval issue and plan on including a new controller for the next stages   
noproblem yes design appears to be very simple
noproblem yes have followed all se practices in design document
noproblem yes the design is quite simple
noproblem great use of uml diagrams flowcharts and mock ups by the team to clearly explain the flow of their work it is   easy to understand the flow and how the end product will look like
noproblem the design is pretty straightforward and   i am able to get a complete idea of what changes the team intend to make
noproblem yes
noproblem they team has done awesome work in representing every detail possible in the flow diagrams they have created uml diagrams which depicts the flow of the admin and students along with other actors as mentioned earlier they have also represented the admin flow diagram and instructor flow diagram through the flow chart which makes it very easy for end user to understand the workflow of the requirements in the expertiza system
noproblem    yes the visualization is pretty clear and good
noproblem using the report interface to assist with specialization was good
noproblem proper use of uml to explain the use cases and flow charts to explain the workflow has been done the plan is complete
noproblem yes their visualization is good they are clear and well described the changes
noproblem yes the plan is clear and easy to read
noproblem using a strategy pattern to solve this problem is one of the simplest approach according to me and team has selected the same thing only thing i would suggest the team is to be carefull when separating the classes as it might have some un intended side affect
noproblem have updated the test plan good job
noproblem the proposed design is simple and no extra changes are being proposed
noproblem 1 in the uml diagram the set of actions that the instructor can perform to add more than one question to nomination and textual type is not added also add the actions to modify the display sequence of existing questions 2 in the instructor flow chart the flow for review questionnaire and to modify the display sequence of existing questions is missing
noproblem    yes the design does sound like the simplest refactoring possible that can move the review mapping controller closer to a single responsibility class
noproblem the design looks clear and complete and is using a strategy pattern for implementation
noproblem the design document is extremely clear they have done a very good job in the design document
noproblem the design document includes flow charts uml diagrams and screenshots which is really impressive as it made the document easier to understand
noproblem i loved the overall use of the visualizations which aids to the understanding of the whole doc the formatting of the documentation makes it really easy to read and understand
noproblem design looks well thought out
noproblem yes the presence of use case diagrams and flow charts explaining the work flow is good it would be nice if there were more uml diagrams such as sequence so show various class interactions    presence of mockup screens is good that helps in understanding what is being implemented it would have been good if the authors put in more details about the validations that that propose in the system  
noproblem the design document appears to be concise in it s representation according to the task specified and proposals described the design appears simple to be executed
noproblem good design principles are being used for this project
noproblem       yes the design is simple and straight forward in personal opinion it could not have been simpler than this great work on design
noproblem yes the   uml   diagrams sufficiently provide visualization
noproblem refactor functionality from a controller helper into its own controller where that controller will implement the strategy pattern it seems sounds to me
noproblem yes the plan seems simple and feasible
noproblem easy to comprehend
noproblem the authors have added uml diagrams as requested in the previous review and it has made a lot of difference the explanation is much clearer now
noproblem the team has done   a good   job with the uml diagram they have also added details to the class diagram as was suggested in the last review
noproblem test plan outlines the functionalities that the team will test and it seems sufficient to test the changes
noproblem the proposed refactoring changes seem to follow good ruby principles and also looks dry    they haven t mentioned any pattern as such but overall the design document looks neat and very well written
noproblem they team has done tremendous job in following the test driven approach for the project implementation they have already included the tests they are writing for the functionality implementation they have covered the exhaustive scenarios   for the project in their test their test plan is highly appreciative
noproblem excellent diagrams and ui mock ups
noproblem    the test plan is quite good as it covers all the test cases in the form of 11 test cases which test all the functionalities for the admin and the instructor role it also considers the negative test cases like throwing an exception when the pending instructor tries to add more then 10 students to his her course
noproblem the authors have understood the requirements of each report generation clearly they have converted report generation into a single step by providing a drop down menu for 8 reports for this they have used generatereport method the design uses a strategy pattern to generate a particular type of report the sub classes strategy classes use only required subset of class variables and it seems as an efficient design the strategy pattern is a good example of dry principle
noproblem yes they include the test plan
noproblem    their diagrams are supreme the diagram of how they plan to implement the strategy pattern significantly helped to cement my comprehension of what they plan to do
noproblem 1 the test cases cover all of the functionalities that they are going to implement
noproblem no visualizations required for this project
noproblem the design follows the apt principles and patterns in that the refactored version is planned to be implemented using the strategy pattern by working on the eight different report categories
noproblem yes the document includes a test plan there was no test plan present in the previous version of the design document but the team included the test plan in the second round the test plan is clear and seems like it would really test the functionalities
noproblem the test plan has been written in a very good way following the great   quality of documentation till the end it covers all the edge cases and scenarios
noproblem yes the design principles incorporated is quite impressive they have thought through the best way to accommodate the changes and wrap it up as a good design      
noproblem the test plans are excellent the best i have seen so far it has accurately taken all test cases into consideration and described the layout of the final test in the form of a pseudo code well done on the test plan
noproblem yes test plans are included
noproblem yes have followed all se practices in design document
noproblem the design is pretty straightforward and   i am able to get a complete idea of what changes the team intend to make
noproblem yes the authors provide a uml and a screenshot to explain the class relationship and the change they will make which are helpful
noproblem yes the test plan looks good it covers all the functionalities
noproblem have used visualizations diagram appropriately  
noproblem yes
noproblem test plan seems thorough and well thought   out
noproblem using the report interface to assist with specialization was good
noproblem yes the team has added a test plan after the first review the test plan seems to cover the major portion of the changes planned
noproblem the team is following a test driven development approach they have defined the test cases that need to be tested after the implementation it seems to completely test the feature
noproblem this test plan is simple and easy to follow good job
noproblem the proposed design is simple and no extra changes are being proposed
noproblem the test plan is good and describes all aspects of the rspec tests needed
noproblem    yes the design does sound like the simplest refactoring possible that can move the review mapping controller closer to a single responsibility class
noproblem    looks like a good test plan and there is a use case diagram their expectations for each of the report strategies is clearly documented in their test plan
noproblem the design document is extremely clear they have done a very good job in the design document
noproblem the design document appears to be concise in it s representation according to the task specified and proposals described the design appears simple to be executed
noproblem the test plan section suggests the manner in which the test cases will check the functionality of retrieval of a variety of reports for the assignments to the instructor each scenario tests a similar function of checking whether the report is rendered based on the report type      
noproblem       yes the design is simple and straight forward in personal opinion it could not have been simpler than this great work on design
noproblem yes the plan seems simple and feasible
noproblem easy to comprehend
noproblem yes they have a complete design for testing and include   all the cases they need to test
noproblem the team has done   a good   job with the uml diagram they have also added details to the class diagram as was suggested in the last review
noproblem excellent diagrams and ui mock ups
noproblem the uml and flow charts used by the teams are good but can be made more clear and appealing
noproblem no visualizations required for this project
noproblem    their diagrams are supreme the diagram of how they plan to implement the strategy pattern significantly helped to cement my comprehension of what they plan to do
noproblem from the previous stage the team has added the use case diagram that efficiently describes the actors involved in the process also since a new controller is proposed it was essential to identify the role of the instructor
noproblem yes the authors provide a uml and a screenshot to explain the class relationship and the change they will make which are helpful
noproblem have used visualizations diagram appropriately  
noproblem yes the team has added a test plan after the first review the test plan seems to cover the major portion of the changes planned
noproblem the authors have dived into the depths when explaining the changes all of the changes are well defined and precise
noproblem yes they did
noproblem this test plan is simple and easy to follow good job
noproblem the test plan is good and describes all aspects of the rspec tests needed
noproblem    looks like a good test plan and there is a use case diagram their expectations for each of the report strategies is clearly documented in their test plan
noproblem the authors have very well explained the problem statement and the changes to be made to the system including flowcharts the files to be modified added and useful links
noproblem authors have clearly explained the changes to be made to the system the design document was easy to understand
noproblem the test plan section suggests the manner in which the test cases will check the functionality of retrieval of a variety of reports for the assignments to the instructor each scenario tests a similar function of checking whether the report is rendered based on the report type      
noproblem yes they have a complete design for testing and include   all the cases they need to test
noproblem this part has been significantly improved from the previous submission the diagram make it very easy for an outsider to understand the architecture the underlying problems and the proposed solution   
noproblem yes the figures added to the wiki clearly indicate the changes that will be made to each view the columns that will be made sortable and how will the made sortable good work
noproblem yes the team added visual aids like uml diagrams screen shots code snippets to clearly describe the changes to be made to the system well done
noproblem this team   used great diagrams that add to their documentation s clarity significantly
noproblem there are multiple visual   elements that improve the readability of the document screenshots of the ui tables help with the illustration of   the required changes furthermore    the uml diagram demonstrates the relation between relevant flows
noproblem the team has added good number of mock uis and uml diagram and clearly explains the code follow all of them are self explanatory and needs no improvement
noproblem diagram is added   
noproblem no visulization is necessary for this project
noproblem the test plan is thorough   
noproblem the design doc includes the test plan which covers all the changes that will be made
noproblem there is a detail explanation on how the function testing will be carried out under the teating plan section of the wiki doc
noproblem test plans looks to be an overview of the functionality in the test plan i see the functionalities explained l
noproblem yes it includes test plan it is very well written and will test the functionalities
noproblem you have a lot of testing scenarios which is really good
noproblem yes they made detailed explanation about their changes
noproblem the design seems to be flawless all the principles and patterns used are flawless and to the point
noproblem yep they have good structure to show what and how they gonna do with the project
noproblem the design looks good the code is already committed and approved by the concerned team good job
noproblem yes their design appears to be sound
noproblem the design appears to be sound and following appropriate principles
noproblem yeah their   proposed design includes workflow initial step and subsequent steps it was easy to follow their design their solution appears to be sound
noproblem i don t exactly understand how the waveforms help to produce the sound for the new browser they re adding support for but other than that their approach seems solid
noproblem yes i am   surprised that they have already finished the project   
noproblem the design is concise and clear
noproblem the design is simple and easy to understand the sin waves and the description about it helps to properly understand the changes made and its impact
noproblem the design was not unnecessarily complex it was as easy as it could be
noproblem use of flowcharts and step by step explanation simplified   their solution it was easy to grasp and design also appears to be simple
noproblem very simple and clear
noproblem the team has done tremendous job in adding visualization aids they have added application flow diagrams and visualized images they have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages this makes the document descriptive and very easy to read and understand      
noproblem self explanatory visual changes have been added all the changes are described via the visual aids
noproblem yes the flow diagram and graph plots help to understand the changes and its implications the diagrams clearly describe the change approach followed
noproblem the flowcharts included in the design document clearly explain the changes that need to be done
noproblem the design document includes proper visualization it included appropriate flow charts and screenshots which made it easier to understand the design document and the project
noproblem yes the team has used flowcharts and diagrams which clearly describe the changes to be made to the system
noproblem they provide pictures of their sound waves
noproblem the team has done tremendous job in the test plan they have already implemented the test cases and given the path to run it
noproblem the provided tests are in depth and will test the changes made thoroughly
noproblem they have pretty good test plan as there is no code yet
noproblem this is a mozilla project and i am not sure what are the testing requirements and depth to be covered as it is not mentioned in the document but the steps mentioned do suggest that basic testing id done
noproblem it included a proper test plan there was no test plan included in the previous version of the design document but authors have added it in the second round which made the design document complete
noproblem the design does include test plan and plans to test the functionalities  
noproblem yes they have
noproblem explained details about their solution and what will be changed after their implementation
noproblem yes changes to be made are clearly explained
noproblem they have explained in detail about the proposed changes with individual diagrams for each case it is very thorough in explanation
noproblem great documentation tbh the best i have seen yet      
noproblem they have documented it in a very rehearsed manner
noproblem the design document is really well written it clearly describes what needs to be done how it needs to be done and what code changes need to be made the files and tables affected are clearly listed
noproblem the authors have prepared the design document quite well
noproblem the author has explained extensively about the changes to be made to the system
noproblem yes the problem definition and the proposed solution are pretty clear they also provide some diagrams to explain their project which is helpful
noproblem their introduction and problem definition are clearly enough to explained the changes
noproblem with er diagram and database details the design looks good
noproblem the design follows appropriate principles and patterns as required
noproblem the project consists of making a search function to select specific users assignments etc using some criteria so they re creating a search functionality for individual models
noproblem yes the proposed changes make only required additions
noproblem yes it follows   appropriate principles   
noproblem the design appears to be sound it is really well structured it is easy to follow it clearly states the changes to be made and the files affected by these changes
noproblem the design appears to be sound and clearly indicates the proposed code changes
noproblem yes the design is appropriate
noproblem yes they provide solution for different problem situations
noproblem yes it is fairly simple
noproblem yes the approach described in the design document is easy enough to understand they have also   backed their decision to go with the second approach with appropriate reasoning
noproblem the design is simple and quite comprehensive covering lots of methods of searching
noproblem yes based on the proposed solution it appears to be simple as possible
noproblem the design document appears really easy to follow a person who is new to the project can get the summary of what is happening just by reading and going through the design document
noproblem the design has been explained in a simple way the team has explained the design using use cases which is easy to comprehend
noproblem yes the design is simple and feasible
noproblem yes clear and simple
noproblem yes easy to understand
noproblem they have used apt visual aid like uml diagrams and screen shots
noproblem necessary diagrams are included
noproblem the team has communicated their design clearly via use case diagram and a class diagram with a description of various database tables involved
noproblem excellent use of visualizations they already had an overall flow chart and this time additional tables and uml has been added best of what i ve seen
noproblem yes they do explain everything the er diagram use case diagram relevant tables explain everything
noproblem the diagrams seems to go out of the boundary of the pae
noproblem the project has great visualization a lot of uml diagrams have been included which makes the understanding the project easier the uml diagrams also clarifies what work is to be done
noproblem the team has described changes using use case and er diagrams to clearly explain the system
noproblem the authors add more diagrams to help to explain the change they are going to make the relevant tables are really helpful
noproblem test plans walk through necessary functionalities
noproblem yes a good test plan is also included
noproblem the test cases described will cover the functionalities described given that they write multiples tests with the same structure as described for all search criteria   
noproblem a concrete test plan is also added and it has both ui and automated test details
noproblem yes this is done very well
noproblem they include a very described test plan it has everything proper what framework what tests all this information is well included they clearly specify what they aim to test
noproblem the test plan is pretty good and it has both ui tests and automated tests   
noproblem manual test plans as of now the team is planning to add rspecs after implementation
noproblem the test plan is designed efficiently they have described the ui tests and automated tests which cover most of the cases   
noproblem two types of testing are listed and the authors list all the cases they need to test
noproblem the author has excellently explained about the changes that they would be making by providing the design diagram and the screenshot of the the changes that they have incorporated also they have mentioned about their choice of tool which is google chart and why do they prefer so overall a good explanation
noproblem changes that s needs to be made has been explained correctly
noproblem yes their doc has adequately explained the changes
noproblem the team have a well written design document and and the authors have explained the proposed changes well the authors have also listed each file they are going to be changed
noproblem yes the team has well explained the changes that they are going to make last time it was a bit confusing but this time because of   the help of the diagrams and mock ui screen the solution seems clear now
noproblem the authors have explained the changes made to the system the design flow greatly helps to understand the flow of the system
noproblem the authors have described what all changes they plan to do and where they plan to do it compared to the previous version of the design document they have now included what tools and framework they plan to work on the design document looks complete and understandable now
noproblem they will be changing mostly html and erb code to create a visual interface that delivers information to instructors more effectively
noproblem the proposed changes have been explained in a simple manner
noproblem the document adequately describes the project description and proposals made the proposed change of generating a single or single bar chart graph based on the categories selected to display the chart can be efficiently made to the system
noproblem they have improved the document to provide a better description of changes to be made to the system
noproblem yes the design is sound and gives a proper explanation about how their implementation would behave
noproblem design seems correct
noproblem yes their design is clear and sound and the principles and patterns are well used
noproblem yeah their design seems to be sound and neat
noproblem system is well defined  
noproblem the design document is good and i don t think any design pattern needs to be followed as very few changes are being made   
noproblem the design makes use of the google charts tool to generate visual charts for specific criteria set based on the design flow it appears that the functionality can be consistently performed to generate the visual graph for the instructor
noproblem yes the design appears to be sound and uses appropriate design principles
noproblem yes the design is pretty simple and inclusion of screenshot enhances the clarity of what the team has achieved in terms of the required changes   
noproblem design is simple and easy to understand
noproblem yes the design is simple and easy to understand i can easily know what they will do through their doc
noproblem the design appears to be very simple and well written they have explained the use case diagram very well also they have added visualizations
noproblem yes the design is simple and easy to understand  
noproblem the team is using external tools to do the work and its clear and easy
noproblem using google charts is a good idea
noproblem from the reasons provided for choosing the google charts tool and it s effectiveness it can be integrated into the system functionality easily making the design simpler to be executed
noproblem yes design involves google charts api   and seems very simple
noproblem yes the design flow and the screenshots very clearly describes the changes made to the system
noproblem flow diagram explains the flow correctly
noproblem yes they have used visualization to help people understand their design
noproblem the bar charts have been added to the design report the visualizations have been added to views also and the screen shots have been added too the only thing that i would like to add is that the bar charts could have been more descriptive as in they could have added details for   x label and y label and also put legend this will aid the user in quickly understanding what the chart is conveying   
noproblem they have worked on their weak   point earlier their solution does not seem cogent but i would say now they have made good progress
noproblem the sample data visualizations is good the way they have given visualizations for sample data is nice easier to understand and good
noproblem the document does include a flowchart which shows the flow of changes however an uml diagram would have made the document more understandable and easy to follow
noproblem the team already has mockups for their design
noproblem the visualization is great the screenshots clearly indicate the proposed output of the project
noproblem the team has not included any additional diagrams apart from the flow diagram provided in the first stage the flow diagram effectively describes the sequence of actions that need to be taken so that the instructor can view the bar graph visual representation for the selected criteria set
noproblem really good visualization provided
noproblem according to the team the specification of the project does not require us to use automated tests    but they plan to test the modified ruby code or the new features using   the   rspec   testing framework overall the test   plan sounds good  
noproblem no tests are required for the project as stated
noproblem this team did not require any tests
noproblem the design document does not include a test plan as testing requirement   is very minimal since most changes are in view
noproblem the test plan section specifies that it does not require performing any automated tests however since the new functionality of adding a visual diagram the team would modified ruby code for the functions added to the grades_controller
noproblem authors have explained the changes that needs to be made clearly
noproblem yes the design is sound and appeopriate however it may be better to implement more code level design
noproblem simple and clear easy to understand
noproblem it gives a high level design picture and two scratches of ui which are all good and understandable
noproblem the test plan is completed just one suggestion that it can be more specific for example it may include some real test cases
noproblem yes have included the flow of the process in the second round of interview
noproblem 1 the document clearly mentions the changes to be made to the existing system and requirements that need to be delivered 2 also mentions the changes to be made to the ui 3 the files to be added modified are also mentioned
noproblem 1 follows appropriate design principles and patterns
noproblem 1 yes the design appears to be simple
noproblem 1 document includes test plan 2 however can include more test cases
noproblem yes there is no mention of design pattern yet but overall design appear very clear to me
noproblem mockup   diagrams really make it easy to understand   
noproblem great work in high level test plan it is very easy to understand and it is one of the strong point of this documentnt
noproblem overall team has done good work on visualization hope to see the actual images of expertiza   by the end of the project
noproblem authors have explained the changes that needs to be made clearly
noproblem design seems good
noproblem design seems simple and correct
noproblem the changes necessary are explicitly outlined though more description as to why certain files need to be modified would be nice to have
noproblem the proposed changes match existing expertiza guidelines well
noproblem the plan of work seems to be quite simple   
noproblem yes very clearly writeup
noproblem the explanation is good and helps get the point across
noproblem the design for the feature is simple and clear
noproblem i see that they added an additional flow diagram that is further helping in the understanding
noproblem they have mentioned about possible tests required for the project
noproblem well they have mentioned what needs to be done what changes have to be implemented
noproblem it does appear to be sound and in sync with the dry principles
noproblem well the design does look simple it is not difficult to understand the principle
noproblem ui mockups and uml diagrams are descriptive however more information should be conveyed to how to solve the problem
noproblem yes diagrams are self explanatory
noproblem the design appears to be sound following all the appropriate principles and patterns i liked the overall flow of the document
noproblem the design looks to be simple and clear to me it clearly states what files are going to be changed and as per my knowledge there is no redundant and unnecessary change
noproblem i liked the visualizations used this time around they have certainly improved from the last time i liked the overall used of high and low level visualisations provided
noproblem even though few test cases have been provided i feel like it could have been more detailed with the steps   involved in the testing
noproblem yes very clearly writeup
noproblem well they have mentioned what needs to be done what changes have to be implemented
noproblem 1 the document clearly mentions the changes to be made to the existing system and requirements that need to be delivered 2 also mentions the changes to be made to the ui 3 the files to be added modified are also mentioned
noproblem the explanation is good and helps get the point across
noproblem design seems good
noproblem the proposed changes match existing expertiza guidelines well
noproblem it does appear to be sound and in sync with the dry principles
noproblem 1 follows appropriate design principles and patterns
noproblem the design appears to be sound following all the appropriate principles and patterns i liked the overall flow of the document
noproblem design seems simple and correct
noproblem the plan of work seems to be quite simple   
noproblem well the design does look simple it is not difficult to understand the principle
noproblem mockup   diagrams really make it easy to understand   
noproblem 1 yes the design appears to be simple
noproblem the design looks to be simple and clear to me it clearly states what files are going to be changed and as per my knowledge there is no redundant and unnecessary change
noproblem the design for the feature is simple and clear
noproblem simple and clear easy to understand
noproblem yes have included the flow of the process in the second round of interview
noproblem overall team has done good work on visualization hope to see the actual images of expertiza   by the end of the project
noproblem i liked the visualizations used this time around they have certainly improved from the last time i liked the overall used of high and low level visualisations provided
noproblem i see that they added an additional flow diagram that is further helping in the understanding
noproblem yes diagrams are self explanatory
noproblem it gives a high level design picture and two scratches of ui which are all good and understandable
noproblem great work in high level test plan it is very easy to understand and it is one of the strong point of this documentnt
noproblem they have mentioned about possible tests required for the project
noproblem the issues have been identified and documented clearly    however a little more of explanation is required for the   solutions proposed for issues 2 5 they seem to me at a very high level
noproblem yes they look well written and easy to follow with all the visual aids
noproblem very well written document good job team
noproblem i understand what the team is supposed to do to the expertiza system
noproblem drastic improvements have been made to design doc   
noproblem as far as the issues are concerned the solutions do seem logical      
noproblem the design looks good all the issues are stated and addressed nicely
noproblem yes the deisgn appears to be totally sound the changes proposed are very standardized and follows appropriate industry standards
noproblem the design is sound with appropriate principles and patterns
noproblem clearly explained with diagrams and uml diagrams
noproblem    the design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information    also they have been thorough in pointing out the application flow in the application flow section so as to elucidate the problem statement   
noproblem since the project is aimed at fixing the issues no design patterns need to be used
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done   
noproblem yes simple straightforward solutions
noproblem the design does not seem that complex the team has clearly mentioned the issues and the way to go about it   
noproblem yes the design is very simple lucid and efficient
noproblem yes only a few files are being modified
noproblem the design is simple   
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem the explanation of each of the issues in details is done very well but it does seem to be complicated unless files to be modified and solutions are read
noproblem it was weird that two of the bugs they were assigned don t exist but that s not the team s fault
noproblem the design appears to be simple and straightforward to implement the team has also included all the changes that will be made to achieve the desired results    great work
noproblem the design   document is   easy to comprehend have explained in detail about the problem but not about the solution
noproblem great use of mock ups and uml diagrams it makes understanding the issues easier looks like a great amount of thought has gone into making it   
noproblem the visualization is great all the flow diagrams and required screenshots are in place as required
noproblem the visualization is by far the best part of this writeup also it s visualization is among the best i ve reviewed till date the author has put in a lot of efforts for the same the diagrams make the architecture and the problem statement very simple to understand
noproblem a lots of visuals very helpful when viewers walk through the design
noproblem great work by the team on uml diagrams   
noproblem yes the diagrams are clear to show how the system works they have even gone a step ahead to show how they have thought of resolving the problem at each and every step of the expertiza review section and the message popups they receive for the same   
noproblem this team consistently uses great diagrams that add to their documentation s clarity significantly
noproblem the team has included a lot of visual aids which complements the document making it a lot easier to understand    great work with the ui mockups project design uml diagrams
noproblem as per the requirement document test cases are not required
noproblem yes they have a working test plan in mind and also they have thought of the ways in which they are going to test the various edge cases for the various issues at hand
noproblem the aspect of re producing the issues are very clearly mentioned and hence tests are written briefly which can be easily understood
noproblem the tests are really in depth for each issue the team will be fixing
noproblem the authors have dived into the depths when explaining the changes all of the changes are well defined and precise
noproblem yes they did
noproblem the authors have very well explained the problem statement and the changes to be made to the system including flowcharts the files to be modified added and useful links
noproblem authors have clearly explained the changes to be made to the system the design document was easy to understand
noproblem the team is going to improve compatibility with web content that relies on the webaudio api by implementing missing pieces of incomplete node types oscillatornode along with entire missing nodes constantsourcenode stereopannernode iirfilternode   
noproblem yes they made detailed explanation about their changes
noproblem the design seems to be flawless all the principles and patterns used are flawless and to the point
noproblem yep they have good structure to show what and how they gonna do with the project
noproblem the design looks good the code is already committed and approved by the concerned team good job
noproblem yes their design appears to be sound
noproblem the design appears to be sound and following appropriate principles
noproblem i don t exactly understand how the waveforms help to produce the sound for the new browser they re adding support for but other than that their approach seems solid
noproblem yes i am   surprised that they have already finished the project   
noproblem the design is concise and clear
noproblem the design is simple and easy to understand the sin waves and the description about it helps to properly understand the changes made and its impact
noproblem the design was not unnecessarily complex it was as easy as it could be
noproblem use of flowcharts and step by step explanation simplified   their solution it was easy to grasp and design also appears to be simple
noproblem very simple and clear
noproblem the team has done tremendous job in adding visualization aids they have added application flow diagrams and visualized images they have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages this makes the document descriptive and very easy to read and understand      
noproblem self explanatory visual changes have been added all the changes are described via the visual aids
noproblem the authors have dived into the depths when explaining the changes all of the changes are well defined and precise
noproblem yes they did
noproblem the authors have very well explained the problem statement and the changes to be made to the system including flowcharts the files to be modified added and useful links
noproblem authors have clearly explained the changes to be made to the system the design document was easy to understand
noproblem the team is going to improve compatibility with web content that relies on the webaudio api by implementing missing pieces of incomplete node types oscillatornode along with entire missing nodes constantsourcenode stereopannernode iirfilternode   
noproblem yes they made detailed explanation about their changes
noproblem the design seems to be flawless all the principles and patterns used are flawless and to the point
noproblem yep they have good structure to show what and how they gonna do with the project
noproblem the design looks good the code is already committed and approved by the concerned team good job
noproblem yes the flow diagram and graph plots help to understand the changes and its implications the diagrams clearly describe the change approach followed
noproblem yes their design appears to be sound
noproblem the design appears to be sound and following appropriate principles
noproblem the flowcharts included in the design document clearly explain the changes that need to be done
noproblem yeah their   proposed design includes workflow initial step and subsequent steps it was easy to follow their design their solution appears to be sound
noproblem i don t exactly understand how the waveforms help to produce the sound for the new browser they re adding support for but other than that their approach seems solid
noproblem the design document includes proper visualization it included appropriate flow charts and screenshots which made it easier to understand the design document and the project
noproblem yes i am   surprised that they have already finished the project   
noproblem yes the team has used flowcharts and diagrams which clearly describe the changes to be made to the system
noproblem the design is concise and clear
noproblem the design is simple and easy to understand the sin waves and the description about it helps to properly understand the changes made and its impact
noproblem the design was not unnecessarily complex it was as easy as it could be
noproblem they provide pictures of their sound waves
noproblem use of flowcharts and step by step explanation simplified   their solution it was easy to grasp and design also appears to be simple
noproblem very simple and clear
noproblem the team has done tremendous job in the test plan they have already implemented the test cases and given the path to run it
noproblem the team has done tremendous job in the test plan they have already implemented the test cases and given the path to run it
noproblem the provided tests are in depth and will test the changes made thoroughly
noproblem the provided tests are in depth and will test the changes made thoroughly
noproblem they have pretty good test plan as there is no code yet
noproblem they have pretty good test plan as there is no code yet
noproblem this is a mozilla project and i am not sure what are the testing requirements and depth to be covered as it is not mentioned in the document but the steps mentioned do suggest that basic testing id done
noproblem it included a proper test plan there was no test plan included in the previous version of the design document but authors have added it in the second round which made the design document complete
noproblem the design does include test plan and plans to test the functionalities  
noproblem the team have thoroughly explained the changes that need to be made and how they intend to make those changes the team could explain their test plan in more detail
noproblem the additions made to the explanations were excellent the detail of which changes affect which files is very good
noproblem they explain their changes succinctly and in an easy to follow manner and they explain the motivation for the changes well
noproblem yes they explained the changes in a great detail they also wrote a part called implement steps which includes 5 tasks good job
noproblem the design does include test plan and plans to test the functionalities  
noproblem the authors have explained the required changes in a concise manner
noproblem yes the project design is meaningful and clear the solution is well laid out
noproblem changes are explained but are not very descriptive the document is not much changed since the last submission
noproblem yes   
noproblem yes the authors have specified the changes to be made in the system under the proposed project design the changes have been included as sub heading with sub points under each the authors have also included a relevant files heading that includes the files where changes are made the changes involve allowing the instructor to change language for a course in the process a separate language column will be added to the courses table and a dropdown of languages in the edit courses page where a language can be chosen once the instructor updates the edit course page with the chosen language the static strings in the expertiza application will be changed to the chosen language for adding multi language support google translate and rails internationalization api is being used also two yaml files en yml and hi_en yml contains the translated strings for the respective languages the routes rb file and all the view files will be correspondingly modified to show the different languages after reading from the yaml files   
noproblem the explanations provided by the authors seems to be good they have referred the rails internationalization api guide which provides sufficient explanation for multi language support they have mentioned the different elements that will be changed and how an instructor would proceed to change the language of the course verbally in addition they have also added mock ups to visually represent this information
noproblem the explainations are succinct the description in technical design section and before after images clearly shows what the project intends to do
noproblem the changes are clearly mentioned they are very clear what and where to make changes only suggestion would be to include more about how these changes are going to be done   
noproblem adding a languages column to the courses table makes sense and so does leveraging third party apis to handle the translation
noproblem the design is as required following the appropriate patterns
noproblem as far as the issues are concerned the solutions do seem logical
noproblem it is sound
noproblem looking at the design there seems to be high use of cohesion   and low coupling it s good that all the changes are restricted to the routes rb and config locales files so that the resulting changes won t be messy and ruin the rest of the system also this helps in refactoring if needed in the future as there will be limited number of files to be changed
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it
noproblem yes simple straightforward solution   
noproblem the changes have been explained well enough to minimize the complexity the implementation seems extremely clear
noproblem simple and easy to understand steps
noproblem the team has mentioned properly what changes they are doing and how they will be doing them in the first submission they had suggested the possible approaches now they are having a concrete way they are implementing these changes
noproblem yes and at times much more than necessary   
noproblem yes only view files are involving since this topic is about changing the language
noproblem yes the authors have made changes to the design document and are more specific about how exactly they plan to implement the new functionality
noproblem yes they explained a lot for the changes great job
noproblem the design appears to be very simple the team has avoided unnecessary complications by adhereing to the rails internationalization guide they have also avoided making unnecessary changes to many files and kept the changes to the minimum number of files required
noproblem the team added more information from the last time which aided in a better explanation of the problem good job team
noproblem 1 the authors have adequately explained the changes to be made to the design document
noproblem the design is really crisp and easy to understand one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well
noproblem the explanations are more than sufficient not only have the authors explained the changes to the system but also explained the reasoning for considering those changes i like the way that they also explained the other different ways they could ve integrated the github metrics but avoided those methods with sufficient reasoning for the same the team has also given an explanation of their database design modifications would be like which is good
noproblem yes the current design looks simple and wholesome seems they have done a good job in implementing understanding how rails internationalization works good job     
noproblem yes excellent work done by the team the design document adequately explains what is the problem that they are trying to solve what is the proposed solution and how the solution would look like    there are enough details to in the document to understand what is being done and what changes are proposed the document also has enough illustrations on what is the current situation   
noproblem the authors adequately explained   the changes   they plan to make
noproblem the design seems to be sound they have a sample design where they are explaining the tables and how they plan to work with them as well the examples provided help understand how the data will be stored
noproblem yes
noproblem the visualization clearly and effectively conveys the translation capability which the project proposes to provide to expertiza
noproblem yes the provided diagrams deliver sufficient information about the implementation
noproblem yes
noproblem yes they included some design principles which is good maybe the authors could add some design patterns into wiki
noproblem    the design appears to be sound they have weighed their options and are using an official gem to interact with the github api
noproblem the necessary visual inputs to aid explanation are present
noproblem mock uis screenshots give a perfect picture of how the system will be after the required changes
noproblem i don t   see any issue in the design document they have followed a good design principle
noproblem no visualization or diagrams are necessary
noproblem 1 the authors have mentioned several approaches in which these functionalities could be implemented 2 their chosen approach is follows mvc architecture and dry principles
noproblem    the design sound very reasonable
noproblem the design is concise and clear they have added reference images of how the system would look after their changes which properly shows the expected implementation results
noproblem yes it is thoroughly investigated
noproblem yes
noproblem their design is much simple and clear also easy to understand
noproblem yeah i believe it is as simple as possible while choosing the best path for the expertiza project to grow but it still sounds like a very ambitious project for 1 group to complete
noproblem with proper documentation the problem is explained nicely and understanding of the complex problem is made easier
noproblem 1 have clearly mentioned when will github api be hit to retrive the data and which gem will be used
noproblem    their design is simple and clear
noproblem the use case diagram properly shows how the addition of this feature will help for   the instructor role
noproblem the visualizations used by the team are comprehensive and well made
noproblem good design
noproblem a testplan that covers the entire functionality has been devised it seems sufficient to test the change
noproblem excellent use of screenshots made things very clear for me
noproblem the test plan is compatible with the problem statement   
noproblem yes they use a lot of diagrams to show use case
noproblem as there are ui changes test plan is not required but a basic stepwise description of how to see the required output can be helpful
noproblem test plan have been shown clearly and tests are easy to understand
noproblem yup because it only tests the ability to change the language
noproblem explains the different approaches with the help of use case diagram
noproblem there are enough aids such as uml diagrams and screen shots the authors explicitly mention that there are no db changes so no need of an er diagram although i would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
noproblem    they not only use use case diagram but also mock up screenshot to help the reader understand their design
noproblem the test plan briefly mentions the scenarios the team plans to test they can add more about the test cases if possible
noproblem the test plan seems adequate at this stage edge cases may need to be considered at a later stage
noproblem no
noproblem yes it includes the test plan with a great detail
noproblem    the test plan seems adequate enough to show that they understand what to test
noproblem few test plan is written the team can add more test plan
noproblem    test plans for both of their subtasks were   present
noproblem yes the authors have clearly explained the changes to be made to the system document is simple succinct and easy to understand great use of flow charts uml diagrams and mockups to visually represent the information is done   
noproblem    yes the author has provided a sufficient explanation of what changes needs to be done to the system by giving flow diagrams and screenshots about what changes they are going to incorporate in their system
noproblem team has added all the diagrams and screenshots the document is well explained and looks complete
noproblem yes their explanations are adequately explained the changes
noproblem 1 the authors have clearly explained the changes to be made to the system 2 they also have given the files to be modified added for each change   
noproblem authors have clearly explained all the changes to be made and where to make them the design document is quite clear and easy to understand
noproblem i think that the authors have done a really good job of explaining and covering all the changes to be made overall this is the best document i have seen so far
noproblem the document seems complete
noproblem yes one of the best design docs of project 4
noproblem the document was very well written previously too and they have improved it with diagrams and test nice work
noproblem the authors have considerably improved on the document uml diagrams as requested have been added
noproblem yes the design follows appropriate principles and patterns suggestions not required
noproblem    as the project is based upon making changes to the ui of the system thus there is no such specific pattern being followed however the design that they have made available in the form of screenshots appear very much inclined with the functionalities that they need to implement
noproblem design is good
noproblem yes their design is very sound and principles and patterns are used appropriately
noproblem 1 the design appears to be sound 2 also follows proper design principles eg for making changes to nomination and review questions inheritance is used inheriting methods from questions parent class
noproblem they have explained very well
noproblem yes the design follows simple rails concepts and is pretty straightforward i would like to see if the team uses existing gems available to speed up implementation and re use      
noproblem yes looks clean any design patterns used
noproblem yes the design appears to be sound and well made   
noproblem yes the design appears to be sound there could be some rearrangement in the mock up layout e g text box for email address and add button could have the same horizontal alignment for a better user interface
noproblem the design   seems to be very simple i think the team has avoided unnecessary complications and are doing minimal changes to existing system to solve issues given to them
noproblem the design approach seems justified and inline with the functionalities required to be implemented they have mentioned step wise details for all the changes they are going to take done a good job no rework required
noproblem    yes the design is presented in a much simpler form which gives a very clear picture of how the changes are going to be implemented and which functionalities would be witnessing the changes also as they have provide the screenshots it enhances the understanding about the project more
noproblem yes their design is simple and clear enough to read and understand
noproblem 1 the design is simple and well modularized 2 each method is implementing only one task as it should
noproblem the design does appear to be as simple as possible the team have not unnecessarily complicated the project
noproblem yes the design is pretty simple and to the point the design proposed is very clear and talk why each change is necessary
noproblem    the design is straightforward and as simple as possible the team has thought this project out very clearly and laid the same in the form of flowcharts and mock ups this has greatly reduced the complexity of the project and helped decrease the chances of clutter and confusion
noproblem yes adequate amount of details present
noproblem yes    the requirements are simple and the design plan clearly explains all the points
noproblem yes design appears to be very simple
noproblem yes the design is quite simple
noproblem yes they have done a great job to adequately explained their changes
noproblem they have done this part
noproblem yes they have well explained their design
noproblem yes the design appears to be sound and appropriate
noproblem great use of uml diagrams flowcharts and mock ups by the team to clearly explain the flow of their work it is   easy to understand the flow and how the end product will look like
noproblem the design appears to be sound
noproblem they team has done awesome work in representing every detail possible in the flow diagrams they have created uml diagrams which depicts the flow of the admin and students along with other actors as mentioned earlier they have also represented the admin flow diagram and instructor flow diagram through the flow chart which makes it very easy for end user to understand the workflow of the requirements in the expertiza system
noproblem    yes the visualization is pretty clear and good
noproblem proper use of uml to explain the use cases and flow charts to explain the workflow has been done the plan is complete
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it
noproblem the design seems straightforward and simple
noproblem yes their visualization is good they are clear and well described the changes
noproblem in my view they are simple and clear
noproblem simple design with the use of interface and apis
noproblem the design seems to be quite simple
noproblem the design document includes flow charts uml diagrams and screenshots which is really impressive as it made the document easier to understand
noproblem the design appears to be simple
noproblem i loved the overall use of the visualizations which aids to the understanding of the whole doc the formatting of the documentation makes it really easy to read and understand
noproblem a suggestion would be to add some visualization about what the offscreencanvas does would be helpful
noproblem since it is a mozilla project testing is not necessary but the previous design documentation does touch upon the specifics of testing how an offscreencanvas is rendered
noproblem yes the presence of use case diagrams and flow charts explaining the work flow is good it would be nice if there were more uml diagrams such as sequence so show various class interactions    presence of mockup screens is good that helps in understanding what is being implemented it would have been good if the authors put in more details about the validations that that propose in the system  
noproblem yes the   uml   diagrams sufficiently provide visualization
noproblem the authors have added uml diagrams as requested in the previous review and it has made a lot of difference the explanation is much clearer now
noproblem test plan outlines the functionalities that the team will test and it seems sufficient to test the changes
noproblem they team has done tremendous job in following the test driven approach for the project implementation they have already included the tests they are writing for the functionality implementation they have covered the exhaustive scenarios   for the project in their test their test plan is highly appreciative
noproblem    the test plan is quite good as it covers all the test cases in the form of 11 test cases which test all the functionalities for the admin and the instructor role it also considers the negative test cases like throwing an exception when the pending instructor tries to add more then 10 students to his her course
noproblem tests can be made more exhaustive for now it looks like only the view will be tested but controller should be tested as well
noproblem yes they include the test plan
noproblem 1 the test cases cover all of the functionalities that they are going to implement
noproblem yes the document includes a test plan there was no test plan present in the previous version of the design document but the team included the test plan in the second round the test plan is clear and seems like it would really test the functionalities
noproblem the test plan has been written in a very good way following the great   quality of documentation till the end it covers all the edge cases and scenarios
noproblem the test plans are excellent the best i have seen so far it has accurately taken all test cases into consideration and described the layout of the final test in the form of a pseudo code well done on the test plan
noproblem yes test plans are included
noproblem yes the test plan looks good it covers all the functionalities
noproblem test plan seems thorough and well thought   out
noproblem the team is following a test driven development approach they have defined the test cases that need to be tested after the implementation it seems to completely test the feature
noproblem yes the issues and the proposed solutions are clearly written
noproblem yes they have
noproblem yes this is the best design i have reviewed it has clearly explained the changes in steps the formatting is great and it s very well made with very good design details and objectives it also included the current scenario and a typical score table it should be great if there s an expected final outcome visualization as well
noproblem yes the authors have adequately described the changes required to be made to the system the process has been divided into steps and each step describes changes in the mvc files good job
noproblem the problem and the changes needed is explained clearly
noproblem yes they explained a lot with two steps
noproblem i really loved the way that the authors have provided a detailed proposed plan section making it very clear about the changes that are required to be made in order to tackle the given problem statement
noproblem the authors have described 1 2 solutions of the problem however i would suggest them to include more about how these changes will be done and where are these changes going to occur what files will be affected etc
noproblem all problem statements have been explained this time including an elaborate test plan
noproblem yes the author explained the plan clearly the steps and the files need to be modified are listed
noproblem as far as the issues are concerned the solutions do seem logical
noproblem yes it looks sound
noproblem the   design is sound it completely follows the instructions it also has detailed implemenation plan in each steps i think it follows the dry principle because it uses existing implementations fully understood the existing implementations and added the functions above i think it should also follow the factory pattern although not shown in the design doc
noproblem yes the system is well designed and the ui looks neat as well they have put effort into the ui thinking process
noproblem yes they have
noproblem explained details about their solution and what will be changed after their implementation
noproblem yes changes to be made are clearly explained
noproblem they have explained in detail about the proposed changes with individual diagrams for each case it is very thorough in explanation
noproblem great documentation tbh the best i have seen yet      
noproblem they have documented it in a very rehearsed manner
noproblem the design document is really well written it clearly describes what needs to be done how it needs to be done and what code changes need to be made the files and tables affected are clearly listed
noproblem the authors have prepared the design document quite well
noproblem the author has explained extensively about the changes to be made to the system
noproblem yes the problem definition and the proposed solution are pretty clear they also provide some diagrams to explain their project which is helpful
noproblem their introduction and problem definition are clearly enough to explained the changes
noproblem with er diagram and database details the design looks good
noproblem the design follows appropriate principles and patterns as required
noproblem yes the proposed changes make only required additions
noproblem yes it follows   appropriate principles   
noproblem the design appears to be sound it is really well structured it is easy to follow it clearly states the changes to be made and the files affected by these changes
noproblem the design appears to be sound and clearly indicates the proposed code changes
noproblem the design follows appropriate principles but no design patterns have been used
noproblem yes the design is appropriate
noproblem yes they provide solution for different problem situations
noproblem yes it is fairly simple
noproblem no complex design only few places need to add functionalities and they all very similar
noproblem the design is simple although the er diagram takes a little time to decipher since it is quite big
noproblem yes the approach described in the design document is easy enough to understand they have also   backed their decision to go with the second approach with appropriate reasoning
noproblem the design is simple and quite comprehensive covering lots of methods of searching
noproblem yes based on the proposed solution it appears to be simple as possible
noproblem yes easy to understand
noproblem the design has been explained in a simple way the team has explained the design using use cases which is easy to comprehend
noproblem yes the design is simple and feasible
noproblem yes clear and simple
noproblem they have used apt visual aid like uml diagrams and screen shots
noproblem no class diagram but there is er diagram and tables for database it looks a little complex but give the idea of what is involving
noproblem necessary diagrams are included
noproblem the team has communicated their design clearly via use case diagram and a class diagram with a description of various database tables involved
noproblem excellent use of visualizations they already had an overall flow chart and this time additional tables and uml has been added best of what i ve seen
noproblem yes they do explain everything the er diagram use case diagram relevant tables explain everything
noproblem the project has great visualization a lot of uml diagrams have been included which makes the understanding the project easier the uml diagrams also clarifies what work is to be done
noproblem the team has described changes using use case and er diagrams to clearly explain the system
noproblem the authors add more diagrams to help to explain the change they are going to make the relevant tables are really helpful
noproblem test plans walk through necessary functionalities
noproblem the test cases described will cover the functionalities described given that they write multiples tests with the same structure as described for all search criteria   
noproblem a concrete test plan is also added and it has both ui and automated test details
noproblem yes this is done very well
noproblem they include a very described test plan it has everything proper what framework what tests all this information is well included they clearly specify what they aim to test
noproblem the test plan is pretty good and it has both ui tests and automated tests   
noproblem the test plan is designed efficiently they have described the ui tests and automated tests which cover most of the cases   
noproblem two types of testing are listed and the authors list all the cases they need to test
noproblem yes the authors have significantly improved the writeup and very adequately explained the changes that they ve made
noproblem the wiki is detailed enough that it mentions all the functionalities required in the project the team has made sure to   explain all the changes they wish to make to the system they list all columns that need to be sorted and how they will implement the sorting
noproblem the authors have explained enough about the changes
noproblem the team has added uml diagrams images of related web pages and provided details on jquery tablesorter that explains well the changes the team plans to make
noproblem great improvements compared to the previous submission now its a   very well written document good job team
noproblem yes the team has elaborated their design approach and changes to system in detail they have mentioned all the file changes and also provided sample code for reader understanding
noproblem they made clear explanation about their task for example their provide pictures to show what they need to do      
noproblem the design is very efficient and follows the standardized software engineering practices   
noproblem the design is sound because it has plans of file modification of implemented solution and very detailed testing plan the dry principle might not be well followed since in each testing the tester needs to log in as a super_administrator2 again and there are five testings   
noproblem the design is sound and easy to understand the design proposed also sounds logical i e to sort team names alphabetically and grades numerically to sort by both ascending and descending order
noproblem yes the design seems to be sound
noproblem the authors have justified the use of jquery table sorter by   listing its advantages
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement   
noproblem the design appears to be specific to the requirements for this they have used a uml design which basically explains the flow of the use case they have not used any principles or design patterns however there does not seem a need to use any as their changes are limited to the html view and making a call to the tablesorter using jquery as per the document the design does not make any redundant changes or unnecessary changes to the code thus they have done a good job by optimizing the changes
noproblem yes as its sorting not much scope on design approach yet the team has documented well on their approach regarding multi level sortings that they are undertaking in few pages they have also considered cross browser compatibility of their jquery library which is a common design miss during client side changes
noproblem this project is not very difficult so they don t need to follow some principles or patterns
noproblem yes the design is very simple to understand and also the implementation is pretty clear and effective
noproblem the design is extremely simple and easy to understand good work guys
noproblem yes the solution proposed is simple by using the   jquery tablesorter gem
noproblem the use of jquery plugin sounds simple and easy to use
noproblem the design looks simple and clear
noproblem this their design is very simple and clear
noproblem this part has been significantly improved from the previous submission the diagram make it very easy for an outsider to understand the architecture the underlying problems and the proposed solution   
noproblem yes the figures added to the wiki clearly indicate the changes that will be made to each view the columns that will be made sortable and how will the made sortable good work
noproblem yes the team added visual aids like uml diagrams screen shots code snippets to clearly describe the changes to be made to the system well done
noproblem this team   used great diagrams that add to their documentation s clarity significantly
noproblem there are multiple visual   elements that improve the readability of the document screenshots of the ui tables help with the illustration of   the required changes furthermore    the uml diagram demonstrates the relation between relevant flows
noproblem the team has added good number of mock uis and uml diagram and clearly explains the code follow all of them are self explanatory and needs no improvement
noproblem diagram is added   
noproblem no visulization is necessary for this project
noproblem you have a lot of testing scenarios which is really good
noproblem the design doc includes the test plan which covers all the changes that will be made
noproblem there is a detail explanation on how the function testing will be carried out under the teating plan section of the wiki doc
noproblem yes it includes test plan it is very well written and will test the functionalities
noproblem test plans looks to be an overview of the functionality in the test plan i see the functionalities explained l
noproblem the test plan is complete and covers all intended functionalities they have also provided all necessary steps to test the functionality good documentation on test plan as client side changes using script is added a latency test to verify system is not slow in responding to sorting can be included
noproblem the test plan is thorough   
noproblem yes the authors do have an adequate explanation   
noproblem they have also added the uml diagrams which makes things a lot more clearer
noproblem the authors have very well explained all the changes that need to be done with the help of proper problem statement the files that require modifications the current and the required state
noproblem good additions on the purpose and use case of your work
noproblem is decently explained
noproblem team has explain the changes to be made very well also screenshots of the system is helping to understand which part of system is changing
noproblem the introduction and proposed solution sections appropriately describes the problem and the approach to resolve the issue the changes proposed can be concisely implemented into the system they have enlisted use case diagrams for the entire scenario to be added to the rubrics
noproblem i cannot remember what the explanation looked like last week but the read through this week felt very clear the organization of the article felt like it followed the logic of a design project the problem statement felt like it was reduced to a clear concise set of requirements that are attainable the addition of the program flow diagram and an explanation as to why there is no uml diagram also helped to cement my understanding and set my expectations
noproblem good work on adding uml diagrams now the problem is very well explained
noproblem yes they have given a good detailed explanation of the planned changes
noproblem yes they include all the details in the functionality implementation
noproblem the authors have mentioned about the changes
noproblem yes clear and crisp
noproblem the authors have thoroughly explained the changes made to the system
noproblem the authors have lucidly explained the changes that are to be made to the system they show the current state of the system and the expected state which includes a new button to analyze the review content in the segmented text box the authors have specified 2 files that they plan to modify namely the view file response html erb and a partial _self_review html erb the team clearly show the format of the response popup with suggestion metrics that capture sentiment score sentiment tone whether suggestions are present or not chance of suggestions volume of text and the volume of text without stop words they also propose to improve the response time of extracting the output from the api one suggestion is that the team could have touched upon the working of the suggestion detection algorithm though it is not part of their current implementation they do mention that it is a black box and have included a link to the deployed nlp project for suggestion algorithm where users can test the suggestion metrics generated for custom text
noproblem yes they have explained it very well
noproblem the changes proposed are well explained and clearly indicate the intended output
noproblem the authors have adequately explained changes made to the system they have explained the problem and proposed solution clearly and supported it with appopriate diagrams
noproblem very detailed and precise solution explained thoroughly   
noproblem the desgn looks okay
noproblem the design appears sound
noproblem yes it seems very sound and workable
noproblem the design appears to be sound they are checking if its multiple round exists and adding the checkbox functionality
noproblem the design is clear and easy to interpret the team has provided a code snippet which explains the changes to be made in the system to implement the solution
noproblem the design lacked enough explanation about how will they deal with reviews when the box is    checked and unchecked for the naming of the function and database the name seems too long it is better to make the name shorter and easy to understand
noproblem basic complexity
noproblem looks simple
noproblem design doc shows a good amount of work to be done team has articulated changes to be made well that makes design doc simple to understand
noproblem the design is seems to be as simple as possible
noproblem yes according to what they wrote they are going to realize this project from 2 sides the instructor side and the student side the steps are very clear
noproblem the design appears to be simple and easily understandable
noproblem yes simple and straightforward
noproblem the design has been made as simple as possible the complexity of the design is simplified using flow charts
noproblem this is a fairly simple design
noproblem yes a variety of apt visual aid has been used like screenshots uml diagram etc
noproblem the team has used flowcharts and ui which was necessary for this project
noproblem the diagram in ui part states clearly the changes the authors intend to make and how it will be like the flow diagram explains clearly the design logic and help me understand what changes the team will make
noproblem the team has used mock ups and a flowchart to show the basic functionality
noproblem tests with different scenarios are provided
noproblem yes according to what they wrote they are going to realize this project from 2 sides the instructor side and the student side the steps are very clear
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement
noproblem the authors have included an elaborate test plan which tests even the functionality they have missed to mention in the proposed design part of the document this is quite complete
noproblem the design seems to be clear such that it provides the implementation procedure to be followed to include the feature of adding student generated questions to the rubrics
noproblem they explained from their requirements and in their flow that they only need to plan to edit the view so there is no need for a uml
noproblem the design is sound
noproblem as per the documentation the design seems simple
noproblem looks very doable
noproblem yes from the diagrams i could say design and design flow is simple enough and team has well understood the changes to be made
noproblem yes the design is sound and clear majority of the work is done by the suggestion algorithm the team proposes to integrate this functionality into expertiza and also improve the response time this project does not need to incorporate any design pattern as only the view files are altered the project does not impact the degree to which it is object oriented
noproblem since the task is to integrate a web service in the existing system the design mentioned is sound and reasonably primitive   
noproblem yes it does based on the proposed solution
noproblem the design is good however there is no scope of using bad principles since the number of files that will be affected are minimal and restricted to just 2
noproblem the design doc is sound and i believe   no design patterns are required for this project
noproblem the design appears sound
noproblem yes the design in its current form seems straight forward
noproblem the requirements were distilled down to the fewest simple terms possible without over generalization it felt like they just gave me the tl dr statement without any fluffy words to waste my time and also feels like they have a strong grasp over what they are expected to accomplish
noproblem yes the design appears to be simple   
noproblem yes the design appears to be very simple
noproblem yes the design is very simple and easy to follow
noproblem the design appears to be simple and straightforward to implement the team has also included all the files that will be changed to achieve the desired results
noproblem the design appears simple to be executed based on the procedure specified and the list of diagrams given that it justifies the implementation to be carried out
noproblem yes the design is simple and illustrated well with the use of wireframes showing the current expected state and uml diagram showing the flow diagram it depicts that once the analyze button is clicked the request is sent as json which contains the text typed by reviewer in the segmented textbox to the api which generates the suggestion metrics the response contains the suggestion metrics like sentiment score sentiment tone presence of suggestions chance of suggestion total volume of text and volume of text without stop words   
noproblem yes the design is simple and clear the task is to integrate   a web service which returns a result in json format
noproblem the diagram is clear and easy to understand from the diagram the design may be easy and clear to implement more details should be provided to evaluate further about the complexity
noproblem yes it does appear to be simple as possible
noproblem the design is simple and easy to understand could be better if implementing some code level design
noproblem the design is as simple as it could be since the flow of logic is pretty linear and there is no scope of complexity the changes also seems to be restricted to just one file which is good and in keeping with sound principles
noproblem it would be better if uml and class diagram are added as a part of the documentation
noproblem team has provided good amount of use case diagrams which actually are heart of the whole design doc and explains the design and approach well
noproblem they have made some uml diagrams which could describe the changes
noproblem yes they use a lot of charts to explain the use cases great job
noproblem the use case diagrams provided to describe the role of each user through the flow and specify how each case maps to another in order for the desired functionality to be achieved
noproblem the diagram is logistic and it s easily to tell the logic behind the changes by reading these diagrams i can get an understanding of this project quickly
noproblem yes the flow charts are complete and readable all cases are included
noproblem the design appears very simple
noproblem the project does not necessarily need diagramatic explanations but uml diagrams have been used which show implementation plan fairly well
noproblem the screenshots of the expertiza system are very helpful in understanding the problem and the solution
noproblem the flow diagram mentioned in the document clearly explains the changes need to be done
noproblem the author has excellently explained about the changes that they would be making by providing the design diagram and the screenshot of the the changes that they have incorporated also they have mentioned about their choice of tool which is google chart and why do they prefer so overall a good explanation
noproblem changes that s needs to be made has been explained correctly
noproblem yes their doc has adequately explained the changes
noproblem the team have a well written design document and and the authors have explained the proposed changes well the authors have also listed each file they are going to be changed
noproblem yes the team has well explained the changes that they are going to make last time it was a bit confusing but this time because of   the help of the diagrams and mock ui screen the solution seems clear now
noproblem the authors have explained the changes made to the system the design flow greatly helps to understand the flow of the system
noproblem yes this team has made the best use of visualization tools that can be applied to their project they have clearly shown wireframes of the current response page juxtaposed with the expected state with the analyze button next to each rubric the document also includes the flow of the project represented as uml diagram once the analyze button is clicked the request text is sent to the suggestion detection algorithm the api returns the response which contains the suggestion metrics like sentiment score sentiment tone presence of suggestions chance of suggestion total volume of text and volume of text without stop words   
noproblem the authors have described what all changes they plan to do and where they plan to do it compared to the previous version of the design document they have now included what tools and framework they plan to work on the design document looks complete and understandable now
noproblem they will be changing mostly html and erb code to create a visual interface that delivers information to instructors more effectively
noproblem the proposed changes have been explained in a simple manner
noproblem the   use of visualization is not pivotal for this task as it can be explained theoretically as well but still the team has made an effort to present the task with help of a flow diagram
noproblem yes very well explained
noproblem the document adequately describes the project description and proposals made the proposed change of generating a single or single bar chart graph based on the categories selected to display the chart can be efficiently made to the system
noproblem they have improved the document to provide a better description of changes to be made to the system
noproblem the screenshots clearly display where the output would be displayed
noproblem yes the design is sound and gives a proper explanation about how their implementation would behave
noproblem design seems correct
noproblem yes their design is clear and sound and the principles and patterns are well used
noproblem yeah their design seems to be sound and neat
noproblem system is well defined  
noproblem the uml diagrams clearly descibes the design of the solution the screenshots explain changes required in the system adequately
noproblem the design document is good and i don t think any design pattern needs to be followed as very few changes are being made   
noproblem the design makes use of the google charts tool to generate visual charts for specific criteria set based on the design flow it appears that the functionality can be consistently performed to generate the visual graph for the instructor
noproblem yes the design appears to be sound and uses appropriate design principles
noproblem yes the design is pretty simple and inclusion of screenshot enhances the clarity of what the team has achieved in terms of the required changes   
noproblem design is simple and easy to understand
noproblem yes uml diagram is provided and it is detailed flow diagrams explains how suggestions will be given   
noproblem yes the design is simple and easy to understand i can easily know what they will do through their doc
noproblem the design appears to be very simple and well written they have explained the use case diagram very well also they have added visualizations
noproblem yes the design is simple and easy to understand  
noproblem the team is using external tools to do the work and its clear and easy
noproblem the document is really simple to understand once you get to understand the flow however initially it appears to be difficult
noproblem i think more tests can be added
noproblem from the reasons provided for choosing the google charts tool and it s effectiveness it can be integrated into the system functionality easily making the design simpler to be executed
noproblem yes design involves google charts api   and seems very simple
noproblem yes the design flow and the screenshots very clearly describes the changes made to the system
noproblem flow diagram explains the flow correctly
noproblem yes they have used visualization to help people understand their design
noproblem they have worked on their weak   point earlier their solution does not seem cogent but i would say now they have made good progress
noproblem the sample data visualizations is good the way they have given visualizations for sample data is nice easier to understand and good
noproblem the use cases appear to offer a quality general test approach to see if their design does what it should
noproblem test cases have been added   
noproblem the team already has mockups for their design
noproblem the visualization is great the screenshots clearly indicate the proposed output of the project
noproblem really good visualization provided
noproblem the project does not have any testing involved as such but the authors have added a testing plan
noproblem according to the team the specification of the project does not require us to use automated tests    but they plan to test the modified ruby code or the new features using   the   rspec   testing framework overall the test   plan sounds good  
noproblem no tests are required for the project as stated
noproblem this team did not require any tests
noproblem the test plan section specifies that it does not require performing any automated tests however since the new functionality of adding a visual diagram the team would modified ruby code for the functions added to the grades_controller
noproblem the test plan is complete the team plans to test the two possible cases 1 when the review is blank response should be no review in text box 2 when review is present response is the result of suggestion metrics analysis the team is right in testing just these two cases because they should not test if the api itself is returning a correct response as that would be against testing rules
noproblem yes functional tests with scenarios provided
noproblem the design doc includes the test plan which covers changes in the functionalities
noproblem yes the issues and the proposed solutions are clearly written
noproblem yes they have
noproblem yes this is the best design i have reviewed it has clearly explained the changes in steps the formatting is great and it s very well made with very good design details and objectives it also included the current scenario and a typical score table it should be great if there s an expected final outcome visualization as well
noproblem yes the authors have adequately described the changes required to be made to the system the process has been divided into steps and each step describes changes in the mvc files good job
noproblem the problem and the changes needed is explained clearly
noproblem yes the design is clear and the details are succinct
noproblem the design   looks simplified but there might be some edge cases that needs handling such as what if a student makes his her review public this review is selected by the power user to create a sample and then the student wishes to make the review private
noproblem yes the approach is explained in detail
noproblem the design is proper
noproblem it is simple enough and also achieves the required features
noproblem the uml diagram is very good and makes understanding very easy
noproblem yes the test plan section is again detailed with step by step instruction
noproblem team has explained the problem statement approach to solve the issue well also the use case diagram explains design well
noproblem design doc is not complex and every section of the menu explains the itself with simplest term possible
noproblem very basic explanation
noproblem simple design
noproblem    the team has well explained the changes which are required to be made in the system they have broken the explanation of the details of the requirement in simple bullet points which makes it very easy to understand the change requested the design approach  
noproblem the   steps taken by the team to implement the functionality is very clear and detailed as stated above the approach discusses the   step wise action that the team is going to take for the implementation
noproblem the team has come up with a very detailed and clear step wise test plan for all the actors involved they have done great work to depict the flow for every user which makes sure they are handling all the scenarios this also suggests their approach is behavior driven they have done great job in this and the test are in depth
noproblem while i m awaiting to receive the details which are pending on the implementation i feel the general nature of the changes is well explained   
noproblem confronted with a tricky problem in creating links between different assignments across semesters to aggregate the reviews i was really impressed with the way they plan to accomplish this feature
noproblem i like the use case diagram but i would like class diagrams or a database visualization too so it s easier to understand how the cross course assignment linking will work
noproblem detailed test plan 1
noproblem the authors have adequately mentioned the desired changes in the approach and design section the problem statement gives the gist of the issue at hand including adding feature to make student s reviews public the proposals specified are effective to deal with the issue by creating a new mvc framework
noproblem the design and fixes are coherently described and are logical to be implemented for the given functionality the issues are stated properly allowing the reader to understand it and the fixes suggested are enlisted in an appropriate manner
noproblem the design makes it clear to understand the procedure adapted to realize the goal the authors have made it a point to describe the tasks carried out in a simpler manner allowing the reader to realize the approach towards the issue   
noproblem the uml use case diagram takes into consideration the system specifications and the manner in which the users interact with each other in the process it makes it easy to analyze how the implementation can take place in the current scenario   
noproblem the test plan section properly describes the flow that needs to be followed by each actor involved in the process this could be enhanced either by providing a flow diagram or adding certain test case snippets for the scenarios
noproblem the design seems pretty simple and straightforward   
noproblem yes based on the explanation given the design seems appropriate and will achieve the desired end results good job
noproblem the design is concised and clear only makes the required changes and introduces no duplications
noproblem yes they explained a lot with two steps
noproblem i really loved the way that the authors have provided a detailed proposed plan section making it very clear about the changes that are required to be made in order to tackle the given problem statement
noproblem all problem statements have been explained this time including an elaborate test plan
noproblem yes the author explained the plan clearly the steps and the files need to be modified are listed
noproblem as far as the issues are concerned the solutions do seem logical
noproblem yes it looks sound
noproblem the   design is sound it completely follows the instructions it also has detailed implemenation plan in each steps i think it follows the dry principle because it uses existing implementations fully understood the existing implementations and added the functions above i think it should also follow the factory pattern although not shown in the design doc
noproblem yes the system is well designed and the ui looks neat as well they have put effort into the ui thinking process
noproblem although the design provided is clear there might be some more work needed to optimize it properly and make it work as intended   
noproblem the design appears to be sound and seems to follow all the appropriate principles as far as i am concerned and as mentioned earlier i would again like to point out that the proposed plan section has been handled really well
noproblem the document is very well structured and is quite easy to follow they have explained each and everything stepwise
noproblem yes the design seems appropriate and suitable for the case maybe the author could specify the patterns they use in the document
noproblem yes simple straightforward solutions
noproblem the design is simple
noproblem the design is both simple and clear it should be better to add another step for the comparison of the instructor review and the student review both as a final examination and a testing
noproblem yes the design is as simple as possible however they have only described the proposed design they could have provided simple mock ups or samples
noproblem yes pretty simple great job
noproblem the design appears to be simple to the best of my knowledge not a lot of files needed to be changed signifying that they are just targeting specific files in order to make minimum number of changes possible not making it too complex
noproblem the document is well explained thus it reduces complexity and makes itself appear quite easy for the user to understand however more diagrams and flowcharts would have helped even more
noproblem the design is as simple as possible and described in a straightforward manner
noproblem the design seems simple and feasible
noproblem necessary visual inputs are present to aid explanation
noproblem yes appropriate visual cue is present in the form of screen shots
noproblem there are visual aids included with the design depicting the current state of the system as well as proposed icons to institute the design changes
noproblem the authors provide some screenshots which make their project more clear it would be better if they provide more diagrams to explain their solutions
noproblem i see test cases properly defined but the test plan is missing
noproblem yes the test plan is included i think the tests will cover all scenarios
noproblem the testing appears to be pretty rigorous they have taken into account cases when ta instructor s scores should be excluded the test cases could have been better described
noproblem team has done a good job in identifying the cases that needs to be tested it will be an improvement if they can add details on how they plan to test each controller view separately
noproblem yes there is a detailed test plan for this project not only basic features testing but also other more testing
noproblem the test plan looks really thorough covering all the possible scenarios i am personally happy with the given test plan
noproblem yes the authors have significantly improved the writeup and very adequately explained the changes that they ve made
noproblem the authors have explained the changes to be made to the system including screenshots of the tables uml diagrams as well as all the files that will be modified suggestion although all the details are explained well in the document by writing the changes proposed to the files in bullet points or by using a diagram the document will be easier to read
noproblem the authors have explained enough about the changes
noproblem the team has added uml diagrams images of related web pages and provided details on jquery tablesorter that explains well the changes the team plans to make
noproblem great improvements compared to the previous submission now its a   very well written document good job team
noproblem yes the team has elaborated their design approach and changes to system in detail they have mentioned all the file changes and also provided sample code for reader understanding
noproblem they made clear explanation about their task for example their provide pictures to show what they need to do      
noproblem the design is very efficient and follows the standardized software engineering practices   
noproblem the design is sound and easy to understand the design proposed also sounds logical i e to sort team names alphabetically and grades numerically to sort by both ascending and descending order
noproblem yes the design seems to be sound
noproblem the authors have justified the use of jquery table sorter by   listing its advantages
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement   
noproblem this project is not very difficult so they don t need to follow some principles or patterns
noproblem yes the design is very simple to understand and also the implementation is pretty clear and effective
noproblem the design is extremely simple and easy to understand good work guys
noproblem yes the solution proposed is simple by using the   jquery tablesorter gem
noproblem the use of jquery plugin sounds simple and easy to use
noproblem the design looks simple and clear
noproblem the modifications that are suggested by the team are minimalistic and cover the   changes that are   necessary for the javascript library to work while it is possible to infer the majority of changes that will be introduced in this project    it would be better if the authors elaborated on the implementation of all   the views as opposed to discussing only the view submissions table   
noproblem this their design is very simple and clear
noproblem this part has been significantly improved from the previous submission the diagram make it very easy for an outsider to understand the architecture the underlying problems and the proposed solution   
noproblem yes the figures added to the wiki clearly indicate the changes that will be made to each view the columns that will be made sortable and how will the made sortable good work
noproblem the flowchart added gives a good idea of the final outcome after implementation of the changes proposed suggestion a diagram explaining the plan of changes to be made will make the document easier to read
noproblem this team   used great diagrams that add to their documentation s clarity significantly
noproblem there are multiple visual   elements that improve the readability of the document screenshots of the ui tables help with the illustration of   the required changes furthermore    the uml diagram demonstrates the relation between relevant flows
noproblem the team has added good number of mock uis and uml diagram and clearly explains the code follow all of them are self explanatory and needs no improvement
noproblem diagram is added   
noproblem no visulization is necessary for this project
noproblem you have a lot of testing scenarios which is really good
noproblem i suggest the testing plan be improved in place of giving steps on how a reviewer should test the project the team should instead list how they wish to write tests for the functionality added the rspec could be something like expect page to have_content sorted
noproblem the design doc includes the test plan which covers all the changes that will be made
noproblem there is a detail explanation on how the function testing will be carried out under the teating plan section of the wiki doc
noproblem yes it includes test plan it is very well written and will test the functionalities
noproblem test plans looks to be an overview of the functionality in the test plan i see the functionalities explained l
noproblem the test plan is present it consists of a set of functional tests described for each of the five views i would suggest elaborating on the technical side of tests for example specifying which spec files will be modified or whether or not the project will utilize rspec moreover it would be better if the team provided a rationale for why it is sufficient to use only functional tests
noproblem the test plan is thorough   
noproblem they have discussed clearly what functionalities they are going to test to make the project more efficient i think they have made a quite descent research in the testing aspect of the project
noproblem the design includes the test plan
noproblem yes the test plan looks good the author lists all the cases they need to   test
noproblem yes the authors have made changes to the design document and are more specific about how exactly they plan to implement the new functionality
noproblem the team has mentioned properly what changes they are doing and how they will be doing them in the first submission they had suggested the possible approaches now they are having a concrete way they are implementing these changes
noproblem yes and at times much more than necessary   
noproblem no changes has been done
noproblem yes they explained a lot for the changes great job
noproblem    the authors have done good job explaining the changes to be made to the system and even explaining why other more obvious options are not chosen it still sounds like a complicated change to make to the system
noproblem the team added more information from the last time which aided in a better explanation of the problem good job team
noproblem 1 the authors have adequately explained the changes to be made to the design document
noproblem the explanations are more than sufficient not only have the authors explained the changes to the system but also explained the reasoning for considering those changes i like the way that they also explained the other different ways they could ve integrated the github metrics but avoided those methods with sufficient reasoning for the same the team has also given an explanation of their database design modifications would be like which is good
noproblem the authors have dived into the depths when explaining the changes all of the changes are well defined and precise
noproblem yes excellent work done by the team the design document adequately explains what is the problem that they are trying to solve what is the proposed solution and how the solution would look like    there are enough details to in the document to understand what is being done and what changes are proposed the document also has enough illustrations on what is the current situation   
noproblem yes they did
noproblem the authors adequately explained   the changes   they plan to make
noproblem yes
noproblem the authors have very well explained the problem statement and the changes to be made to the system including flowcharts the files to be modified added and useful links
noproblem authors have clearly explained the changes to be made to the system the design document was easy to understand
noproblem the team is going to improve compatibility with web content that relies on the webaudio api by implementing missing pieces of incomplete node types oscillatornode along with entire missing nodes constantsourcenode stereopannernode iirfilternode   
noproblem yes they made detailed explanation about their changes
noproblem the design seems to be flawless all the principles and patterns used are flawless and to the point
noproblem yep they have good structure to show what and how they gonna do with the project
noproblem the design looks good the code is already committed and approved by the concerned team good job
noproblem yes their design appears to be sound
noproblem the design appears to be sound and following appropriate principles
noproblem the design seems to be sound they have a sample design where they are explaining the tables and how they plan to work with them as well the examples provided help understand how the data will be stored
noproblem yes
noproblem yeah their   proposed design includes workflow initial step and subsequent steps it was easy to follow their design their solution appears to be sound
noproblem yes i am   surprised that they have already finished the project   
noproblem    the design appears to be sound they have weighed their options and are using an official gem to interact with the github api
noproblem i don t   see any issue in the design document they have followed a good design principle
noproblem 1 the authors have mentioned several approaches in which these functionalities could be implemented 2 their chosen approach is follows mvc architecture and dry principles
noproblem    the design sound very reasonable
noproblem the design is concise and clear
noproblem yes
noproblem the design is concise and clear they have added reference images of how the system would look after their changes which properly shows the expected implementation results
noproblem yes it is thoroughly investigated
noproblem the design is simple and easy to understand the sin waves and the description about it helps to properly understand the changes made and its impact
noproblem the design was not unnecessarily complex it was as easy as it could be
noproblem their design is much simple and clear also easy to understand
noproblem yeah i believe it is as simple as possible while choosing the best path for the expertiza project to grow but it still sounds like a very ambitious project for 1 group to complete
noproblem use of flowcharts and step by step explanation simplified   their solution it was easy to grasp and design also appears to be simple
noproblem very simple and clear
noproblem with proper documentation the problem is explained nicely and understanding of the complex problem is made easier
noproblem 1 have clearly mentioned when will github api be hit to retrive the data and which gem will be used
noproblem    their design is simple and clear
noproblem the team has done tremendous job in adding visualization aids they have added application flow diagrams and visualized images they have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages this makes the document descriptive and very easy to read and understand      
noproblem self explanatory visual changes have been added all the changes are described via the visual aids
noproblem yes the flow diagram and graph plots help to understand the changes and its implications the diagrams clearly describe the change approach followed
noproblem the flowcharts included in the design document clearly explain the changes that need to be done
noproblem the design document includes proper visualization it included appropriate flow charts and screenshots which made it easier to understand the design document and the project
noproblem yes the team has used flowcharts and diagrams which clearly describe the changes to be made to the system
noproblem they provide pictures of their sound waves
noproblem yes the authors are using already existing gems for the implementation i would have liked to see a section on caching if any    rest the solution proposed looks simple and straightforward and looks that it will easily integrate into the current system   
noproblem the provided tests are in depth and will test the changes made thoroughly
noproblem they have pretty good test plan as there is no code yet
noproblem the use case diagram properly shows how the addition of this feature will help for   the instructor role
noproblem the visualizations used by the team are comprehensive and well made
noproblem good design
noproblem excellent use of screenshots made things very clear for me
noproblem yes they use a lot of diagrams to show use case
noproblem    the photos included are superb at showing the expected view they can have more 1 or 2 more stars if most of the expteriza work for the github metrics was already completed when they made these screen shots do you think it is feasible to expect that you can start a software project before getting a green light on the project in order to include high quality pictures of your proposed view in action
noproblem it included a proper test plan there was no test plan included in the previous version of the design document but authors have added it in the second round which made the design document complete
noproblem explains the different approaches with the help of use case diagram
noproblem the design does include test plan and plans to test the functionalities  
noproblem    they not only use use case diagram but also mock up screenshot to help the reader understand their design
noproblem no
noproblem yes it includes the test plan with a great detail
noproblem good test plan should include more test cases that check the functionality of github integration eg if number of lines of code committed by a student is correctly computed
noproblem    test plans for both of their subtasks were   present
noproblem yes the authors have clearly explained the changes to be made to the system document is simple succinct and easy to understand great use of flow charts uml diagrams and mockups to visually represent the information is done   
noproblem    yes the author has provided a sufficient explanation of what changes needs to be done to the system by giving flow diagrams and screenshots about what changes they are going to incorporate in their system
noproblem team has added all the diagrams and screenshots the document is well explained and looks complete
noproblem yes their explanations are adequately explained the changes
noproblem 1 the authors have clearly explained the changes to be made to the system 2 they also have given the files to be modified added for each change   
noproblem authors have clearly explained all the changes to be made and where to make them the design document is quite clear and easy to understand
noproblem i think that the authors have done a really good job of explaining and covering all the changes to be made overall this is the best document i have seen so far
noproblem the authors have explained all the changes to be made very clearly and concisely each change is supplemented with sufficient diagrams and mock ups so as to make the final task of visualization easier
noproblem the document seems complete
noproblem yes one of the best design docs of project 4
noproblem the document was very well written previously too and they have improved it with diagrams and test nice work
noproblem the authors have considerably improved on the document uml diagrams as requested have been added
noproblem yes the design follows appropriate principles and patterns suggestions not required
noproblem    as the project is based upon making changes to the ui of the system thus there is no such specific pattern being followed however the design that they have made available in the form of screenshots appear very much inclined with the functionalities that they need to implement
noproblem design is good
noproblem yes their design is very sound and principles and patterns are used appropriately
noproblem 1 the design appears to be sound 2 also follows proper design principles eg for making changes to nomination and review questions inheritance is used inheriting methods from questions parent class
noproblem the design seems to be appropriate and sound it follows appropriate principles
noproblem yes the design appears to be very sound and follows all the principles that i know i loved the format of the documentation as well
noproblem they have explained very well
noproblem yes the design follows simple rails concepts and is pretty straightforward i would like to see if the team uses existing gems available to speed up implementation and re use      
noproblem yes looks clean any design patterns used
noproblem yes the design appears to be sound and well made   
noproblem yes the design appears to be sound there could be some rearrangement in the mock up layout e g text box for email address and add button could have the same horizontal alignment for a better user interface
noproblem the design   seems to be very simple i think the team has avoided unnecessary complications and are doing minimal changes to existing system to solve issues given to them
noproblem the design approach seems justified and inline with the functionalities required to be implemented they have mentioned step wise details for all the changes they are going to take done a good job no rework required
noproblem    yes the design is presented in a much simpler form which gives a very clear picture of how the changes are going to be implemented and which functionalities would be witnessing the changes also as they have provide the screenshots it enhances the understanding about the project more
noproblem yes their design is simple and clear enough to read and understand
noproblem 1 the design is simple and well modularized 2 each method is implementing only one task as it should
noproblem the design does appear to be as simple as possible the team have not unnecessarily complicated the project
noproblem yes the design is pretty simple and to the point the design proposed is very clear and talk why each change is necessary
noproblem    the design is straightforward and as simple as possible the team has thought this project out very clearly and laid the same in the form of flowcharts and mock ups this has greatly reduced the complexity of the project and helped decrease the chances of clutter and confusion
noproblem yes adequate amount of details present
noproblem yes    the requirements are simple and the design plan clearly explains all the points
noproblem yes design appears to be very simple
noproblem great use of uml diagrams flowcharts and mock ups by the team to clearly explain the flow of their work it is   easy to understand the flow and how the end product will look like
noproblem they team has done awesome work in representing every detail possible in the flow diagrams they have created uml diagrams which depicts the flow of the admin and students along with other actors as mentioned earlier they have also represented the admin flow diagram and instructor flow diagram through the flow chart which makes it very easy for end user to understand the workflow of the requirements in the expertiza system
noproblem    yes the visualization is pretty clear and good
noproblem proper use of uml to explain the use cases and flow charts to explain the workflow has been done the plan is complete
noproblem yes their visualization is good they are clear and well described the changes
noproblem the design document includes flow charts uml diagrams and screenshots which is really impressive as it made the document easier to understand
noproblem yes the   uml   diagrams sufficiently provide visualization
noproblem the authors have added uml diagrams as requested in the previous review and it has made a lot of difference the explanation is much clearer now
noproblem test plan outlines the functionalities that the team will test and it seems sufficient to test the changes
noproblem they team has done tremendous job in following the test driven approach for the project implementation they have already included the tests they are writing for the functionality implementation they have covered the exhaustive scenarios   for the project in their test their test plan is highly appreciative
noproblem    the test plan is quite good as it covers all the test cases in the form of 11 test cases which test all the functionalities for the admin and the instructor role it also considers the negative test cases like throwing an exception when the pending instructor tries to add more then 10 students to his her course
noproblem yes they include the test plan
noproblem 1 the test cases cover all of the functionalities that they are going to implement
noproblem yes the document includes a test plan there was no test plan present in the previous version of the design document but the team included the test plan in the second round the test plan is clear and seems like it would really test the functionalities
noproblem the test plan has been written in a very good way following the great   quality of documentation till the end it covers all the edge cases and scenarios
noproblem the test plans are excellent the best i have seen so far it has accurately taken all test cases into consideration and described the layout of the final test in the form of a pseudo code well done on the test plan
noproblem yes test plans are included
noproblem yes the test plan looks good it covers all the functionalities
noproblem test plan seems thorough and well thought   out
noproblem the team is following a test driven development approach they have defined the test cases that need to be tested after the implementation it seems to completely test the feature
noproblem yes changes to be made are explained clearly document is very clear includes necessary diagrams mock ups and everything possible to make anyone understand what the issues are and what team is planning to do to resolve them everything is included in a proper order like for each issue there is a separate flowchart and mock up no suggestions required
noproblem yes the authors have adaquately explained the changes to be made in the system
noproblem the document is clearly and neatly written all the necessary sections are present with good explanations
noproblem changes are well explained with good visual aids
noproblem they have explained every change   they want to make to fix the issue the diagrams in turn help a lot to understand the flow of the system
noproblem yes the authors have adequately explained all the changes that need to be made each issue has a separate list of changes to be made and which files need to be edited
noproblem the changes are very well documented for each issue what are the files that needs to be changed is mentioned appropriately the overall design looks efficient and avoids any duplication good job
noproblem both the problems and proposed changes are clearly detailed my only suggestion is to put the description of the issue being solved in the same location as the solution to it otherwise one has to scroll around the page to figure out which problem is being fixed
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they have also implemented the code and showcased in the test plan and the proposed design section   
noproblem in round one team has well explained their approach and how are they going to do it in this round they have included detailed information and mock ui it was easy to relate their approach their test plan is also thorough i think the team would definitely be able to incorporate the new changes good job guys   
noproblem the design was well explained in this   design   doc
noproblem well explanation on problem statement uml diagrams flow charts given detailed explanation on problem statement   
noproblem yes
noproblem yes the document seems to be perfect it does follow all the appropriate principles and patterns no suggestions required
noproblem as far as the issues are concerned the solutions do seem logical
noproblem the design is apt following   the principles and are self explanatory
noproblem yes the design appears to be sound and the flow diagrams illustrate the flow of control very well
noproblem all good design principles are being followed where necessary
noproblem the design is perfectly well depicted in the form of the logical flow diagram   they have been thorough in pointing out the application flow in the proposed design section so as to elucidate the problem statement
noproblem the design appears to be neat   
noproblem the design appears to be sound following the appropriate   principles and patterns
noproblem yes well designed document ui mock ups given it is structured   
noproblem sound so many diagrams
noproblem yes it is the simplest design and minimal work which is required to resolve the issues it is very clearly explained    one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well   
noproblem design is simple and easy to understand
noproblem yes simple straightforward solutions
noproblem the diagrams are very basic and covering the entire scope which is a good work by the team
noproblem yes the design is robust and simple to understand each class and view only handles a specific functionality i e it is modularised
noproblem yes the design is straight forward and easy to understand
noproblem the design appears to be simple given the task at hand
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the staggered deadlines assignment section   
noproblem undoubtedly i like their color coding approach it s something very simple and apt for the current system
noproblem the design seems simple and clear
noproblem very clear
noproblem yes the provided diagrams deliver sufficient information about the implementation flowcharts and mock uis screenshots give a perfect picture of how the system will be after the required changes no suggestions required
noproblem flowcharts are drawn which describe the flow how the system will work after implementation
noproblem great use of mock ups really appreciate it
noproblem yes they have added mock ui screenshots which is exactly what they are going to and should do
noproblem yes the diagrams clearly illustrate the proposed flow different diagrams are provided for different issues one of the best wikis i have seen
noproblem very good use of class and sequence diagrams to explain the entire design flow it clearly conveys the thought   process of authors and the overall design
noproblem lots of great visualizations are provided that outline a good amount of detail
noproblem the team has added their mock ui which shows they have thought about the changes and modification mock uis of the screen shows they are halfway the project   
noproblem the class diagram is very useful and the mock ui   with indication on it make it more useful
noproblem yes design is informative change proposal is detailed it describes well about how changes are to be implemented
noproblem the diagram is perfect and clear
noproblem yes design does include a well described test plan the provided tests will surely test the functionalities which will be implemenedt the test plan is represented in a wonderful manner including pre steps and different testing expectations great work no suggestions are required
noproblem the test plan is comprehensive
noproblem they have covered all the test plans along with detailed steps
noproblem the test plan is thorough and contains lots of detail that will make it easy to design rspec tests in the future
noproblem the test plans are thorough and they gone ahead and shown it in detail by breaking them into steps such as pre steps functional ui and performance testing this is a very good way to achieve in depth analysis of the problem and check how effective the solution is
noproblem i have to say their test plan includes user interface testing performance testing database testing etc i have to say they have worked really hard for it i have not yet come across any team who has a test plan like this   
noproblem an appropriate test plan is included in this design doc
noproblem yes the test coverage seems good
noproblem 1 the authors have explained the functionalities and the changes to be made to the project in depth
noproblem the authors have made a comprehensive document that clearly outlines the changes that they made they have included the uml diagram depicting the flow of control the design section lists the files that were modified and newly created it also comprises the contents of the summary sheet that gets displayed once an instructor clicks the 360 assessment icon lowfi ui and a prototype revealing the relevant fields that are to be displayed in the grade summary
noproblem the team has mentioned the problem statement and its importance by giving an example of how it saves the time of instructors
noproblem the changes are well explained with the help of use case uml diagrams screen shots of the web pages and prototype of the view well done
noproblem yes the proposed changes and intended output is clearly mentioned in the design document
noproblem the team has done a pretty good job of explaining the changes they are intending to make in great detail they have added more details from the earlier version
noproblem the design looks fine    team has provided the initial test plans a lo fi sketch is available as well the team could have put git links to the test plan code for better organization
noproblem 1 the design doc is clearly explained 2 follows the right design principles
noproblem the design looks sound and a lot of improvements have been made after the previous round the design comprises of the list of files modified and created the fields to be included in the summary sheet and screenshots showing sample prototype of the summary sheet   
noproblem yes the design seems to incorporate appropriate design patterns the new view file added is also in accordance with design principles
noproblem the design document is sound and well written
noproblem yes all required sketches uml diagrams and views provided great work
noproblem very good design they use   lofi sketch to demonstrate their design   
noproblem yes the design looks accurate and well thought through   
noproblem 1 simple and clear design   
noproblem the design is simple and easy to understand because of ample explanation the authors have also worked on the activity uml diagram for this round making it easier for the readers to understand all areas have been covered with respect to presenting the design lucidly
noproblem the proposed design is easy to understand and explained properly with the   help of appropriate screenshots of the view
noproblem actual project work has not started yet so code modifications have not been mentioned however the files to be changed seem appropriate
noproblem yes
noproblem yes the design is quite simple and easy to understand the authors have taken a straightforward approach to implement the feature
noproblem uml and class diagram is not possible since the view is the main part 1 the team explains how the final view should look like in detail
noproblem yes the document makes extensive use of visual aids be it activity diagram uml screenshots of the views lowfi ui sketch of the grade sheet and a prototype of the view showing grade sheet with expertiza s color scheme and style conventions all these tools clearly project the changes that are made to the system
noproblem the team has made a great effort to explain the design through a   uml diagram and screenshots of how the feature will work when added to the existing project
noproblem the use case uml diagrams images of related pages and view s prototype makes it easier to understand the team plans to make required changes to the system
noproblem using a lofi sketch the team clearly shows the intended output
noproblem the authors have included flow diagrams wire frames and even real screen mock ups they really help improve clarity
noproblem 1 the test comprehensively tests the functioning of the system
noproblem the team has completed the implementation and have included the screenshots of the rspec code that tests the   assessment360_controller rb   and specifically the course_student_grade_summary method they test whether the instance variables provided in the view have been properly instantiated without concerning too much about the values that they hold they back this up with a link to ruby s best practice guide for functional tests for controllers plus they include feature tests to check whether correct details are displayed they have also justified the reason for not performing unit tests as they don t alter the model the highlight of this document is the video links showing the tests performed kudos to the team for the effort
noproblem the test design   includes both controller as well as feature tests the team has also   made an effort   by putting up video links of the running of tests
noproblem the authors have explained well on how they intend to test the controllers and features given that the project does not involve any changes to model files i think      ruby on rails guide functional tests for your controllers is a good way to go
noproblem the tests cover all the required functionality and as it is mentioned controller tests make more sense than unit tests
noproblem yes tests are explained thoroughly with written code   
noproblem the authors have proposed an elaborate test plan and it covers the entirety of the functionality they are building
noproblem authors have explained well the changes to be made in the system
noproblem they have mentioned all the changes that have to be made to fix the issues the screenshots with which changes are to be made in the code explains a lot
noproblem    the authors have described all the proposed changes well each issue and with it it s detailed code is given well written and solid effort
noproblem the wiki documentation is extremely well written with all changes explained clearly and concisely the good thing about this wiki is that the proposed solution sections is brilliantly explained the team have clearly mentioned all filenames where they propose to make changes drawn diagrams to illustrate the flow control and added snippets of code where necessary brilliant
noproblem yes the authors have adequately explained what has to be done the proposed changes etc
noproblem yes the authors have clearly explained where and what changes are to be made they have provided a clear approach for the various fixes in the project
noproblem explained in detail which is very good
noproblem yes the authors have nicely explained the changes to be made good work team
noproblem the authors have highlighted certain parts pf the design where the changes were made this makes is easier for the reader to understand the changes made the team has explained the changes made in a clear manner
noproblem the design and fixes are very well explained with codesnips that include the incorporated adjustments nice work
noproblem yes the design follow the principle and they have added designs for each issue specifying every detail which is quite a task
noproblem    yes the design appears to be sound and follows ruby principles no code has been repeated and they are using pre written functions in many places instead of just writing the logic again good work
noproblem the design proposed solutions look completely logical and should fix the bugs with no least redundancy it also looks like the team has already managed to fix a few bugs as well kudos to them
noproblem the design appears to be sound i would make the same choices they did to address the issues
noproblem well it looks sound to me it follows the dry principles as well
noproblem the design appears to be sound and following appropriate principles the document is also well described
noproblem all the issues are stated and addressed nicely the design looks good
noproblem the design appears to be clear and the team has also implemented functionality to their project it shows that the team has organized and implemented the design well
noproblem the team has nailed down which parts of code need to be modified the changes introduced in the design document are simple and minimal and do not require any extensive discussions about the appropriate principles or patterns
noproblem design is simple and easy to understand
noproblem the design is very clear and helps in better understanding the flow of the system
noproblem the design proposal is coherent and easy to understand the proposed design and steps for solution are also logical the team have done a lot of work to think about how to solve the bugs good job guys
noproblem design appears really simple only a couple of added lines here and there
noproblem the design looks perfect it is neither overly simple nor it is too complicated
noproblem the design seems to be as simple as possible authors have not unnecessarily complicated the approach but rather have given a simple approach for various fixes
noproblem yes it looks simple based on the code snippets they have given and by the diagrams
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem the team has explained the issues and their solutions clearly the design is simple hence easy to understand the proposed solution section is well written where the team has described the changes made in respective files
noproblem    the visualization provided in the form of flow diagrams in very easy to understand however er diagrams of main db tables could have been provided because it is difficult to understand the data flow and inter relation between tables
noproblem the diagrams in the wiki clearly describe the flow for proposed changes to the system we can clearly decipher from the diagrams what the intended functionality is good job
noproblem no class diagram was needed and their flow charts and code snippets show the control logic simply   
noproblem the team has put uml diagrams for every issue which clearly explains the issue and the workflow
noproblem the document includes flowcharts which clearly describe the project flow and what needs to be done
noproblem yes it does
noproblem could have included some screenshots otherwise great work by the team on uml diagrams
noproblem the team has provided flow charts that explain the working of the system the team has provided flowcharts for each issue which is commendable
noproblem the provided diagrams are visualizations of the workflows of different actors in the context of given five issues they further clarify the changes that are to be made in this project
noproblem detailed test plans are mentioned in the wiki which probably covers all the cases
noproblem    yes the design includes a test plan the tests really test the functionality and also test adverse conditions to see whether error messages are being shown
noproblem the test plan section defines the steps needed to manually test the functionalities but i would suggest the team to also include the logic they propose to use in the rspec tests the objects they would mock etc
noproblem test plan is included but it makes many references to manual tests the tests they state could be automated in a straight forward manner
noproblem the test plan has all the manual testing and automatic testing to be done on each issue
noproblem the test plan is included in the document    both manual and automated testing test plans are given which is appreciable   
noproblem elaborative test plan which is really good
noproblem test plans are present and explained in detail    the tests are really in depth for each issue the team will be fixing
noproblem the team has improved their design by adding extra test cases and test procedures which were lacking in the previous submission the team has provided test cases for each issue thereby testing every functionality of the project
noproblem the design appears to be sound and seems to follow all the appropriate principles as far as i am concerned and as mentioned earlier i would again like to point out that the proposed plan section has been handled really well
noproblem the document is very well structured and is quite easy to follow they have explained each and everything stepwise
noproblem yes the design seems appropriate and suitable for the case maybe the author could specify the patterns they use in the document
noproblem yes simple straightforward solutions
noproblem the design is simple
noproblem the design is both simple and clear it should be better to add another step for the comparison of the instructor review and the student review both as a final examination and a testing
noproblem yes pretty simple great job
noproblem the design appears to be simple to the best of my knowledge not a lot of files needed to be changed signifying that they are just targeting specific files in order to make minimum number of changes possible not making it too complex
noproblem the design is as simple as possible and described in a straightforward manner
noproblem the design seems simple and feasible
noproblem the documentation done by the team is very detailed and explains the problem statement very clearly they have   described   the functionality change in bullet points which makes it very easy to understand the sub parts required to achieve the main functionality in simple terms   
noproblem yes the author has made a great attempt to explain the changes by trying to explain the changes required with the help of the application flow diagram and the use case diagram and how the changes were implemented by giving screenshots of the changes
noproblem the wiki page is very explanatory and the authors have explained the issue and fix very well
noproblem yes the required changes for the reviews is explained clearly the design for each required change is also explained in depth now
noproblem the authors have clearly mentioned the changes to be made using problem statement and use case diagram
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they have also implemented the code and showcased in the implementation section   
noproblem the team explained   everything required and not leave anything behind
noproblem the design seems to be following the appropriate principles and uses the appropriate guidelines they usecase   diagram mentions each actor and the role associated
noproblem yes
noproblem yes the design is very simple and explains the changes required in a very clear manner
noproblem the flow and uml   diagrams are well designed and explain a lot about the system flow addition of detailed use case helps support the diagram
noproblem the design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information    also they have been thorough in pointing out the application flow in the application flow section so as to elucidate the problem statement
noproblem i like the part where the peer review has been given more weightage in comparison to self review in the composite score
noproblem the design appears to followed appropriate   principles and patterns
noproblem es the design is very simple and explains the changes required in a very clear manner
noproblem the design is simple and very much in depth and follows   the principle
noproblem yes the design is simple and easy to understand for others too the explanation along with diagrams provides enough information to understand the use case
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem yes the design looks simple no complications and the screenshots are really helpful
noproblem the design is as simple as possible
noproblem basic uml used
noproblem yes the application flow diagram tells of how the functionality will be accessed both by user and student and the use case diagram explains the interaction of the instructor and the students for the particular functionalities  
noproblem some ui screenshots are added along with design diagrams which describe the system the ui or mock ui helps in better understanding
noproblem the visualizations seem to be complete the team has included an application flow diagram a use case diagram and also a screenshot of how the actual result should look so in my opinion good job done
noproblem the team has done tremendous job in adding visualization aids they have added application flow diagrams for every actor along with the uml diagram of the student and instructor they have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages this makes the document descriptive and very easy to read and understand      
noproblem the chart and diagrams are well done and help explain how the code will work
noproblem the use case diagram and application flow diagram very well explains the changes made to the system
noproblem yes the visuals provided with this doc are clear and just by that a lot can be understood
noproblem the test plan added is just a basic case and as the changes are just some calculations to be made test plan is not much of a requirement for the project
noproblem a test plan is included in this design doc
noproblem necessary visual inputs are present to aid explanation
noproblem yes appropriate visual cue is present in the form of screen shots
noproblem excellent use of visualizations
noproblem no diagrams present
noproblem there are visual aids included with the design depicting the current state of the system as well as proposed icons to institute the design changes
noproblem yes the test plan is included i think the tests will cover all scenarios
noproblem the testing appears to be pretty rigorous they have taken into account cases when ta instructor s scores should be excluded the test cases could have been better described
noproblem team has done a good job in identifying the cases that needs to be tested it will be an improvement if they can add details on how they plan to test each controller view separately
noproblem yes there is a detailed test plan for this project not only basic features testing but also other more testing
noproblem the test plan looks really thorough covering all the possible scenarios i am personally happy with the given test plan
noproblem they have discussed clearly what functionalities they are going to test to make the project more efficient i think they have made a quite descent research in the testing aspect of the project
noproblem the design includes the test plan
noproblem yes the test plan looks good the author lists all the cases they need to   test
noproblem they have a paragraph saying what they are going to do but it could be broken up into parts with images for better understanding
noproblem they have one scenario maybe a few more could help better test their work
noproblem yes the proposed solutions part clearly stated that they will go through each review to compare the new review score etc and then they will store the review url however the solution is not concrete enough and is a little bit hard to follow it should be great if there s more details in stating about how to loop through each reviews   
noproblem no changes has been done
noproblem yes they explained a lot for the changes great job
noproblem the team has mentioned properly what changes they are doing and how they will be doing them in the first submission they had suggested the possible approaches now they are having a concrete way they are implementing these changes
noproblem yes and at times much more than necessary   
noproblem yes the authors have made changes to the design document and are more specific about how exactly they plan to implement the new functionality
noproblem the team added more information from the last time which aided in a better explanation of the problem good job team
noproblem 1 the authors have adequately explained the changes to be made to the design document
noproblem the explanations are more than sufficient not only have the authors explained the changes to the system but also explained the reasoning for considering those changes i like the way that they also explained the other different ways they could ve integrated the github metrics but avoided those methods with sufficient reasoning for the same the team has also given an explanation of their database design modifications would be like which is good
noproblem yes excellent work done by the team the design document adequately explains what is the problem that they are trying to solve what is the proposed solution and how the solution would look like    there are enough details to in the document to understand what is being done and what changes are proposed the document also has enough illustrations on what is the current situation   
noproblem the authors adequately explained   the changes   they plan to make
noproblem the team has provided a code snippet which includes solution to their problem statement they have described the code and their proposed changes
noproblem by looking at the flow charts and uml diagrams submitted by the team their solution appears to be sound
noproblem the team has provided diagrams that make it easier for the reader to understand the workflow of the system and the changes that they have proposed to implement the solution
noproblem as mentioned the team has provided uml diagrams stating the two actors in their system student instructor and their interaction with the email module and database
noproblem the design seems to be sound they have a sample design where they are explaining the tables and how they plan to work with them as well the examples provided help understand how the data will be stored
noproblem yes
noproblem design is okay
noproblem yes
noproblem very basic design
noproblem no visualization
noproblem no test plan
noproblem    the design appears to be sound they have weighed their options and are using an official gem to interact with the github api
noproblem i don t   see any issue in the design document they have followed a good design principle
noproblem 1 the authors have mentioned several approaches in which these functionalities could be implemented 2 their chosen approach is follows mvc architecture and dry principles
noproblem    the design sound very reasonable
noproblem the design is concise and clear they have added reference images of how the system would look after their changes which properly shows the expected implementation results
noproblem yes it is thoroughly investigated
noproblem yes
noproblem their design is much simple and clear also easy to understand
noproblem with proper documentation the problem is explained nicely and understanding of the complex problem is made easier
noproblem 1 have clearly mentioned when will github api be hit to retrive the data and which gem will be used
noproblem    their design is simple and clear
noproblem the use case diagram properly shows how the addition of this feature will help for   the instructor role
noproblem the visualizations used by the team are comprehensive and well made
noproblem good design
noproblem excellent use of screenshots made things very clear for me
noproblem yes they use a lot of diagrams to show use case
noproblem use case diagram is present but it would have been nice to see a sequence diagram to understand the flow   
noproblem explains the different approaches with the help of use case diagram
noproblem    they not only use use case diagram but also mock up screenshot to help the reader understand their design
noproblem the test plan seems adequate at this stage edge cases may need to be considered at a later stage
noproblem no
noproblem the authors have explained well what changes they wish to make and how they plan to implement those changes i would suggest them to add more details like where do they store the list of responses more than the notification threshold overall good job
noproblem yes it includes the test plan with a great detail
noproblem    the test plan seems adequate enough to show that they understand what to test
noproblem yes the design is as simple as it can get understanding the principle is not hard but making it simple should also not make it costly good work to the team if the instructors were looking for something this simple
noproblem the uml diagrams given in the document list the process flow for testing understanding the changes which will be made in the document but unfortunately no diagram exists which describe the changes to be made    i would suggest the team to add diagrams for the pseudo code they may have written
noproblem    test plans for both of their subtasks were   present
noproblem a format of the proposed email to be sent would be helpful
noproblem some additional tests can be added
noproblem yes the problem statement and the proposed changes have been clearly explained
noproblem the design and application flow appear to be as simple as possible as well as the proposed code changes snippet provided
noproblem there are uml and application flow diagrams included with the design document which serve to make the proposed design changes much clearer
noproblem test plan is as simple as required for the problem statement in question
noproblem yes they include this part in the proposed solutions field it would be better if they use visualization to let the readers better understand the flow
noproblem the design seems workable maybe they can come up a more sound design for example they can try many ways to define the notification limit
noproblem the design is simple and really better than before
noproblem after the first review the design has improved significantly the proposed design clearly defines the changes being made by the team
noproblem there has been a significant improvement in the level of details provided the author can further improve the document by providing the details of the design pattern to be used
noproblem the design seems to be pretty straightforward
noproblem the author uses the uml diagram to properly describe the system   
noproblem the document does contain a test plan which can definitely be extended to incorporate   certain negative test cases
noproblem the design has improved and updates has been done and it is easy to comprehend the changes to be made to the system
noproblem the design seems simple
noproblem proper   diagrams are used by the team   
noproblem design doc includes the test plan but more detail on negative test cases would have been better
noproblem yes the use of visualization is great
noproblem i know exactly what this team is doing
noproblem it seems as though this team s approach was well designed
noproblem the way the team plans to loop through each review to calculate a review score seems slightly more complex than necessary but i agree with them taking this apporach as it will allow them to break down the reason why the scores are different
noproblem they have a lot of mockups showing what they plan to do  
noproblem yes they include a problem statement in this page the statement is clear and easy to understand
noproblem the team has well explained the changes to be made to the system
noproblem yes the authors have explained the changes to be made clearly along with diagrams
noproblem all the changes made to the system have been supplemented with explanations and mock ups
noproblem explanations are okay there needs to be more detail on what is being done and how the final outlook view would be as of now not much details have been put in the document a before and after view would have adequately shown the impact the this work will make   
noproblem yes there is few basic details mentioned in the document but not adequate changes are explained it s far better work than last round yet the team has to give a better overview on bacui and elaborate the problem statement
noproblem the team has updated their design document to include all the changes they are planning to make this is a good improvement from the earlier version
noproblem design is good
noproblem the design is reasonable and workable
noproblem since its ui based project their design is pretty intuitive and simple
noproblem there is no scope of using any design patterns or principles since this is a ui based project and there is no scope for the application of design principles
noproblem there is no design provided in the document as its mainly ui changes yet the team should have dived in detail about their choices to achieve a particular look and feel needed the document seems to be over simplification of the implementation and can be improved further   
noproblem the changes are to be made in the ui and the team is planning to use appropriate design elements
noproblem team plans to use all of the bootstrap functions and  
noproblem yes the design doc is simple and well explained
noproblem yes the design appears to be as simple as possible there are a limited number of bootstrap components being used the complexity of the project is limited and the end result appears to be as simple as possible
noproblem yes this looks simple with several point fixes required to be done the authors also talk about using bootstrap 4 which is good i would have liked if they could quickly put up certain mock screens using the bootstrap      
noproblem the tasks they need to do seems simple but more design details are needed
noproblem yes the design is very simple
noproblem team has done their best in visualizing whatever design they had
noproblem the diagrams added clearly explain which views need to be modified but if the team could just mark the point where changes are to be made in the screenshot it would be the icing on the cake still good work
noproblem they gave all the ui interfaces they are going to make it s suggested that they can include the origin page and the changed page   which the reader can compare with
noproblem they have included mock ui screens which make their proposed changes quite clear   
noproblem class diagrams uml diagrams do not apply here but explanation with snapshots is provided
noproblem not necessary since it s a ui based project
noproblem no i feel that that adequate visual aids and diagrams are missing in the document only a few screens to show it would have been better if the authors could have put before and after details on what is being done uml diagrams to show the flow and then justify the changes that they are trying to make     
noproblem make sure to test each interactions properly after the design is complete
noproblem no test plan section at all
noproblem since it s ui project they says they will test all the pages changed
noproblem since this is a ui based project they don t   need any functionality testing the team is planning to do manual testing which is all they need to for this project
noproblem no ui tests can be added here but the team has not considered them
noproblem no tests needed
noproblem no test plan
noproblem there are no tests included in the document but there is an issue need to be fixed which needs test plan to make sure it can work correctly also the ui need to test to guarantee the intended results
noproblem there is no test plan
noproblem yes the authors have clearly explained the changes to be made to the system document is simple succinct and easy to understand great use of flow charts uml diagrams and mockups to visually represent the information is done   
noproblem    yes the author has provided a sufficient explanation of what changes needs to be done to the system by giving flow diagrams and screenshots about what changes they are going to incorporate in their system
noproblem team has added all the diagrams and screenshots the document is well explained and looks complete
noproblem yes their explanations are adequately explained the changes
noproblem 1 the authors have clearly explained the changes to be made to the system 2 they also have given the files to be modified added for each change   
noproblem authors have clearly explained all the changes to be made and where to make them the design document is quite clear and easy to understand
noproblem i think that the authors have done a really good job of explaining and covering all the changes to be made overall this is the best document i have seen so far
noproblem the authors have explained all the changes to be made very clearly and concisely each change is supplemented with sufficient diagrams and mock ups so as to make the final task of visualization easier
noproblem the document seems complete
noproblem yes one of the best design docs of project 4
noproblem the document was very well written previously too and they have improved it with diagrams and test nice work
noproblem the authors have considerably improved on the document uml diagrams as requested have been added
noproblem yes the design follows appropriate principles and patterns suggestions not required
noproblem design is good
noproblem yes their design is very sound and principles and patterns are used appropriately
noproblem 1 the design appears to be sound 2 also follows proper design principles eg for making changes to nomination and review questions inheritance is used inheriting methods from questions parent class
noproblem the design seems to be appropriate and sound it follows appropriate principles
noproblem yes the design appears to be very sound and follows all the principles that i know i loved the format of the documentation as well
noproblem they have explained very well
noproblem yes the design follows simple rails concepts and is pretty straightforward i would like to see if the team uses existing gems available to speed up implementation and re use      
noproblem yes the design appears to be sound and well made   
noproblem the design   seems to be very simple i think the team has avoided unnecessary complications and are doing minimal changes to existing system to solve issues given to them
noproblem the design approach seems justified and inline with the functionalities required to be implemented they have mentioned step wise details for all the changes they are going to take done a good job no rework required
noproblem    yes the design is presented in a much simpler form which gives a very clear picture of how the changes are going to be implemented and which functionalities would be witnessing the changes also as they have provide the screenshots it enhances the understanding about the project more
noproblem yes their design is simple and clear enough to read and understand
noproblem 1 the design is simple and well modularized 2 each method is implementing only one task as it should
noproblem the design does appear to be as simple as possible the team have not unnecessarily complicated the project
noproblem yes the design is pretty simple and to the point the design proposed is very clear and talk why each change is necessary
noproblem    the design is straightforward and as simple as possible the team has thought this project out very clearly and laid the same in the form of flowcharts and mock ups this has greatly reduced the complexity of the project and helped decrease the chances of clutter and confusion
noproblem yes adequate amount of details present
noproblem yes    the requirements are simple and the design plan clearly explains all the points
noproblem yes design appears to be very simple
noproblem yes the design is quite simple
noproblem great use of uml diagrams flowcharts and mock ups by the team to clearly explain the flow of their work it is   easy to understand the flow and how the end product will look like
noproblem they team has done awesome work in representing every detail possible in the flow diagrams they have created uml diagrams which depicts the flow of the admin and students along with other actors as mentioned earlier they have also represented the admin flow diagram and instructor flow diagram through the flow chart which makes it very easy for end user to understand the workflow of the requirements in the expertiza system
noproblem    yes the visualization is pretty clear and good
noproblem proper use of uml to explain the use cases and flow charts to explain the workflow has been done the plan is complete
noproblem yes their visualization is good they are clear and well described the changes
noproblem the design document includes flow charts uml diagrams and screenshots which is really impressive as it made the document easier to understand
noproblem i loved the overall use of the visualizations which aids to the understanding of the whole doc the formatting of the documentation makes it really easy to read and understand
noproblem yes the   uml   diagrams sufficiently provide visualization
noproblem the authors have added uml diagrams as requested in the previous review and it has made a lot of difference the explanation is much clearer now
noproblem test plan outlines the functionalities that the team will test and it seems sufficient to test the changes
noproblem they team has done tremendous job in following the test driven approach for the project implementation they have already included the tests they are writing for the functionality implementation they have covered the exhaustive scenarios   for the project in their test their test plan is highly appreciative
noproblem    the test plan is quite good as it covers all the test cases in the form of 11 test cases which test all the functionalities for the admin and the instructor role it also considers the negative test cases like throwing an exception when the pending instructor tries to add more then 10 students to his her course
noproblem yes they include the test plan
noproblem 1 the test cases cover all of the functionalities that they are going to implement
noproblem yes the document includes a test plan there was no test plan present in the previous version of the design document but the team included the test plan in the second round the test plan is clear and seems like it would really test the functionalities
noproblem the test plan has been written in a very good way following the great   quality of documentation till the end it covers all the edge cases and scenarios
noproblem the test plans are excellent the best i have seen so far it has accurately taken all test cases into consideration and described the layout of the final test in the form of a pseudo code well done on the test plan
noproblem yes test plans are included
noproblem yes the test plan looks good it covers all the functionalities
noproblem test plan seems thorough and well thought   out
noproblem the team is following a test driven development approach they have defined the test cases that need to be tested after the implementation it seems to completely test the feature
noproblem the team has mentioned properly what changes they are doing and how they will be doing them in the first submission they had suggested the possible approaches now they are having a concrete way they are implementing these changes
noproblem yes the authors have made changes to the design document and are more specific about how exactly they plan to implement the new functionality
noproblem yes they explained a lot for the changes great job
noproblem 1 the authors have adequately explained the changes to be made to the design document
noproblem yes excellent work done by the team the design document adequately explains what is the problem that they are trying to solve what is the proposed solution and how the solution would look like    there are enough details to in the document to understand what is being done and what changes are proposed the document also has enough illustrations on what is the current situation   
noproblem the authors adequately explained   the changes   they plan to make
noproblem the design seems to be sound they have a sample design where they are explaining the tables and how they plan to work with them as well the examples provided help understand how the data will be stored
noproblem yes
noproblem yes
noproblem    the design appears to be sound they have weighed their options and are using an official gem to interact with the github api
noproblem i don t   see any issue in the design document they have followed a good design principle
noproblem 1 the authors have mentioned several approaches in which these functionalities could be implemented 2 their chosen approach is follows mvc architecture and dry principles
noproblem yes the github api integration looks good the only part missing was perhaps they could have documented the rest calls that they are going to make in the document as well usage of existing gems is good and eases lot of implementation pains   
noproblem    the design sound very reasonable
noproblem the design is concise and clear they have added reference images of how the system would look after their changes which properly shows the expected implementation results
noproblem yes it is thoroughly investigated
noproblem yes
noproblem their design is much simple and clear also easy to understand
noproblem yeah i believe it is as simple as possible while choosing the best path for the expertiza project to grow but it still sounds like a very ambitious project for 1 group to complete
noproblem with proper documentation the problem is explained nicely and understanding of the complex problem is made easier
noproblem    their design is simple and clear
noproblem yes the authors are using already existing gems for the implementation i would have liked to see a section on caching if any    rest the solution proposed looks simple and straightforward and looks that it will easily integrate into the current system   
noproblem the use case diagram properly shows how the addition of this feature will help for   the instructor role
noproblem the visualizations used by the team are comprehensive and well made
noproblem good design
noproblem excellent use of screenshots made things very clear for me
noproblem yes they use a lot of diagrams to show use case
noproblem explains the different approaches with the help of use case diagram
noproblem    they not only use use case diagram but also mock up screenshot to help the reader understand their design
noproblem the test plan does include a high level of testing scenarios the team plans to cover i would suggest the team should add bdd tests so they can test the same after the development phase is over
noproblem the test plan seems adequate at this stage edge cases may need to be considered at a later stage
noproblem no
noproblem yes it includes the test plan with a great detail
noproblem    the test plan seems adequate enough to show that they understand what to test
noproblem good test plan should include more test cases that check the functionality of github integration eg if number of lines of code committed by a student is correctly computed
noproblem the design includes a test plan however the test plan has nothing related to tests or which test cases are going to be considered it just explains the flow of how an instructor would reach the github metrics data page the team should at least mention which files are the test cases going to be written on and what functionalities are they going to test
noproblem the test section looks inadequate as of now only two test scenarios are mentioned and no details on automation or ui    more so no mention of tests in the document
noproblem    test plans for both of their subtasks were   present
noproblem the author has excellently explained about the changes that they would be making by providing the design diagram and the screenshot of the the changes that they have incorporated also they have mentioned about their choice of tool which is google chart and why do they prefer so overall a good explanation
noproblem changes that s needs to be made has been explained correctly
noproblem yes their doc has adequately explained the changes
noproblem the team have a well written design document and and the authors have explained the proposed changes well the authors have also listed each file they are going to be changed
noproblem yes the team has well explained the changes that they are going to make last time it was a bit confusing but this time because of   the help of the diagrams and mock ui screen the solution seems clear now
noproblem the authors have explained the changes made to the system the design flow greatly helps to understand the flow of the system
noproblem the authors have described what all changes they plan to do and where they plan to do it compared to the previous version of the design document they have now included what tools and framework they plan to work on the design document looks complete and understandable now
noproblem they will be changing mostly html and erb code to create a visual interface that delivers information to instructors more effectively
noproblem the proposed changes have been explained in a simple manner
noproblem the document adequately describes the project description and proposals made the proposed change of generating a single or single bar chart graph based on the categories selected to display the chart can be efficiently made to the system
noproblem they have improved the document to provide a better description of changes to be made to the system
noproblem yes the design is sound and gives a proper explanation about how their implementation would behave
noproblem design seems correct
noproblem yes their design is clear and sound and the principles and patterns are well used
noproblem the design documents is well explained the authors haven t mentioned any design pattern as such the authors have clearly stated the proposed changes though they could have added uml and crc cards
noproblem yeah their design seems to be sound and neat
noproblem system is well defined  
noproblem the design document is good and i don t think any design pattern needs to be followed as very few changes are being made   
noproblem the design makes use of the google charts tool to generate visual charts for specific criteria set based on the design flow it appears that the functionality can be consistently performed to generate the visual graph for the instructor
noproblem yes the design appears to be sound and uses appropriate design principles
noproblem yes the design is pretty simple and inclusion of screenshot enhances the clarity of what the team has achieved in terms of the required changes   
noproblem design is simple and easy to understand
noproblem yes the design is simple and easy to understand i can easily know what they will do through their doc
noproblem the design appears to be very simple and well written they have explained the use case diagram very well also they have added visualizations
noproblem yes the design is simple and easy to understand  
noproblem the team is using external tools to do the work and its clear and easy
noproblem using google charts is a good idea
noproblem from the reasons provided for choosing the google charts tool and it s effectiveness it can be integrated into the system functionality easily making the design simpler to be executed
noproblem yes design involves google charts api   and seems very simple
noproblem yes the design flow and the screenshots very clearly describes the changes made to the system
noproblem flow diagram explains the flow correctly
noproblem yes they have used visualization to help people understand their design
noproblem they have worked on their weak   point earlier their solution does not seem cogent but i would say now they have made good progress
noproblem the sample data visualizations is good the way they have given visualizations for sample data is nice easier to understand and good
noproblem the team already has mockups for their design
noproblem the visualization is great the screenshots clearly indicate the proposed output of the project
noproblem really good visualization provided
noproblem according to the team the specification of the project does not require us to use automated tests    but they plan to test the modified ruby code or the new features using   the   rspec   testing framework overall the test   plan sounds good  
noproblem no tests are required for the project as stated
noproblem this team did not require any tests
noproblem the design document does not include a test plan as testing requirement   is very minimal since most changes are in view
noproblem the test plan section specifies that it does not require performing any automated tests however since the new functionality of adding a visual diagram the team would modified ruby code for the functions added to the grades_controller
noproblem yes changes to be made are explained clearly document is very clear includes necessary diagrams mock ups and everything possible to make anyone understand what the issues are and what team is planning to do to resolve them everything is included in a proper order like for each issue there is a separate flowchart and mock up no suggestions required
noproblem yes the authors have adaquately explained the changes to be made in the system
noproblem the document is clearly and neatly written all the necessary sections are present with good explanations
noproblem changes are well explained with good visual aids
noproblem they have explained every change   they want to make to fix the issue the diagrams in turn help a lot to understand the flow of the system
noproblem yes the authors have adequately explained all the changes that need to be made each issue has a separate list of changes to be made and which files need to be edited
noproblem the changes are very well documented for each issue what are the files that needs to be changed is mentioned appropriately the overall design looks efficient and avoids any duplication good job
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they have also implemented the code and showcased in the test plan and the proposed design section   
noproblem in round one team has well explained their approach and how are they going to do it in this round they have included detailed information and mock ui it was easy to relate their approach their test plan is also thorough i think the team would definitely be able to incorporate the new changes good job guys   
noproblem the design was well explained in this   design   doc
noproblem well explanation on problem statement uml diagrams flow charts given detailed explanation on problem statement   
noproblem yes
noproblem yes the document seems to be perfect it does follow all the appropriate principles and patterns no suggestions required
noproblem as far as the issues are concerned the solutions do seem logical
noproblem the design is apt following   the principles and are self explanatory
noproblem yes the design appears to be sound and the flow diagrams illustrate the flow of control very well
noproblem all good design principles are being followed where necessary
noproblem the design is perfectly well depicted in the form of the logical flow diagram   they have been thorough in pointing out the application flow in the proposed design section so as to elucidate the problem statement
noproblem the design appears to be neat   
noproblem the design appears to be sound following the appropriate   principles and patterns
noproblem yes well designed document ui mock ups given it is structured   
noproblem sound so many diagrams
noproblem yes it is the simplest design and minimal work which is required to resolve the issues it is very clearly explained    one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well   
noproblem design is simple and easy to understand
noproblem yes simple straightforward solutions
noproblem the diagrams are very basic and covering the entire scope which is a good work by the team
noproblem yes the design is robust and simple to understand each class and view only handles a specific functionality i e it is modularised
noproblem yes the design is straight forward and easy to understand
noproblem the design appears to be simple given the task at hand
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the staggered deadlines assignment section   
noproblem undoubtedly i like their color coding approach it s something very simple and apt for the current system
noproblem the design seems simple and clear
noproblem very clear
noproblem yes the provided diagrams deliver sufficient information about the implementation flowcharts and mock uis screenshots give a perfect picture of how the system will be after the required changes no suggestions required
noproblem flowcharts are drawn which describe the flow how the system will work after implementation
noproblem great use of mock ups really appreciate it
noproblem yes they have added mock ui screenshots which is exactly what they are going to and should do
noproblem yes the diagrams clearly illustrate the proposed flow different diagrams are provided for different issues one of the best wikis i have seen
noproblem very good use of class and sequence diagrams to explain the entire design flow it clearly conveys the thought   process of authors and the overall design
noproblem lots of great visualizations are provided that outline a good amount of detail
noproblem the team has added their mock ui which shows they have thought about the changes and modification mock uis of the screen shows they are halfway the project   
noproblem yes design is informative change proposal is detailed it describes well about how changes are to be implemented
noproblem the diagram is perfect and clear
noproblem yes design does include a well described test plan the provided tests will surely test the functionalities which will be implemenedt the test plan is represented in a wonderful manner including pre steps and different testing expectations great work no suggestions are required
noproblem the test plan is comprehensive
noproblem they have covered all the test plans along with detailed steps
noproblem the test plan is thorough and contains lots of detail that will make it easy to design rspec tests in the future
noproblem the test plans are thorough and they gone ahead and shown it in detail by breaking them into steps such as pre steps functional ui and performance testing this is a very good way to achieve in depth analysis of the problem and check how effective the solution is
noproblem i have to say their test plan includes user interface testing performance testing database testing etc i have to say they have worked really hard for it i have not yet come across any team who has a test plan like this   
noproblem an appropriate test plan is included in this design doc
noproblem yes the test coverage seems good
noproblem after the first review the design has improved significantly the proposed design clearly defines the changes being made by the team
noproblem yes the proposed solutions part clearly stated that they will go through each review to compare the new review score etc and then they will store the review url however the solution is not concrete enough and is a little bit hard to follow it should be great if there s more details in stating about how to loop through each reviews   
noproblem they have a paragraph saying what they are going to do but it could be broken up into parts with images for better understanding
noproblem the authors have explained well what changes they wish to make and how they plan to implement those changes i would suggest them to add more details like where do they store the list of responses more than the notification threshold overall good job
noproblem a format of the proposed email to be sent would be helpful
noproblem yes they include this part in the proposed solutions field it would be better if they use visualization to let the readers better understand the flow
noproblem the team has provided a code snippet which includes solution to their problem statement they have described the code and their proposed changes
noproblem i know exactly what this team is doing
noproblem yes the problem statement and the proposed changes have been clearly explained
noproblem the design has improved and updates has been done and it is easy to comprehend the changes to be made to the system
noproblem there has been a significant improvement in the level of details provided the author can further improve the document by providing the details of the design pattern to be used
noproblem design is okay
noproblem design does seem to be sound but complex as mentioned in the earlier review i am unsure if looping over each review is the correct thing to do or not maybe the team discussed this with the mentor and decided against it as no new information has been added in the document if so i would only suggest the team to include the complexity of the design in the   document
noproblem the design seems workable maybe they can come up a more sound design for example they can try many ways to define the notification limit
noproblem by looking at the flow charts and uml diagrams submitted by the team their solution appears to be sound
noproblem it seems as though this team s approach was well designed
noproblem the design seems to be pretty straightforward
noproblem the design is simple although it could be better if it has more concrete examples
noproblem yes the design is as simple as it can get understanding the principle is not hard but making it simple should also not make it costly good work to the team if the instructors were looking for something this simple
noproblem yes it simple but some parts are not easy to understand
noproblem the design is simple and really better than before
noproblem the team has provided diagrams that make it easier for the reader to understand the workflow of the system and the changes that they have proposed to implement the solution
noproblem the way the team plans to loop through each review to calculate a review score seems slightly more complex than necessary but i agree with them taking this apporach as it will allow them to break down the reason why the scores are different
noproblem the design does appear to be simple as they have not planned to modify any of the existing methods their new method will interact with   response assignmentquestionnaire model and then link the assignment to the review in the email however they have not mentioned if they have planned any data structure variable to store the assignment link and pass it on to the method where email notification will be sent but i suppose that storing it in a variable will suffice   
noproblem the design and application flow appear to be as simple as possible as well as the proposed code changes snippet provided
noproblem the design seems simple
noproblem the author uses the uml diagram to properly describe the system   
noproblem yes the use of visualization is great
noproblem they used the uml diagrams it really help me a lot when reading the wiki page maybe they can also make diagrams about the changes they are going to make
noproblem as mentioned the team has provided uml diagrams stating the two actors in their system student instructor and their interaction with the email module and database
noproblem the visualization aids used currently are application flow diagram and use cases they are useful to understand the scenario of the problem statement however a sequence or a communication diagram will really be beneficial to understand how the method interfaces with the other   methods this will help identify if the new method impacts other functionalities and will portray the proposed solution efficiently
noproblem there are uml and application flow diagrams included with the design document which serve to make the proposed design changes much clearer
noproblem proper   diagrams are used by the team   
noproblem the document does contain a test plan which can definitely be extended to incorporate   certain negative test cases
noproblem they have one scenario maybe a few more could help better test their work
noproblem some additional tests can be added
noproblem they did include a test plan it would be better if they also test the instructor side
noproblem the test plan seems overly simplistic it only tests whether the team s changes work in the most drastic scenario possible it seems like they should have more boundary value tests and more test cases to account for their new method of looping through the reviews to compare new reviews with previous ones
noproblem test plan is as simple as required for the problem statement in question
noproblem design doc includes the test plan but more detail on negative test cases would have been better
noproblem yes the authors do have an adequate explanation   
noproblem they have also added the uml diagrams which makes things a lot more clearer
noproblem i cannot remember what the explanation looked like last week but the read through this week felt very clear the organization of the article felt like it followed the logic of a design project the problem statement felt like it was reduced to a clear concise set of requirements that are attainable the addition of the program flow diagram and an explanation as to why there is no uml diagram also helped to cement my understanding and set my expectations
noproblem good work on adding uml diagrams now the problem is very well explained
noproblem the authors have lucidly explained the changes that are to be made to the system they show the current state of the system and the expected state which includes a new button to analyze the review content in the segmented text box the authors have specified 2 files that they plan to modify namely the view file response html erb and a partial _self_review html erb the team clearly show the format of the response popup with suggestion metrics that capture sentiment score sentiment tone whether suggestions are present or not chance of suggestions volume of text and the volume of text without stop words they also propose to improve the response time of extracting the output from the api one suggestion is that the team could have touched upon the working of the suggestion detection algorithm though it is not part of their current implementation they do mention that it is a black box and have included a link to the deployed nlp project for suggestion algorithm where users can test the suggestion metrics generated for custom text
noproblem yes they have explained it very well
noproblem the changes proposed are well explained and clearly indicate the intended output
noproblem the authors have adequately explained changes made to the system they have explained the problem and proposed solution clearly and supported it with appopriate diagrams
noproblem very detailed and precise solution explained thoroughly   
noproblem they explained from their requirements and in their flow that they only need to plan to edit the view so there is no need for a uml
noproblem documentation is proper team could have added db tables as well in the design doc
noproblem since the task is to integrate a web service in the existing system the design mentioned is sound and reasonably primitive   
noproblem yes it does based on the proposed solution
noproblem the design is good however there is no scope of using bad principles since the number of files that will be affected are minimal and restricted to just 2
noproblem the design doc is sound and i believe   no design patterns are required for this project
noproblem the design appears sound
noproblem yes design seems fit more insight required on the algorithm itself and how it will be implemented
noproblem yes the design in its current form seems straight forward
noproblem the requirements were distilled down to the fewest simple terms possible without over generalization it felt like they just gave me the tl dr statement without any fluffy words to waste my time and also feels like they have a strong grasp over what they are expected to accomplish
noproblem yes the design appears to be simple   
noproblem yes the design is simple and illustrated well with the use of wireframes showing the current expected state and uml diagram showing the flow diagram it depicts that once the analyze button is clicked the request is sent as json which contains the text typed by reviewer in the segmented textbox to the api which generates the suggestion metrics the response contains the suggestion metrics like sentiment score sentiment tone presence of suggestions chance of suggestion total volume of text and volume of text without stop words   
noproblem yes the design is simple and clear the task is to integrate   a web service which returns a result in json format
noproblem yes it does appear to be simple as possible
noproblem the design is as simple as it could be since the flow of logic is pretty linear and there is no scope of complexity the changes also seems to be restricted to just one file which is good and in keeping with sound principles
noproblem the actual project work might not have been started yet so the code modifications have not been mentioned but the files to be modified seem appropriate
noproblem the design appears very simple
noproblem the project does not necessarily need diagramatic explanations but uml diagrams have been used which show implementation plan fairly well
noproblem the flow diagram mentioned in the document clearly explains the changes need to be done
noproblem the screenshots of the expertiza system are very helpful in understanding the problem and the solution
noproblem the program flow diagram and an explanation as to why there is no uml diagram also helped to cement my understanding and set my expectations
noproblem uml diagram explains the changes
noproblem yes this team has made the best use of visualization tools that can be applied to their project they have clearly shown wireframes of the current response page juxtaposed with the expected state with the analyze button next to each rubric the document also includes the flow of the project represented as uml diagram once the analyze button is clicked the request text is sent to the suggestion detection algorithm the api returns the response which contains the suggestion metrics like sentiment score sentiment tone presence of suggestions chance of suggestion total volume of text and volume of text without stop words   
noproblem the   use of visualization is not pivotal for this task as it can be explained theoretically as well but still the team has made an effort to present the task with help of a flow diagram
noproblem yes very well explained
noproblem the screenshots clearly display where the output would be displayed
noproblem the uml diagrams clearly descibes the design of the solution the screenshots explain changes required in the system adequately
noproblem yes uml diagram is provided and it is detailed flow diagrams explains how suggestions will be given   
noproblem i think more tests can be added
noproblem the use cases appear to offer a quality general test approach to see if their design does what it should
noproblem test cases have been added   
noproblem the team has included test plan in connextra format by including the feature specification and two scenarios one happy path and one to capture the edge case of response generated with no text no more test cases can be added to check if the team s part in the project is implemented well some test case scenarios that check the efficiency of the suggestion detection algorithm for example to detect review responses that generate the generalized suggestion for all the projects can be included
noproblem the tests given tests there changes which is enough
noproblem the test plan is complete the team plans to test the two possible cases 1 when the review is blank response should be no review in text box 2 when review is present response is the result of suggestion metrics analysis the team is right in testing just these two cases because they should not test if the api itself is returning a correct response as that would be against testing rules
noproblem the test cases seem appropriate given that the only thing which needs to be tested is if the suggestion detection algorithm is displaying the intended output or not
noproblem the design doc includes the test plan which covers changes in the functionalities
noproblem their test plan includes a test case for successfully displaying the pop up text message as json and   displaying suggestion metrics for the review segment a block of review a comment box try to include test cases where a review message is absent i e the code should not break for empty review segment include a test case where review segment has a suggestion and test if the output says suggestion present include a negative test case for the the suggestion where a suggestion is not given by the reviewer and test that the output says suggestion absent
noproblem yes functional tests with scenarios provided
noproblem good additions on the purpose and use case of your work
noproblem the introduction and proposed solution sections appropriately describes the problem and the approach to resolve the issue the changes proposed can be concisely implemented into the system they have enlisted use case diagrams for the entire scenario to be added to the rubrics
noproblem the desgn looks okay
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement
noproblem the design seems to be clear such that it provides the implementation procedure to be followed to include the feature of adding student generated questions to the rubrics
noproblem the design is sound
noproblem as per the documentation the design seems simple
noproblem looks very doable
noproblem yes from the diagrams i could say design and design flow is simple enough and team has well understood the changes to be made
noproblem yes the design appears to be very simple
noproblem yes the design is very simple and easy to follow
noproblem the design appears to be simple and straightforward to implement the team has also included all the files that will be changed to achieve the desired results
noproblem the design appears simple to be executed based on the procedure specified and the list of diagrams given that it justifies the implementation to be carried out
noproblem team has provided good amount of use case diagrams which actually are heart of the whole design doc and explains the design and approach well
noproblem they have made some uml diagrams which could describe the changes
noproblem yes they use a lot of charts to explain the use cases great job
noproblem the use case diagrams provided to describe the role of each user through the flow and specify how each case maps to another in order for the desired functionality to be achieved
noproblem the diagram is logistic and it s easily to tell the logic behind the changes by reading these diagrams i can get an understanding of this project quickly
noproblem yes the flow charts are complete and readable all cases are included
noproblem yes they have
noproblem explained details about their solution and what will be changed after their implementation
noproblem yes changes to be made are clearly explained
noproblem they have explained in detail about the proposed changes with individual diagrams for each case it is very thorough in explanation
noproblem great documentation tbh the best i have seen yet      
noproblem they have documented it in a very rehearsed manner
noproblem the design document is really well written it clearly describes what needs to be done how it needs to be done and what code changes need to be made the files and tables affected are clearly listed
noproblem the authors have prepared the design document quite well
noproblem the author has explained extensively about the changes to be made to the system
noproblem yes the problem definition and the proposed solution are pretty clear they also provide some diagrams to explain their project which is helpful
noproblem their introduction and problem definition are clearly enough to explained the changes
noproblem with er diagram and database details the design looks good
noproblem the design follows appropriate principles and patterns as required
noproblem the project consists of making a search function to select specific users assignments etc using some criteria so they re creating a search functionality for individual models
noproblem yes the proposed changes make only required additions
noproblem yes it follows   appropriate principles   
noproblem the design appears to be sound it is really well structured it is easy to follow it clearly states the changes to be made and the files affected by these changes
noproblem the design appears to be sound and clearly indicates the proposed code changes
noproblem yes the design is appropriate
noproblem yes they provide solution for different problem situations
noproblem yes it is fairly simple
noproblem no complex design only few places need to add functionalities and they all very similar
noproblem the design is simple although the er diagram takes a little time to decipher since it is quite big
noproblem yes the approach described in the design document is easy enough to understand they have also   backed their decision to go with the second approach with appropriate reasoning
noproblem the design is simple and quite comprehensive covering lots of methods of searching
noproblem yes based on the proposed solution it appears to be simple as possible
noproblem the design document appears really easy to follow a person who is new to the project can get the summary of what is happening just by reading and going through the design document
noproblem yes easy to understand
noproblem the design has been explained in a simple way the team has explained the design using use cases which is easy to comprehend
noproblem yes the design is simple and feasible
noproblem yes clear and simple
noproblem they have used apt visual aid like uml diagrams and screen shots
noproblem no class diagram but there is er diagram and tables for database it looks a little complex but give the idea of what is involving
noproblem necessary diagrams are included
noproblem the team has communicated their design clearly via use case diagram and a class diagram with a description of various database tables involved
noproblem excellent use of visualizations they already had an overall flow chart and this time additional tables and uml has been added best of what i ve seen
noproblem yes they do explain everything the er diagram use case diagram relevant tables explain everything
noproblem the project has great visualization a lot of uml diagrams have been included which makes the understanding the project easier the uml diagrams also clarifies what work is to be done
noproblem the pictures clearly demonstrate the changes being made to the system although it is apparent where the changes would be visible it would be nice if a image was posted having the current expertiza   deployement   to show where the changes would be visible
noproblem the team has described changes using use case and er diagrams to clearly explain the system
noproblem the authors add more diagrams to help to explain the change they are going to make the relevant tables are really helpful
noproblem test plans walk through necessary functionalities
noproblem yes a good test plan is also included
noproblem the test cases described will cover the functionalities described given that they write multiples tests with the same structure as described for all search criteria   
noproblem a concrete test plan is also added and it has both ui and automated test details
noproblem yes this is done very well
noproblem they include a very described test plan it has everything proper what framework what tests all this information is well included they clearly specify what they aim to test
noproblem the test plan is pretty good and it has both ui tests and automated tests   
noproblem the test plan is designed efficiently they have described the ui tests and automated tests which cover most of the cases   
noproblem two types of testing are listed and the authors list all the cases they need to test
noproblem yes they have
noproblem explained details about their solution and what will be changed after their implementation
noproblem they have explained in detail about the proposed changes with individual diagrams for each case it is very thorough in explanation
noproblem yes the authors have adaquately explained the changes to be made in the system
noproblem the document is clearly and neatly written all the necessary sections are present with good explanations
noproblem changes are well explained with good visual aids
noproblem they have explained every change   they want to make to fix the issue the diagrams in turn help a lot to understand the flow of the system
noproblem yes the authors have adequately explained all the changes that need to be made each issue has a separate list of changes to be made and which files need to be edited
noproblem the changes are very well documented for each issue what are the files that needs to be changed is mentioned appropriately the overall design looks efficient and avoids any duplication good job
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they have also implemented the code and showcased in the test plan and the proposed design section   
noproblem in round one team has well explained their approach and how are they going to do it in this round they have included detailed information and mock ui it was easy to relate their approach their test plan is also thorough i think the team would definitely be able to incorporate the new changes good job guys   
noproblem the design was well explained in this   design   doc
noproblem well explanation on problem statement uml diagrams flow charts given detailed explanation on problem statement   
noproblem yes
noproblem yes the document seems to be perfect it does follow all the appropriate principles and patterns no suggestions required
noproblem as far as the issues are concerned the solutions do seem logical
noproblem the design is apt following   the principles and are self explanatory
noproblem yes the design appears to be sound and the flow diagrams illustrate the flow of control very well
noproblem all good design principles are being followed where necessary
noproblem the design is perfectly well depicted in the form of the logical flow diagram   they have been thorough in pointing out the application flow in the proposed design section so as to elucidate the problem statement
noproblem the design appears to be neat   
noproblem the design appears to be sound following the appropriate   principles and patterns
noproblem sound so many diagrams
noproblem yes it is the simplest design and minimal work which is required to resolve the issues it is very clearly explained    one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well   
noproblem design is simple and easy to understand
noproblem yes simple straightforward solutions
noproblem the diagrams are very basic and covering the entire scope which is a good work by the team
noproblem yes the design is robust and simple to understand each class and view only handles a specific functionality i e it is modularised
noproblem yes the design is straight forward and easy to understand
noproblem the design appears to be simple given the task at hand
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the staggered deadlines assignment section   
noproblem undoubtedly i like their color coding approach it s something very simple and apt for the current system
noproblem the design seems simple and clear
noproblem very clear
noproblem yes the provided diagrams deliver sufficient information about the implementation flowcharts and mock uis screenshots give a perfect picture of how the system will be after the required changes no suggestions required
noproblem flowcharts are drawn which describe the flow how the system will work after implementation
noproblem great use of mock ups really appreciate it
noproblem yes they have added mock ui screenshots which is exactly what they are going to and should do
noproblem yes the diagrams clearly illustrate the proposed flow different diagrams are provided for different issues one of the best wikis i have seen
noproblem very good use of class and sequence diagrams to explain the entire design flow it clearly conveys the thought   process of authors and the overall design
noproblem lots of great visualizations are provided that outline a good amount of detail
noproblem yes the diagrams are clear to show how the system works but they are not so lucid so as to show in the diagram how they are going to implement the changes in the system      
noproblem the team has added their mock ui which shows they have thought about the changes and modification mock uis of the screen shows they are halfway the project   
noproblem the class diagram is very useful and the mock ui   with indication on it make it more useful
noproblem yes design is informative change proposal is detailed it describes well about how changes are to be implemented
noproblem the diagram is perfect and clear
noproblem yes design does include a well described test plan the provided tests will surely test the functionalities which will be implemenedt the test plan is represented in a wonderful manner including pre steps and different testing expectations great work no suggestions are required
noproblem the design includes test plan on the testb plan provided it seems like they will test the functionalities but nothing mentioned on how they will write
noproblem the test plan is comprehensive
noproblem they have covered all the test plans along with detailed steps
noproblem the test plan is thorough and contains lots of detail that will make it easy to design rspec tests in the future
noproblem the test plans are thorough and they gone ahead and shown it in detail by breaking them into steps such as pre steps functional ui and performance testing this is a very good way to achieve in depth analysis of the problem and check how effective the solution is
noproblem i have to say their test plan includes user interface testing performance testing database testing etc i have to say they have worked really hard for it i have not yet come across any team who has a test plan like this   
noproblem an appropriate test plan is included in this design doc
noproblem yes the test coverage seems good
noproblem the authors have explained the required changes in a concise manner
noproblem yes the project design is meaningful and clear the solution is well laid out
noproblem yes   
noproblem yes the authors have specified the changes to be made in the system under the proposed project design the changes have been included as sub heading with sub points under each the authors have also included a relevant files heading that includes the files where changes are made the changes involve allowing the instructor to change language for a course in the process a separate language column will be added to the courses table and a dropdown of languages in the edit courses page where a language can be chosen once the instructor updates the edit course page with the chosen language the static strings in the expertiza application will be changed to the chosen language for adding multi language support google translate and rails internationalization api is being used also two yaml files en yml and hi_en yml contains the translated strings for the respective languages the routes rb file and all the view files will be correspondingly modified to show the different languages after reading from the yaml files   
noproblem the explanations provided by the authors seems to be good they have referred the rails internationalization api guide which provides sufficient explanation for multi language support they have mentioned the different elements that will be changed and how an instructor would proceed to change the language of the course verbally in addition they have also added mock ups to visually represent this information
noproblem the explainations are succinct the description in technical design section and before after images clearly shows what the project intends to do
noproblem the changes are clearly mentioned they are very clear what and where to make changes only suggestion would be to include more about how these changes are going to be done   
noproblem adding a languages column to the courses table makes sense and so does leveraging third party apis to handle the translation
noproblem the design is as required following the appropriate patterns
noproblem as far as the issues are concerned the solutions do seem logical
noproblem it is sound
noproblem looking at the design there seems to be high use of cohesion   and low coupling it s good that all the changes are restricted to the routes rb and config locales files so that the resulting changes won t be messy and ruin the rest of the system also this helps in refactoring if needed in the future as there will be limited number of files to be changed
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it
noproblem the changes have been explained well enough to minimize the complexity the implementation seems extremely clear
noproblem yes simple straightforward solution   
noproblem yes only view files are involving since this topic is about changing the language
noproblem the design appears to be very simple the team has avoided unnecessary complications by adhereing to the rails internationalization guide they have also avoided making unnecessary changes to many files and kept the changes to the minimum number of files required
noproblem the design is really crisp and easy to understand one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well
noproblem yes the current design looks simple and wholesome seems they have done a good job in implementing understanding how rails internationalization works good job     
noproblem the visualization clearly and effectively conveys the translation capability which the project proposes to provide to expertiza
noproblem yes the provided diagrams deliver sufficient information about the implementation
noproblem the necessary visual inputs to aid explanation are present
noproblem mock uis screenshots give a perfect picture of how the system will be after the required changes
noproblem there were mock ups of the final result of the project however there were no uml diagrams i think the uml diagrams are not necessary for this project since the flow of how the instructor will change the language is fairly simple and one can understand it by just reading the document maybe they could have done a mock up of how some of the other views would have looked like once the language has changed especially the pages with flash messages if any currently they have just shown the proposed changes on the page where the instructor will change the language
noproblem the team have written a test plan but i feel more test cases could have been written to test the edge cases also the team could have explained their test cases in more detail
noproblem a testplan that covers the entire functionality has been devised it seems sufficient to test the change
noproblem the test plan is compatible with the problem statement   
noproblem test plan have been shown clearly and tests are easy to understand
noproblem yup because it only tests the ability to change the language
noproblem the team explained   everything required and not leave anything behind
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they have also implemented the code and showcased in the implementation section   
noproblem the wiki page is very explanatory and the authors have explained the issue and fix very well
noproblem yes the required changes for the reviews is explained clearly the design for each required change is also explained in depth now
noproblem the authors have clearly mentioned the changes to be made using problem statement and use case diagram
noproblem yes the author has made a great attempt to explain the changes by trying to explain the changes required with the help of the application flow diagram and the use case diagram and how the changes were implemented by giving screenshots of the changes
noproblem the documentation done by the team is very detailed and explains the problem statement very clearly they have   described   the functionality change in bullet points which makes it very easy to understand the sub parts required to achieve the main functionality in simple terms   
noproblem i like the part where the peer review has been given more weightage in comparison to self review in the composite score
noproblem the design appears to followed appropriate   principles and patterns
noproblem the design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information    also they have been thorough in pointing out the application flow in the application flow section so as to elucidate the problem statement
noproblem yes
noproblem yes the design is very simple and explains the changes required in a very clear manner
noproblem the flow and uml   diagrams are well designed and explain a lot about the system flow addition of detailed use case helps support the diagram
noproblem the design seems to be following the appropriate principles and uses the appropriate guidelines they usecase   diagram mentions each actor and the role associated
noproblem the design is as simple as possible
noproblem yes the design looks simple no complications and the screenshots are really helpful
noproblem yes the design is simple and easy to understand for others too the explanation along with diagrams provides enough information to understand the use case
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem the design is simple and very much in depth and follows   the principle
noproblem es the design is very simple and explains the changes required in a very clear manner
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it hence it is easy to understand
noproblem application flow use case diagram are both very useful to describe the changes
noproblem yes the visuals provided with this doc are clear and just by that a lot can be understood
noproblem the use case diagram and application flow diagram very well explains the changes made to the system
noproblem the chart and diagrams are well done and help explain how the code will work
noproblem basic uml used
noproblem some ui screenshots are added along with design diagrams which describe the system the ui or mock ui helps in better understanding
noproblem the visualizations seem to be complete the team has included an application flow diagram a use case diagram and also a screenshot of how the actual result should look so in my opinion good job done
noproblem the uml diagrams are   detailed and explained well suggestion the application flow could be explained in points so that the reviewer has a clearer view of what is the sequence of events occurring
noproblem the team has done tremendous job in adding visualization aids they have added application flow diagrams for every actor along with the uml diagram of the student and instructor they have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages this makes the document descriptive and very easy to read and understand      
noproblem a test plan is included in this design doc
noproblem after the first review the design has improved significantly the proposed design clearly defines the changes being made by the team
noproblem not enough explanation
noproblem a format of the proposed email to be sent would be helpful
noproblem i know exactly what this team is doing
noproblem yes the problem statement and the proposed changes have been clearly explained
noproblem the design has improved and updates has been done and it is easy to comprehend the changes to be made to the system
noproblem design is okay
noproblem by looking at the flow charts and uml diagrams submitted by the team their solution appears to be sound
noproblem it seems as though this team s approach was well designed
noproblem the design seems to be pretty straightforward
noproblem the team has provided diagrams that make it easier for the reader to understand the workflow of the system and the changes that they have proposed to implement the solution
noproblem the design and application flow appear to be as simple as possible as well as the proposed code changes snippet provided
noproblem the design seems simple
noproblem the author uses the uml diagram to properly describe the system   
noproblem yes the use of visualization is great
noproblem they used the uml diagrams it really help me a lot when reading the wiki page maybe they can also make diagrams about the changes they are going to make
noproblem as mentioned the team has provided uml diagrams stating the two actors in their system student instructor and their interaction with the email module and database
noproblem the visualization aids used currently are application flow diagram and use cases they are useful to understand the scenario of the problem statement however a sequence or a communication diagram will really be beneficial to understand how the method interfaces with the other   methods this will help identify if the new method impacts other functionalities and will portray the proposed solution efficiently
noproblem proper   diagrams are used by the team   
noproblem there are uml and application flow diagrams included with the design document which serve to make the proposed design changes much clearer
noproblem the authors have explained the required changes in a concise manner
noproblem yes the project design is meaningful and clear the solution is well laid out
noproblem yes   
noproblem yes the authors have specified the changes to be made in the system under the proposed project design the changes have been included as sub heading with sub points under each the authors have also included a relevant files heading that includes the files where changes are made the changes involve allowing the instructor to change language for a course in the process a separate language column will be added to the courses table and a dropdown of languages in the edit courses page where a language can be chosen once the instructor updates the edit course page with the chosen language the static strings in the expertiza application will be changed to the chosen language for adding multi language support google translate and rails internationalization api is being used also two yaml files en yml and hi_en yml contains the translated strings for the respective languages the routes rb file and all the view files will be correspondingly modified to show the different languages after reading from the yaml files   
noproblem the explanations provided by the authors seems to be good they have referred the rails internationalization api guide which provides sufficient explanation for multi language support they have mentioned the different elements that will be changed and how an instructor would proceed to change the language of the course verbally in addition they have also added mock ups to visually represent this information
noproblem the explainations are succinct the description in technical design section and before after images clearly shows what the project intends to do
noproblem adding a languages column to the courses table makes sense and so does leveraging third party apis to handle the translation
noproblem the design is as required following the appropriate patterns
noproblem as far as the issues are concerned the solutions do seem logical
noproblem it is sound
noproblem some additional tests can be added
noproblem looking at the design there seems to be high use of cohesion   and low coupling it s good that all the changes are restricted to the routes rb and config locales files so that the resulting changes won t be messy and ruin the rest of the system also this helps in refactoring if needed in the future as there will be limited number of files to be changed
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it
noproblem the changes have been explained well enough to minimize the complexity the implementation seems extremely clear
noproblem yes simple straightforward solution   
noproblem simple and easy to understand steps
noproblem yes only view files are involving since this topic is about changing the language
noproblem the document does contain a test plan which can definitely be extended to incorporate   certain negative test cases
noproblem the design appears to be very simple the team has avoided unnecessary complications by adhereing to the rails internationalization guide they have also avoided making unnecessary changes to many files and kept the changes to the minimum number of files required
noproblem they did include a test plan it would be better if they also test the instructor side
noproblem the design is really crisp and easy to understand one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well
noproblem yes the current design looks simple and wholesome seems they have done a good job in implementing understanding how rails internationalization works good job     
noproblem no visualization or diagrams are necessary
noproblem the visualization clearly and effectively conveys the translation capability which the project proposes to provide to expertiza
noproblem yes the provided diagrams deliver sufficient information about the implementation
noproblem the necessary visual inputs to aid explanation are present
noproblem mock uis screenshots give a perfect picture of how the system will be after the required changes
noproblem test plan is as simple as required for the problem statement in question
noproblem design doc includes the test plan but more detail on negative test cases would have been better
noproblem the team has provided a code snippet which includes solution to their problem statement they have described the code and their proposed changes
noproblem a testplan that covers the entire functionality has been devised it seems sufficient to test the change
noproblem the test plan is compatible with the problem statement   
noproblem test plan have been shown clearly and tests are easy to understand
noproblem yup because it only tests the ability to change the language
noproblem the design includes a brief test plan that lists three scenarios namely the regular steps to update course page to hindi checking if edit assignment page has also been translated and checking if other pages are translated some more test cases like checking if the change in language is reflected from a student login could have been included the authors specify that rspec and capybara is used for testing the new feature
noproblem as far as the issues are concerned the solutions do seem logical      
noproblem yes simple straightforward solutions
noproblem great use of mock ups and uml diagrams it makes understanding the issues easier looks like a great amount of thought has gone into making it   
noproblem yes the authors have nicely explained the changes to be made this includes the flow diagrams uml diagrams and many of the screenshots good work team suggestion could include screenshots if any of the test plans implemented
noproblem the design looks good all the issues are stated and addressed nicely
noproblem the design does not seem that complex the team has clearly mentioned the issues and the way to go about it   
noproblem the visualization is great all the flow diagrams and required screenshots are in place as required
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they are yet to implement the code and showcase in the uml diagram for review section         
noproblem    the design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information    also they have been thorough in pointing out the application flow in the application flow section so as to elucidate the problem statement   
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem yes the diagrams are clear to show how the system works they have even gone a step ahead to show how they have thought of resolving the problem at each and every step of the expertiza review section and the message popups they receive for the same   
noproblem yes they have a working test plan in mind and also they have thought of the ways in which they are going to test the various edge cases for the various issues at hand
noproblem the team has included all the details required to implement the given requirement the wiki has complete details related to requirements analysis of current designs and changes required to achieve the required functionality overall great job    the team did a great work in analyzing the issues and designing solutions for the issues the ui mock ups are included for all the issues which makes the document very easy to understand      
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done   
noproblem the design appears to be simple and straightforward to implement the team has also included all the changes that will be made to achieve the desired results    great work
noproblem the team has included a lot of visual aids which complements the document making it a lot easier to understand    great work with the ui mockups project design uml diagrams
noproblem very well written document good job team
noproblem clearly explained with diagrams and uml diagrams
noproblem the design is simple   
noproblem great work by the team on uml diagrams   
noproblem as per the requirement document test cases are not required
noproblem team have explained the problem steps to reproduce are really very clear solution part could have been explained better overall its a good work
noproblem the doc is very well written its like a blueprint to the project really appreciate the team efforts
noproblem since the project is aimed at fixing the issues no design patterns need to be used
noproblem yes they look well written and easy to follow with all the visual aids
noproblem the design is sound with appropriate principles and patterns
noproblem yes only a few files are being modified
noproblem a lots of visuals very helpful when viewers walk through the design
noproblem drastic improvements have been made to design doc   
noproblem yes the deisgn appears to be totally sound the changes proposed are very standardized and follows appropriate industry standards
noproblem yes the design is very simple lucid and efficient
noproblem the visualization is by far the best part of this writeup also it s visualization is among the best i ve reviewed till date the author has put in a lot of efforts for the same the diagrams make the architecture and the problem statement very simple to understand
noproblem i understand what the team is supposed to do to the expertiza system
noproblem it was weird that two of the bugs they were assigned don t exist but that s not the team s fault
noproblem this team consistently uses great diagrams that add to their documentation s clarity significantly
noproblem the tests are really in depth for each issue the team will be fixing
noproblem after the first review the design has improved significantly the proposed design clearly defines the changes being made by the team
noproblem they have a paragraph saying what they are going to do but it could be broken up into parts with images for better understanding
noproblem the authors have explained well what changes they wish to make and how they plan to implement those changes i would suggest them to add more details like where do they store the list of responses more than the notification threshold overall good job
noproblem a format of the proposed email to be sent would be helpful
noproblem yes they include this part in the proposed solutions field it would be better if they use visualization to let the readers better understand the flow
noproblem the team has provided a code snippet which includes solution to their problem statement they have described the code and their proposed changes
noproblem i know exactly what this team is doing
noproblem yes the problem statement and the proposed changes have been clearly explained
noproblem the design has improved and updates has been done and it is easy to comprehend the changes to be made to the system
noproblem there has been a significant improvement in the level of details provided the author can further improve the document by providing the details of the design pattern to be used
noproblem design is okay
noproblem design does seem to be sound but complex as mentioned in the earlier review i am unsure if looping over each review is the correct thing to do or not maybe the team discussed this with the mentor and decided against it as no new information has been added in the document if so i would only suggest the team to include the complexity of the design in the   document
noproblem the design seems workable maybe they can come up a more sound design for example they can try many ways to define the notification limit
noproblem by looking at the flow charts and uml diagrams submitted by the team their solution appears to be sound
noproblem it seems as though this team s approach was well designed
noproblem the design seems to be pretty straightforward
noproblem the design is simple although it could be better if it has more concrete examples
noproblem yes the design is as simple as it can get understanding the principle is not hard but making it simple should also not make it costly good work to the team if the instructors were looking for something this simple
noproblem the team has provided diagrams that make it easier for the reader to understand the workflow of the system and the changes that they have proposed to implement the solution
noproblem the way the team plans to loop through each review to calculate a review score seems slightly more complex than necessary but i agree with them taking this apporach as it will allow them to break down the reason why the scores are different
noproblem the design does appear to be simple as they have not planned to modify any of the existing methods their new method will interact with   response assignmentquestionnaire model and then link the assignment to the review in the email however they have not mentioned if they have planned any data structure variable to store the assignment link and pass it on to the method where email notification will be sent but i suppose that storing it in a variable will suffice   
noproblem the design and application flow appear to be as simple as possible as well as the proposed code changes snippet provided
noproblem the design seems simple
noproblem the author uses the uml diagram to properly describe the system   
noproblem yes the use of visualization is great
noproblem they used the uml diagrams it really help me a lot when reading the wiki page maybe they can also make diagrams about the changes they are going to make
noproblem as mentioned the team has provided uml diagrams stating the two actors in their system student instructor and their interaction with the email module and database
noproblem the visualization aids used currently are application flow diagram and use cases they are useful to understand the scenario of the problem statement however a sequence or a communication diagram will really be beneficial to understand how the method interfaces with the other   methods this will help identify if the new method impacts other functionalities and will portray the proposed solution efficiently
noproblem there are uml and application flow diagrams included with the design document which serve to make the proposed design changes much clearer
noproblem proper   diagrams are used by the team   
noproblem the document does contain a test plan which can definitely be extended to incorporate   certain negative test cases
noproblem they have one scenario maybe a few more could help better test their work
noproblem some additional tests can be added
noproblem yes the doc contains test plan but they are not specific
noproblem they did include a test plan it would be better if they also test the instructor side
noproblem test plan is as simple as required for the problem statement in question
noproblem design doc includes the test plan but more detail on negative test cases would have been better
noproblem the authors have explained the changes in depth and with proper details
noproblem yes the author has explained the scope of the project very clearly and has specified the changes to be made in the project to accomplish the goal
noproblem the design seems pretty accurate the schema of the database table records all the necessary details with reasonable granularity
noproblem the design seems appropriate to the issue at hand
noproblem yes it does appear to be following appropriate principles
noproblem yes design appears to be sound
noproblem as approach described by the authors design appears to be the simplest it is concise and easy to understand   
noproblem the authors have explained the changes in depth and with proper details
noproblem yes the design is simple and detailed thus explaining the required changes that would be implemented
noproblem yes the author has explained the adequately the changes to be made to the system by giving a detailed flow diagram of the workflow of the the would be implementing the functionality of keeping a track of the review time of a student
noproblem the provided flowcharts are visually sufficient to display the changes made to the system
noproblem yes the author has explained the scope of the project very clearly and has specified the changes to be made in the project to accomplish the goal
noproblem yes the changes are well explained
noproblem explained very well
noproblem yes
noproblem the design document was well written initially too and still is
noproblem great flowchart it helps to see all the possible scenarios in a compact manner
noproblem the design follows the required principle and the exact required patterns
noproblem yes the design is quite well understood and properly explained in a detailed manner through the flow diagram
noproblem the design seems pretty accurate the schema of the database table records all the necessary details with reasonable granularity
noproblem the design seems appropriate to the issue at hand
noproblem the test plan is provided in the functionality implementation describing the functionality and how it will be tested
noproblem yes it does appear to be following appropriate principles
noproblem yes design appears to be sound
noproblem as approach described by the authors design appears to be the simplest it is concise and easy to understand   
noproblem the project does not have any testing involved
noproblem the design follows a clear approach to the functionality avoiding any uncertain flaws
noproblem yes the design is simple and detailed thus explaining the required changes that would be implemented
noproblem yes i think so
noproblem it is clear and simple
noproblem yes it does they have given the proposed solution which   appears   to be simple
noproblem the design appears to be simple and is easy to understand
noproblem the provided flowcharts are visually sufficient to display the changes made to the system
noproblem they have include a flow chart to illustrate how the part gonna work
noproblem great flowchart it helps to see all the possible scenarios in a compact manner
noproblem yes the given flowchart describes the sequence of events and how the application behaves in response to those events
noproblem the flow chart is good and aids in understanding better
noproblem great diagram    explains everything
noproblem clean flow chart
noproblem the test plan is provided in the functionality implementation describing the functionality and how it will be tested
noproblem the issues have been identified and documented clearly    however a little more of explanation is required for the   solutions proposed for issues 2 5 they seem to me at a very high level
noproblem yes the authors have nicely explained the changes to be made this includes the flow diagrams uml diagrams and many of the screenshots good work team suggestion could include screenshots if any of the test plans implemented
noproblem yes they look well written and easy to follow with all the visual aids
noproblem very well written document good job team
noproblem yes they have been thorough in their approach and this has been a project implemented to perfection they have not only given proper uml diagrams and the like but they are yet to implement the code and showcase in the uml diagram for review section         
noproblem the doc is very well written its like a blueprint to the project really appreciate the team efforts
noproblem i understand what the team is supposed to do to the expertiza system
noproblem the team has included all the details required to implement the given requirement the wiki has complete details related to requirements analysis of current designs and changes required to achieve the required functionality overall great job    the team did a great work in analyzing the issues and designing solutions for the issues the ui mock ups are included for all the issues which makes the document very easy to understand      
noproblem drastic improvements have been made to design doc   
noproblem as far as the issues are concerned the solutions do seem logical      
noproblem the design looks good all the issues are stated and addressed nicely
noproblem yes the deisgn appears to be totally sound the changes proposed are very standardized and follows appropriate industry standards
noproblem the design is sound with appropriate principles and patterns
noproblem clearly explained with diagrams and uml diagrams
noproblem    the design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information    also they have been thorough in pointing out the application flow in the application flow section so as to elucidate the problem statement   
noproblem since the project is aimed at fixing the issues no design patterns need to be used
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done   
noproblem the design appears to be simple and straightforward to implement the team has also included all the changes that will be made to achieve the desired results    great work
noproblem it was weird that two of the bugs they were assigned don t exist but that s not the team s fault
noproblem the explanation of each of the issues in details is done very well but it does seem to be complicated unless files to be modified and solutions are read
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem the design is simple   
noproblem yes only a few files are being modified
noproblem yes the design is very simple lucid and efficient
noproblem the design does not seem that complex the team has clearly mentioned the issues and the way to go about it   
noproblem yes simple straightforward solutions
noproblem the visuals used are excellent but it would have been nice to not overwhelm the reader
noproblem great use of mock ups and uml diagrams it makes understanding the issues easier looks like a great amount of thought has gone into making it   
noproblem the visualization is great all the flow diagrams and required screenshots are in place as required
noproblem the visualization is by far the best part of this writeup also it s visualization is among the best i ve reviewed till date the author has put in a lot of efforts for the same the diagrams make the architecture and the problem statement very simple to understand
noproblem a lots of visuals very helpful when viewers walk through the design
noproblem great work by the team on uml diagrams   
noproblem yes the diagrams are clear to show how the system works they have even gone a step ahead to show how they have thought of resolving the problem at each and every step of the expertiza review section and the message popups they receive for the same   
noproblem this team consistently uses great diagrams that add to their documentation s clarity significantly
noproblem the team has included a lot of visual aids which complements the document making it a lot easier to understand    great work with the ui mockups project design uml diagrams
noproblem given uml diagram which   are explaining the functionality appropriately   but class diagram would have been better to explain the detail code level change  
noproblem there are some test plans in place and others will be done after the bugs are generated suggestions it would have been great to have screenshots of the test plans
noproblem make include more details for test plan other than that the wiki looks very good
noproblem as per the requirement document test cases are not required
noproblem yes they have a working test plan in mind and also they have thought of the ways in which they are going to test the various edge cases for the various issues at hand
noproblem the aspect of re producing the issues are very clearly mentioned and hence tests are written briefly which can be easily understood
noproblem the tests are really in depth for each issue the team will be fixing
noproblem yes the explanations   provided for changes to be made are clearly mentioned the authors are very clear what and where to make changes    use of flowchart makes reviewer to understand their approach more quickly and easily suggestion no test plan is included in the project
noproblem the authors have explained the changes in depth and with proper details
noproblem yes the author has explained the adequately the changes to be made to the system by giving a detailed flow diagram of the workflow of the the would be implementing the functionality of keeping a track of the review time of a student
noproblem yes the author has explained the scope of the project very clearly and has specified the changes to be made in the project to accomplish the goal
noproblem yes the changes are well explained
noproblem explained very well
noproblem yes
noproblem the design document was well written initially too and still is
noproblem the design follows the required principle and the exact required patterns
noproblem yes the design is quite well understood and properly explained in a detailed manner through the flow diagram
noproblem not so good structure   
noproblem the design seems pretty accurate the schema of the database table records all the necessary details with reasonable granularity
noproblem yes it does appear to be following appropriate principles
noproblem yes design appears to be sound
noproblem the design follows a clear approach to the functionality avoiding any uncertain flaws
noproblem yes the design is simple and detailed thus explaining the required changes that would be implemented
noproblem yes i think so
noproblem the design document is very simple and easy to read detailed explanation about the objective the proposed plan for each objective database schema and the user flow chart is defined clearly the team could have added crc cards to improve detailing about the code changes
noproblem it is clear and simple
noproblem yes it does they have given the proposed solution which   appears   to be simple
noproblem the design appears to be simple and is easy to understand
noproblem yes the database design and flowchart gives a clear picture what system will do after the required changes suggestion add before after changes screen mock ups to your document
noproblem the provided flowcharts are visually sufficient to display the changes made to the system
noproblem they have include a flow chart to illustrate how the part gonna work
noproblem great flowchart it helps to see all the possible scenarios in a compact manner
noproblem yes the given flowchart describes the sequence of events and how the application behaves in response to those events
noproblem the flow chart is good and aids in understanding better
noproblem great diagram    explains everything
noproblem clean flow chart
noproblem the test plan is provided in the functionality implementation describing the functionality and how it will be tested
noproblem no
noproblem cannot find test plan
noproblem the project does not have any testing involved
noproblem not included
noproblem no test plan provided
noproblem yes they look well written and easy to follow with all the visual aids
noproblem very well written document good job team
noproblem the doc is very well written its like a blueprint to the project really appreciate the team efforts
noproblem i understand what the team is supposed to do to the expertiza system
noproblem as far as the issues are concerned the solutions do seem logical      
noproblem the design looks good all the issues are stated and addressed nicely
noproblem yes the deisgn appears to be totally sound the changes proposed are very standardized and follows appropriate industry standards
noproblem the design is sound with appropriate principles and patterns
noproblem clearly explained with diagrams and uml diagrams
noproblem since the project is aimed at fixing the issues no design patterns need to be used
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done   
noproblem yes simple straightforward solutions
noproblem the design does not seem that complex the team has clearly mentioned the issues and the way to go about it   
noproblem yes the design is very simple lucid and efficient
noproblem yes only a few files are being modified
noproblem the design is simple   
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section   
noproblem it was weird that two of the bugs they were assigned don t exist but that s not the team s fault
noproblem the design appears to be simple and straightforward to implement the team has also included all the changes that will be made to achieve the desired results    great work
noproblem great use of mock ups and uml diagrams it makes understanding the issues easier looks like a great amount of thought has gone into making it   
noproblem the visualization is great all the flow diagrams and required screenshots are in place as required
noproblem the visualization is by far the best part of this writeup also it s visualization is among the best i ve reviewed till date the author has put in a lot of efforts for the same the diagrams make the architecture and the problem statement very simple to understand
noproblem a lots of visuals very helpful when viewers walk through the design
noproblem great work by the team on uml diagrams   
noproblem yes the diagrams are clear to show how the system works they have even gone a step ahead to show how they have thought of resolving the problem at each and every step of the expertiza review section and the message popups they receive for the same   
noproblem this team consistently uses great diagrams that add to their documentation s clarity significantly
noproblem the team has included a lot of visual aids which complements the document making it a lot easier to understand    great work with the ui mockups project design uml diagrams
noproblem given uml diagram which   are explaining the functionality appropriately   but class diagram would have been better to explain the detail code level change  
noproblem yes they have a working test plan in mind and also they have thought of the ways in which they are going to test the various edge cases for the various issues at hand
noproblem tests are given at a very high level and need to be described properly
noproblem the tests are really in depth for each issue the team will be fixing
noproblem while i m awaiting to receive the details which are pending on the implementation i feel the general nature of the changes is well explained   
noproblem yes the approach is explained in detail
noproblem yes the design is clear and the details are succinct
noproblem the authors have adequately mentioned the desired changes in the approach and design section the problem statement gives the gist of the issue at hand including adding feature to make student s reviews public the proposals specified are effective to deal with the issue by creating a new mvc framework
noproblem the overall design looks good    however the author can add more details about the design principles being followed and appropriate patterns to be used
noproblem yes design shows a good amount of work to be done team is not using any design pattern   
noproblem the design is proper
noproblem confronted with a tricky problem in creating links between different assignments across semesters to aggregate the reviews i was really impressed with the way they plan to accomplish this feature
noproblem i am not convinced with the similar_assignments table schema for an assignment ax there is a foreign key that points to an assignment ay such that ax can be an assignment in say 2018 and ay can be the same assignment in 2017 but what if one of the reviews from assignment az which was in 2015 was really good and we need to include that as a sample and also include another review from aw from 2016 as a sample    according my understanding this above requirement cannot be met with the current db table design something that the team may look into
noproblem the design and fixes are coherently described and are logical to be implemented for the given functionality the issues are stated properly allowing the reader to understand it and the fixes suggested are enlisted in an appropriate manner
noproblem simple design
noproblem the   steps taken by the team to implement the functionality is very clear and detailed as stated above the approach discusses the   step wise action that the team is going to take for the implementation
noproblem design doc is not complex and every section of the menu explains the itself with simplest term possible
noproblem the design is concised and clear only makes the required changes and introduces no duplications
noproblem for as difficult a problem as linking assignments from one year to the next is they present an admirably simple design
noproblem it is simple enough and also achieves the required features
noproblem the design   looks simplified but there might be some edge cases that needs handling such as what if a student makes his her review public this review is selected by the power user to create a sample and then the student wishes to make the review private
noproblem the design makes it clear to understand the procedure adapted to realize the goal the authors have made it a point to describe the tasks carried out in a simpler manner allowing the reader to realize the approach towards the issue   
noproblem the team has represented the workflow through the uml diagrams which is very helpful to understand the flow of the requirement with multiple actors involved in the system however it would have been more helpful if they could add the design flow diagrams to explain the database design changes they are suggesting to be done the new table they are suggesting to make and   the fields they would map to could be shown through a entity relationship diagram which will make it easy for the end user to understand the attributes and the relationship of different entities involved due to the functionality change
noproblem the team has not used any class diagram
noproblem some mock ui where this is going to be implemented would be helpful
noproblem i like the use case diagram but i would like class diagrams or a database visualization too so it s easier to understand how the cross course assignment linking will work
noproblem there is one box for both review controller and assignment controller a better picture of how they handle each event differently would have been helpful
noproblem no test cases
noproblem the test plan section properly describes the flow that needs to be followed by each actor involved in the process this could be enhanced either by providing a flow diagram or adding certain test case snippets for the scenarios
noproblem the flowcharts included in the design document clearly explain the changes that need to be done
noproblem the design document includes proper visualization it included appropriate flow charts and screenshots which made it easier to understand the design document and the project
noproblem they provide pictures of their sound waves
