problem inquiries and house interest lists should not belong to companies they belong to houses which belong to companies also a user should not have many companies this is possible with the database and model configuration otherwise the relationships were properly implemented
problem including basic understanding of the problem statement and work will help in manual testing
problem included a kind of mock ui lo fi diagram to shown how the uiwould like which is great
problem include testing plan if possible
problem inadequate information
problem inadequate information
problem in line css style tags inserted instead of linking external css file
problem in their test plan most of it is code without any explanation or cases
problem in their test plan most of it is code without any explanation or cases
problem in the wiki i really appreciated seeing the appropriate build statements next to the unit tests it helped connect what each test was testing in my mind
problem in the test plan section and on git also i found no test cases written there is testing done however it is not what was desired
problem in the problem statement section the first author should be reviewers i think
problem in the problem statement section the first author should be reviewers i think
problem in the first round which files were related to what issue was not mentioned however now they have edited the wiki to reflect the mentioned changes each file and its related functionality has been mentioned appreciated
problem in the first round which files were related to what issue was not mentioned however now they have edited the wiki to reflect the mentioned changes each file and its related functionality has been mentioned appreciated
problem in the first round the application was slightly performing better as compared to the final one the team may have had troubles while merging and unresolved conflicts lead to error pages for signups
problem in the first round the application was slightly performing better as compared to the final one the team may have had troubles while merging and unresolved conflicts lead to error pages for signups
problem in the first round the team had only created the two web idl  files namely offscreencanvas webidl and offscreencanvasrenderingcontext2d webidl which are the interface files which define the implementation in the corresponding files offscreencanvas rs and offscreenrenderingcontext2d rs in this round the team has implemented the functionalities described in the two web idl files in offscreencanvas rs and offscreenrenderingcontext2d rs the offscreencanvas rs interacts with the javascript and hence has the constructor with attributes height and width a method getcontext to return the reference to offscreencanvasrenderingcontext2d and a reflector object for garbage collection the offscreenrenderingcontext2d rs file does not interact directly with javascript and does not have a constructor or reflector object it has the code to build the offscreencanvas object   on inspection the variable and method names used in the code are intuitive but the main issue is that the name of the webidl file offscreencanvasrenderingcontext2d webidl and corresponding rust file offscreenrenderingcontext2d rs don t match the team could have formatted the code appropriately for readable indentation there are not many comments that give a high level description of the code instead there are some instances of unnecessary code that has been commented the code is indeed dry
problem in the due_date_color due_date instead of hardcoding the color vs interval it would have been more useful if those are pulled from a config file that will make the implementation more flexible   similar hardcoding found in 1 list_student_tasks per_page 10 2 breaking_word_wrap breaking_word_wrap student_task assignment name 40     use of inline css element could have avoided by using a simple css class such harcoded stuffs make the view strongly coupled with the style elements which could have been avoided hr style height 2px border none color e3e3e3 background color e3e3e3   also the ui changes are not showing up properly aligned please see the attached screenshot  
problem in the due_date_color due_date instead of hardcoding the color vs interval it would have been more useful if those are pulled from a config file that will make the implementation more flexible   similar hardcoding found in 1 list_student_tasks per_page 10 2 breaking_word_wrap breaking_word_wrap student_task assignment name 40     use of inline css element could have avoided by using a simple css class such harcoded stuffs make the view strongly coupled with the style elements which could have been avoided hr style height 2px border none color e3e3e3 background color e3e3e3   also the ui changes are not showing up properly aligned please see the attached screenshot  
problem in the due_date_color due_date instead of hardcoding the color vs interval it would have been more useful if those are pulled from a config file that will make the implementation more flexible   similar hardcoding found in 1 list_student_tasks per_page 10 2 breaking_word_wrap breaking_word_wrap student_task assignment name 40     use of inline css element could have avoided by using a simple css class such harcoded stuffs make the view strongly coupled with the style elements which could have been avoided hr style height 2px border none color e3e3e3 background color e3e3e3   also the ui changes are not showing up properly aligned please see the attached screenshot  
problem in the code  topic_id1 and drop_topic_deadline1 name doesn t seems to follow the ruby guide line and you should probably name them differently like first_topic_id and first_drop_topic_deadline
problem in the code  topic_id1 and drop_topic_deadline1 name doesn t seems to follow the ruby guide line and you should probably name them differently like first_topic_id and first_drop_topic_deadline
problem in test html erb you shoud not write code like this   user find_by id session user_id name
problem in my opinion they have included the application flow but where in expertiza they are implementing this logic seems to be missing they should include the same in round 2 when they have completed the implementation
problem in my opinion they have included the application flow but where in expertiza they are implementing this logic seems to be missing they should include the same in round 2 when they have completed the implementation
problem in my opinion inquiries should belong to a user one inquiry belongs to a user and one user has many inquiries
problem in my opinion inquiries should belong to a user one inquiry belongs to a user and one user has many inquiries
problem in general the problem seems to be easy but design states that  it involves whole new mvc setup which could translate to difficult implementation
problem in general the code of this system is in a clean and readable and written in the mvc way but there are some problems in the code for example in the realtor controller there is no method to handle the join action when a realtor wants to join in a new company and a realtor can not receive a inquires from hunter besides in the models folder i seems redundant to me role users and users_roles making reader easily confused
problem in general the code of this system is clean and readable but there are some problems in it for example author didn t handle the interest list properly when a realtor wants to see the potential buyers of a house it does not mean he wants to see all the hunters registered in the system besides the realtor can not edit his own profile can change real estate company because the edit method in the controller is not realized and in models some relationships shouldn t appear because one of the model is not created such as the model house_hunters which has many queries but the model query is not created  
problem in general the code of this system is clean and readable but there are some problems in it for example author didn t handle the interest list properly when a realtor wants to see the potential buyers of a house it does not mean he wants to see all the hunters registered in the system besides the realtor can not edit his own profile can change real estate company because the edit method in the controller is not realized and in models some relationships shouldn t appear because one of the model is not created such as the model house_hunters which has many queries but the model query is not created  
problem in general the code seemed to look fine there were some really long methods like in the users_controller class so i docked a star there was a separate method for adding to interest list
problem in due_date_color switch case would have been a better approach  then if else if block lots of code that is done in view  can be moved to the controller follow mvc architecture  
problem in due_date_color switch case would have been a better approach  then if else if block lots of code that is done in view  can be moved to the controller follow mvc architecture  
problem in documentation it mentions participant rb model file is changed to for increasing code coverage however the file is missing in the pull request generated there is no mention about changes in the assignment_participant rb file but that is present in the pull request it may be a name mismatch or some files are indeed missing i pointed it out during the first review but changes are not incorporated currently the code overall looks good proper variable names are used commenting is required
problem in documentation it mentions participant rb model file is changed to for increasing code coverage however the file is missing in the pull request generated there is no mention about changes in the assignment_participant rb file but that is present in the pull request it may be a name mismatch or some files are indeed missing i pointed it out during the first review but changes are not incorporated currently the code overall looks good proper variable names are used commenting is required
problem impressive write up flow charts and uml diagrams are well explained detailed explanation of problem statement and solution to be implemented
problem impossible to do since no submission or uploading of the image have been done for this project it is unclear how to decipher any meaningful data without the help of pull request as well  
problem implementation details are missing but the testing plan is ready  
problem implementation details are missing but the testing plan is ready  
problem implementation details are missing but the testing plan is ready  
problem implementation details are missing but the testing plan is ready  
problem image not showing with listed houses admin cannot view list of potential buyers house hunter also asked for company house hunter has the ability to add houses and list companies this should not happen
problem image not showing with listed houses admin cannot view list of potential buyers house hunter also asked for company house hunter has the ability to add houses and list companies this should not happen
problem im unable to signup as a house hunter or a realtor so the controllers for the same have not been tested a suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities
problem im unable to signup as a house hunter or a realtor so the controllers for the same have not been tested a suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities
problem im unable to signup as a house hunter or a realtor so the controllers for the same have not been tested a suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities
problem if they had presented a working deployment then rest everything was done so it could be deployed onto the production server
problem if they had presented a working deployment then rest everything was done so it could be deployed onto the production server
problem if they can write more test cases to test their code and make sure their code does not have bugs i think they can deploy their code onto server  
problem if it is deployed it is not made known
problem if it is deployed it is not made known
problem if company is delete the house will also disappear and the realtor need to find a new company but the readme does not cover edge cases
problem if as a realtor i am trying to update my profile where i only change my company to a random company  abc it is updating just fine which i believe should not be done because the company doesn t exist and is not even being added to the company list as a new company couldn t check any of the admin s functionality couldn t  sign up as a realtor
problem if admin tries to delete company corresponding houses gets deleted similarly association between inquiry  and other models handled well system goes into error when we try to create house without images though houses gets created multiple times realtors login team could probability add null check for empty references  
problem if a company is deleted the realtor and houses doesn t get deleted and if a house gets deleted the inquires are not getting deleted
problem i m unable to get a really good idea of exactly what was done here for this project other than that it can be used as a display and rendering port and that it improves fail safeness of browsers
problem i m essentially keeping my feedback the same there are places where i believe that better names could be used and smaller javascript methods could be used  
problem i m essentially keeping my feedback the same there are places where i believe that better names could be used and smaller javascript methods could be used  
problem i m essentially keeping my feedback the same there are places where i believe that better names could be used and smaller javascript methods could be used  
problem i m docking some points here because heroku doesn t appear to work i think some malicious reviewer deleted the admin and the real estate company and surprise if a company doesn t exist it doesn t let any user sign up     please re seed your database so i can test your app  
problem i m docking some points here because heroku doesn t appear to work i think some malicious reviewer deleted the admin and the real estate company and surprise if a company doesn t exist it doesn t let any user sign up     please re seed your database so i can test your app  
problem i m afraid there is still no test plan in the second round
problem i m afraid there is still no test plan in the second round
problem i m afraid the code is not well organized because the functions are not working properly
problem i m afraid that the build failed and there are code climate issues
problem i m afraid none of the three checks passed
problem i m afraid none of the three checks passed
problem i m afraid no test cases were added in round 2
problem i would the test section incomplete the authors have mentioned about 11 test cases thats all i think that is not at all sufficient also missing are unit tests if any and ui tests if any   i would have liked mention of more test cases both automated as well as ui tests that will ensure basic sanity to the system
problem i would the test section incomplete the authors have mentioned about 11 test cases thats all i think that is not at all sufficient also missing are unit tests if any and ui tests if any   i would have liked mention of more test cases both automated as well as ui tests that will ensure basic sanity to the system
problem i would the test section incomplete the authors have mentioned about 11 test cases thats all i think that is not at all sufficient also missing are unit tests if any and ui tests if any   i would have liked mention of more test cases both automated as well as ui tests that will ensure basic sanity to the system
problem i would only suggest you to add more comments to your code i know that no comments were previously added for you to feed off of but i guess a major aspect of these oss projects is to add as many comments as possible to the existing code
problem i would have liked to see more use of context in the tests and grouping of similar test methods in context    
problem i would appreciate a little more detail on bugs 1017 and 1072 which have a flow established but no code snippets
problem i wasn t able to login as admin using the credentials given in the readme file still edge cases are handled well
problem i was unable to sign up as a realtor and a house hunter with the same email
problem i was unable to sign up as a realtor and a house hunter with the same email
problem i was unable to sign up as a realtor and a house hunter with the same email
problem i was unable to judge if this works there was no way for me to determine that the admin can not delete companies can not view edit or delete realtors or househunters also users cannot delete themselves   further the third party admin gem or module  used does not let me edit or delete users or companies either it gives an error on heroku   thus i was unable to determine if the edge cases work also readme does not specify anything
problem i  was not provided a link so i cannot see if the ui is intuitive
problem i  was not provided a link so i cannot see if the ui is intuitive
problem i was able to understand what the project does to a certain extent the writeup could have been more eloborate with views snapshots of the page before and after the changes   it adequately indicated what functionality the work is related to
problem i was able to understand the changes they were making and why however i thought the write up was a little too verbose and had too much code i can find the code in their pr
problem i was able to understand the changes they were making and why however i thought the write up was a little too verbose and had too much code i can find the code in their pr
problem i was able to understand the changes they were making and why however i thought the write up was a little too verbose and had too much code i can find the code in their pr
problem i was able to post house without any data filled in form house got created successfully likewise for company phone number validation missing in sign up sort by sqft price and floors are failing going to error page applying price range filter and clicking once is giving expected result clicking on it again is resetting the filter could try to retain the applied filter on the html select option when i tried to view a non existent house manually by changing url example https calm forest 11598 herokuapp com house_lists 1000 i got the default ruby error screen the page you were looking for doesn t exist   could do a redirect to browse page https calm forest 11598 herokuapp com house_lists   tried to update an old inquiry got a new page that says invalid access as well as inquiry was successfully updated
problem i was able to post house without any data filled in form house got created successfully likewise for company phone number validation missing in sign up sort by sqft price and floors are failing going to error page applying price range filter and clicking once is giving expected result clicking on it again is resetting the filter could try to retain the applied filter on the html select option when i tried to view a non existent house manually by changing url example https calm forest 11598 herokuapp com house_lists 1000 i got the default ruby error screen the page you were looking for doesn t exist   could do a redirect to browse page https calm forest 11598 herokuapp com house_lists   tried to update an old inquiry got a new page that says invalid access as well as inquiry was successfully updated
problem i was able to post house without any data filled in form house got created successfully likewise for company phone number validation missing in sign up sort by sqft price and floors are failing going to error page applying price range filter and clicking once is giving expected result clicking on it again is resetting the filter could try to retain the applied filter on the html select option when i tried to view a non existent house manually by changing url example https calm forest 11598 herokuapp com house_lists 1000 i got the default ruby error screen the page you were looking for doesn t exist   could do a redirect to browse page https calm forest 11598 herokuapp com house_lists   tried to update an old inquiry got a new page that says invalid access as well as inquiry was successfully updated
problem i was able to create a new user with the username abc def although the changes made to the code seem to be sufficient to fix this the deployment does not seem to reflect the changes
problem i was able to create a new user with the username abc def although the changes made to the code seem to be sufficient to fix this the deployment does not seem to reflect the changes
problem i was able to check for the realtor and house hunter some of the functionality of a realtor and househunter weren t working
problem i was able to check for the realtor and house hunter some of the functionality of a realtor and househunter weren t working
problem i thought the write up was clear and had proper instructions and screenshots however the write up was not in the wikki but in a word file
problem i think you explained  the change they want to make clear but maybe  you can state which file you want to make and  how you guys want to change that file
problem i think you explained  the change they want to make clear but maybe  you can state which file you want to make and  how you guys want to change that file
problem i think work is still needed on this project all test cases are not able to pass so
problem i think work is still needed on this project all test cases are not able to pass so
problem i think we cannot add it to production because i feel  authorization for the newly added pages is required   once that is done it should be okay to add the code after further testing  
problem i think user experience and code readability are as imp as producing a working code so based on how urgent is the requirement for this functionality i would prioritize refactoring the notices and display messages to more appropriately indicate what action was taken when we try to add a participant to the assignment or import using a csv file secondly improving the comments as explained with an example in the first question
problem i think this team did not correctly implement several database relationships   for instance a house does not have many users it has a single realtor the realtor who posted it and it might have many interested users potential buyers but that should have been via a through relationship another example is inquiries an inquiry has one user for one house not many users and many houses
problem i think this team did not correctly implement several database relationships   for instance a house does not have many users it has a single realtor the realtor who posted it and it might have many interested users potential buyers but that should have been via a through relationship another example is inquiries an inquiry has one user for one house not many users and many houses
problem i think they have simply copied the text from the requirements document presented by the professor the page is not well documented
problem i think their introduction and issue sections clearly shows what  functionality the work is related to they also add some screenshots which help me understand what they have done but i can not understand what is bookmark and what it is used for i think it is difficult for someone like me who have not used bookmark to understand these with only a short description if they can write something more about bookmarks it will be better  
problem i think their introduction and issue sections clearly shows what  functionality the work is related to they also add some screenshots which help me understand what they have done but i can not understand what is bookmark and what it is used for i think it is difficult for someone like me who have not used bookmark to understand these with only a short description if they can write something more about bookmarks it will be better  
problem i think their introduction and issue sections clearly shows what  functionality the work is related to they also add some screenshots which help me understand what they have done but i can not understand what is bookmark and what it is used for i think it is difficult for someone like me who have not used bookmark to understand these with only a short description if they can write something more about bookmarks it will be better  
problem i think their designs look complicated and there might be existing gems that can be simplified
problem i think their designs look complicated and there might be existing gems that can be simplified
problem i think the writing could be done better with more explanation on why the solutions mentioned in the last paragraph are taken and what other approaches were considered or an explanation of why no alternative exists with regard to design explained in detail in a previous comment
problem i think the uml diagram can be improved further by adding the classes that are related to the use cases separately  
problem i think the uml diagram can be improved further by adding the classes that are related to the use cases separately  
problem i think the testing plan is missing others are good
problem i think the project looks pretty close to be merge ready and with a small amount of work on the coding styles and making sure all the pr checks pass the code can be deployed on the production server it might however require some rigorous  testing before getting merged
problem i think the project looks pretty close to be merge ready and with a small amount of work on the coding styles and making sure all the pr checks pass the code can be deployed on the production server it might however require some rigorous  testing before getting merged
problem i think the files that the authors plan to modify seems to be quite appropriate as to the smell of the code that can be ascertained only when they have started writing the code so far though the design seems sound there have however been no mention of the existence of any gems i think the authors should explore that avenue as well as that would probably simplify their task for example i found the gem sentimental that categorizes the phrases into positive negative and neutral i think this is something the authors can look into
problem i think the files that the authors plan to modify seems to be quite appropriate as to the smell of the code that can be ascertained only when they have started writing the code so far though the design seems sound there have however been no mention of the existence of any gems i think the authors should explore that avenue as well as that would probably simplify their task for example i found the gem sentimental that categorizes the phrases into positive negative and neutral i think this is something the authors can look into
problem i think the files that the authors plan to modify seems to be quite appropriate as to the smell of the code that can be ascertained only when they have started writing the code so far though the design seems sound there have however been no mention of the existence of any gems i think the authors should explore that avenue as well as that would probably simplify their task for example i found the gem sentimental that categorizes the phrases into positive negative and neutral i think this is something the authors can look into
problem i think the diagrams shown include where you intend to add the metrics but not how all the metrics will be incorporated in the next phase make sure to include details for each of these total number of commits number of files changed lines of code added lines of code modified lines of code deleted locs that survived until final submission exclude from mvp due to the complexity and lower priority
problem i think the diagrams shown include where you intend to add the metrics but not how all the metrics will be incorporated in the next phase make sure to include details for each of these total number of commits number of files changed lines of code added lines of code modified lines of code deleted locs that survived until final submission exclude from mvp due to the complexity and lower priority
problem i think the diagrams shown include where you intend to add the metrics but not how all the metrics will be incorporated in the next phase make sure to include details for each of these total number of commits number of files changed lines of code added lines of code modified lines of code deleted locs that survived until final submission exclude from mvp due to the complexity and lower priority
problem i think the design perfectly captures the view part they have also incorporated the db  related changes after the first review however there is still room for improvement in terms of depth of details provided in the doc
problem i think the design perfectly captures the view part however it looks a bit high level i think more low level and model related details can be added for e g what design pattern would be used the tables that will be affected  
problem i think the code need some amount of refactoring before it can be merged with the expertiza master and pushed to production some of the functions implemented by the team seem quite long and they should try and restrict the functionality implemented in each function to just one
problem i think the code need some amount of refactoring before it can be merged with the expertiza master and pushed to production some of the functions implemented by the team seem quite long and they should try and restrict the functionality implemented in each function to just one
problem i think that they need to fix some things that are mentioned by travis ci once they do that they are good to go
problem i think that they need to fix some things that are mentioned by travis ci once they do that they are good to go
problem i think that there is a huge scope for test plan improvisation the current test plan is just a step by step procedure to test if the reviewer receives a mail fir conflicting reviews the test plan should also include test cases to test whether the link is present in the email notification also is the link correct and navigable the test plan should also cover the pits where the functionality may fail so as to ensure smooth functioning of the system
problem i think that there is a huge scope for test plan improvisation the current test plan is just a step by step procedure to test if the reviewer receives a mail fir conflicting reviews the test plan should also include test cases to test whether the link is present in the email notification also is the link correct and navigable the test plan should also cover the pits where the functionality may fail so as to ensure smooth functioning of the system
problem i think that there is a huge scope for test plan improvisation the current test plan is just a step by step procedure to test if the reviewer receives a mail fir conflicting reviews the test plan should also include test cases to test whether the link is present in the email notification also is the link correct and navigable the test plan should also cover the pits where the functionality may fail so as to ensure smooth functioning of the system
problem i think that there is a huge scope for test plan improvisation the current test plan is just a step by step procedure to test if the reviewer receives a mail fir conflicting reviews the test plan should also include test cases to test whether the link is present in the email notification also is the link correct and navigable the test plan should also cover the pits where the functionality may fail so as to ensure smooth functioning of the system
problem i think that the team has done a great work for the future team to pick up they can improve it by adding comments for newly defined functions although the pull request build has not passed after fixing the conflicts the new team can readily work ahead on the remaining issues
problem i think that the authors have identified changes in the html erb files which looks right to me as it only deals with the sorted view of instructor reports the changes must go in the views part of the application   suggestion you can try to add a bit of information on whether your changes include addition of new code deletion of existing code or just slightly modifying or extending the existing code and justify it query do you plan on creating  a drop down like option to choose from which type of sorting is to be performed if yes it is an add on user friendly feature
problem i think that the authors have identified changes in the html erb files which looks right to me as it only deals with the sorted view of instructor reports the changes must go in the views part of the application   suggestion you can try to add a bit of information on whether your changes include addition of new code deletion of existing code or just slightly modifying or extending the existing code and justify it query do you plan on creating  a drop down like option to choose from which type of sorting is to be performed if yes it is an add on user friendly feature
problem i think technical design lacks details the section should be more detailed on how this internationalization will work where will the string be kept what are the effective changes required across the project test plan should have more tests  
problem i think technical design lacks details the section should be more detailed on how this internationalization will work where will the string be kept what are the effective changes required across the project test plan should have more tests  
problem i think technical design lacks details the section should be more detailed on how this internationalization will work where will the string be kept what are the effective changes required across the project test plan should have more tests  
problem i think overall it looks good however a bit more low level details may give better insight about such issues
problem i think more tests can be added
problem i think more effort should be expended on the design the addition of mvc suggested in the solution is vaguely explained  
problem i think it does pretty well to follow the  good ruby and rails coding practices it is elegant and follows the dry code approach
problem i suggest the testing plan be improved in place of giving steps on how a reviewer should test the project the team should instead list how they wish to write tests for the functionality added the rspec could be something like expect page to have_content sorted
problem i suggest the testing plan be improved in place of giving steps on how a reviewer should test the project the team should instead list how they wish to write tests for the functionality added the rspec could be something like expect page to have_content sorted
problem i still was not provided a link to a deployed application i re read the readme as carefully as a i could but could not find one
problem i still was not provided a link to a deployed application i re read the readme as carefully as a i could but could not find one
problem i still see some lint issues and commented out code the code looked fairly dry and compliant with standard ruby style and looks that way still
problem i see test cases properly defined but the test plan is missing
problem i see really less commits in the second round the last commit was on 31st october it would have been really nice if they have worked on the project further to enhance the work they have done
problem i see only one commit on nov 2nd   the project was in good working condition during the first review itself and they did fix the minor bugs in the commit
problem i see only 1 contributor also only once the commit was made
problem i see only 1 contributor also only once the commit was made
problem i see commits only on a single day
problem i see commits only on a single day
problem i saw a lot of places were instance variables were used when the didn t need to be ie using var instead of just var in methods i think naming seemed appropriate  were i looked this team made good use of helper functions and classes though there were some rather large functions in those classes i saw a lot of complicated views which to indicates lack of separation of concerns   i would recommend  being more diligent  about the scope of variables and continue trying to push concerns responsibilities to isolated classes and methods
problem i saw a lot of places were instance variables were used when the didn t need to be ie using var instead of just var in methods i think naming seemed appropriate  were i looked this team made good use of helper functions and classes though there were some rather large functions in those classes i saw a lot of complicated views which to indicates lack of separation of concerns   i would recommend  being more diligent  about the scope of variables and continue trying to push concerns responsibilities to isolated classes and methods
problem i really appreciate the organization of your code everything is grouped in appropriate folders and easy to navigate i also like how most of your code is indexed and spaced great readability functions are clearly written to handle exactly what the name indicates there are a few places where the continuation of parameters should be realigned examples company_params in companies controller and format of website in company model overall great use of ruby styling standards
problem i really appreciate the organization of your code everything is grouped in appropriate folders and easy to navigate i also like how most of your code is indexed and spaced great readability functions are clearly written to handle exactly what the name indicates there are a few places where the continuation of parameters should be realigned examples company_params in companies controller and format of website in company model overall great use of ruby styling standards
problem i noticed they did generate tests for some controllers but not enough no tests for models  
problem i noticed they did generate tests for some controllers but not enough no tests for models  
problem i noticed they did generate tests for some controllers but not enough no tests for models  
problem i meant to leave this blank kindly ignore the rating for this question as this project does not require any tests all the changes made are css related
problem i looked through their github commits log and found that their first commit is on  sep 28 2018 maybe their just began to do the project on  sep 28
problem i looked through their github commits log and found that their first commit is on oct 1 2018 maybe their just began to do the project on oct 1
problem i looked through their github commits log and found that their first commit is on oct 1 2018 maybe their just began to do the project on oct 1
problem i looked through all the files in the test folder and don t see any tests filled in they seem to only be the pre filled skeleton
problem i looked through all the files in the test folder and don t see any tests filled in they seem to only be the pre filled skeleton
problem i liked that instead of stating all the problems at once and then stating their solutions the design doc tackles in one at a time still there wsa no visual aid provided for the project
problem i just see commits done on last few days by most teammates
problem i have not been supplied with a link to manually use an instance with their changes and i have not been able to find a link in their pr or write up
problem i have not been supplied with a link to manually use an instance with their changes and i have not been able to find a link in their pr or write up
problem i have no idea how to test the code manually
problem i have been unable to test the users work manually as expertiza  does not allow me to send a mail to my existing mail id i have also tried adding a new student to the assignment which was not possible i got an error stating the student does not exist and all existing students have the mail id   expertiza mailinator com which cannot be accessed to verify
problem i have been unable to test the users work manually as expertiza  does not allow me to send a mail to my existing mail id i have also tried adding a new student to the assignment which was not possible i got an error stating the student does not exist and all existing students have the mail id   expertiza mailinator com which cannot be accessed to verify
problem i had suggested changing the ambiguous or bad variable like temp temp1 these changes have been incorporated however comments missing adding these will improve the readability of the code and make it easy to refactor at a later stage as per requirements
problem i found the write up to be same there is more scope to improve it with more explanation and test cases specially the links to the refactored codes could be added for the other teams to know
problem i found the write up to be same there is more scope to improve it with more explanation and test cases specially the links to the refactored codes could be added for the other teams to know
problem i found many commits related to the code climate fixes   no suggestions
problem i find the information and solutions provided inadequate as they fail to explain me the solution also missing diagrams
problem i find the information and solutions provided inadequate as they fail to explain me the solution also missing diagrams
problem i find few changing records from github but i can t show the process of development
problem i find few changing records from github but i can t show the process of development
problem i felt there was just too much overlap and with the doc from previous year   2017 project  even if the current project is to extend a previous one the documents aren t supposed to be copied almost word to word the only major addition i see is the last section none of the diagram correlate to the new changes being made they are contextual to the older project testing plan is missing from the document from what i know even the development projects need that section even when the older document was used no references have been provided for it
problem i felt there was just too much overlap and with the doc from previous year   2017 project  even if the current project is to extend a previous one the documents aren t supposed to be copied almost word to word the only major addition i see is the last section none of the diagram correlate to the new changes being made they are contextual to the older project testing plan is missing from the document from what i know even the development projects need that section even when the older document was used no references have been provided for it
problem i felt there was just too much overlap and with the doc from previous year   2017 project  even if the current project is to extend a previous one the documents aren t supposed to be copied almost word to word the only major addition i see is the last section none of the diagram correlate to the new changes being made they are contextual to the older project testing plan is missing from the document from what i know even the development projects need that section even when the older document was used no references have been provided for it
problem i felt there was a need of adding more explanation add uml diagram so that it is easily  understood
problem i felt the section conditions tested in menu could have been more verbose
problem i feel you guys should add a few comments for a third person to follow
problem i feel there are more number of test cases that need to be covered before deploying this in prod
problem i feel the user model is well tested the link to houses broke through realtor role on heroku this might just be a production issue and might work well locally in the development environment i recommend checking the heroku logs and fixing this error due to this error i could not create any house for listing overall i feel it is a good job and you have managed to implement most of the functionalities one suggestion would be 1           when i try to sign up as a user i have to fill up the role type this is not intuitive for a user as the user does not know what kinds of roles and their format case sensitivity data type etc expected by your system i would suggest either give a drop down for this or checkboxes which will be easy for a user to use
problem i feel the user model is well tested the link to houses broke through realtor role on heroku this might just be a production issue and might work well locally in the development environment i recommend checking the heroku logs and fixing this error due to this error i could not create any house for listing overall i feel it is a good job and you have managed to implement most of the functionalities one suggestion would be 1           when i try to sign up as a user i have to fill up the role type this is not intuitive for a user as the user does not know what kinds of roles and their format case sensitivity data type etc expected by your system i would suggest either give a drop down for this or checkboxes which will be easy for a user to use
problem i feel the test plan should be more descriptive while also covering a few edge cases
problem i feel the test plan should be more descriptive while also covering a few edge cases
problem i feel the test plan should be more descriptive while also covering a few edge cases
problem i feel the test plan should be more descriptive while also covering a few edge cases
problem i feel the diagram is more complex team could have gone with some usecase uml crc diagrams
problem i feel the diagram is more complex team could have gone with some usecase uml crc diagrams
problem i feel the diagram is more complex team could have gone with some usecase uml crc diagrams
problem i feel the diagram is more complex team could have gone with some usecase uml crc diagrams
problem i feel that they have achieved a 100 test coverage although the design principles or patterns used haven t been listed listing that would help understand the testing strategy used
problem i feel that they have achieved a 100 test coverage although the design principles or patterns used haven t been listed listing that would help understand the testing strategy used
problem i feel that the writeup was incomplete and none of the code changes made have been explained it is difficult to see what approach they took
problem i feel that the test section is in adequate the users have only listed 3 scenarios with no details on how to implement that also missing are detailed steps on how to execute the tests if required
problem i feel that the test section is in adequate the users have only listed 3 scenarios with no details on how to implement that also missing are detailed steps on how to execute the tests if required
problem i feel that the test section is in adequate the users have only listed 3 scenarios with no details on how to implement that also missing are detailed steps on how to execute the tests if required
problem i feel that the project could cover more test cases which would have explained the functionality better the sql that has been mentioned could have no results as well so covering negative results would have been better
problem i feel that the project could cover more test cases which would have explained the functionality better the sql that has been mentioned could have no results as well so covering negative results would have been better
problem i feel that the code from line 64 to 76 could have been written in a separate function to avoid making the function  submit_hyperlink from becoming so large   additionally the functionality inside the function  review_reminder_email could have been separated into 2 different functions
problem i feel some comments can be added before every function for the code to be understood better
problem i feel some comments can be added before every function for the code to be understood better
problem i feel confident if the travis ci integration issues are addressed then it can be deployed in the production server
problem i feel confident if the travis ci integration issues are addressed then it can be deployed in the production server
problem i feel confident if the travis ci integration issues are addressed then it can be deployed in the production server
problem i dont seem many commits for round 2 but yes the video has been added for explanation also the wiki is pretty well explained with the code
problem i don t think this project is the type that would be deployed on a production server   and i can t say it s ready to be added because every thing in the pull failed on github
problem i don t think this project is the type that would be deployed on a production server   and i can t say it s ready to be added because every thing in the pull failed on github
problem i don t think this code is ready to be deployed due to the fact that i can t actually examine the functionality nor can i see the actual repository this project was written in
problem i don t think they need any visual aids
problem i don t think the test part of this website is working
problem i don t think the test part of this website is working
problem i don t think the test has been finished the controller test file is basic empty and the same empty in the model test file
problem i don t think the authors plan to add methods to the wrong class they are modifying the right files the new design does not appear to potentially make the code smelly but for few issues you haven t added any files which you ll be modifying only the uml is given you can add them before the final submission
problem i don t think the authors plan to add methods to a wrong class they seem to be working on the right class namely review and its associated view page review html erb that exactly pertains to their project the response time might potentially increase with this new feature but fortunately the team has proposed to work on optimizing the suggestion algorithm so that it does not take forever to execute the team has done a good job on the design documentation
problem i don t think anything is missing from their document but it is in general lite i would prefer a few more details on how they plan to limit reviews from being viewed until a self review is complete or  which places they plan on making changes  
problem i don t think anything is missing from their document but it is in general lite i would prefer a few more details on how they plan to limit reviews from being viewed until a self review is complete or  which places they plan on making changes  
problem i don t see the git link to comment on this requesting the team to upload the git link and deployment url in expertiza instead of the project folders  
problem i don t see the git link to comment on this requesting the team to upload the git link and deployment url in expertiza instead of the project folders
problem i don t see the git link here requesting to upload the git link and deployment url in expertiza instead of the project folders
problem i don t see the deployment url to comment on this and rest other ui questions requesting to upload the git link and deployment url in expertiza instead of the project folders
problem i don t see tests for the logout button on the menu
problem i don t see new code being committed
problem i don t see new code being committed
problem i don t see any tests in this project
problem i don t see any tests added by this team although they do mention that their code additions were not particularly testable except with the existing automatic tests which they enabled
problem i don t see any test plans
problem i don t see any test cases added the overall coverage has decreased by 2 99 to 33 88  
problem i don t see any new tests
problem i don t see any new tests
problem i don t see any new tests
problem i don t see any code changes after the first round
problem i don t exactly understand how the waveforms help to produce the sound for the new browser they re adding support for but other than that their approach seems solid
problem i don not think their code is good because they did not solve the problems existing in the first round
problem i don not think their code is good because they did not solve the problems existing in the first round
problem i don not think it s good because they just paste most of their code on the writeup
problem i do not think the code should be deployed the test cases are not yet written and there are a few code climate issues due to the lack of test cases the travis ci build has also failed   suggestion once they are resolved the code can be deployed there is one remaining issue but that could be done in the next iteration  
problem i do not think that the design will increase the response time of the system the team also has mentioned about the api that they will use enough efforts have been taken to convey what is to be done and how the team will do it   suggestions no information about the methods that will be implemented has been given in the design document availability of such info would have been helpful
problem i do not think that the design will increase the response time of the system the team also has mentioned about the api that they will use enough efforts have been taken to convey what is to be done and how the team will do it   suggestions no information about the methods that will be implemented has been given in the design document availability of such info would have been helpful
problem i do not think that the design will increase the response time of the system suggestion i did not find any details regarding about any methods that will be used to implement the functionality that would have been useful the test plan does mention    viewsuggestionmetricsforreviewsegment though if this is the method name then it does not follow snake casing  
problem i do not think that the design will increase the response time of the system suggestion i did not find any details regarding about any methods that will be used to implement the functionality that would have been useful the test plan does mention    viewsuggestionmetricsforreviewsegment though if this is the method name then it does not follow snake casing  
problem i do not see the link in the readme file for the deployment in the cloud
problem i do not see the link in the readme file for the deployment in the cloud
problem i do not see any test plan in the writeup
problem i do not see any new commit after 5th november in my opinion some of the tests could be made more articulate in round 2
problem i do not see any new commit after 5th november in my opinion some of the tests could be made more articulate in round 2
problem i do not see any changes made to the spec folder in this repo so it would appear no tests have been written
problem i do believe the code could be deployed after a bit of refactoring is done as suggested by the code climate tests but overall looking at only the functionality of the code it is ready to be deployed
problem i didn t see any mapping done between tables for example   the company realtor relationship isn t shown 1 to n
problem i didn t  find any testing done for model or controller nor anything was mentioned in the readme
problem i didn t find any information about how and why they did the work they only show me what are the issues and the results after they fixed these issues for example in problem 2 they told me their is an average rating metric  bug and they fixed the bug but they said nothing about how they fixed the bug
problem i didn t find any information about how and why they did the work they only show me what are the issues and the results after they fixed these issues for example in problem 2 they told me their is an average rating metric  bug and they fixed the bug but they said nothing about how they fixed the bug
problem i didn t find any information about how and why they did the work they only show me what are the issues and the results after they fixed these issues for example in problem 2 they told me their is an average rating metric  bug and they fixed the bug but they said nothing about how they fixed the bug
problem i did not understand why is it necessary to prohibit spaces in usernames i believe the code could have been modified to work with spaces as well
problem i did not understand why is it necessary to prohibit spaces in usernames i believe the code could have been modified to work with spaces as well
problem i did not see pull request
problem i did not see pull request
problem i did not see a test plan per se but they did include examples of the scenarios there code was solving
problem i did not see a test plan per se but they did include examples of the scenarios there code was solving
problem i did not see a test plan per se but they did include examples of the scenarios there code was solving
problem i did not find the test plan in the documentation however there were details mentioned about the tests that the team wrote one test related to the issue has been written in the assignment_participant_spec file the test works works properly i feel that the test plan should have been explicitly mentioned in the documentation  
problem i did not find any test plan in the documentation
problem i dd not find the link i viewed the code on github it seems work  
problem i couldn t login to the deployed website since there were no credentials which i could use perhaps the wiki page should have included the credentials for logging into the deployed website however from the screenshots it seems that the functionality works
problem i couldn t log in using the admin credentials rest worked fine for me couldn t add houses in my interest list as a house hunter
problem i couldn t get it to build but because rails repeatedly failed to find the config yml i don t think this is your fault
problem i couldn t find any test method  other than the one in the sessions_controller_test class
problem i could understand what the project does however there are fewer examples of the test
problem i could understand what the project does however there are fewer examples of the test
problem i could think of 1 missing test case where an assignment due date changes from future to past that assignment should now appear in the past assignment section   apart from this test case all edge cases have been covered
problem i could think of 1 missing test case where an assignment due date changes from future to past that assignment should now appear in the past assignment section   apart from this test case all edge cases have been covered
problem i could think of 1 missing test case where an assignment due date changes from future to past that assignment should now appear in the past assignment section   apart from this test case all edge cases have been covered
problem i could see testing done i could see extra test cases added
problem i could see only one person s commits each team member  needs to contribute to git
problem i could see only one person s commits each team member  needs to contribute to git
problem i could see commits by only one person need team contribution
problem i could see commits by only one person need team contribution
problem i could see commit performed by only single team member 1 functions are not too long or repeatative 2 no code needs to be extracted as a new function 3 yes team need to add more comments 4 team does follow ruby style guide 5 team understood rails and followed dry principle well  
problem i could see commit performed by only single team member 1 functions are not too long or repeatative 2 no code needs to be extracted as a new function 3 yes team need to add more comments 4 team does follow ruby style guide 5 team understood rails and followed dry principle well  
problem i could only see 3 commits with no significant file changes i would request team to add and contribute the changes as soon as possible with the present changed code methods names and variables and class names are proper with reasonable naming conventions
problem i could only see 3 commits with no significant file changes i would request team to add and contribute the changes as soon as possible with the present changed code methods names and variables and class names are proper with reasonable naming conventions
problem i could only see 3 commits with no significant file changes i would request team to add and contribute the changes as soon as possible with the present changed code methods names and variables and class names are proper with reasonable naming conventions
problem i could only check househunter  ui since i could not find admin and realtor code on github  either i believe you are yet to implement the functionality   the ui i viewed was easy to use further site is responsive and incorporates several new features like requiring password for editing the profile i guess that was work of a gem but either way good work
problem i could not see the list of test cases
problem i could not see the list of test cases
problem i could not see any mention of test cases in the wiki or github team could add mention test cases surrounding the change that lead to checking the changes in this merge
problem i could not run it locally and hence i am not sure about the edge cases code looks clean and should not break in most of the cases
problem i could not login as an admin using the user password combination mentioned in readme
problem i could not login as admin using username password combination provided in readme so edge cases could not be tested
problem i could not login as admin using username password combination provided in readme so edge cases could not be tested
problem i could not get a deployment link or watch a video that demonstrates the work done so i m unable to test
problem i could not get a deployment link or watch a video that demonstrates the work done so i m unable to test
problem i could not find the filters tab in the show houses section for the house hunter rest everything looks great
problem i could not find the filters tab in the show houses section for the house hunter rest everything looks great
problem i could not find any test plan or documentation and hence could not verify whether the tests have passed or no tests for checking for duplicate directories due to assignments having same names is missing
problem i could not find any file in which tests have been implemented and neither is the file mentioned in readme  
problem i could not find admin credentials in read me file  rest of the interface is good
problem i could not find admin credentials in read me file  rest of the interface is good
problem i could not figure out how to test the code i could not make an account for myself because expertiza is not set up that way there were no setup instructions in the writeup for testing the emailing capabilities
problem i could not figure out how to test the code i could not make an account for myself because expertiza is not set up that way there were no setup instructions in the writeup for testing the emailing capabilities
problem i could not check if most of the edge cases work all the ways i tried doing this failed admin cannot destroy most  of the users admin cannot view edit destroy realtors admin was unable to destroy househunter account i created it was also registered as a realtor acc   when i destroyed the company associated houses were also destroyed and their associated inquiries and replies were deleted so that edge case has been taken care of   i believe that maybe all the cases are taken care of but i could nopt  test them as their dependent functionalities are not working
problem i could neither test it manually nor there were any videos to check the functionality
problem i could neither test it manually nor there were any videos to check the functionality
problem i coud see only few builds passed the travis cl there are many builds that are failing and should be worked on
problem i cannot get access to the interface and the readme is not provided they should provide a readme file later to state how can i test the project
problem i cannot get access to the interface and the readme is not provided they should provide a readme file later to state how can i test the project
problem i cannot find the test plan
problem i cannot find the test plan
problem i cannot find the code
problem i cannot find test plan
problem i cannot find test plan
problem i cannot find test plan
problem i cannot find test plan
problem i cannot find test plan
problem i cannot find any project purpose but they did provide a lot of solutions to problems
problem i cannot find any new test cases
problem i cannot find any new test cases
problem i cannot create any hunter or realtor accounts
problem i cannot create any hunter or realtor accounts
problem i cannot appraise this because  i do not believe they did their development in the linked repo there is only one commit where all the functionality was added i am inclined to say the team was not actively developing over the project period
problem i cannot access the link provided by the team since this is hosted on aws i believe they have not opened the ip to public by mistake i have worked with aws before and this happens maybe they worked from library or their house and when you spawn an instance in aws it adds the ip from where the instance is spawned to the access list which is why i am not able to access this from my ip this can also be a problem with the proxy server setup in the instance and since you guys are maybe doing ssh into the server to deploy your code the default http request will go to port 80 and wont be forwarded to 8080 unless explicitly specified in apache nginx and will block the requests easier way would be to host the app on heroku which handles all this automatically and provides you with a dns entry
problem i can t say about this since i tried to login with the credentials mentioned in their wiki student5408 password and i couldn t however looking at their screenshots it seems that the ui looks good to go
problem i can t really tell how to navigate to this portion of the project in the application the writeup is not descriptive enough for me to know where to go to test it
problem i can t really tell how to navigate to this portion of the project in the application the writeup is not descriptive enough for me to know where to go to test it
problem i can t find any explanation for principles and patterns maybe the authors should add them to wiki
problem i can t find any explanation for principles and patterns maybe the authors should add them to wiki
problem i can t examine the code because a link to the repository is not actually given in the project and when i navigate to their repository i can t figure out which branch is the correct one however from the details of the writeup it seems as though the code is well written
problem i can t create a house with no basement as a realtor it also deleted my image after i uploaded it in this case before it redirected me to the new page with error information also potential buyers are listed twice i m assuming because they liked the house and submitted an inquiry to the realtor associated with it  
problem i can t create a house with no basement as a realtor it also deleted my image after i uploaded it in this case before it redirected me to the new page with error information also potential buyers are listed twice i m assuming because they liked the house and submitted an inquiry to the realtor associated with it  
problem i can t actually see this team s repository because they linked the expertiza expertiza pull request but it doesn t look like new code was committed in the second round
problem i can understand what the project does i cannot however understand how the project does what it does the code is not explained at all
problem i can understand what the project does i cannot however understand how the project does what it does the code is not explained at all
problem i can see that there are multiple commits on a single day this might imply that team members have worked remotely without using git suggestions 1 make complete use of git when working remotely 2 keep pushing changes periodically to avoid any code loss and to have a timeline of changes 3   commit message carries great importance for the first level of code change analysis so this has to explain the changes to a decent extent commit messages in this repository is vague if they are meaningful it reduces some effort in analysing the code timeline
problem i can not see the completed devolepment procedure the only commit in the github is happend on monday the week of 9 30
problem i can not see any test plan section in the writeup
problem i can not see any link to test changes as well as no video to watch the changes team could have shared implemented part to test and review
problem i can not see any link to test changes as well as no video to watch the changes team could have shared implemented part to test and review
problem i can not see any link to test changes as well as no video to watch the changes team could have shared implemented part to test and review
problem i can not find the test plan
problem i can not find the test plan
problem i can guess the array quesparams means question  parameters but this variable name is confusing i think they should use question_param instead  
problem i can find where is the bookmarks page but according to their screenshots i think their features work well
problem i can create a company but i cannot join it as a realtor if i already joined a company without re clikcing the realtor checkbox on the edit profile page
problem i can create a company but i cannot join it as a realtor if i already joined a company without re clikcing the realtor checkbox on the edit profile page
problem i believe this change that affects the system as a whole needs more test to be performed in all affected tables and functions to be sure no other part of the system is broken my opinion is that once all parts of the system test is done corresponding to this centralized db change the code can be deployed to production
problem i believe the wiki is not complete however the content that is included so far does aid in the explanation of the project purpose more elaboration and completion of additional sections such as the testing design and implementation of tests will help to fully clarify the project purpose to the reader
problem i believe the wiki is not complete however the content that is included so far does aid in the explanation of the project purpose more elaboration and completion of additional sections such as the testing design and implementation of tests will help to fully clarify the project purpose to the reader
problem i believe that code as it stands is not ready to be deployed more comments are needed and the code is hard to understand so even though the changes are small one might need to see id the changes can be simplified i believe testing can be more thorough too  
problem i believe more effort should be expended on the design currently it is still not so comprehensive a lot of details can be added in terms of how each file should be modified and how the sorting will be implemented
problem i believe more effort should be expended on the design currently it is still not so comprehensive a lot of details can be added in terms of how each file should be modified and how the sorting will be implemented
problem i believe more effort should be expended on the design currently it is still not so comprehensive a lot of details can be added in terms of how each file should be modified and how the sorting will be implemented
problem i believe a lot more effort should be expeneded  on the design as being addressed above there are a lot of questions that are not addressed at all in this document the formatting is not nice either  
problem i appreciate the thought of using delegation pattern more details on this would have been helpful also why was delegation pattern selected in particular  
problem i am unable to view real estate companies from the admin account
problem i am unable to test any edge cases as logging into the system as any type of a user is not implemented
problem i am unable to signup so could not login and check for functionalities but ui is improved a lot and the confusing sign up page in round 1 is fixed
problem i am unable to signup so could not login and check for functionalities but ui is improved a lot and the confusing sign up page in round 1 is fixed
problem i am unable to sign up i am getting the following error   we re sorry but something went wrong if you are the application owner check the logs for more information therefore i am unable to test any of the features
problem i am unable to sign up i am getting the following error   we re sorry but something went wrong if you are the application owner check the logs for more information therefore i am unable to test any of the features
problem i am unable to log in as admin  with credentials that are  provided in readme   search houses functionality for house hunter is missing inquiries are not added to the system and page that is supposed to display all the inquiries  is not working
problem i am unable to go back to dashboard hence i am unable to test the functionalities of house hunter   the back button is a major problem
problem i am unable to find the file review_response_map_spec in the github repo that was supplied however there was a ruby file that was attached in the submission the variable names are also clear and unambiguous this file is incomplete but the tests that are complete seem to follow appropriate syntax and guidelines i would suggest to add some describe and context blocks that would clarify the purpose of each test case rather than just have the it statement saying the name of the method being tested keep working to finish up the remaining tests in this fashion and it would be great
problem i am unable to find the file review_response_map_spec in the github repo that was supplied however there was a ruby file that was attached in the submission the variable names are also clear and unambiguous this file is incomplete but the tests that are complete seem to follow appropriate syntax and guidelines i would suggest to add some describe and context blocks that would clarify the purpose of each test case rather than just have the it statement saying the name of the method being tested keep working to finish up the remaining tests in this fashion and it would be great
problem i am unable to find many relationships in the model though functionality seems to be in place either additional gems have  been used or code has been pushed in schema db which is wrong    
problem i am unable to find many relationships in the model though functionality seems to be in place either additional gems have  been used or code has been pushed in schema db which is wrong    
problem i am unable to find many relationships in the model though functionality seems to be in place either additional gems have  been used or code has been pushed in schema db which is wrong    
problem i am not sure since these are unit tests and there are travis tests failures too need to check with the team and mentors  
problem i am not sure how to create a house hunter and realtor using the same email i see a link to switch roles but can only see realtor option there as it didn t allow me to create an account for house hunter with same details
problem i am not convinced with the similar_assignments table schema for an assignment ax there is a foreign key that points to an assignment ay such that ax can be an assignment in say 2018 and ay can be the same assignment in 2017 but what if one of the reviews from assignment az which was in 2015 was really good and we need to include that as a sample and also include another review from aw from 2016 as a sample   according my understanding this above requirement cannot be met with the current db table design something that the team may look into
problem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
problem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
problem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
problem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
problem i am not able to sign up into the system neither i could see any credentials in the readme file hence not able to proceed further to check the above mentioned functionalities
problem i am honestly unsure how to rate this earlier the build was passing now travis ci cumulatively says the build failed but when you look at the build history job 6150 3 failed but job 6150 4 passed
problem i am giving this a zero because of concerns of plagiarism your page has multiple sections that are direct copy pastes of the wiki that you linked to you either need to write something original or site that this is not your work consider having a shorter summary of these sections and link to the other wiki for greater background as you have already done
problem hunters functionalities are working properly
problem https pure peak 85957 herokuapp com houses when this link is opened after registering as a realtor and adding a house the application crashes all other basic functionality works well great job with the design and methods the flow of the application could be a bit more clear instead of just listing all the links in  one page
problem https pure peak 85957 herokuapp com houses when this link is opened after registering as a realtor and adding a house the application crashes all other basic functionality works well great job with the design and methods the flow of the application could be a bit more clear instead of just listing all the links in  one page
problem http 152 46 18 195 8080   is not working also the video is not running please upload in youtube
problem http 152 46 18 195 8080   is not working also the video is not running please upload in youtube
problem how to encapsulate that sorting table for future use
problem how to encapsulate that sorting table for future use
problem how to encapsulate that sorting table for future use
problem how has been shown well through the screenshots but why has not yet been described no particular reference to a design pattern has been made but that is understandable since their project was based more on changes and less on additions to the code
problem how has been shown well through the screenshots but why has not yet been described no particular reference to a design pattern has been made but that is understandable since their project was based more on changes and less on additions to the code
problem houses cannot be created
problem houses can still be deleted by anyone and not just the realtor who posted the listing the application link to heroku or any other deployment link isn t given readme is not properly updated
problem house_hunter_accounts_controller rb line 28 meaningless line break house_list_controller rb line 8 98 meaningless line break realtor_accounts_controller rb line 28 meaningless line break session_controller rb line 6 19 20 wrong indentations line 9 no parentheses user_controller rb line 13 meaningless line break line 52 no parentheses  
problem house_hunter_accounts_controller rb line 28 meaningless line break house_list_controller rb line 8 98 meaningless line break realtor_accounts_controller rb line 28 meaningless line break session_controller rb line 6 19 20 wrong indentations line 9 no parentheses user_controller rb line 13 meaningless line break line 52 no parentheses  
problem house search not working able to keep fields like price blank during new house creation i was getting  inquiry invalid access on replying to an inquiry but it did save to the database   high low links in  houses table erroring for realtor admin was able to add to interest list admin able to reply to queries hunter shouldn t have contact method authentication not applied throughout the app   https calm forest 11598 herokuapp com companies 42 accessible without login
problem house search not working able to keep fields like price blank during new house creation i was getting  inquiry invalid access on replying to an inquiry but it did save to the database   high low links in  houses table erroring for realtor admin was able to add to interest list admin able to reply to queries hunter shouldn t have contact method authentication not applied throughout the app   https calm forest 11598 herokuapp com companies 42 accessible without login
problem house search not working able to keep fields like price blank during new house creation i was getting  inquiry invalid access on replying to an inquiry but it did save to the database   high low links in  houses table erroring for realtor admin was able to add to interest list admin able to reply to queries hunter shouldn t have contact method authentication not applied throughout the app   https calm forest 11598 herokuapp com companies 42 accessible without login
problem house images look broken destroying a company does not work instead leads to edit company page  
problem house hunter functionalties are chacked but there is scope for improvement
problem hough the team have explained their work pretty  well the have not included a test plan it is an important part of the project and should be included
problem history shows lots of commits but  majorly from one teammate only
problem hh is able to view all the other house hunters and their contact details which only admin is designated to view major privacy breach readme md file well written
problem hh could not add inquiry
problem hh could not add inquiry
problem here the most important thing the problem statement is missing secondly no test plan has been mentioned so this makes the document incomplete
problem here the most important thing the problem statement is missing secondly no test plan has been mentioned so this makes the document incomplete
problem here is something which needs to be focused 1 i can t see the association between company and houses   2 deletion of company by admin is redirecting to show html erb and not deleting the company 3 i m not able to view the inquiries too in most of the views deletion is not working
problem here a few things i found i could list a house that was built in the future i was also required to give a full date instead of just a year i was able to edit a house as a house hunter
problem here a few things i found i could list a house that was built in the future i was also required to give a full date instead of just a year i was able to edit a house as a house hunter
problem haven t uploaded the link for the pull request
problem haven t included the test plan
problem haven t included the test plan
problem haven t included the test plan
problem haven t deployed so could not manually check though according video and wiki page it look likes that teh code would work fine
problem haven t deployed so could not manually check though according video and wiki page it look likes that teh code would work fine
problem have listed out the functionality which is very intuitive but some links like as realtor and as house hunter are broken making a bit of a confusion
problem have explained the problem and its  functionality is  described but  missing proposal for code changes  
problem have explained the problem and its  functionality is  described but  missing proposal for code changes  
problem have covered almost all the issues it would have been better if an implementation plan was provided
problem have covered almost all the issues it would have been better if an implementation plan was provided
problem have covered almost all the issues it would have been better if an implementation plan was provided
problem hard to tell as very little explanation given
problem handles most of the edge cases properly there are some bugs related to messages as i could not test it properly in some cases deleting a user or a company fails
problem handles most of the edge cases properly there are some bugs related to messages as i could not test it properly in some cases deleting a user or a company fails
problem great job with your pull request and passing the travis ci build there are several code climate failures that could have been addressed many to deal with incorrect formatting and extra parenthesis or braces simple fixes so great job
problem great job with your pull request and passing the travis ci build there are several code climate failures that could have been addressed many to deal with incorrect formatting and extra parenthesis or braces simple fixes so great job
problem great efforts have been taken to convey what is to be done and how the team will do it the design will definitely increase the response time suggestion information about the methods that will be implemented is not given in the design document availability of such info would have been helpful
problem grades_helper rb 62 the parameter id is not descriptive enough please consider changing it to be more descriptive  
problem got confused in between about the proposed solution
problem good but lacks readability the code is directly copy pasted  in the approach  section you could have used the pseudo code with proper explanations the structure and formatting  should be improved
problem good work need to work on tests
problem good work on problem statement and implementation ideas however screenshots could have added lofi sketches and flowcharts missing  
problem good work but i find following missing for completeness a table of content b current design and proposed changes  c integration of new features in design  d use case diagrams  e test plan     
problem good work but i find following missing for completeness a table of content b current design and proposed changes  c integration of new features in design  d use case diagrams  e test plan     
problem good thing would be to increase the test coverage
problem good test plan should include more test cases that check the functionality of github integration eg if number of lines of code committed by a student is correctly computed
problem good test plan should include more test cases that check the functionality of github integration eg if number of lines of code committed by a student is correctly computed
problem good explanation of the proposed changes you may want to add it in a separate heading overall explanation quality is adequate
problem good description i think with the use of headings and subcategories it will look good also need lot of conteent to mention the changes done
problem good coding practice followed
problem given uml diagram which  are explaining the functionality appropriately  but class diagram would have been better to explain the detail code level change 
problem given uml diagram which  are explaining the functionality appropriately  but class diagram would have been better to explain the detail code level change 
problem github link is not redirecting shows 404 not found please deploy the application on any of the platforms
problem github link is broken and the project has not been deployed don t know how to review this project  
problem github link above gives 404 error please fix it
problem git  was not utilized fully there are only a handful of commits that do not capture the development process of  project  
problem git  was not utilized fully there are only a handful of commits that do not capture the development process of  project  
problem git shows too many changes which are not required one can test thoroughly before submitting the changes
problem git link is not working the account might be private
problem git link is not working the account might be private
problem git has been used properly but needed team contribution there is only one committer  
problem git has been used properly but needed team contribution there is only one committer  
problem get the github pull metrics and show em to a person that person being an instructor
problem functions are really small and absurd does not go along ruby style guide
problem functions are of appropriate length and code is in proper methods however no comments are provided what so ever  
problem functions are of appropriate length and code is in proper methods however no comments are provided what so ever  
problem functions are not named properly example  getphoto in photos_controller
problem functions are not named properly example  getphoto in photos_controller
problem functions are named properly
problem functionality features test has been included but plan for rspec tests is yet to be included
problem functionality features test has been included but plan for rspec tests is yet to be included
problem functionality features test has been included but plan for rspec tests is yet to be included
problem functionalities work fine but could not find inquiries form after logging as an admin
problem functionalities work fine but could not find inquiries form after logging as an admin
problem functionalities of admins are working though many other functionalities  are yet to be implemented
problem functionalities are incomplete   while able to log in through admin cannot  edit or create any other user because of the error
problem functionalities are incomplete   while able to log in through admin cannot  edit or create any other user because of the error
problem function variable names are ok but there were ruby coding style issues like not using elsif blocks not keeping code concise and  not following ruby syntax   scripts for converting non utf 8 files is a good approach
problem function variable names are ok but there were ruby coding style issues like not using elsif blocks not keeping code concise and  not following ruby syntax   scripts for converting non utf 8 files is a good approach
problem function names look good and most of them have len 20 which is good   the tests make use of contexts effectively this is great to see     yes more comments are required especially in the controller code telling why an approach was taken and what the function does    
problem function names look good and most of them have len 20 which is good   the tests make use of contexts effectively this is great to see     yes more comments are required especially in the controller code telling why an approach was taken and what the function does    
problem function names look good and most of them have len 20 which is good   the tests make use of contexts effectively this is great to see     yes more comments are required especially in the controller code telling why an approach was taken and what the function does    
problem function length is good general convention of having function length 20 has been followed what i found lacking was additional 2 3 lines of comments before each new function to understand what has been implemented      
problem from what i see it looks like code we have seen in class although in the model classes they don t have any associations between models
problem from what i can gather nothing sounds too complicated individually but the practice of a workflow across multiple pages can become very  cumbersome and complex i don t see any details on how this team plans to mitigate those issues
problem from what i can gather nothing sounds too complicated individually but the practice of a workflow across multiple pages can become very  cumbersome and complex i don t see any details on how this team plans to mitigate those issues
problem from the pull request i see coverage decreased but from the screen cast looks like 100 covered when i tried running manually i get the below errors   1 reviewresponsemap final_versions_from_reviewer        failure error prepare_final_review_versions assignment maps                 nomethoderror             undefined method prepare_final_review_versions for class 0x007fab83429010
problem from the pull request i see coverage decreased but from the screen cast looks like 100 covered when i tried running manually i get the below errors   1 reviewresponsemap final_versions_from_reviewer        failure error prepare_final_review_versions assignment maps                 nomethoderror             undefined method prepare_final_review_versions for class 0x007fab83429010
problem from the previous stage the team has added the use case diagram that efficiently describes the actors involved in the process also since a new controller is proposed it was essential to identify the role of the instructor
problem from the file diff in github it looks the code is in good shape there were a few suggestions provided during round 1 review if those could also be integrated it would be better the test cases are successfully running but the functionality could not be tested due to lack for steps in the wiki  
problem from the file diff in github it looks the code is in good shape there were a few suggestions provided during round 1 review if those could also be integrated it would be better the test cases are successfully running but the functionality could not be tested due to lack for steps in the wiki  
problem from the code db design looks fine they have handled most of the relationships properly although i believe having different tables for admins realtors hunters users roles and role maps is un necessary and just increases the complexity of the system  
problem from my previous review of this project there have been few additions to the set of functionalities implemented for the 3rd project oss the team had worked on  offscreencanvas rs interacts with javascript and  offscreencanvascontextrendering2d rs works on offscreencanvas which are implementations of  offscreencanvas webidl  and    offscreencanvascontextrendering2d webidl  web idl files respectively in this project the team has proposed to implement  offscreencanvas analogous to  htmlcanvascontextrendering2d by reusing some code from the latter and add additional functionalities they finally propose to implement blob api to test the contents on the canvas and also support webgl contexts as used in  webglrenderingcontext
problem frankly i can not see their concrete designs from their doc  
problem frankly i can not see their concrete designs from their doc  
problem frankly i can not see their concrete designs from their doc  
problem frankly i can not see their concrete designs from their doc  
problem found that company has many users missing house  has many inquiries and reply missing
problem found commits only near the deadlines
problem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many relations are absent
problem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many relations are absent
problem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many relations are absent
problem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many etc relations are absent  
problem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many etc relations are absent  
problem foreign key integration is been done in db but as there are no separate active records for user types hunter realtor admin hence the 1 1 1 many etc relations are absent  
problem foreign key integration does not seem to have been done completely in db
problem for the same reason 3 6 edge cases passing corresponds to 50 or three stars the readme md was very detailed
problem for the ruby changes they have made they have used intuitive names and used naming conventions as much as possible def update_feedback   some places the variable names are used in camelcase whereas few places they werent used few variable names were directly used from legacy code although refactoring could have been done curquestionnaire quesparams questarray
problem for the ruby changes they have made they have used intuitive names and used naming conventions as much as possible def update_feedback   some places the variable names are used in camelcase whereas few places they werent used few variable names were directly used from legacy code although refactoring could have been done curquestionnaire quesparams questarray
problem for the ruby changes they have made they have used intuitive names and used naming conventions as much as possible def update_feedback   some places the variable names are used in camelcase whereas few places they werent used few variable names were directly used from legacy code although refactoring could have been done curquestionnaire quesparams questarray
problem for the first two issues the team gave different conditions but no codes or demos are presented in the wiki for this test i can only know the results by the description for the later issues the team gave the comparison between the old version and new version which is easy to understand
problem for the manage participant part the authors didn t explain how will they solve the issue that the add student button cannot work correctly after a user add a course the document included other changes need to be made but the explantation was not clear enough the design used a lot of components in bootstrap but the authors didn t give any explantations to these components they would use and didn t give any diagrams to show what the changes will be like
problem for sign up i don t understand what is the difference between i am shopping for a house and i am a realtor and i am shopping for a house  
problem for now explainations  are in preliminary state i m hoping that team will fillout  this as they progress in project
problem for  nil input test they should separate them from the normal input with a new test instead of put them in one some missing invalid input testing such as import export methods
problem for  nil input test they should separate them from the normal input with a new test instead of put them in one some missing invalid input testing such as import export methods
problem for each problem the authors display relevant chunks of code and discuss which parts need to be changed aside from the issue 1072 all the solutions seem reasonable and simple one minor suggestion for improvement would be to use the collect instead of the each method for computing total_weight in validate_assignment_questionnaires_weights method
problem for each method there should be multiple test cases but they put all tests for a method together wrap by a single it do they should consider to add more it do to separate each test case so the reader know what are they testing
problem for each method there should be multiple test cases but they put all tests for a method together wrap by a single it do they should consider to add more it do to separate each test case so the reader know what are they testing
problem for each cases it include too many things need to be test it is better to separate them into different cases also the object used for this test seems not be put into the factory it is better to make them into factory which is a good practice the use of context is not good enough
problem for all user sign up and log in should at the same place
problem following errors realtors home page cannot be accessed after logging in as admin   signup for realtor is not working signup for hunter is not working realtors home page is not showing up after signing in as realtor cannot signin as realtor with the credentials given in the ereadme    
problem following are some of the relationships missing   house hunter has_many inquiries realtor has_one company
problem flowcharts are simple to understand but no design patterns used some supporting class diagrams or sequence diagrams would be helpful
problem flowchart is included in the document but there is no screenshot or mock up screens  
problem flow charts have been used but no uml or screen shots
problem flow charts have been used but no uml or screen shots
problem fixes are simple adjustments to the current code the last issue requires an addition of a full function but i think that it is appropriate to handle the bug fix as it pulls that responsibility out and keeps things nicely  separated and associated  for purpose
problem fixed problems users can edit their name now admin realtors can create select only one and change companies they can edit their own company s information admin realtors can view list houses and edit destroy houses that belongs to his her company realtors can switch roles to house hunter house hunters can view add companies info inquiries functionality is implemented issues houses do not show if they have basement or not after an inquiry  is sent the app redirects to an error page looks like house hunters can add company houses too these tasks should have been restricted  
problem fixed problems users can edit their name now admin realtors can create select only one and change companies they can edit their own company s information admin realtors can view list houses and edit destroy houses that belongs to his her company realtors can switch roles to house hunter house hunters can view add companies info inquiries functionality is implemented issues houses do not show if they have basement or not after an inquiry  is sent the app redirects to an error page looks like house hunters can add company houses too these tasks should have been restricted  
problem fixed users  can log in and log out admin can create view realtors house hunters companies users can edit his her profile potential buyers funtionality implemented inquiry funtionality implemented issues admin cannot create houses house hunters can edit real estate companies    
problem first review comment weren t addressed
problem first of all this website doesn t work at all i can t sign up as any role and i also can t get admin s info from readme file which is an auto generated file
problem first of all this website doesn t work at all i can t sign up as any role and i also can t get admin s info from readme file which is an auto generated file
problem first of all the doc is  not a wiki page which does not meet the requirement
problem first of all the doc is  not a wiki page which does not meet the requirement
problem first of all i cannot login as an admin so i cannot validate most of edge cases but through the way they handle the relationships between models i think some of the edge cases may not happen after fixing the problem  
problem figures are drawn but are not explained in detail
problem fewer commits on the project more towards the deadline date
problem fewer commits compared to other teams that i have reviewed
problem few test plan is written the team can add more test plan
problem few test plan is written the team can add more test plan
problem few test plan is written the team can add more test plan
problem few test cases are missing context and it block so it is difficult to understand what the test case is doing unless you read the entire  code
problem few test cases are missing context and it block so it is difficult to understand what the test case is doing unless you read the entire  code
problem few test cases are missing context and it block so it is difficult to understand what the test case is doing unless you read the entire  code
problem few of the travis tests have failed the issues were code guidelines and spacing issues
problem few more test cases can be added
problem few more test cases can be added
problem few more test cases can be added
problem few more test cases can be added
problem few minor issues with the build which can be ignored
problem few issues with the build but i feel they are trivial
problem few issues that i found were 1 different logins for different type of users 2 how does realtor switch roles between user and realtor  
problem few issues that i found were 1 different logins for different type of users 2 how does realtor switch roles between user and realtor  
problem few information is missing like specification on nlp and how exactly the implementation would be idea is fine but add more details to it
problem few information is missing like specification on nlp and how exactly the implementation would be idea is fine but add more details to it
problem few information is missing like specification on nlp and how exactly the implementation would be idea is fine but add more details to it
problem few checks are failing the checks suggest to use build or double instead of create in test cases
problem few checks are failing the checks suggest to use build or double instead of create in test cases
problem features implemented in this project work as intended after running the code manually i am getting the same coverage as stated on the wiki page one problem is that the main object under test participant is created  using build method factories rb describes participant as an instance of assignmentparticipant class there is a possibility that this is complicating test cases or will complicate them in the future the solution is to either define a new participant class instance in the factory or to define it in the code itself
problem features implemented in this project work as intended after running the code manually i am getting the same coverage as stated on the wiki page one problem is that the main object under test participant is created  using build method factories rb describes participant as an instance of assignmentparticipant class there is a possibility that this is complicating test cases or will complicate them in the future the solution is to either define a new participant class instance in the factory or to define it in the code itself
problem feature and controller test failing mentioned in the previous review as well travis failing and issues with code climate as well
problem favouriates controller is tested but not in detail it just checks if we can navigate to it
problem favouriates controller is tested but not in detail it just checks if we can navigate to it
problem favouriates controller is tested but not in detail it just checks if we can navigate to it
problem extra credit features have not been implemented no google sign in and no email replies 
problem explanation is good and easy to understand proposed solution looks good as well design and implement a solution that handle github hasn t been explained
problem explanation is good and easy to understand proposed solution looks good as well design and implement a solution that handle github hasn t been explained
problem explains the testing functionality appropriately as mentioned in review one technicalities are explained thoroughly but the functional knowledge required to understand what the test is doing and why it is doing what it does is missing along with mentioning what are the mappings and return values proper explanation of what the test is written for will be more appropriate in a document
problem explains the testing functionality appropriately as mentioned in review one technicalities are explained thoroughly but the functional knowledge required to understand what the test is doing and why it is doing what it does is missing along with mentioning what are the mappings and return values proper explanation of what the test is written for will be more appropriate in a document
problem explained the project and its purpose with the design and files that need to be changed   test plan section is created but no description or plan is given
problem explained the project and its purpose with the design and files that need to be changed   test plan section is created but no description or plan is given
problem except the login controller none of the models controller seems to be well tested there are no test cases written for any of the controllers or in general any component of the application
problem except the lack of comments in the code the code seems to be perfectly fine could be improved in that scenario
problem except the lack of comments in the code the code seems to be perfectly fine could be improved in that scenario
problem except the comments everything seemed to be fine the code seemed to lack proper comments and as a result of which it took several seconds to determine why the author did what he did apart from that the code seemed perfect functions were sufficiently long and code was dry enough too
problem except the comments everything seemed to be fine the code seemed to lack proper comments and as a result of which it took several seconds to determine why the author did what he did apart from that the code seemed perfect functions were sufficiently long and code was dry enough too
problem except one method all the other methods have been covered this is similar to round 1 review given by me
problem except inquiry reply all other functionalities work in my opinion
problem except for the test plan the design doc seems to have all the important details the team should add a test plan before starting in order to go for a test driven development  
problem except for the lack of comments the code was relatively easy to understand and was sufficiently dry  
problem excellent writeup the instructions were clear the screenshots were apt one suggestion could be shorter and precise
problem excellent writeup the instructions were clear the screenshots were apt one suggestion could be shorter and precise
problem excellent work but the codeclimate  build has failed
problem excellent use of visualizations
problem excellent code very well commented and followed most of the ruby s standard code formate very well organized  
problem everything works from their ui their peer review plan works as intended and clearly explains how to test on ui there are sql errors when trying to delete a user which is tied to some assignment although the team has mentioned it is out of scope of the project future work could be to remove those sql error displayed on pages and give a pop up alert box saying your user is tied to an assignment
problem everything works as per the video linked in google drive a link to the same can be added on the wiki page  
problem everything seems good you can move constants to a separate file and use them for example where you are comparing admin or realtor you can either move them to a separate file or in database and use it
problem everything seems good you can move constants to a separate file and use them for example where you are comparing admin or realtor you can either move them to a separate file or in database and use it
problem everything looks great as they have added the uml diagrams ad explained everything in detail test plan is missing which can be added as they are  solving a lot of issues in this project
problem everything looks great you can add test plan for this as its a big change in functionalities
problem everything looks great you can add test plan for this as its a big change in functionalities
problem everything looks fine except for a few places where there are issues with indentation
problem everything is failing code climate has 56 issues build is failing haven t made a change since round 1
problem everything in the pull request failed although this is not an expertiza project
problem everything in the pull request failed although this is not an expertiza project
problem everything has been described well and in details
problem everything but the codeclimate checks passed
problem everything but the codeclimate checks passed
problem everything but the codeclimate checks passed
problem even though there is a no test plan available in the write up however a lot of tests have been added  
problem even though the code has been refactored keeping in mind the coding standards but i think that there is still room for improvement in writing the test cases and the pr checks should be checked as well since they are failing this is something that the next team could pickup and then the code could be ready to be deployed on the production server
problem even though the build is failing in travis ci there are no conflicts the controller tests are failing as there is no flash message that is appearing please look into this
problem even though few test cases have been provided i feel like it could have been more detailed with the steps  involved in the testing
problem error w o company for realtor on viewing buyers empty companies validation missing for empty info on companies admin view realtor show not working admin view hunter show not working search by area missing no fields to search by area
problem enquiries hasnt been tested
problem edge cases not handled properly company delete crashing until all realtors and houses under it are deleted house delete crashes until all inquiries on it are deleted
problem edge cases not handled properly company delete crashing until all realtors and houses under it are deleted house delete crashes until all inquiries on it are deleted
problem edge cases missing from the test case write more test cases with invalid input types example give a string to an int type and raise an error accordingly
problem edge cases missing from the test case write more test cases with invalid input types example give a string to an int type and raise an error accordingly
problem edge cases like real estate company deletion are handled as deletions which is basically not handling it could ve done some case like transferring them to other user account or such
problem edge cases like real estate company deletion are handled as deletions which is basically not handling it could ve done some case like transferring them to other user account or such
problem edge cases handled well after hunter adds an inquiry the back button goes again to the create new inquiry form letting the user recreate the same inquiry multiple times readme md does not cover how the system handles edge cases
problem edge cases handled well after hunter adds an inquiry the back button goes again to the create new inquiry form letting the user recreate the same inquiry multiple times readme md does not cover how the system handles edge cases
problem edge cases could have been implemented
problem edge cases are not explicitly handled but the validations and logic will limit edge case scenarios from affecting the application
problem edge cases are handled but arent described briefly on the readme
problem edge cases are handled but arent described briefly on the readme
problem duplicating code and fixing it for the new implementation is an effective strategy but not very dry and could result in code that is hard to maintain read and test
problem due to the lack of provided admin login and the fact that i cannot sign up for a realtor or hunter account it is impossible to evaluate the functionalities
problem due to the lack of provided admin login and the fact that i cannot sign up for a realtor or hunter account it is impossible to evaluate the functionalities
problem due to the lack of provided admin login and the fact that i cannot sign up for a realtor or hunter account it is impossible to evaluate the functionalities
problem drying is possible
problem drastic improvements have been made to design doc  
problem dont see a sepc folder
problem dont see a sepc folder
problem don t see the role switch functionality and it s not mentioned in the readme file too while adding a new house by an admin it is seen that i can add it to a company say a and and also add a realtor r1 which does not belong in company a but another company say b so what is the flow here the end result is the house has a company a but has a realtor whose company is b
problem don t see the role switch functionality and it s not mentioned in the readme file too while adding a new house by an admin it is seen that i can add it to a company say a and and also add a realtor r1 which does not belong in company a but another company say b so what is the flow here the end result is the house has a company a but has a realtor whose company is b
problem doesn t seem like it only user and company part have been implemented and i was able to delete the admin user easily and in the company edit view for e g year input doesn t check for a valid year 398343 is a valid year therefore it has not been thoroughly tested
problem doesn t seem like it only user and company part have been implemented and i was able to delete the admin user easily and in the company edit view for e g year input doesn t check for a valid year 398343 is a valid year therefore it has not been thoroughly tested
problem doesn t contain the snapshots of the code that was changed
problem doesn t contain the snapshots of the code that was changed
problem does not tell about how to run test
problem does not apply much but instead of using names like temp and temp 1 a more significant name which is self explanatory of its content will be useful
problem documentation mentions the steps problem statement solutions and screenshots the description are detailed however i feel there is no need to give screenshots for tests written  
problem documentation mentions the steps problem statement solutions and screenshots the description are detailed however i feel there is no need to give screenshots for tests written  
problem documentation is proper team could have added db tables as well in the design doc
problem documentation is proper team could have added db tables as well in the design doc
problem documentation can be improved include more details about the controllers method team is planning to change add
problem document is explained well with clear understanding of the issue problem statement design plan is explained well team can work on adding test plans as well as well diagrams and screenshots to make the document more explanatory
problem document is explained well with clear understanding of the issue problem statement design plan is explained well team can work on adding test plans as well as well diagrams and screenshots to make the document more explanatory
problem document explains the problem well one thing i would like to explained more is how strategy pattern being used will help reduce the code than the amount of code currently present but i guess that will be explained better once the teams gets to implementing stuff and knows a bit more about the design
problem document explains the problem well one thing i would like to explained more is how strategy pattern being used will help reduce the code than the amount of code currently present but i guess that will be explained better once the teams gets to implementing stuff and knows a bit more about the design
problem dissatisfied with the write up because no clear explanation has been given for how they arrived at the design at some places the documentation abruptly stops mid explanation the code screenshots and the accompanying explanation is good
problem dissatisfied with the write up because no clear explanation has been given for how they arrived at the design at some places the documentation abruptly stops mid explanation the code screenshots and the accompanying explanation is good
problem difficult to test and review the work one since there were no screenshots provided i was not able to find an instance of a review which could be submitted as a team but not by individual members of the team some of the webpages crash after clicking on a particular assignment to view the review report suggestions the team could explain steps to access the review view so that manual testing could be done the team could create dummy assignments for testing maybe adding screenshots would help in the process
problem didn t see any test cases
problem didn t see any test cases
problem didn t find any pull request code coverage  has increased as more tests are written and it is one of the required outcomes wiki states that 100 coverage is achieved and the same is demonstrated in the video link provided
problem didn t find any pull request code coverage  has increased as more tests are written and it is one of the required outcomes wiki states that 100 coverage is achieved and the same is demonstrated in the video link provided
problem didn t find any  documentation link but it was understandable from the code links on github   goal is to create unique directories for each assignment
problem didn t commit at regular intervals yes committed changes in round 2
problem didn t commit at regular intervals yes committed changes in round 2
problem did not use rspec but team has done testing
problem did not see much info on the files or classes the changes proposed so its hard to comment here
problem did not see much info on the files or classes the changes proposed so its hard to comment here
problem did not see much info on the files or classes the changes proposed so its hard to comment here
problem did not see a spec folder in the git
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find much info on the design
problem did not find any diagrams in the wiki
problem did not find any diagrams in the wiki
problem did not find any diagrams in the wiki
problem did not even pass the auto test
problem did not even pass the auto test
problem did a good job using forms to stay dry with the edit and new pages some more comments especially in the models would have been helpful to understand why certain validations were chosen the use of json to store and recall in views was clever
problem did a good job using forms to stay dry with the edit and new pages some more comments especially in the models would have been helpful to understand why certain validations were chosen the use of json to store and recall in views was clever
problem diagrams for use cases are given properly but the class diagram is missing
problem diagrams for use cases are given properly but the class diagram is missing
problem diagrams are used from previous project no diagrams explaining newer functionality
problem diagrams are used from previous project no diagrams explaining newer functionality
problem diagrams are used from previous project no diagrams explaining newer functionality
problem diagrams are still overly large
problem diagrams are still overly large
problem diagrams are explanatory but few but i think they are sufficient
problem diagram included in the implementation plan is confusing a better way would have been to include a diagram to indicate the step by step flow
problem diagram included in the implementation plan is confusing a better way would have been to include a diagram to indicate the step by step flow
problem diagram for stacked chart missing from the design document
problem diagram for stacked chart missing from the design document
problem diagram for stacked chart missing from the design document
problem detailed but the screenshots of the manual testing are missing in the test plan
problem detailed but the screenshots of the manual testing are missing in the test plan
problem detailed design is missing the document covers only the screen shots and high level overview of what needs to be done
problem detailed design is missing the document covers only the screen shots and high level overview of what needs to be done
problem detailed design and test plan lacks for introduction part the explanation is not clear enough and a little bit confusing it is better to add more explantation about what the project is and point out the exact purpose clearly
problem detailed design and test plan lacks for introduction part the explanation is not clear enough and a little bit confusing it is better to add more explantation about what the project is and point out the exact purpose clearly
problem destroy not working unable to create user from admin
problem destroy not working unable to create user from admin
problem destroy not working unable to create user from admin
problem destroy does not work at all it will redirect user back to edit page of the object for houses and real estate companies for users if they have a foreign key association with any inquire then you can not delete them
problem design principles were not discussed they did discussed the general approach but that approach did not seem to be rooted in design principles
problem design principles were not discussed they did discussed the general approach but that approach did not seem to be rooted in design principles
problem design plan of the document only explains algorithm or flow for the code change team should explain the changes from existing system  to proposed solution with some texts
problem design plan of the document only explains algorithm or flow for the code change team should explain the changes from existing system  to proposed solution with some texts
problem design plan has not changed since i last reviewed a bit more detail would still be nice
problem design plan has not changed since i last reviewed a bit more detail would still be nice
problem design patterns were not used rest of the code is explained and easy to follow
problem design patterns were not used rest of the code is explained and easy to follow
problem design patterns were not used rest of the code is explained and easy to follow
problem design looks good at high level though specific details about implementation are still missing i would expect that here   they also state that they are using google translate details on what api they will be using would have been helpful
problem design looks good at high level though specific details about implementation are still missing i would expect that here   they also state that they are using google translate details on what api they will be using would have been helpful
problem design looks good at high level though specific details about implementation are still missing i would expect that here   they also state that they are using google translate details on what api they will be using would have been helpful
problem design looks clear just need to add what files will be added and what files will be modified to make the design more sound
problem design is very nicely explained with flowchart makes the design flow very clear suggestion if a screenshot of actual screen where the change needs to be made is added that would be perfect
problem design is too detailed i would suggest keeping it short and precise
problem design is informative but too detailed one uml would have been apt
problem design is informative but too detailed one uml would have been apt
problem design is informative but too detailed one uml would have been apt
problem design is fine some minor errors like no stop phase moreover no design patterns used just flowcharts are provided if some sequence diagram or use case diagrams were provided it would improve the design a lot
problem design is fine some minor errors like no stop phase moreover no design patterns used just flowcharts are provided if some sequence diagram or use case diagrams were provided it would improve the design a lot
problem design is fine some minor errors like no stop phase moreover no design patterns used just flowcharts are provided if some sequence diagram or use case diagrams were provided it would improve the design a lot
problem design flow diagram is included indicating the flow which is good
problem design does seem to be sound but complex as mentioned in the earlier review i am unsure if looping over each review is the correct thing to do or not maybe the team discussed this with the mentor and decided against it as no new information has been added in the document if so i would only suggest the team to include the complexity of the design in the  document
problem design does seem to be sound but complex as mentioned in the earlier review i am unsure if looping over each review is the correct thing to do or not maybe the team discussed this with the mentor and decided against it as no new information has been added in the document if so i would only suggest the team to include the complexity of the design in the  document
problem design document explains the entire project flow very well the whole implementation plan is very well written which clearly explains how the team is planing to work on project the idea of including screenshots which explains how the functionality will look like once all the implementation is done is what i liked the most suggestion team should include test plan in the doc the purpose of project should be explained more clearly overall nice work
problem design document explains the entire project flow very well the whole implementation plan is very well written which clearly explains how the team is planing to work on project the idea of including screenshots which explains how the functionality will look like once all the implementation is done is what i liked the most suggestion team should include test plan in the doc the purpose of project should be explained more clearly overall nice work
problem design document explains the entire project flow very well the  objectives goals are clearly stated in the doc along with the approach which team will be following in future the  flowchart explains the functionality very well overall the doc is easy to understand   suggestion team should include test plan in the doc
problem design document explains the entire project flow very well the  objectives goals are clearly stated in the doc along with the approach which team will be following in future the  flowchart explains the functionality very well overall the doc is easy to understand   suggestion team should include test plan in the doc
problem design document does not seem complete problem statement is explained well but project design or test plan is not mentioned
problem design doc is complete except for implementation and testing which is not required for this review 
problem design doc does not explain the approach to resolve the issue to be taken well as i could see only 2 lines of explanation team should explain the design more clearly for naive users too team has not used any design principle
problem design doc does not explain the approach to resolve the issue to be taken well as i could see only 2 lines of explanation team should explain the design more clearly for naive users too team has not used any design principle
problem design concept seems promising but a brief introduction about how each module will be implemented for both reviewer and reviewee is missing  
problem design concept seems promising but a brief introduction about how each module will be implemented for both reviewer and reviewee is missing  
problem design approaches are clearly explained yes the 2nd approach is the correct  approach any design patterns used
problem design approaches are clearly explained yes the 2nd approach is the correct  approach any design patterns used
problem design approaches are clearly explained yes the 2nd approach is the correct  approach any design patterns used
problem design approaches are clearly explained yes the 2nd approach is the correct  approach any design patterns used
problem deployed on heroku friendly interface good readme file
problem deployed link is not working
problem deletion of house by admin is failing privacy breach  as a user i am able to see details of all other users only admin should  be able to see details of other users overall very good effort if  the above issues weren t  there i would have given full points
problem deletion fails in most cases as dependent records don t get deleted model changes to add and delete these dependencies will resolve the issue
problem deletion fails in most cases as dependent records don t get deleted model changes to add and delete these dependencies will resolve the issue
problem deletion fails in most cases as dependent records don t get deleted model changes to add and delete these dependencies will resolve the issue
problem deleting company doesn t delete it s houses no form of cascade delete present anywhere
problem deleting company doesn t delete it s houses no form of cascade delete present anywhere
problem deleting a house hunter does not work   possible error in deployment   edge cases company cannot be created without filling all details this is implemented session control when user signs out from a page and then goes back the profile page should not be shown as he is signed out this should be considered
problem deleting a company doesn t delete its houses
problem deleting a company doesn t delete houses deleting househunter doesn t his her inquiries
problem deleting a company doesn t delete houses deleting househunter doesn t his her inquiries
problem delete of company is not working deletion of  a house is not working admin should not be able to change add to his role i was able to make admin as a realtor system  should not allow that
problem default tests are present not the actual tests  
problem default tests are present not the actual tests  
problem default tests are present not the actual tests  
problem def create function in assignments controller seems to be long and could have been refactored considering that they used most of the legacy code and most of their work was on ui their part on ruby changes werent much 
problem def create function in assignments controller seems to be long and could have been refactored considering that they used most of the legacy code and most of their work was on ui their part on ruby changes werent much 
problem db seems well designed i didn t see potential buyers that will have a relation with house such that house has many potential buyers
problem db relationships looked fine new model was created for house style which could have been a parameter in house  model itself
problem db relations  are handled properly but dependent destroy is not mentioned because which there are issues when destroying entries which have a foreign key dependency
problem db relations  are handled properly but dependent destroy is not mentioned because which there are issues when destroying entries which have a foreign key dependency
problem db relations  are handled properly but dependent destroy is not mentioned because which there are issues when destroying entries which have a foreign key dependency
problem db design is not taken care of properly various mappings between entities  have not been established
problem db design is kind of ok but there are redundant tables for roles realtors hunters admins and users i believe all this can be combined into one using proper fields and access control this would have helped you guys keep the code easier as well everything else has been handled properly
problem db design is kind of ok but there are redundant tables for roles realtors hunters admins and users i believe all this can be combined into one using proper fields and access control this would have helped you guys keep the code easier as well everything else has been handled properly
problem db design doesn t  have key reference and 1 1 or 1 many relationships in active records are missing but the same is implemented via code logic
problem db design doesn t  have key reference and 1 1 or 1 many relationships in active records are missing but the same is implemented via code logic
problem currently your team have  4 code climate issues that denote code redundancy as stated in the code comment above best just to bring those statements out to keep it as dry as possible   from what i can tell none of the pull requests pass these requirements including my own teams so i am not sure what is the cause of this but i guess no one will be getting all the stars on this questions
problem created a great visual aid which helps us explain the plan
problem crashed for me once randomly might be not because of these changes but i am not sure
problem crashed for me once randomly might be not because of these changes but i am not sure
problem crashed for me once randomly might be not because of these changes but i am not sure
problem covers all edge cases like checking whether  assignments  is absent in the menu in default view and present in student view   could not view the reviews done by students  
problem covered all the edge cases but have not provided any explanation  
problem covered all the edge cases but have not provided any explanation  
problem coverage decreased by 01
problem coverage decreased by 01
problem couldn t test the  features as no information regarding logging in credentials were provided anywhere
problem couldn t test manually as no information regarding the steps to take to test is provided
problem couldn t test it manually as no link guide provided for the same
problem couldn t test it manually as no link guide provided for the same
problem couldn t test it manually as no link guide provided for the same
problem couldn t see any testing being done
problem couldn t see any testing being done
problem couldn t see any testing being done
problem couldn t see any testing being done
problem couldn t see any testing being done
problem couldn t relate code with the application for eg admin index page has hello admin at the top however there is no such thing on the ui similarly for inquiries list the inquiries not found in ui
problem couldn t relate code with the application for eg admin index page has hello admin at the top however there is no such thing on the ui similarly for inquiries list the inquiries not found in ui
problem couldn t find any testing done for  any controller model user was thoroughly tested
problem couldn t find any test plan
problem couldn t check the base cases edge cases   also found high similarity of program2 doc that detailed the requirements with readme 
problem couldn t check the base cases edge cases   also found high similarity of program2 doc that detailed the requirements with readme 
problem couldn t check as no deployed app link was given
problem couldn t check as no deployed app link was given
problem could use more detail
problem could use more detail
problem could see default testcases
problem could not test ui because links for signing up are broken
problem could not test ui because links for signing up are broken
problem could not test ui because links for signing up are broken
problem could not test most of the edge cases as functionalities have not been implemented
problem could not test inquiry  form
problem could not see the test plan  as write up link has not been provided looking at the code also it seems as if no tests are written it is always a good practice to follow tdd please write test cases to test the changes made
problem could not see test plan as well as automated test cases are not included team could work upon adding test cases to test the functionalities that would make the issue resolution more robust
problem could not see any new commits after last change also commits distribution is not equal
problem could not see any new commits after last change also commits distribution is not equal
problem could not really find the required relationship mapping
problem could not really find the required relationship mapping
problem could not really find the required relationship mapping
problem could not log in as admin rest worked as expected
problem could not log in as admin rest worked as expected
problem could not log in as admin rest worked as expected
problem could not find the test file and neither is it mentioned in the readme
problem could not find steps to replicate on ui documentation does not mention steps how to test the feature more information required as i was not able to follow the steps 
problem could not find model or controller testing
problem could not find model or controller testing
problem could not find dile  in which tests are done neither is it specified in readme
problem could not find custom tests
problem could not find commits for test files
problem could not find any test cases the team should implement test cases for the issues they ve fixed
problem could not find any test cases the team seem to have made changes to only the views the team should implement test cases for the issues they ve fixed
problem could not find any explanations regarding the changes proposed
problem could not find any explanations regarding the changes proposed
problem could not find any explanations regarding the changes proposed
problem could not find any
problem could not do the manual testing since the link mentioned did not work but the code seems good enough to work
problem could not add a company as a realtor also could not attach and display a picture when listing a house when signing up as house hunter was asked to select a real estate company the house interest interest list feature   has not been implemented also the inquiry is not associated with a listed house cannot delete real estate companies
problem could not add a company as a realtor also could not attach and display a picture when listing a house when signing up as house hunter was asked to select a real estate company the house interest interest list feature   has not been implemented also the inquiry is not associated with a listed house cannot delete real estate companies
problem could have been more eloborate no mention of design principles or patters used  
problem could have been more elaborate how to check the work no mention of design principles or patterns used  
problem could have been more elaborate how to check the work no mention of design principles or patterns used  
problem could have been more descriptive
problem could have been more descriptive
problem could have been explained more
problem could have been explained more
problem could have added uml diagrams lofi sketches and flowcharts
problem could have added uml diagrams lofi sketches and flowcharts
problem could have added more explanation on the changes proposed by the team
problem could be more specific especially with test plan
problem could be more specific especially with test plan
problem could be better if you add the screens only conventional flow of diagrams is present adequate details
problem could be better if contain with  more info about the test itself instead of the rb file they tested
problem controllers have a few test cases models have none some of the suggested test cases could be as follows company_test rb company should not be deleted if not owner of company realtor should only be able to delete company if he created it
problem controllers have a few test cases models have none some of the suggested test cases could be as follows company_test rb company should not be deleted if not owner of company realtor should only be able to delete company if he created it
problem controller test cases have been covered but no model test cases can be seen
problem controller test cases have been covered but no model test cases can be seen
problem content is good and well written from the last review i was expecting little more in depth  deatails  on the implementation side   i see no edits after nov 14 except for the new image
problem content is good and well written from the last review i was expecting little more in depth  deatails  on the implementation side   i see no edits after nov 14 except for the new image
problem confusing method naming eg can_create can_edit can_destroy etc all should return true false but itredirects requests as well which should be done in the parent method which calls them  
problem confusing method naming eg can_create can_edit can_destroy etc all should return true false but itredirects requests as well which should be done in the parent method which calls them  
problem conflicts were resolved to an extent for the travis cl but not all the tests are passing
problem conflicts were resolved to an extent for the travis cl but not all the tests are passing
problem conflicts were resolved to an extent for the travis cl but not all the tests are passing
problem complex design
problem complex design
problem company realtor relation should be 1 n but isn t also realtor house_hunter should belong to user
problem companies_controller along with a few other controllers are populated with the tests generated by scaffolding no tests in models found
problem commit were done at a timely manner
problem comments needed
problem comments in the code would have been helpful to understand the flow
problem comments in code are missing there are few lines that need to be removed but still exist it would be nice to delete those eg emails assignment instructor email    function length looks okay most functions have len 20 lines which is an acceptable number since the code is implementing very specific issues over it has specific local changes   other change are okay and ruby like
problem comments in code are missing there are few lines that need to be removed but still exist it would be nice to delete those eg emails assignment instructor email    function length looks okay most functions have len 20 lines which is an acceptable number since the code is implementing very specific issues over it has specific local changes   other change are okay and ruby like
problem comments from round 1 are taken care of     delete real estate company crashed view inquiry lists inquiries from all houses including ones that are not under the same company these should not be accessible to the realtor he should see only ones from houses in his company
problem comments from round 1 are taken care of     delete real estate company crashed view inquiry lists inquiries from all houses including ones that are not under the same company these should not be accessible to the realtor he should see only ones from houses in his company
problem comments and indentation at a couple of places can be update
problem comments and indentation at a couple of places can be update
problem comments
problem commented out code should be removed at least one example found in participant_spec rb also there are some indentation issues as well as other issues flagged by codeclimate otherwise the code seems to comply with the ruby style guide and be fairly dry
problem commented out code should be removed at least one example found in participant_spec rb also there are some indentation issues as well as other issues flagged by codeclimate otherwise the code seems to comply with the ruby style guide and be fairly dry
problem codewise no issues build issue has to be fixed
problem codewise no issues build issue has to be fixed
problem codeclimate bot reports 73 style issues which is an awful lot  
problem codeclimate bot reports 73 style issues which is an awful lot  
problem code written well remove the unwanted methods there are few duplicate methods which can be removed
problem code was not committed in second round
problem code was not committed in second round
problem code snippets are provided but the functionality that was to be implemented and how has that been achieved is not explained
problem code snippets are not mentioned but design is properly done
problem code snippets are not mentioned but design is properly done
problem code snippets are not mentioned but design is properly done
problem code snippets are not mentioned but design is properly done
problem code snippets are given but  need explanation  
problem code snippets are given but  need explanation  
problem code snippet added   still git link is not of the pull request     no link provided for the change either screencast or the url of the deployed application would have been ideal
problem code snippet added   still git link is not of the pull request     no link provided for the change either screencast or the url of the deployed application would have been ideal
problem code snippet added   still git link is not of the pull request     no link provided for the change either screencast or the url of the deployed application would have been ideal
problem code quality was not upto the mark   firstly there were 3 separate table for admins realtors and househunter which caused a lot of redundancy inside the application as well as for the user using the product secondly the lack of proper documentation made it very difficult to traverse through the code
problem code quality was not upto the mark   firstly there were 3 separate table for admins realtors and househunter which caused a lot of redundancy inside the application as well as for the user using the product secondly the lack of proper documentation made it very difficult to traverse through the code
problem code mostly follows good styling guidelines but there  are  a couple of issues i would suggest splitting nouns  when naming classes e g potentialbuyer instead of potentialbuyer spacing is inconsistent in some classes househunter_controller rb search and houses_controller rb show there are some cases when decomposition  and moving functionality into a separate method would make sense for example in search method of househunter_controller rb class if  statements could be  moved  to a separate method with a descriptive name   this would make code more readable there are instances  where code is commented out e g inquirydetails_controller rb removing that commented chunk  entirely would make code cleaner   deleted chunk could always be referenced in git history  
problem code mostly follows good styling guidelines but there  are  a couple of issues i would suggest splitting nouns  when naming classes e g potentialbuyer instead of potentialbuyer spacing is inconsistent in some classes househunter_controller rb search and houses_controller rb show there are some cases when decomposition  and moving functionality into a separate method would make sense for example in search method of househunter_controller rb class if  statements could be  moved  to a separate method with a descriptive name   this would make code more readable there are instances  where code is commented out e g inquirydetails_controller rb removing that commented chunk  entirely would make code cleaner   deleted chunk could always be referenced in git history  
problem code looks very clean i did find some commented lines of code though
problem code looks okay suggestions for improvements not done   build still fails   
problem code looks okay suggestions for improvements not done   build still fails   
problem code looks okay changes suggested have not been implemented i wanted to see more comments on why this is has been done which is missing   also strings checks for str are still used and not empty  
problem code looks okay but i found few features missing as far as code is concerned found admin details hard coded in the code this is a wrong way to do     could have used tables for better alignment    
problem code looks okay and the spec is written in detail but as mentioned earlier i m not in a position to judge due to lack of video or deployment link or even some screenshots proving the work
problem code looks okay and the spec is written in detail but as mentioned earlier i m not in a position to judge due to lack of video or deployment link or even some screenshots proving the work
problem code looks okay and the spec is written in detail but as mentioned earlier i m not in a position to judge due to lack of video or deployment link or even some screenshots proving the work
problem code looks good the first cut for good too   i still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme
problem code looks good the first cut for good too   i still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme
problem code looks good the first cut for good too   i still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme
problem code looks good namings are also ok print statements are also pushed not expected
problem code looks good namings are also ok print statements are also pushed not expected
problem code looks good apart from a lot of commented code if that is written by the team and was not already present then it should be removed if not used before submitting pull requests
problem code looks good apart from a lot of commented code if that is written by the team and was not already present then it should be removed if not used before submitting pull requests
problem code looks fine but build issue has to be fixed
problem code looks concise however at few places indentation is messed up
problem code looks concise however at few places indentation is messed up
problem code looks concise however at few places indentation is messed up
problem code looks clean and neat ui design looks very good and is elegant search functionality for the houses should have been in controllers and not in the model  
problem code looks clean and neat ui design looks very good and is elegant search functionality for the houses should have been in controllers and not in the model  
problem code level implementation details are not provided but the approach looks clean
problem code level implementation details are not provided but the approach looks clean
problem code level details are not covered in this doc but the high level approach looks fine to me
problem code level details are not covered in this doc but the high level approach looks fine to me
problem code level details are not covered in this doc but the high level approach looks fine to me
problem code level details are not covered in the doc but the changes suggested follow the desired requirements  
problem code is written well without dead or complicated code dry principle is followed i can not see any changes or commits in code after last submission
problem code is written properly simple and clean every function is simple and has distinguishing work did not understand the need of creating mvc for search photos separately   many functionalities could have been merged together and made a defined solution eg house search function could have been added in house mvc
problem code is written properly simple and clean every function is simple and has distinguishing work did not understand the need of creating mvc for search photos separately   many functionalities could have been merged together and made a defined solution eg house search function could have been added in house mvc
problem code is written properly with no bad naming conventions no major code change can be seen after first submission   code is dry but i could not see color change specific comments in the code  
problem code is well written functions are well defined some areas where it can be improved is moving the house search logic from controllers to the respective models  
problem code is very neat and readable i appreciate you attention to following good syntax practices there is some similar code was exists in the controller action method and the content page method but simple to bring out and make dry overall great job
problem code is very neat and readable i appreciate you attention to following good syntax practices there is some similar code was exists in the controller action method and the content page method but simple to bring out and make dry overall great job
problem code is using basic ruby on rails structure which by default provides the crud functionalty but no details of admin login provided also some of the models seem to be missing
problem code is using basic ruby on rails structure which by default provides the crud functionalty but no details of admin login provided also some of the models seem to be missing
problem code is using basic ruby on rails structure which by default provides the crud functionalty but no details of admin login provided also some of the models seem to be missing
problem code is running and no errors are encountered however very few tests have been written and coverage is low a way to make the testing more robust is to test every function with a known success case and  an edge case or potential failure
problem code is running and no errors are encountered however very few tests have been written and coverage is low a way to make the testing more robust is to test every function with a known success case and  an edge case or potential failure
problem code is running and no errors are encountered however very few tests have been written and coverage is low a way to make the testing more robust is to test every function with a known success case and  an edge case or potential failure
problem code is nicely written and runs well however more edge cases should be included for example each function should be tested for a known success case and an edge case or potential failure
problem code is nicely written and runs well however more edge cases should be included for example each function should be tested for a known success case and an edge case or potential failure
problem code is great usage of searchcontroller and potentialbuyercontroller shows deep understanding of rails as a framework great job but i find following missing  1 in controllers you will need to put before_action authenticate_user 2 usage of devise for user management is good   3 code for models seems to be missing house has no entries validations relations etc 4 you can use rails_admin for admin account management 5 gemfile has ref to sqlite impliescode is not deployed on heroku atleast 6 integrations tests have been written which is good      
problem code is great usage of searchcontroller and potentialbuyercontroller shows deep understanding of rails as a framework great job but i find following missing  1 in controllers you will need to put before_action authenticate_user 2 usage of devise for user management is good   3 code for models seems to be missing house has no entries validations relations etc 4 you can use rails_admin for admin account management 5 gemfile has ref to sqlite impliescode is not deployed on heroku atleast 6 integrations tests have been written which is good      
problem code is clean and variable names are readable need a bit of formatting as some lines are not aligned well  
problem code is clean and variable names are readable need a bit of formatting as some lines are not aligned well  
problem code is clean and variable names are readable need a bit of formatting as some lines are not aligned well  
problem code is clean and easy to understand some unused unimplemented empty function definitions are there in the files
problem code in the model methods looks very clean attribute symbols are appropriately validated and proper constraints are applied to measure uniqueness the controller code has great parenthesis and bracket use for function calls and assignments more consistent spacing of functions and function content would aid in the readability of the code also there are a few instances where conditional blocks are empty if there is no purpose for the block it should be removed example found in the static page controller overall the code seems to implement good ruby style standards  
noproblem the team have a well written design document and and the authors have explained the proposed changes well the authors have also listed each file they are going to be changed
noproblem yes the team has well explained the changes that they are going to make last time it was a bit confusing but this time because of   the help of the diagrams and mock ui screen the solution seems clear now
noproblem the authors have explained the changes made to the system the design flow greatly helps to understand the flow of the system
noproblem the authors have described what all changes they plan to do and where they plan to do it compared to the previous version of the design document they have now included what tools and framework they plan to work on the design document looks complete and understandable now
noproblem they will be changing mostly html and erb code to create a visual interface that delivers information to instructors more effectively
noproblem the proposed changes have been explained in a simple manner
noproblem the document adequately describes the project description and proposals made the proposed change of generating a single or single bar chart graph based on the categories selected to display the chart can be efficiently made to the system
noproblem they have improved the document to provide a better description of changes to be made to the system
noproblem yes the design is sound and gives a proper explanation about how their implementation would behave
noproblem design seems correct
noproblem yes their design is clear and sound and the principles and patterns are well used
noproblem yeah their design seems to be sound and neat
noproblem system is well defined
noproblem the design document is good and i don t think any design pattern needs to be followed as very few changes are being made
noproblem the design makes use of the google charts tool to generate visual charts for specific criteria set based on the design flow it appears that the functionality can be consistently performed to generate the visual graph for the instructor
noproblem yes the design appears to be sound and uses appropriate design principles
noproblem yes the design is pretty simple and inclusion of screenshot enhances the clarity of what the team has achieved in terms of the required changes
noproblem design is simple and easy to understand
noproblem yes the design is simple and easy to understand i can easily know what they will do through their doc
noproblem the design appears to be very simple and well written they have explained the use case diagram very well also they have added visualizations
noproblem yes the design is simple and easy to understand
noproblem the team is using external tools to do the work and its clear and easy
noproblem using google charts is a good idea
noproblem from the reasons provided for choosing the google charts tool and it s effectiveness it can be integrated into the system functionality easily making the design simpler to be executed
noproblem yes design involves google charts api   and seems very simple
noproblem yes the design flow and the screenshots very clearly describes the changes made to the system
noproblem flow diagram explains the flow correctly
noproblem yes they have used visualization to help people understand their design
noproblem the bar charts have been added to the design report the visualizations have been added to views also and the screen shots have been added too the only thing that i would like to add is that the bar charts could have been more descriptive as in they could have added details for   x label and y label and also put legend this will aid the user in quickly understanding what the chart is conveying
noproblem they have worked on their weak   point earlier their solution does not seem cogent but i would say now they have made good progress
noproblem the sample data visualizations is good the way they have given visualizations for sample data is nice easier to understand and good
noproblem the document does include a flowchart which shows the flow of changes however an uml diagram would have made the document more understandable and easy to follow
noproblem the team already has mockups for their design
noproblem the visualization is great the screenshots clearly indicate the proposed output of the project
noproblem the team has not included any additional diagrams apart from the flow diagram provided in the first stage the flow diagram effectively describes the sequence of actions that need to be taken so that the instructor can view the bar graph visual representation for the selected criteria set
noproblem really good visualization provided
noproblem according to the team the specification of the project does not require us to use automated tests    but they plan to test the modified ruby code or the new features using   the   rspec   testing framework overall the test   plan sounds good
noproblem no tests are required for the project as stated
noproblem this team did not require any tests
noproblem the design document does not include a test plan as testing requirement   is very minimal since most changes are in view
noproblem the test plan section specifies that it does not require performing any automated tests however since the new functionality of adding a visual diagram the team would modified ruby code for the functions added to the grades_controller
noproblem authors have explained the changes that needs to be made clearly
noproblem yes the design is sound and appeopriate however it may be better to implement more code level design
noproblem simple and clear easy to understand
noproblem it gives a high level design picture and two scratches of ui which are all good and understandable
noproblem the test plan is completed just one suggestion that it can be more specific for example it may include some real test cases
noproblem yes have included the flow of the process in the second round of interview
noproblem 1 the document clearly mentions the changes to be made to the existing system and requirements that need to be delivered 2 also mentions the changes to be made to the ui 3 the files to be added modified are also mentioned
noproblem 1 follows appropriate design principles and patterns
noproblem 1 yes the design appears to be simple
noproblem 1 document includes test plan 2 however can include more test cases
noproblem yes there is no mention of design pattern yet but overall design appear very clear to me
noproblem mockup   diagrams really make it easy to understand
noproblem great work in high level test plan it is very easy to understand and it is one of the strong point of this documentnt
noproblem overall team has done good work on visualization hope to see the actual images of expertiza   by the end of the project
noproblem authors have explained the changes that needs to be made clearly
noproblem design seems good
noproblem design seems simple and correct
noproblem the changes necessary are explicitly outlined though more description as to why certain files need to be modified would be nice to have
noproblem the proposed changes match existing expertiza guidelines well
noproblem the plan of work seems to be quite simple
noproblem yes very clearly writeup
noproblem the explanation is good and helps get the point across
noproblem the design for the feature is simple and clear
noproblem i see that they added an additional flow diagram that is further helping in the understanding
noproblem they have mentioned about possible tests required for the project
noproblem well they have mentioned what needs to be done what changes have to be implemented
noproblem it does appear to be sound and in sync with the dry principles
noproblem well the design does look simple it is not difficult to understand the principle
noproblem ui mockups and uml diagrams are descriptive however more information should be conveyed to how to solve the problem
noproblem yes diagrams are self explanatory
noproblem the design appears to be sound following all the appropriate principles and patterns i liked the overall flow of the document
noproblem the design looks to be simple and clear to me it clearly states what files are going to be changed and as per my knowledge there is no redundant and unnecessary change
noproblem i liked the visualizations used this time around they have certainly improved from the last time i liked the overall used of high and low level visualisations provided
noproblem even though few test cases have been provided i feel like it could have been more detailed with the steps   involved in the testing
noproblem yes very clearly writeup
noproblem well they have mentioned what needs to be done what changes have to be implemented
noproblem 1 the document clearly mentions the changes to be made to the existing system and requirements that need to be delivered 2 also mentions the changes to be made to the ui 3 the files to be added modified are also mentioned
noproblem the explanation is good and helps get the point across
noproblem design seems good
noproblem the proposed changes match existing expertiza guidelines well
noproblem it does appear to be sound and in sync with the dry principles
noproblem 1 follows appropriate design principles and patterns
noproblem the design appears to be sound following all the appropriate principles and patterns i liked the overall flow of the document
noproblem design seems simple and correct
noproblem the plan of work seems to be quite simple
noproblem well the design does look simple it is not difficult to understand the principle
noproblem mockup   diagrams really make it easy to understand
noproblem 1 yes the design appears to be simple
noproblem the design looks to be simple and clear to me it clearly states what files are going to be changed and as per my knowledge there is no redundant and unnecessary change
noproblem the design for the feature is simple and clear
noproblem simple and clear easy to understand
noproblem yes have included the flow of the process in the second round of interview
noproblem overall team has done good work on visualization hope to see the actual images of expertiza   by the end of the project
noproblem i liked the visualizations used this time around they have certainly improved from the last time i liked the overall used of high and low level visualisations provided
noproblem i see that they added an additional flow diagram that is further helping in the understanding
noproblem yes diagrams are self explanatory
noproblem it gives a high level design picture and two scratches of ui which are all good and understandable
noproblem great work in high level test plan it is very easy to understand and it is one of the strong point of this documentnt
noproblem they have mentioned about possible tests required for the project
noproblem the issues have been identified and documented clearly    however a little more of explanation is required for the   solutions proposed for issues 2 5 they seem to me at a very high level
noproblem yes they look well written and easy to follow with all the visual aids
noproblem very well written document good job team
noproblem i understand what the team is supposed to do to the expertiza system
noproblem drastic improvements have been made to design doc
noproblem as far as the issues are concerned the solutions do seem logical
noproblem the design looks good all the issues are stated and addressed nicely
noproblem yes the deisgn appears to be totally sound the changes proposed are very standardized and follows appropriate industry standards
noproblem the design is sound with appropriate principles and patterns
noproblem clearly explained with diagrams and uml diagrams
noproblem    the design is perfectly well depicted in the form of the use case diagram in which the users are student and instructor and the data base is where the actions are stored in the database and the retrieved from the same for the case of reviews information    also they have been thorough in pointing out the application flow in the application flow section so as to elucidate the problem statement
noproblem since the project is aimed at fixing the issues no design patterns need to be used
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement great work done
noproblem yes simple straightforward solutions
noproblem the design does not seem that complex the team has clearly mentioned the issues and the way to go about it
noproblem yes the design is very simple lucid and efficient
noproblem yes only a few files are being modified
noproblem the design is simple
noproblem yes the design is a very simple and effective representation of the problem statement and they serve a good representation on how they are working and implemented the changes to the review section
noproblem the explanation of each of the issues in details is done very well but it does seem to be complicated unless files to be modified and solutions are read
noproblem it was weird that two of the bugs they were assigned don t exist but that s not the team s fault
noproblem the design appears to be simple and straightforward to implement the team has also included all the changes that will be made to achieve the desired results    great work
noproblem the design   document is   easy to comprehend have explained in detail about the problem but not about the solution
noproblem great use of mock ups and uml diagrams it makes understanding the issues easier looks like a great amount of thought has gone into making it
noproblem the visualization is great all the flow diagrams and required screenshots are in place as required
noproblem the visualization is by far the best part of this writeup also it s visualization is among the best i ve reviewed till date the author has put in a lot of efforts for the same the diagrams make the architecture and the problem statement very simple to understand
noproblem a lots of visuals very helpful when viewers walk through the design
noproblem great work by the team on uml diagrams
noproblem yes the diagrams are clear to show how the system works they have even gone a step ahead to show how they have thought of resolving the problem at each and every step of the expertiza review section and the message popups they receive for the same
noproblem this team consistently uses great diagrams that add to their documentation s clarity significantly
noproblem the team has included a lot of visual aids which complements the document making it a lot easier to understand    great work with the ui mockups project design uml diagrams
noproblem as per the requirement document test cases are not required
noproblem yes they have a working test plan in mind and also they have thought of the ways in which they are going to test the various edge cases for the various issues at hand
noproblem the aspect of re producing the issues are very clearly mentioned and hence tests are written briefly which can be easily understood
noproblem the tests are really in depth for each issue the team will be fixing
noproblem the authors have dived into the depths when explaining the changes all of the changes are well defined and precise
noproblem yes they did
noproblem the authors have very well explained the problem statement and the changes to be made to the system including flowcharts the files to be modified added and useful links
noproblem authors have clearly explained the changes to be made to the system the design document was easy to understand
noproblem the team is going to improve compatibility with web content that relies on the webaudio api by implementing missing pieces of incomplete node types oscillatornode along with entire missing nodes constantsourcenode stereopannernode iirfilternode
noproblem yes they made detailed explanation about their changes
noproblem the design seems to be flawless all the principles and patterns used are flawless and to the point
noproblem yep they have good structure to show what and how they gonna do with the project
noproblem the design looks good the code is already committed and approved by the concerned team good job
noproblem yes their design appears to be sound
noproblem the design appears to be sound and following appropriate principles
noproblem i don t exactly understand how the waveforms help to produce the sound for the new browser they re adding support for but other than that their approach seems solid
noproblem yes i am   surprised that they have already finished the project
noproblem the design is concise and clear
noproblem the design is simple and easy to understand the sin waves and the description about it helps to properly understand the changes made and its impact
noproblem the design was not unnecessarily complex it was as easy as it could be
noproblem use of flowcharts and step by step explanation simplified   their solution it was easy to grasp and design also appears to be simple
noproblem very simple and clear
noproblem the team has done tremendous job in adding visualization aids they have added application flow diagrams and visualized images they have also included screenshots to explain the code functionality implementation of enabling self reviews and score pages this makes the document descriptive and very easy to read and understand
noproblem self explanatory visual changes have been added all the changes are described via the visual aids
noproblem the authors have dived into the depths when explaining the changes all of the changes are well defined and precise
noproblem yes they did
noproblem the authors have very well explained the problem statement and the changes to be made to the system including flowcharts the files to be modified added and useful links
noproblem authors have clearly explained the changes to be made to the system the design document was easy to understand
noproblem the team is going to improve compatibility with web content that relies on the webaudio api by implementing missing pieces of incomplete node types oscillatornode along with entire missing nodes constantsourcenode stereopannernode iirfilternode
noproblem yes they made detailed explanation about their changes
noproblem the design seems to be flawless all the principles and patterns used are flawless and to the point
noproblem yep they have good structure to show what and how they gonna do with the project
noproblem the design looks good the code is already committed and approved by the concerned team good job
noproblem yes the flow diagram and graph plots help to understand the changes and its implications the diagrams clearly describe the change approach followed
noproblem yes their design appears to be sound
noproblem the design appears to be sound and following appropriate principles
noproblem the flowcharts included in the design document clearly explain the changes that need to be done
noproblem yeah their   proposed design includes workflow initial step and subsequent steps it was easy to follow their design their solution appears to be sound
noproblem i don t exactly understand how the waveforms help to produce the sound for the new browser they re adding support for but other than that their approach seems solid
noproblem the design document includes proper visualization it included appropriate flow charts and screenshots which made it easier to understand the design document and the project
noproblem yes i am   surprised that they have already finished the project
noproblem yes the team has used flowcharts and diagrams which clearly describe the changes to be made to the system
noproblem the design is concise and clear
noproblem the design is simple and easy to understand the sin waves and the description about it helps to properly understand the changes made and its impact
noproblem the design was not unnecessarily complex it was as easy as it could be
noproblem they provide pictures of their sound waves
noproblem use of flowcharts and step by step explanation simplified   their solution it was easy to grasp and design also appears to be simple
noproblem very simple and clear
noproblem the team has done tremendous job in the test plan they have already implemented the test cases and given the path to run it
noproblem the team has done tremendous job in the test plan they have already implemented the test cases and given the path to run it
noproblem the provided tests are in depth and will test the changes made thoroughly
noproblem the provided tests are in depth and will test the changes made thoroughly
noproblem they have pretty good test plan as there is no code yet
noproblem they have pretty good test plan as there is no code yet
noproblem this is a mozilla project and i am not sure what are the testing requirements and depth to be covered as it is not mentioned in the document but the steps mentioned do suggest that basic testing id done
noproblem it included a proper test plan there was no test plan included in the previous version of the design document but authors have added it in the second round which made the design document complete
noproblem the design does include test plan and plans to test the functionalities
noproblem the team have thoroughly explained the changes that need to be made and how they intend to make those changes the team could explain their test plan in more detail
noproblem the additions made to the explanations were excellent the detail of which changes affect which files is very good
noproblem they explain their changes succinctly and in an easy to follow manner and they explain the motivation for the changes well
noproblem yes they explained the changes in a great detail they also wrote a part called implement steps which includes 5 tasks good job
noproblem the design does include test plan and plans to test the functionalities
noproblem the authors have explained the required changes in a concise manner
noproblem yes the project design is meaningful and clear the solution is well laid out
noproblem changes are explained but are not very descriptive the document is not much changed since the last submission
noproblem yes
noproblem yes the authors have specified the changes to be made in the system under the proposed project design the changes have been included as sub heading with sub points under each the authors have also included a relevant files heading that includes the files where changes are made the changes involve allowing the instructor to change language for a course in the process a separate language column will be added to the courses table and a dropdown of languages in the edit courses page where a language can be chosen once the instructor updates the edit course page with the chosen language the static strings in the expertiza application will be changed to the chosen language for adding multi language support google translate and rails internationalization api is being used also two yaml files en yml and hi_en yml contains the translated strings for the respective languages the routes rb file and all the view files will be correspondingly modified to show the different languages after reading from the yaml files
noproblem the explanations provided by the authors seems to be good they have referred the rails internationalization api guide which provides sufficient explanation for multi language support they have mentioned the different elements that will be changed and how an instructor would proceed to change the language of the course verbally in addition they have also added mock ups to visually represent this information
noproblem the explainations are succinct the description in technical design section and before after images clearly shows what the project intends to do
noproblem the changes are clearly mentioned they are very clear what and where to make changes only suggestion would be to include more about how these changes are going to be done
noproblem adding a languages column to the courses table makes sense and so does leveraging third party apis to handle the translation
noproblem the design is as required following the appropriate patterns
noproblem as far as the issues are concerned the solutions do seem logical
noproblem it is sound
noproblem looking at the design there seems to be high use of cohesion   and low coupling it s good that all the changes are restricted to the routes rb and config locales files so that the resulting changes won t be messy and ruin the rest of the system also this helps in refactoring if needed in the future as there will be limited number of files to be changed
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it
noproblem yes simple straightforward solution
noproblem the changes have been explained well enough to minimize the complexity the implementation seems extremely clear
noproblem simple and easy to understand steps
noproblem the team has mentioned properly what changes they are doing and how they will be doing them in the first submission they had suggested the possible approaches now they are having a concrete way they are implementing these changes
noproblem yes and at times much more than necessary
noproblem yes only view files are involving since this topic is about changing the language
noproblem yes the authors have made changes to the design document and are more specific about how exactly they plan to implement the new functionality
noproblem yes they explained a lot for the changes great job
noproblem the design appears to be very simple the team has avoided unnecessary complications by adhereing to the rails internationalization guide they have also avoided making unnecessary changes to many files and kept the changes to the minimum number of files required
noproblem the team added more information from the last time which aided in a better explanation of the problem good job team
noproblem 1 the authors have adequately explained the changes to be made to the design document
noproblem the design is really crisp and easy to understand one can clearly understand the problem statement and the proposed solution for the same the design document is properly structured as well
noproblem the explanations are more than sufficient not only have the authors explained the changes to the system but also explained the reasoning for considering those changes i like the way that they also explained the other different ways they could ve integrated the github metrics but avoided those methods with sufficient reasoning for the same the team has also given an explanation of their database design modifications would be like which is good
noproblem yes the current design looks simple and wholesome seems they have done a good job in implementing understanding how rails internationalization works good job
noproblem yes excellent work done by the team the design document adequately explains what is the problem that they are trying to solve what is the proposed solution and how the solution would look like    there are enough details to in the document to understand what is being done and what changes are proposed the document also has enough illustrations on what is the current situation
noproblem the authors adequately explained   the changes   they plan to make
noproblem the design seems to be sound they have a sample design where they are explaining the tables and how they plan to work with them as well the examples provided help understand how the data will be stored
noproblem yes
noproblem the visualization clearly and effectively conveys the translation capability which the project proposes to provide to expertiza
noproblem yes the provided diagrams deliver sufficient information about the implementation
noproblem yes
noproblem yes they included some design principles which is good maybe the authors could add some design patterns into wiki
noproblem    the design appears to be sound they have weighed their options and are using an official gem to interact with the github api
noproblem the necessary visual inputs to aid explanation are present
noproblem mock uis screenshots give a perfect picture of how the system will be after the required changes
noproblem i don t   see any issue in the design document they have followed a good design principle
noproblem no visualization or diagrams are necessary
noproblem 1 the authors have mentioned several approaches in which these functionalities could be implemented 2 their chosen approach is follows mvc architecture and dry principles
noproblem    the design sound very reasonable
noproblem the design is concise and clear they have added reference images of how the system would look after their changes which properly shows the expected implementation results
noproblem yes it is thoroughly investigated
noproblem yes
noproblem their design is much simple and clear also easy to understand
noproblem yeah i believe it is as simple as possible while choosing the best path for the expertiza project to grow but it still sounds like a very ambitious project for 1 group to complete
noproblem with proper documentation the problem is explained nicely and understanding of the complex problem is made easier
noproblem 1 have clearly mentioned when will github api be hit to retrive the data and which gem will be used
noproblem    their design is simple and clear
noproblem the use case diagram properly shows how the addition of this feature will help for   the instructor role
noproblem the visualizations used by the team are comprehensive and well made
noproblem good design
noproblem a testplan that covers the entire functionality has been devised it seems sufficient to test the change
noproblem excellent use of screenshots made things very clear for me
noproblem the test plan is compatible with the problem statement
noproblem yes they use a lot of diagrams to show use case
noproblem as there are ui changes test plan is not required but a basic stepwise description of how to see the required output can be helpful
noproblem test plan have been shown clearly and tests are easy to understand
noproblem yup because it only tests the ability to change the language
noproblem explains the different approaches with the help of use case diagram
noproblem there are enough aids such as uml diagrams and screen shots the authors explicitly mention that there are no db changes so no need of an er diagram although i would have liked some class level details to be mentioned in the document that would help to dig more about the design changes
noproblem    they not only use use case diagram but also mock up screenshot to help the reader understand their design
noproblem the test plan briefly mentions the scenarios the team plans to test they can add more about the test cases if possible
noproblem the test plan seems adequate at this stage edge cases may need to be considered at a later stage
noproblem no
noproblem yes it includes the test plan with a great detail
noproblem    the test plan seems adequate enough to show that they understand what to test
noproblem few test plan is written the team can add more test plan
noproblem    test plans for both of their subtasks were   present
noproblem yes the authors have clearly explained the changes to be made to the system document is simple succinct and easy to understand great use of flow charts uml diagrams and mockups to visually represent the information is done
noproblem    yes the author has provided a sufficient explanation of what changes needs to be done to the system by giving flow diagrams and screenshots about what changes they are going to incorporate in their system
noproblem team has added all the diagrams and screenshots the document is well explained and looks complete
noproblem yes their explanations are adequately explained the changes
noproblem 1 the authors have clearly explained the changes to be made to the system 2 they also have given the files to be modified added for each change
noproblem authors have clearly explained all the changes to be made and where to make them the design document is quite clear and easy to understand
noproblem i think that the authors have done a really good job of explaining and covering all the changes to be made overall this is the best document i have seen so far
noproblem the document seems complete
noproblem yes one of the best design docs of project 4
noproblem the document was very well written previously too and they have improved it with diagrams and test nice work
noproblem the authors have considerably improved on the document uml diagrams as requested have been added
noproblem yes the design follows appropriate principles and patterns suggestions not required
noproblem    as the project is based upon making changes to the ui of the system thus there is no such specific pattern being followed however the design that they have made available in the form of screenshots appear very much inclined with the functionalities that they need to implement
noproblem design is good
noproblem yes their design is very sound and principles and patterns are used appropriately
noproblem 1 the design appears to be sound 2 also follows proper design principles eg for making changes to nomination and review questions inheritance is used inheriting methods from questions parent class
noproblem they have explained very well
noproblem yes the design follows simple rails concepts and is pretty straightforward i would like to see if the team uses existing gems available to speed up implementation and re use
noproblem yes looks clean any design patterns used
noproblem yes the design appears to be sound and well made
noproblem yes the design appears to be sound there could be some rearrangement in the mock up layout e g text box for email address and add button could have the same horizontal alignment for a better user interface
noproblem the design   seems to be very simple i think the team has avoided unnecessary complications and are doing minimal changes to existing system to solve issues given to them
noproblem the design approach seems justified and inline with the functionalities required to be implemented they have mentioned step wise details for all the changes they are going to take done a good job no rework required
noproblem    yes the design is presented in a much simpler form which gives a very clear picture of how the changes are going to be implemented and which functionalities would be witnessing the changes also as they have provide the screenshots it enhances the understanding about the project more
noproblem yes their design is simple and clear enough to read and understand
noproblem 1 the design is simple and well modularized 2 each method is implementing only one task as it should
noproblem the design does appear to be as simple as possible the team have not unnecessarily complicated the project
noproblem yes the design is pretty simple and to the point the design proposed is very clear and talk why each change is necessary
noproblem    the design is straightforward and as simple as possible the team has thought this project out very clearly and laid the same in the form of flowcharts and mock ups this has greatly reduced the complexity of the project and helped decrease the chances of clutter and confusion
noproblem yes adequate amount of details present
noproblem yes    the requirements are simple and the design plan clearly explains all the points
noproblem yes design appears to be very simple
noproblem yes the design is quite simple
noproblem yes they have done a great job to adequately explained their changes
noproblem they have done this part
noproblem yes they have well explained their design
noproblem yes the design appears to be sound and appropriate
noproblem great use of uml diagrams flowcharts and mock ups by the team to clearly explain the flow of their work it is   easy to understand the flow and how the end product will look like
noproblem the design appears to be sound
noproblem they team has done awesome work in representing every detail possible in the flow diagrams they have created uml diagrams which depicts the flow of the admin and students along with other actors as mentioned earlier they have also represented the admin flow diagram and instructor flow diagram through the flow chart which makes it very easy for end user to understand the workflow of the requirements in the expertiza system
noproblem    yes the visualization is pretty clear and good
noproblem proper use of uml to explain the use cases and flow charts to explain the workflow has been done the plan is complete
noproblem yes the design appears to be as simple as possible the team has mentioned what needs to be done and how they plan to implement it
noproblem the design seems straightforward and simple
noproblem yes their visualization is good they are clear and well described the changes
noproblem in my view they are simple and clear
noproblem simple design with the use of interface and apis
noproblem the design seems to be quite simple
noproblem the design document includes flow charts uml diagrams and screenshots which is really impressive as it made the document easier to understand
noproblem the design appears to be simple
noproblem i loved the overall use of the visualizations which aids to the understanding of the whole doc the formatting of the documentation makes it really easy to read and understand
noproblem a suggestion would be to add some visualization about what the offscreencanvas does would be helpful
noproblem since it is a mozilla project testing is not necessary but the previous design documentation does touch upon the specifics of testing how an offscreencanvas is rendered
noproblem yes the presence of use case diagrams and flow charts explaining the work flow is good it would be nice if there were more uml diagrams such as sequence so show various class interactions    presence of mockup screens is good that helps in understanding what is being implemented it would have been good if the authors put in more details about the validations that that propose in the system
noproblem yes the   uml   diagrams sufficiently provide visualization
noproblem the authors have added uml diagrams as requested in the previous review and it has made a lot of difference the explanation is much clearer now
noproblem test plan outlines the functionalities that the team will test and it seems sufficient to test the changes
noproblem they team has done tremendous job in following the test driven approach for the project implementation they have already included the tests they are writing for the functionality implementation they have covered the exhaustive scenarios   for the project in their test their test plan is highly appreciative
noproblem    the test plan is quite good as it covers all the test cases in the form of 11 test cases which test all the functionalities for the admin and the instructor role it also considers the negative test cases like throwing an exception when the pending instructor tries to add more then 10 students to his her course
noproblem tests can be made more exhaustive for now it looks like only the view will be tested but controller should be tested as well
noproblem yes they include the test plan
noproblem 1 the test cases cover all of the functionalities that they are going to implement
noproblem yes the document includes a test plan there was no test plan present in the previous version of the design document but the team included the test plan in the second round the test plan is clear and seems like it would really test the functionalities
noproblem the test plan has been written in a very good way following the great   quality of documentation till the end it covers all the edge cases and scenarios
noproblem the test plans are excellent the best i have seen so far it has accurately taken all test cases into consideration and described the layout of the final test in the form of a pseudo code well done on the test plan
noproblem yes test plans are included
noproblem yes the test plan looks good it covers all the functionalities
noproblem test plan seems thorough and well thought   out
noproblem the team is following a test driven development approach they have defined the test cases that need to be tested after the implementation it seems to completely test the feature
noproblem yes the issues and the proposed solutions are clearly written
noproblem yes they have
noproblem yes this is the best design i have reviewed it has clearly explained the changes in steps the formatting is great and it s very well made with very good design details and objectives it also included the current scenario and a typical score table it should be great if there s an expected final outcome visualization as well
noproblem yes the authors have adequately described the changes required to be made to the system the process has been divided into steps and each step describes changes in the mvc files good job
noproblem the problem and the changes needed is explained clearly
noproblem yes they explained a lot with two steps
noproblem i really loved the way that the authors have provided a detailed proposed plan section making it very clear about the changes that are required to be made in order to tackle the given problem statement
noproblem the authors have described 1 2 solutions of the problem however i would suggest them to include more about how these changes will be done and where are these changes going to occur what files will be affected etc
noproblem all problem statements have been explained this time including an elaborate test plan
noproblem yes the author explained the plan clearly the steps and the files need to be modified are listed
noproblem as far as the issues are concerned the solutions do seem logical
noproblem yes it looks sound
noproblem the   design is sound it completely follows the instructions it also has detailed implemenation plan in each steps i think it follows the dry principle because it uses existing implementations fully understood the existing implementations and added the functions above i think it should also follow the factory pattern although not shown in the design doc
noproblem yes the system is well designed and the ui looks neat as well they have put effort into the ui thinking process
noproblem yes they have
noproblem explained details about their solution and what will be changed after their implementation
noproblem yes changes to be made are clearly explained
noproblem they have explained in detail about the proposed changes with individual diagrams for each case it is very thorough in explanation
noproblem great documentation tbh the best i have seen yet
noproblem they have documented it in a very rehearsed manner
noproblem the design document is really well written it clearly describes what needs to be done how it needs to be done and what code changes need to be made the files and tables affected are clearly listed
noproblem the authors have prepared the design document quite well
noproblem the author has explained extensively about the changes to be made to the system
noproblem yes the problem definition and the proposed solution are pretty clear they also provide some diagrams to explain their project which is helpful
noproblem their introduction and problem definition are clearly enough to explained the changes
noproblem with er diagram and database details the design looks good
noproblem the design follows appropriate principles and patterns as required
noproblem yes the proposed changes make only required additions
noproblem yes it follows   appropriate principles
noproblem the design appears to be sound it is really well structured it is easy to follow it clearly states the changes to be made and the files affected by these changes
noproblem the design appears to be sound and clearly indicates the proposed code changes
noproblem the design follows appropriate principles but no design patterns have been used
noproblem yes the design is appropriate
noproblem yes they provide solution for different problem situations
noproblem yes it is fairly simple
noproblem no complex design only few places need to add functionalities and they all very similar
noproblem the design is simple although the er diagram takes a little time to decipher since it is quite big
noproblem yes the approach described in the design document is easy enough to understand they have also   backed their decision to go with the second approach with appropriate reasoning
noproblem the design is simple and quite comprehensive covering lots of methods of searching
noproblem yes based on the proposed solution it appears to be simple as possible
noproblem yes easy to understand
noproblem the design has been explained in a simple way the team has explained the design using use cases which is easy to comprehend
noproblem yes the design is simple and feasible
noproblem yes clear and simple
noproblem they have used apt visual aid like uml diagrams and screen shots
noproblem no class diagram but there is er diagram and tables for database it looks a little complex but give the idea of what is involving
noproblem necessary diagrams are included
noproblem the team has communicated their design clearly via use case diagram and a class diagram with a description of various database tables involved
noproblem excellent use of visualizations they already had an overall flow chart and this time additional tables and uml has been added best of what i ve seen
noproblem yes they do explain everything the er diagram use case diagram relevant tables explain everything
noproblem the project has great visualization a lot of uml diagrams have been included which makes the understanding the project easier the uml diagrams also clarifies what work is to be done
noproblem the team has described changes using use case and er diagrams to clearly explain the system
noproblem the authors add more diagrams to help to explain the change they are going to make the relevant tables are really helpful
noproblem test plans walk through necessary functionalities
noproblem the test cases described will cover the functionalities described given that they write multiples tests with the same structure as described for all search criteria
noproblem a concrete test plan is also added and it has both ui and automated test details
noproblem yes this is done very well
noproblem they include a very described test plan it has everything proper what framework what tests all this information is well included they clearly specify what they aim to test
noproblem the test plan is pretty good and it has both ui tests and automated tests
noproblem the test plan is designed efficiently they have described the ui tests and automated tests which cover most of the cases
noproblem two types of testing are listed and the authors list all the cases they need to test
noproblem yes the authors have significantly improved the writeup and very adequately explained the changes that they ve made
noproblem the wiki is detailed enough that it mentions all the functionalities required in the project the team has made sure to   explain all the changes they wish to make to the system they list all columns that need to be sorted and how they will implement the sorting
noproblem the authors have explained enough about the changes
noproblem the team has added uml diagrams images of related web pages and provided details on jquery tablesorter that explains well the changes the team plans to make
noproblem great improvements compared to the previous submission now its a   very well written document good job team
noproblem yes the team has elaborated their design approach and changes to system in detail they have mentioned all the file changes and also provided sample code for reader understanding
noproblem they made clear explanation about their task for example their provide pictures to show what they need to do
noproblem the design is very efficient and follows the standardized software engineering practices
noproblem the design is sound because it has plans of file modification of implemented solution and very detailed testing plan the dry principle might not be well followed since in each testing the tester needs to log in as a super_administrator2 again and there are five testings
noproblem the design is sound and easy to understand the design proposed also sounds logical i e to sort team names alphabetically and grades numerically to sort by both ascending and descending order
noproblem yes the design seems to be sound
noproblem the authors have justified the use of jquery table sorter by   listing its advantages
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement
noproblem the design appears to be specific to the requirements for this they have used a uml design which basically explains the flow of the use case they have not used any principles or design patterns however there does not seem a need to use any as their changes are limited to the html view and making a call to the tablesorter using jquery as per the document the design does not make any redundant changes or unnecessary changes to the code thus they have done a good job by optimizing the changes
noproblem yes as its sorting not much scope on design approach yet the team has documented well on their approach regarding multi level sortings that they are undertaking in few pages they have also considered cross browser compatibility of their jquery library which is a common design miss during client side changes
noproblem this project is not very difficult so they don t need to follow some principles or patterns
noproblem yes the design is very simple to understand and also the implementation is pretty clear and effective
noproblem the design is extremely simple and easy to understand good work guys
noproblem yes the solution proposed is simple by using the   jquery tablesorter gem
noproblem the use of jquery plugin sounds simple and easy to use
noproblem the design looks simple and clear
noproblem this their design is very simple and clear
noproblem this part has been significantly improved from the previous submission the diagram make it very easy for an outsider to understand the architecture the underlying problems and the proposed solution
noproblem yes the figures added to the wiki clearly indicate the changes that will be made to each view the columns that will be made sortable and how will the made sortable good work
noproblem yes the team added visual aids like uml diagrams screen shots code snippets to clearly describe the changes to be made to the system well done
noproblem this team   used great diagrams that add to their documentation s clarity significantly
noproblem there are multiple visual   elements that improve the readability of the document screenshots of the ui tables help with the illustration of   the required changes furthermore    the uml diagram demonstrates the relation between relevant flows
noproblem the team has added good number of mock uis and uml diagram and clearly explains the code follow all of them are self explanatory and needs no improvement
noproblem diagram is added
noproblem no visulization is necessary for this project
noproblem you have a lot of testing scenarios which is really good
noproblem the design doc includes the test plan which covers all the changes that will be made
noproblem there is a detail explanation on how the function testing will be carried out under the teating plan section of the wiki doc
noproblem yes it includes test plan it is very well written and will test the functionalities
noproblem test plans looks to be an overview of the functionality in the test plan i see the functionalities explained l
noproblem the test plan is complete and covers all intended functionalities they have also provided all necessary steps to test the functionality good documentation on test plan as client side changes using script is added a latency test to verify system is not slow in responding to sorting can be included
noproblem the test plan is thorough
noproblem yes the authors do have an adequate explanation
noproblem they have also added the uml diagrams which makes things a lot more clearer
noproblem the authors have very well explained all the changes that need to be done with the help of proper problem statement the files that require modifications the current and the required state
noproblem good additions on the purpose and use case of your work
noproblem is decently explained
noproblem team has explain the changes to be made very well also screenshots of the system is helping to understand which part of system is changing
noproblem the introduction and proposed solution sections appropriately describes the problem and the approach to resolve the issue the changes proposed can be concisely implemented into the system they have enlisted use case diagrams for the entire scenario to be added to the rubrics
noproblem i cannot remember what the explanation looked like last week but the read through this week felt very clear the organization of the article felt like it followed the logic of a design project the problem statement felt like it was reduced to a clear concise set of requirements that are attainable the addition of the program flow diagram and an explanation as to why there is no uml diagram also helped to cement my understanding and set my expectations
noproblem good work on adding uml diagrams now the problem is very well explained
noproblem yes they have given a good detailed explanation of the planned changes
noproblem yes they include all the details in the functionality implementation
noproblem the authors have mentioned about the changes
noproblem yes clear and crisp
noproblem the authors have thoroughly explained the changes made to the system
noproblem the authors have lucidly explained the changes that are to be made to the system they show the current state of the system and the expected state which includes a new button to analyze the review content in the segmented text box the authors have specified 2 files that they plan to modify namely the view file response html erb and a partial _self_review html erb the team clearly show the format of the response popup with suggestion metrics that capture sentiment score sentiment tone whether suggestions are present or not chance of suggestions volume of text and the volume of text without stop words they also propose to improve the response time of extracting the output from the api one suggestion is that the team could have touched upon the working of the suggestion detection algorithm though it is not part of their current implementation they do mention that it is a black box and have included a link to the deployed nlp project for suggestion algorithm where users can test the suggestion metrics generated for custom text
noproblem yes they have explained it very well
noproblem the changes proposed are well explained and clearly indicate the intended output
noproblem the authors have adequately explained changes made to the system they have explained the problem and proposed solution clearly and supported it with appopriate diagrams
noproblem very detailed and precise solution explained thoroughly
noproblem the desgn looks okay
noproblem the design appears sound
noproblem yes it seems very sound and workable
noproblem the design appears to be sound they are checking if its multiple round exists and adding the checkbox functionality
noproblem the design is clear and easy to interpret the team has provided a code snippet which explains the changes to be made in the system to implement the solution
noproblem the design lacked enough explanation about how will they deal with reviews when the box is    checked and unchecked for the naming of the function and database the name seems too long it is better to make the name shorter and easy to understand
noproblem basic complexity
noproblem looks simple
noproblem design doc shows a good amount of work to be done team has articulated changes to be made well that makes design doc simple to understand
noproblem the design is seems to be as simple as possible
noproblem yes according to what they wrote they are going to realize this project from 2 sides the instructor side and the student side the steps are very clear
noproblem the design appears to be simple and easily understandable
noproblem yes simple and straightforward
noproblem the design has been made as simple as possible the complexity of the design is simplified using flow charts
noproblem this is a fairly simple design
noproblem yes a variety of apt visual aid has been used like screenshots uml diagram etc
noproblem the team has used flowcharts and ui which was necessary for this project
noproblem the diagram in ui part states clearly the changes the authors intend to make and how it will be like the flow diagram explains clearly the design logic and help me understand what changes the team will make
noproblem the team has used mock ups and a flowchart to show the basic functionality
noproblem tests with different scenarios are provided
noproblem yes according to what they wrote they are going to realize this project from 2 sides the instructor side and the student side the steps are very clear
noproblem the team has analysed the existing design principles used in the project and has appropriately defined the design for the new changes which will be made the design looks good and easy to implement
noproblem the authors have included an elaborate test plan which tests even the functionality they have missed to mention in the proposed design part of the document this is quite complete
noproblem the design seems to be clear such that it provides the implementation procedure to be followed to include the feature of adding student generated questions to the rubrics
noproblem they explained from their requirements and in their flow that they only need to plan to edit the view so there is no need for a uml
noproblem the design is sound
noproblem as per the documentation the design seems simple
noproblem looks very doable
noproblem yes from the diagrams i could say design and design flow is simple enough and team has well understood the changes to be made
noproblem yes the design is sound and clear majority of the work is done by the suggestion algorithm the team proposes to integrate this functionality into expertiza and also improve the response time this project does not need to incorporate any design pattern as only the view files are altered the project does not impact the degree to which it is object oriented
noproblem since the task is to integrate a web service in the existing system the design mentioned is sound and reasonably primitive
noproblem yes it does based on the proposed solution
noproblem the design is good however there is no scope of using bad principles since the number of files that will be affected are minimal and restricted to just 2
noproblem the design doc is sound and i believe   no design patterns are required for this project
noproblem the design appears sound
noproblem yes the design in its current form seems straight forward
noproblem the requirements were distilled down to the fewest simple terms possible without over generalization it felt like they just gave me the tl dr statement without any fluffy words to waste my time and also feels like they have a strong grasp over what they are expected to accomplish
noproblem yes the design appears to be simple
noproblem yes the design appears to be very simple
noproblem yes the design is very simple and easy to follow
noproblem the design appears to be simple and straightforward to implement the team has also included all the files that will be changed to achieve the desired results
noproblem the design appears simple to be executed based on the procedure specified and the list of diagrams given that it justifies the implementation to be carried out
noproblem yes the design is simple and illustrated well with the use of wireframes showing the current expected state and uml diagram showing the flow diagram it depicts that once the analyze button is clicked the request is sent as json which contains the text typed by reviewer in the segmented textbox to the api which generates the suggestion metrics the response contains the suggestion metrics like sentiment score sentiment tone presence of suggestions chance of suggestion total volume of text and volume of text without stop words
noproblem yes the design is simple and clear the task is to integrate   a web service which returns a result in json format
noproblem the diagram is clear and easy to understand from the diagram the design may be easy and clear to implement more details should be provided to evaluate further about the complexity
noproblem yes it does appear to be simple as possible
noproblem the design is simple and easy to understand could be better if implementing some code level design
noproblem the design is as simple as it could be since the flow of logic is pretty linear and there is no scope of complexity the changes also seems to be restricted to just one file which is good and in keeping with sound principles
noproblem it would be better if uml and class diagram are added as a part of the documentation
noproblem team has provided good amount of use case diagrams which actually are heart of the whole design doc and explains the design and approach well
noproblem they have made some uml diagrams which could describe the changes
noproblem yes they use a lot of charts to explain the use cases great job
noproblem the use case diagrams provided to describe the role of each user through the flow and specify how each case maps to another in order for the desired functionality to be achieved
noproblem the diagram is logistic and it s easily to tell the logic behind the changes by reading these diagrams i can get an understanding of this project quickly
noproblem yes the flow charts are complete and readable all cases are included
noproblem the design appears very simple
noproblem the project does not necessarily need diagramatic explanations but uml diagrams have been used which show implementation plan fairly well
noproblem the screenshots of the expertiza system are very helpful in understanding the problem and the solution
noproblem the flow diagram mentioned in the document clearly explains the changes need to be done
noproblem the author has excellently explained about the changes that they would be making by providing the design diagram and the screenshot of the the changes that they have incorporated also they have mentioned about their choice of tool which is google chart and why do they prefer so overall a good explanation
noproblem changes that s needs to be made has been explained correctly
noproblem yes their doc has adequately explained the changes
noproblem the team have a well written design document and and the authors have explained the proposed changes well the authors have also listed each file they are going to be changed
noproblem yes the team has well explained the changes that they are going to make last time it was a bit confusing but this time because of   the help of the diagrams and mock ui screen the solution seems clear now
noproblem the authors have explained the changes made to the system the design flow greatly helps to understand the flow of the system
noproblem yes this team has made the best use of visualization tools that can be applied to their project they have clearly shown wireframes of the current response page juxtaposed with the expected state with the analyze button next to each rubric the document also includes the flow of the project represented as uml diagram once the analyze button is clicked the request text is sent to the suggestion detection algorithm the api returns the response which contains the suggestion metrics like sentiment score sentiment tone presence of suggestions chance of suggestion total volume of text and volume of text without stop words
noproblem the authors have described what all changes they plan to do and where they plan to do it compared to the previous version of the design document they have now included what tools and framework they plan to work on the design document looks complete and understandable now
noproblem they will be changing mostly html and erb code to create a visual interface that delivers information to instructors more effectively
noproblem the proposed changes have been explained in a simple manner
noproblem the   use of visualization is not pivotal for this task as it can be explained theoretically as well but still the team has made an effort to present the task with help of a flow diagram
noproblem yes very well explained
noproblem the document adequately describes the project description and proposals made the proposed change of generating a single or single bar chart graph based on the categories selected to display the chart can be efficiently made to the system
noproblem they have improved the document to provide a better description of changes to be made to the system
noproblem the screenshots clearly display where the output would be displayed
noproblem yes the design is sound and gives a proper explanation about how their implementation would behave
noproblem design seems correct
noproblem yes their design is clear and sound and the principles and patterns are well used
noproblem yeah their design seems to be sound and neat
noproblem system is well defined
noproblem the uml diagrams clearly descibes the design of the solution the screenshots explain changes required in the system adequately
noproblem the design document is good and i don t think any design pattern needs to be followed as very few changes are being made
noproblem the design makes use of the google charts tool to generate visual charts for specific criteria set based on the design flow it appears that the functionality can be consistently performed to generate the visual graph for the instructor
noproblem yes the design appears to be sound and uses appropriate design principles
noproblem yes the design is pretty simple and inclusion of screenshot enhances the clarity of what the team has achieved in terms of the required changes
noproblem design is simple and easy to understand
noproblem yes uml diagram is provided and it is detailed flow diagrams explains how suggestions will be given
noproblem yes the design is simple and easy to understand i can easily know what they will do through their doc
noproblem the design appears to be very simple and well written they have explained the use case diagram very well also they have added visualizations
noproblem yes the design is simple and easy to understand
noproblem the team is using external tools to do the work and its clear and easy
noproblem the document is really simple to understand once you get to understand the flow however initially it appears to be difficult
noproblem i think more tests can be added
noproblem from the reasons provided for choosing the google charts tool and it s effectiveness it can be integrated into the system functionality easily making the design simpler to be executed
noproblem yes design involves google charts api   and seems very simple
noproblem yes the design flow and the screenshots very clearly describes the changes made to the system
noproblem flow diagram explains the flow correctly
noproblem yes they have used visualization to help people understand their design
noproblem they have worked on their weak   point earlier their solution does not seem cogent but i would say now they have made good progress
noproblem the sample data visualizations is good the way they have given visualizations for sample data is nice easier to understand and good
noproblem the use cases appear to offer a quality general test approach to see if their design does what it should
noproblem test cases have been added
noproblem the team already has mockups for their design
noproblem the visualization is great the screenshots clearly indicate the proposed output of the project
noproblem really good visualization provided
noproblem the project does not have any testing involved as such but the authors have added a testing plan
noproblem according to the team the specification of the project does not require us to use automated tests    but they plan to test the modified ruby code or the new features using   the   rspec   testing framework overall the test   plan sounds good
noproblem no tests are required for the project as stated
noproblem this team did not require any tests
noproblem the test plan section specifies that it does not require performing any automated tests however since the new functionality of adding a visual diagram the team would modified ruby code for the functions added to the grades_controller
noproblem the test plan is complete the team plans to test the two possible cases 1 when the review is blank response should be no review in text box 2 when review is present response is the result of suggestion metrics analysis the team is right in testing just these two cases because they should not test if the api itself is returning a correct response as that would be against testing rules
noproblem yes functional tests with scenarios provided
noproblem the design doc includes the test plan which covers changes in the functionalities
noproblem yes the issues and the proposed solutions are clearly written
noproblem yes they have
noproblem yes this is the best design i have reviewed it has clearly explained the changes in steps the formatting is great and it s very well made with very good design details and objectives it also included the current scenario and a typical score table it should be great if there s an expected final outcome visualization as well
noproblem yes the authors have adequately described the changes required to be made to the system the process has been divided into steps and each step describes changes in the mvc files good job
noproblem the problem and the changes needed is explained clearly
noproblem yes the design is clear and the details are succinct
noproblem the design   looks simplified but there might be some edge cases that needs handling such as what if a student makes his her review public this review is selected by the power user to create a sample and then the student wishes to make the review private
noproblem yes the approach is explained in detail
noproblem the design is proper
noproblem it is simple enough and also achieves the required features
noproblem the uml diagram is very good and makes understanding very easy
noproblem yes the test plan section is again detailed with step by step instruction
noproblem team has explained the problem statement approach to solve the issue well also the use case diagram explains design well
noproblem design doc is not complex and every section of the menu explains the itself with simplest term possible
noproblem very basic explanation
noproblem simple design
noproblem    the team has well explained the changes which are required to be made in the system they have broken the explanation of the details of the requirement in simple bullet points which makes it very easy to understand the change requested the design approach
noproblem the   steps taken by the team to implement the functionality is very clear and detailed as stated above the approach discusses the   step wise action that the team is going to take for the implementation
noproblem the team has come up with a very detailed and clear step wise test plan for all the actors involved they have done great work to depict the flow for every user which makes sure they are handling all the scenarios this also suggests their approach is behavior driven they have done great job in this and the test are in depth
noproblem while i m awaiting to receive the details which are pending on the implementation i feel the general nature of the changes is well explained
noproblem confronted with a tricky problem in creating links between different assignments across semesters to aggregate the reviews i was really impressed with the way they plan to accomplish this feature
noproblem i like the use case diagram but i would like class diagrams or a database visualization too so it s easier to understand how the cross course assignment linking will work
noproblem detailed test plan 1
noproblem the authors have adequately mentioned the desired changes in the approach and design section the problem statement gives the gist of the issue at hand including adding feature to make student s reviews public the proposals specified are effective to deal with the issue by creating a new mvc framework
noproblem the design and fixes are coherently described and are logical to be implemented for the given functionality the issues are stated properly allowing the reader to understand it and the fixes suggested are enlisted in an appropriate manner
noproblem the design makes it clear to understand the procedure adapted to realize the goal the authors have made it a point to describe the tasks carried out in a simpler manner allowing the reader to realize the approach towards the issue
noproblem the uml use case diagram takes into consideration the system specifications and the manner in which the users interact with each other in the process it makes it easy to analyze how the implementation can take place in the current scenario
noproblem the test plan section properly describes the flow that needs to be followed by each actor involved in the process this could be enhanced either by providing a flow diagram or adding certain test case snippets for the scenarios
noproblem the design seems pretty simple and straightforward
noproblem yes based on the explanation given the design seems appropriate and will achieve the desired end results good job
noproblem the design is concised and clear only makes the required changes and introduces no duplications
noproblem yes they explained a lot with two steps
noproblem i really loved the way that the authors have provided a detailed proposed plan section making it very clear about the changes that are required to be made in order to tackle the given problem statement
noproblem all problem statements have been explained this time including an elaborate test plan
noproblem yes the author explained the plan clearly the steps and the files need to be modified are listed
noproblem as far as the issues are concerned the solutions do seem logical
noproblem yes it looks sound
noproblem the   design is sound it completely follows the instructions it also has detailed implemenation plan in each steps i think it follows the dry principle because it uses existing implementations fully understood the existing implementations and added the functions above i think it should also follow the factory pattern although not shown in the design doc
noproblem yes the system is well designed and the ui looks neat as well they have put effort into the ui thinking process
noproblem although the design provided is clear there might be some more work needed to optimize it properly and make it work as intended
noproblem the design appears to be sound and seems to follow all the appropriate principles as far as i am concerned and as mentioned earlier i would again like to point out that the proposed plan section has been handled really well
noproblem the document is very well structured and is quite easy to follow they have explained each and everything stepwise
noproblem yes the design seems appropriate and suitable for the case maybe the author could specify the patterns they use in the document
noproblem yes simple straightforward solutions
noproblem the design is simple
noproblem the design is both simple and clear it should be better to add another step for the comparison of the instructor review and the student review both as a final examination and a testing
noproblem yes the design is as simple as possible however they have only described the proposed design they could have provided simple mock ups or samples
noproblem yes pretty simple great job
noproblem the design appears to be simple to the best of my knowledge not a lot of files needed to be changed signifying that they are just targeting specific files in order to make minimum number of changes possible not making it too complex
noproblem the document is well explained thus it reduces complexity and makes itself appear quite easy for the user to understand however more diagrams and flowcharts would have helped even more
noproblem the design is as simple as possible and described in a straightforward manner
noproblem the design seems simple and feasible
noproblem necessary visual inputs are present to aid explanation
noproblem yes appropriate visual cue is present in the form of screen shots
noproblem there are visual aids included with the design depicting the current state of the system as well as proposed icons to institute the design changes
noproblem the authors provide some screenshots which make their project more clear it would be better if they provide more diagrams to explain their solutions
noproblem i see test cases properly defined but the test plan is missing
noproblem yes the test plan is included i think the tests will cover all scenarios
noproblem the testing appears to be pretty rigorous they have taken into account cases when ta instructor s scores should be excluded the test cases could have been better described
noproblem team has done a good job in identifying the cases that needs to be tested it will be an improvement if they can add details on how they plan to test each controller view separately
